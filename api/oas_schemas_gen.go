// Code generated by ogen, DO NOT EDIT.

package api

import (
	"net/url"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

// 管理画面におけるAPIキー表示フラグ。
// - `0`: 表示しない
// - `1`: 表示する.
// Ref: #/components/schemas/api_key_display_flag
type APIKeyDisplayFlag string

const (
	APIKeyDisplayFlag0 APIKeyDisplayFlag = "0"
	APIKeyDisplayFlag1 APIKeyDisplayFlag = "1"
)

// AllValues returns all APIKeyDisplayFlag values.
func (APIKeyDisplayFlag) AllValues() []APIKeyDisplayFlag {
	return []APIKeyDisplayFlag{
		APIKeyDisplayFlag0,
		APIKeyDisplayFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIKeyDisplayFlag) MarshalText() ([]byte, error) {
	switch s {
	case APIKeyDisplayFlag0:
		return []byte(s), nil
	case APIKeyDisplayFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIKeyDisplayFlag) UnmarshalText(data []byte) error {
	switch APIKeyDisplayFlag(data) {
	case APIKeyDisplayFlag0:
		*s = APIKeyDisplayFlag0
		return nil
	case APIKeyDisplayFlag1:
		*s = APIKeyDisplayFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APIVersion string

type AboutExpiration string

type AccessID string

type AccessIdSchema string

// Ref: #/components/schemas/Account
type Account struct {
	// 売上入金ID.
	ID OptString `json:"id"`
	// 精算ID.
	AccountID OptInt `json:"account_id"`
	// ショップID.
	ShopID OptString `json:"shop_id"`
	// 売上入金 入金額
	// ショップに入金される（入金が予定されている）売上金額です。\
	// 精算金額（`settlement_amount`）から振込手数料（`bank_transfer_fee`）を引いた金額に一致します。.
	DepositAmount OptNilInt `json:"deposit_amount"`
	// 売上入金 入金実績日\
	// 形式： `yyyy/MM/dd HH:MM`.
	DepositDate OptNilString `json:"deposit_date"`
	// 売上入金 入金予定日\
	// 形式： `yyyy/MM/dd HH:MM`.
	ScheduledDepositDate OptNilString `json:"scheduled_deposit_date"`
	// 売上入金 集計期間の開始日\
	// 形式： `yyyy/MM/dd HH:MM`.
	AggregateTermStart OptNilString `json:"aggregate_term_start"`
	// 売上入金 集計期間の終了日\
	// 形式： `yyyy/MM/dd HH:MM`.
	AggregateTermEnd OptNilString `json:"aggregate_term_end"`
	// （請求が発生した場合）支払期限日\
	// 形式： `yyyy/MM/dd HH:MM`.
	PaymentDeadline OptNilString `json:"payment_deadline"`
	// （請求が発生した場合）請求日\
	// 形式： `yyyy/MM/dd HH:MM`.
	PaymentCompletionDate OptNilString         `json:"payment_completion_date"`
	StatusCode            OptDepositStatusCode `json:"status_code"`
	// この売上入金に含まれる売上入金詳細の件数.
	Count OptNilInt `json:"count"`
	// この売上入金において精算の対象となった取引の総額。.
	SettlementAmount OptNilInt `json:"settlement_amount"`
	// 振込手数料.
	BankTransferFee OptNilInt `json:"bank_transfer_fee"`
	// この売上入金において精算の対象となった取引の総額。.
	TotalAmount OptNilInt `json:"total_amount"`
	// この売上入金において精算の対象となった取引にかかるfincodeへの手数料.
	FeeAmount OptNilInt `json:"fee_amount"`
	// この売上入金の精算期間中に発生した振替口座のWeb登録手数料\
	// ※ 口座振替のみ.
	WebRegistrationFeeAmount OptNilInt `json:"web_registration_fee_amount"`
	// この売上入金において精算の対象となった取引にかかるfincodeへの手数料にかかる消費税.
	TaxAmount OptNilInt `json:"tax_amount"`
	// この売上入金において精算の対象となった取引にかかるプラットフォーム利用料\
	// ※ テナントのみ.
	PlatformFeeAmount OptNilInt `json:"platform_fee_amount"`
	// この売上入金において精算の対象となった取引にかかるプラットフォーム利用料の消費税\
	// ※ テナントのみ.
	PlatformFeeTaxAmount OptNilInt `json:"platform_fee_tax_amount"`
	// 売上入金
	// 精算期間中に発生した、プラットフォームが設定した振替口座のWeb登録手数料\
	// ※ テナントのみ.
	PlatformWebRegistrationFeeAmount OptNilInt                       `json:"platform_web_registration_fee_amount"`
	Created                          OptCreated                      `json:"created"`
	Updated                          OptNilUpdated                   `json:"updated"`
	DepositDestination               OptDepositTargetBankAccountInfo `json:"deposit_destination"`
}

// GetID returns the value of ID.
func (s *Account) GetID() OptString {
	return s.ID
}

// GetAccountID returns the value of AccountID.
func (s *Account) GetAccountID() OptInt {
	return s.AccountID
}

// GetShopID returns the value of ShopID.
func (s *Account) GetShopID() OptString {
	return s.ShopID
}

// GetDepositAmount returns the value of DepositAmount.
func (s *Account) GetDepositAmount() OptNilInt {
	return s.DepositAmount
}

// GetDepositDate returns the value of DepositDate.
func (s *Account) GetDepositDate() OptNilString {
	return s.DepositDate
}

// GetScheduledDepositDate returns the value of ScheduledDepositDate.
func (s *Account) GetScheduledDepositDate() OptNilString {
	return s.ScheduledDepositDate
}

// GetAggregateTermStart returns the value of AggregateTermStart.
func (s *Account) GetAggregateTermStart() OptNilString {
	return s.AggregateTermStart
}

// GetAggregateTermEnd returns the value of AggregateTermEnd.
func (s *Account) GetAggregateTermEnd() OptNilString {
	return s.AggregateTermEnd
}

// GetPaymentDeadline returns the value of PaymentDeadline.
func (s *Account) GetPaymentDeadline() OptNilString {
	return s.PaymentDeadline
}

// GetPaymentCompletionDate returns the value of PaymentCompletionDate.
func (s *Account) GetPaymentCompletionDate() OptNilString {
	return s.PaymentCompletionDate
}

// GetStatusCode returns the value of StatusCode.
func (s *Account) GetStatusCode() OptDepositStatusCode {
	return s.StatusCode
}

// GetCount returns the value of Count.
func (s *Account) GetCount() OptNilInt {
	return s.Count
}

// GetSettlementAmount returns the value of SettlementAmount.
func (s *Account) GetSettlementAmount() OptNilInt {
	return s.SettlementAmount
}

// GetBankTransferFee returns the value of BankTransferFee.
func (s *Account) GetBankTransferFee() OptNilInt {
	return s.BankTransferFee
}

// GetTotalAmount returns the value of TotalAmount.
func (s *Account) GetTotalAmount() OptNilInt {
	return s.TotalAmount
}

// GetFeeAmount returns the value of FeeAmount.
func (s *Account) GetFeeAmount() OptNilInt {
	return s.FeeAmount
}

// GetWebRegistrationFeeAmount returns the value of WebRegistrationFeeAmount.
func (s *Account) GetWebRegistrationFeeAmount() OptNilInt {
	return s.WebRegistrationFeeAmount
}

// GetTaxAmount returns the value of TaxAmount.
func (s *Account) GetTaxAmount() OptNilInt {
	return s.TaxAmount
}

// GetPlatformFeeAmount returns the value of PlatformFeeAmount.
func (s *Account) GetPlatformFeeAmount() OptNilInt {
	return s.PlatformFeeAmount
}

// GetPlatformFeeTaxAmount returns the value of PlatformFeeTaxAmount.
func (s *Account) GetPlatformFeeTaxAmount() OptNilInt {
	return s.PlatformFeeTaxAmount
}

// GetPlatformWebRegistrationFeeAmount returns the value of PlatformWebRegistrationFeeAmount.
func (s *Account) GetPlatformWebRegistrationFeeAmount() OptNilInt {
	return s.PlatformWebRegistrationFeeAmount
}

// GetCreated returns the value of Created.
func (s *Account) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *Account) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetDepositDestination returns the value of DepositDestination.
func (s *Account) GetDepositDestination() OptDepositTargetBankAccountInfo {
	return s.DepositDestination
}

// SetID sets the value of ID.
func (s *Account) SetID(val OptString) {
	s.ID = val
}

// SetAccountID sets the value of AccountID.
func (s *Account) SetAccountID(val OptInt) {
	s.AccountID = val
}

// SetShopID sets the value of ShopID.
func (s *Account) SetShopID(val OptString) {
	s.ShopID = val
}

// SetDepositAmount sets the value of DepositAmount.
func (s *Account) SetDepositAmount(val OptNilInt) {
	s.DepositAmount = val
}

// SetDepositDate sets the value of DepositDate.
func (s *Account) SetDepositDate(val OptNilString) {
	s.DepositDate = val
}

// SetScheduledDepositDate sets the value of ScheduledDepositDate.
func (s *Account) SetScheduledDepositDate(val OptNilString) {
	s.ScheduledDepositDate = val
}

// SetAggregateTermStart sets the value of AggregateTermStart.
func (s *Account) SetAggregateTermStart(val OptNilString) {
	s.AggregateTermStart = val
}

// SetAggregateTermEnd sets the value of AggregateTermEnd.
func (s *Account) SetAggregateTermEnd(val OptNilString) {
	s.AggregateTermEnd = val
}

// SetPaymentDeadline sets the value of PaymentDeadline.
func (s *Account) SetPaymentDeadline(val OptNilString) {
	s.PaymentDeadline = val
}

// SetPaymentCompletionDate sets the value of PaymentCompletionDate.
func (s *Account) SetPaymentCompletionDate(val OptNilString) {
	s.PaymentCompletionDate = val
}

// SetStatusCode sets the value of StatusCode.
func (s *Account) SetStatusCode(val OptDepositStatusCode) {
	s.StatusCode = val
}

// SetCount sets the value of Count.
func (s *Account) SetCount(val OptNilInt) {
	s.Count = val
}

// SetSettlementAmount sets the value of SettlementAmount.
func (s *Account) SetSettlementAmount(val OptNilInt) {
	s.SettlementAmount = val
}

// SetBankTransferFee sets the value of BankTransferFee.
func (s *Account) SetBankTransferFee(val OptNilInt) {
	s.BankTransferFee = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *Account) SetTotalAmount(val OptNilInt) {
	s.TotalAmount = val
}

// SetFeeAmount sets the value of FeeAmount.
func (s *Account) SetFeeAmount(val OptNilInt) {
	s.FeeAmount = val
}

// SetWebRegistrationFeeAmount sets the value of WebRegistrationFeeAmount.
func (s *Account) SetWebRegistrationFeeAmount(val OptNilInt) {
	s.WebRegistrationFeeAmount = val
}

// SetTaxAmount sets the value of TaxAmount.
func (s *Account) SetTaxAmount(val OptNilInt) {
	s.TaxAmount = val
}

// SetPlatformFeeAmount sets the value of PlatformFeeAmount.
func (s *Account) SetPlatformFeeAmount(val OptNilInt) {
	s.PlatformFeeAmount = val
}

// SetPlatformFeeTaxAmount sets the value of PlatformFeeTaxAmount.
func (s *Account) SetPlatformFeeTaxAmount(val OptNilInt) {
	s.PlatformFeeTaxAmount = val
}

// SetPlatformWebRegistrationFeeAmount sets the value of PlatformWebRegistrationFeeAmount.
func (s *Account) SetPlatformWebRegistrationFeeAmount(val OptNilInt) {
	s.PlatformWebRegistrationFeeAmount = val
}

// SetCreated sets the value of Created.
func (s *Account) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *Account) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetDepositDestination sets the value of DepositDestination.
func (s *Account) SetDepositDestination(val OptDepositTargetBankAccountInfo) {
	s.DepositDestination = val
}

func (*Account) retrieveAccountRes() {}

// Ref: #/components/schemas/AccountDetail
type AccountDetail struct {
	// 売上入金詳細 ID.
	DetailID OptInt `json:"detail_id"`
	// ショップID.
	ShopID        OptString                 `json:"shop_id"`
	TradeType     OptAccountDetailTradeType `json:"trade_type"`
	PaymentMethod OptAccountPaymentMethod   `json:"payment_method"`
	// 精算ID.
	AccountID OptInt `json:"account_id"`
	// オーダー（決済）ID.
	OrderID OptNilString `json:"order_id"`
	// 取引ID.
	AccessID OptNilString `json:"access_id"`
	// この取引による入金額（参考値）\
	// ※実際の入金額は全ての売上入金詳細の入金額の合算した後に計算される消費税金額によるため、この値は参考値となります。.
	DepositAmount OptNilInt `json:"deposit_amount"`
	// 利用金額.
	Amount OptNilInt `json:"amount"`
	// 税送料.
	Tax OptNilInt `json:"tax"`
	// Fincode 決済手数料（税抜）.
	FeeTotal OptNilInt `json:"fee_total"`
	// Fincode 決済手数料（税込）.
	FeeTotalTaxin OptNilInt `json:"fee_total_taxin"`
	// Fincode 決済手数料にかかる消費税.
	FeeProfitTax OptNilInt `json:"fee_profit_tax"`
	// Fincode 決済手数料のうち、課税対象金額.
	FeeProfit OptNilInt `json:"fee_profit"`
	// Fincode 決済手数料のうち、非課税対象金額.
	FeeCost OptNilInt `json:"fee_cost"`
	// Fincode 決済手数料率.
	FeeRateTotal OptNilFloat64 `json:"fee_rate_total"`
	// Fincode 決済手数料 最低手数料.
	FixedFee OptNilInt `json:"fixed_fee"`
	// Fincode手数料率 適用区分
	// - `0`: 料率。<br /><span class="smallText">この決済による売上に対し、fincode
	// 決済手数料率が適用されたことを示します。</span>
	// - `1`: 最低手数料。<br /><span
	// class="smallText">この決済による売上に対し、fincode
	// 決済最低手数料が適用されたことを示します。</span>.
	ApplyType OptNilAccountDetailApplyType `json:"apply_type"`
	// Fincode 振替口座 Web登録手数料（税抜）\
	// ※ 口座振替のみ.
	WebRegistrationFee OptNilInt `json:"web_registration_fee"`
	// Fincode 振替口座 Web登録手数料（税込）\
	// ※ 口座振替のみ.
	WebRegistrationFeeTaxin OptNilInt `json:"web_registration_fee_taxin"`
	// Fincode手数料 Web登録手数料消費税\
	// ※ 口座振替のみ.
	WebRegistrationFeeTax OptNilInt `json:"web_registration_fee_tax"`
	// プラットフォーム利用料（税抜）\
	// ※ テナントのみ.
	PlatformFee OptNilInt `json:"platform_fee"`
	// プラットフォーム利用料（税込）\
	// ※ テナントのみ.
	PlatformFeeTaxin OptNilInt `json:"platform_fee_taxin"`
	// プラットフォーム利用料率\
	// ※ テナントのみ.
	PlatformFeeRate OptNilFloat64 `json:"platform_fee_rate"`
	// プラットフォーム利用料率 最低手数料\
	// ※ テナントのみ.
	FixedFeeForPlatformFee OptNilInt `json:"fixed_fee_for_platform_fee"`
	// プラットフォーム利用料率 適用区分
	// - `0`: 料率。<br /><span
	// class="smallText">この決済による売上に対し、プラットフォーム利用料率が適用されたことを示します。</span>
	// - `1`: 最低手数料。<br /><span
	// class="smallText">この決済による売上に対し、プラットフォームが設定した最低利用料が適用されたことを示します。</span>
	// ※ テナントのみ.
	ApplyTypeForPlatformFee OptNilAccountDetailApplyTypeForPlatformFee `json:"apply_type_for_platform_fee"`
	// プラットフォームWeb登録利用料（税抜）\
	// ※ 口座振替のみ\
	// ※ テナントのみ.
	PlatformWebRegistrationFee OptNilInt `json:"platform_web_registration_fee"`
	// プラットフォームWeb登録利用料（税込）\
	// ※ 口座振替のみ\
	// ※ テナントのみ.
	PlatformWebRegistrationFeeTaxin OptNilInt `json:"platform_web_registration_fee_taxin"`
	// プラットフォームWeb登録利用料消費税\
	// ※ 口座振替のみ\
	// ※ テナントのみ.
	PlatformWebRegistrationFeeTax OptNilInt `json:"platform_web_registration_fee_tax"`
	// 取引の確定処理を行った日時 \
	// 形式： `yyyy/MM/dd HH:MM`.
	ProcessedDate OptNilString `json:"processed_date"`
	// 集計期間の開始日\
	// 形式： `yyyy/MM/dd HH:MM`.
	AggregateTermStart OptNilString `json:"aggregate_term_start"`
	// 集計期間の終了日\
	// 形式： `yyyy/MM/dd HH:MM`.
	AggregateTermEnd OptNilString  `json:"aggregate_term_end"`
	Created          OptCreated    `json:"created"`
	Updated          OptNilUpdated `json:"updated"`
}

// GetDetailID returns the value of DetailID.
func (s *AccountDetail) GetDetailID() OptInt {
	return s.DetailID
}

// GetShopID returns the value of ShopID.
func (s *AccountDetail) GetShopID() OptString {
	return s.ShopID
}

// GetTradeType returns the value of TradeType.
func (s *AccountDetail) GetTradeType() OptAccountDetailTradeType {
	return s.TradeType
}

// GetPaymentMethod returns the value of PaymentMethod.
func (s *AccountDetail) GetPaymentMethod() OptAccountPaymentMethod {
	return s.PaymentMethod
}

// GetAccountID returns the value of AccountID.
func (s *AccountDetail) GetAccountID() OptInt {
	return s.AccountID
}

// GetOrderID returns the value of OrderID.
func (s *AccountDetail) GetOrderID() OptNilString {
	return s.OrderID
}

// GetAccessID returns the value of AccessID.
func (s *AccountDetail) GetAccessID() OptNilString {
	return s.AccessID
}

// GetDepositAmount returns the value of DepositAmount.
func (s *AccountDetail) GetDepositAmount() OptNilInt {
	return s.DepositAmount
}

// GetAmount returns the value of Amount.
func (s *AccountDetail) GetAmount() OptNilInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *AccountDetail) GetTax() OptNilInt {
	return s.Tax
}

// GetFeeTotal returns the value of FeeTotal.
func (s *AccountDetail) GetFeeTotal() OptNilInt {
	return s.FeeTotal
}

// GetFeeTotalTaxin returns the value of FeeTotalTaxin.
func (s *AccountDetail) GetFeeTotalTaxin() OptNilInt {
	return s.FeeTotalTaxin
}

// GetFeeProfitTax returns the value of FeeProfitTax.
func (s *AccountDetail) GetFeeProfitTax() OptNilInt {
	return s.FeeProfitTax
}

// GetFeeProfit returns the value of FeeProfit.
func (s *AccountDetail) GetFeeProfit() OptNilInt {
	return s.FeeProfit
}

// GetFeeCost returns the value of FeeCost.
func (s *AccountDetail) GetFeeCost() OptNilInt {
	return s.FeeCost
}

// GetFeeRateTotal returns the value of FeeRateTotal.
func (s *AccountDetail) GetFeeRateTotal() OptNilFloat64 {
	return s.FeeRateTotal
}

// GetFixedFee returns the value of FixedFee.
func (s *AccountDetail) GetFixedFee() OptNilInt {
	return s.FixedFee
}

// GetApplyType returns the value of ApplyType.
func (s *AccountDetail) GetApplyType() OptNilAccountDetailApplyType {
	return s.ApplyType
}

// GetWebRegistrationFee returns the value of WebRegistrationFee.
func (s *AccountDetail) GetWebRegistrationFee() OptNilInt {
	return s.WebRegistrationFee
}

// GetWebRegistrationFeeTaxin returns the value of WebRegistrationFeeTaxin.
func (s *AccountDetail) GetWebRegistrationFeeTaxin() OptNilInt {
	return s.WebRegistrationFeeTaxin
}

// GetWebRegistrationFeeTax returns the value of WebRegistrationFeeTax.
func (s *AccountDetail) GetWebRegistrationFeeTax() OptNilInt {
	return s.WebRegistrationFeeTax
}

// GetPlatformFee returns the value of PlatformFee.
func (s *AccountDetail) GetPlatformFee() OptNilInt {
	return s.PlatformFee
}

// GetPlatformFeeTaxin returns the value of PlatformFeeTaxin.
func (s *AccountDetail) GetPlatformFeeTaxin() OptNilInt {
	return s.PlatformFeeTaxin
}

// GetPlatformFeeRate returns the value of PlatformFeeRate.
func (s *AccountDetail) GetPlatformFeeRate() OptNilFloat64 {
	return s.PlatformFeeRate
}

// GetFixedFeeForPlatformFee returns the value of FixedFeeForPlatformFee.
func (s *AccountDetail) GetFixedFeeForPlatformFee() OptNilInt {
	return s.FixedFeeForPlatformFee
}

// GetApplyTypeForPlatformFee returns the value of ApplyTypeForPlatformFee.
func (s *AccountDetail) GetApplyTypeForPlatformFee() OptNilAccountDetailApplyTypeForPlatformFee {
	return s.ApplyTypeForPlatformFee
}

// GetPlatformWebRegistrationFee returns the value of PlatformWebRegistrationFee.
func (s *AccountDetail) GetPlatformWebRegistrationFee() OptNilInt {
	return s.PlatformWebRegistrationFee
}

// GetPlatformWebRegistrationFeeTaxin returns the value of PlatformWebRegistrationFeeTaxin.
func (s *AccountDetail) GetPlatformWebRegistrationFeeTaxin() OptNilInt {
	return s.PlatformWebRegistrationFeeTaxin
}

// GetPlatformWebRegistrationFeeTax returns the value of PlatformWebRegistrationFeeTax.
func (s *AccountDetail) GetPlatformWebRegistrationFeeTax() OptNilInt {
	return s.PlatformWebRegistrationFeeTax
}

// GetProcessedDate returns the value of ProcessedDate.
func (s *AccountDetail) GetProcessedDate() OptNilString {
	return s.ProcessedDate
}

// GetAggregateTermStart returns the value of AggregateTermStart.
func (s *AccountDetail) GetAggregateTermStart() OptNilString {
	return s.AggregateTermStart
}

// GetAggregateTermEnd returns the value of AggregateTermEnd.
func (s *AccountDetail) GetAggregateTermEnd() OptNilString {
	return s.AggregateTermEnd
}

// GetCreated returns the value of Created.
func (s *AccountDetail) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *AccountDetail) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetDetailID sets the value of DetailID.
func (s *AccountDetail) SetDetailID(val OptInt) {
	s.DetailID = val
}

// SetShopID sets the value of ShopID.
func (s *AccountDetail) SetShopID(val OptString) {
	s.ShopID = val
}

// SetTradeType sets the value of TradeType.
func (s *AccountDetail) SetTradeType(val OptAccountDetailTradeType) {
	s.TradeType = val
}

// SetPaymentMethod sets the value of PaymentMethod.
func (s *AccountDetail) SetPaymentMethod(val OptAccountPaymentMethod) {
	s.PaymentMethod = val
}

// SetAccountID sets the value of AccountID.
func (s *AccountDetail) SetAccountID(val OptInt) {
	s.AccountID = val
}

// SetOrderID sets the value of OrderID.
func (s *AccountDetail) SetOrderID(val OptNilString) {
	s.OrderID = val
}

// SetAccessID sets the value of AccessID.
func (s *AccountDetail) SetAccessID(val OptNilString) {
	s.AccessID = val
}

// SetDepositAmount sets the value of DepositAmount.
func (s *AccountDetail) SetDepositAmount(val OptNilInt) {
	s.DepositAmount = val
}

// SetAmount sets the value of Amount.
func (s *AccountDetail) SetAmount(val OptNilInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *AccountDetail) SetTax(val OptNilInt) {
	s.Tax = val
}

// SetFeeTotal sets the value of FeeTotal.
func (s *AccountDetail) SetFeeTotal(val OptNilInt) {
	s.FeeTotal = val
}

// SetFeeTotalTaxin sets the value of FeeTotalTaxin.
func (s *AccountDetail) SetFeeTotalTaxin(val OptNilInt) {
	s.FeeTotalTaxin = val
}

// SetFeeProfitTax sets the value of FeeProfitTax.
func (s *AccountDetail) SetFeeProfitTax(val OptNilInt) {
	s.FeeProfitTax = val
}

// SetFeeProfit sets the value of FeeProfit.
func (s *AccountDetail) SetFeeProfit(val OptNilInt) {
	s.FeeProfit = val
}

// SetFeeCost sets the value of FeeCost.
func (s *AccountDetail) SetFeeCost(val OptNilInt) {
	s.FeeCost = val
}

// SetFeeRateTotal sets the value of FeeRateTotal.
func (s *AccountDetail) SetFeeRateTotal(val OptNilFloat64) {
	s.FeeRateTotal = val
}

// SetFixedFee sets the value of FixedFee.
func (s *AccountDetail) SetFixedFee(val OptNilInt) {
	s.FixedFee = val
}

// SetApplyType sets the value of ApplyType.
func (s *AccountDetail) SetApplyType(val OptNilAccountDetailApplyType) {
	s.ApplyType = val
}

// SetWebRegistrationFee sets the value of WebRegistrationFee.
func (s *AccountDetail) SetWebRegistrationFee(val OptNilInt) {
	s.WebRegistrationFee = val
}

// SetWebRegistrationFeeTaxin sets the value of WebRegistrationFeeTaxin.
func (s *AccountDetail) SetWebRegistrationFeeTaxin(val OptNilInt) {
	s.WebRegistrationFeeTaxin = val
}

// SetWebRegistrationFeeTax sets the value of WebRegistrationFeeTax.
func (s *AccountDetail) SetWebRegistrationFeeTax(val OptNilInt) {
	s.WebRegistrationFeeTax = val
}

// SetPlatformFee sets the value of PlatformFee.
func (s *AccountDetail) SetPlatformFee(val OptNilInt) {
	s.PlatformFee = val
}

// SetPlatformFeeTaxin sets the value of PlatformFeeTaxin.
func (s *AccountDetail) SetPlatformFeeTaxin(val OptNilInt) {
	s.PlatformFeeTaxin = val
}

// SetPlatformFeeRate sets the value of PlatformFeeRate.
func (s *AccountDetail) SetPlatformFeeRate(val OptNilFloat64) {
	s.PlatformFeeRate = val
}

// SetFixedFeeForPlatformFee sets the value of FixedFeeForPlatformFee.
func (s *AccountDetail) SetFixedFeeForPlatformFee(val OptNilInt) {
	s.FixedFeeForPlatformFee = val
}

// SetApplyTypeForPlatformFee sets the value of ApplyTypeForPlatformFee.
func (s *AccountDetail) SetApplyTypeForPlatformFee(val OptNilAccountDetailApplyTypeForPlatformFee) {
	s.ApplyTypeForPlatformFee = val
}

// SetPlatformWebRegistrationFee sets the value of PlatformWebRegistrationFee.
func (s *AccountDetail) SetPlatformWebRegistrationFee(val OptNilInt) {
	s.PlatformWebRegistrationFee = val
}

// SetPlatformWebRegistrationFeeTaxin sets the value of PlatformWebRegistrationFeeTaxin.
func (s *AccountDetail) SetPlatformWebRegistrationFeeTaxin(val OptNilInt) {
	s.PlatformWebRegistrationFeeTaxin = val
}

// SetPlatformWebRegistrationFeeTax sets the value of PlatformWebRegistrationFeeTax.
func (s *AccountDetail) SetPlatformWebRegistrationFeeTax(val OptNilInt) {
	s.PlatformWebRegistrationFeeTax = val
}

// SetProcessedDate sets the value of ProcessedDate.
func (s *AccountDetail) SetProcessedDate(val OptNilString) {
	s.ProcessedDate = val
}

// SetAggregateTermStart sets the value of AggregateTermStart.
func (s *AccountDetail) SetAggregateTermStart(val OptNilString) {
	s.AggregateTermStart = val
}

// SetAggregateTermEnd sets the value of AggregateTermEnd.
func (s *AccountDetail) SetAggregateTermEnd(val OptNilString) {
	s.AggregateTermEnd = val
}

// SetCreated sets the value of Created.
func (s *AccountDetail) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *AccountDetail) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// Fincode手数料率 適用区分
// - `0`: 料率。<br /><span class="smallText">この決済による売上に対し、fincode
// 決済手数料率が適用されたことを示します。</span>
// - `1`: 最低手数料。<br /><span
// class="smallText">この決済による売上に対し、fincode
// 決済最低手数料が適用されたことを示します。</span>.
type AccountDetailApplyType int

const (
	AccountDetailApplyType0 AccountDetailApplyType = 0
	AccountDetailApplyType1 AccountDetailApplyType = 1
)

// AllValues returns all AccountDetailApplyType values.
func (AccountDetailApplyType) AllValues() []AccountDetailApplyType {
	return []AccountDetailApplyType{
		AccountDetailApplyType0,
		AccountDetailApplyType1,
	}
}

// プラットフォーム利用料率 適用区分
// - `0`: 料率。<br /><span
// class="smallText">この決済による売上に対し、プラットフォーム利用料率が適用されたことを示します。</span>
// - `1`: 最低手数料。<br /><span
// class="smallText">この決済による売上に対し、プラットフォームが設定した最低利用料が適用されたことを示します。</span>
// ※ テナントのみ.
type AccountDetailApplyTypeForPlatformFee int

const (
	AccountDetailApplyTypeForPlatformFee0 AccountDetailApplyTypeForPlatformFee = 0
	AccountDetailApplyTypeForPlatformFee1 AccountDetailApplyTypeForPlatformFee = 1
)

// AllValues returns all AccountDetailApplyTypeForPlatformFee values.
func (AccountDetailApplyTypeForPlatformFee) AllValues() []AccountDetailApplyTypeForPlatformFee {
	return []AccountDetailApplyTypeForPlatformFee{
		AccountDetailApplyTypeForPlatformFee0,
		AccountDetailApplyTypeForPlatformFee1,
	}
}

// Merged schema.
// Ref: #/components/schemas/AccountDetail.ListRetrieving.Response
type AccountDetailListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString    `json:"link_previous"`
	List         []AccountDetail `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *AccountDetailListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *AccountDetailListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *AccountDetailListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *AccountDetailListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *AccountDetailListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *AccountDetailListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *AccountDetailListRetrievingResponse) GetList() []AccountDetail {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *AccountDetailListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *AccountDetailListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *AccountDetailListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *AccountDetailListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *AccountDetailListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *AccountDetailListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *AccountDetailListRetrievingResponse) SetList(val []AccountDetail) {
	s.List = val
}

func (*AccountDetailListRetrievingResponse) retrieveAccountDetailListRes() {}

// 取引種別\
// 値によって、集計の際にこの売上入金明細の利用金額が加算されるか減算されるかが異なります。
// - `1`: 決済（加算）<br /><span
// class="smallText">この売上入金明細はある決済1件に対し発生したものであることを示します。</span>
// - `2`: 返金（減算）<br /><span
// class="smallText">この売上入金明細はある決済に対し発生したキャンセル1件に対し発生したものであることを示します。</span>
// - `3`: チャージバック（減算）<br /><span
// class="smallText">この売上入金明細はある決済に対し発生したチャージバック1件に対し発生したものであることを示します。</span>
// - `4`: 調整（加算）<br /><span
// class="smallText">この売上入金明細は何らかの理由で売上入金情報を調整するために発生したものであることを示します。減算のためマイナス値が返されることもあります。</span>
// - `5`: チャージバックの取消（加算）<br /><span
// class="smallText">この売上入金明細はある決済に対し発生したチャージバック1件が取り消されたとき発生したものであることを示します。</span>.
// Ref: #/components/schemas/AccountDetailTradeType
type AccountDetailTradeType int

const (
	AccountDetailTradeType1 AccountDetailTradeType = 1
	AccountDetailTradeType2 AccountDetailTradeType = 2
	AccountDetailTradeType3 AccountDetailTradeType = 3
	AccountDetailTradeType4 AccountDetailTradeType = 4
	AccountDetailTradeType5 AccountDetailTradeType = 5
)

// AllValues returns all AccountDetailTradeType values.
func (AccountDetailTradeType) AllValues() []AccountDetailTradeType {
	return []AccountDetailTradeType{
		AccountDetailTradeType1,
		AccountDetailTradeType2,
		AccountDetailTradeType3,
		AccountDetailTradeType4,
		AccountDetailTradeType5,
	}
}

type AccountID int

type AccountIdSchema string

// Ref: #/components/schemas/AccountListItem
type AccountListItem struct {
	ID                       OptAccountPropertiesID             `json:"id"`
	AccountID                OptAccountID                       `json:"account_id"`
	ShopID                   OptShopID                          `json:"shop_id"`
	ScheduledDepositDate     OptNilScheduledDepositDate         `json:"scheduled_deposit_date"`
	AggregateTermStart       OptNilAggregateTermStart           `json:"aggregate_term_start"`
	AggregateTermEnd         OptNilAggregateTermEnd             `json:"aggregate_term_end"`
	DepositDate              OptNilDepositDate                  `json:"deposit_date"`
	PaymentDeadline          OptNilPaymentDeadline              `json:"payment_deadline"`
	PaymentCompletionDate    OptNilPaymentCompletionDate        `json:"payment_completion_date"`
	StatusCode               OptDepositStatusCode               `json:"status_code"`
	Count                    OptNilCount                        `json:"count"`
	BankTransferFee          OptNilBankTransferFee              `json:"bank_transfer_fee"`
	TotalAmount              OptNilAccountPropertiesTotalAmount `json:"total_amount"`
	FeeAmount                OptNilFeeAmount                    `json:"fee_amount"`
	WebRegistrationFeeAmount OptNilWebRegistrationFeeAmount     `json:"web_registration_fee_amount"`
	DepositAmount            OptNilDepositAmount                `json:"deposit_amount"`
	PlatformFeeAmount        OptNilPlatformFeeAmount            `json:"platform_fee_amount"`
	PlatformFeeTaxAmount     OptNilPlatformFeeTaxAmount         `json:"platform_fee_tax_amount"`
	Created                  OptCreated                         `json:"created"`
	Updated                  OptNilUpdated                      `json:"updated"`
}

// GetID returns the value of ID.
func (s *AccountListItem) GetID() OptAccountPropertiesID {
	return s.ID
}

// GetAccountID returns the value of AccountID.
func (s *AccountListItem) GetAccountID() OptAccountID {
	return s.AccountID
}

// GetShopID returns the value of ShopID.
func (s *AccountListItem) GetShopID() OptShopID {
	return s.ShopID
}

// GetScheduledDepositDate returns the value of ScheduledDepositDate.
func (s *AccountListItem) GetScheduledDepositDate() OptNilScheduledDepositDate {
	return s.ScheduledDepositDate
}

// GetAggregateTermStart returns the value of AggregateTermStart.
func (s *AccountListItem) GetAggregateTermStart() OptNilAggregateTermStart {
	return s.AggregateTermStart
}

// GetAggregateTermEnd returns the value of AggregateTermEnd.
func (s *AccountListItem) GetAggregateTermEnd() OptNilAggregateTermEnd {
	return s.AggregateTermEnd
}

// GetDepositDate returns the value of DepositDate.
func (s *AccountListItem) GetDepositDate() OptNilDepositDate {
	return s.DepositDate
}

// GetPaymentDeadline returns the value of PaymentDeadline.
func (s *AccountListItem) GetPaymentDeadline() OptNilPaymentDeadline {
	return s.PaymentDeadline
}

// GetPaymentCompletionDate returns the value of PaymentCompletionDate.
func (s *AccountListItem) GetPaymentCompletionDate() OptNilPaymentCompletionDate {
	return s.PaymentCompletionDate
}

// GetStatusCode returns the value of StatusCode.
func (s *AccountListItem) GetStatusCode() OptDepositStatusCode {
	return s.StatusCode
}

// GetCount returns the value of Count.
func (s *AccountListItem) GetCount() OptNilCount {
	return s.Count
}

// GetBankTransferFee returns the value of BankTransferFee.
func (s *AccountListItem) GetBankTransferFee() OptNilBankTransferFee {
	return s.BankTransferFee
}

// GetTotalAmount returns the value of TotalAmount.
func (s *AccountListItem) GetTotalAmount() OptNilAccountPropertiesTotalAmount {
	return s.TotalAmount
}

// GetFeeAmount returns the value of FeeAmount.
func (s *AccountListItem) GetFeeAmount() OptNilFeeAmount {
	return s.FeeAmount
}

// GetWebRegistrationFeeAmount returns the value of WebRegistrationFeeAmount.
func (s *AccountListItem) GetWebRegistrationFeeAmount() OptNilWebRegistrationFeeAmount {
	return s.WebRegistrationFeeAmount
}

// GetDepositAmount returns the value of DepositAmount.
func (s *AccountListItem) GetDepositAmount() OptNilDepositAmount {
	return s.DepositAmount
}

// GetPlatformFeeAmount returns the value of PlatformFeeAmount.
func (s *AccountListItem) GetPlatformFeeAmount() OptNilPlatformFeeAmount {
	return s.PlatformFeeAmount
}

// GetPlatformFeeTaxAmount returns the value of PlatformFeeTaxAmount.
func (s *AccountListItem) GetPlatformFeeTaxAmount() OptNilPlatformFeeTaxAmount {
	return s.PlatformFeeTaxAmount
}

// GetCreated returns the value of Created.
func (s *AccountListItem) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *AccountListItem) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *AccountListItem) SetID(val OptAccountPropertiesID) {
	s.ID = val
}

// SetAccountID sets the value of AccountID.
func (s *AccountListItem) SetAccountID(val OptAccountID) {
	s.AccountID = val
}

// SetShopID sets the value of ShopID.
func (s *AccountListItem) SetShopID(val OptShopID) {
	s.ShopID = val
}

// SetScheduledDepositDate sets the value of ScheduledDepositDate.
func (s *AccountListItem) SetScheduledDepositDate(val OptNilScheduledDepositDate) {
	s.ScheduledDepositDate = val
}

// SetAggregateTermStart sets the value of AggregateTermStart.
func (s *AccountListItem) SetAggregateTermStart(val OptNilAggregateTermStart) {
	s.AggregateTermStart = val
}

// SetAggregateTermEnd sets the value of AggregateTermEnd.
func (s *AccountListItem) SetAggregateTermEnd(val OptNilAggregateTermEnd) {
	s.AggregateTermEnd = val
}

// SetDepositDate sets the value of DepositDate.
func (s *AccountListItem) SetDepositDate(val OptNilDepositDate) {
	s.DepositDate = val
}

// SetPaymentDeadline sets the value of PaymentDeadline.
func (s *AccountListItem) SetPaymentDeadline(val OptNilPaymentDeadline) {
	s.PaymentDeadline = val
}

// SetPaymentCompletionDate sets the value of PaymentCompletionDate.
func (s *AccountListItem) SetPaymentCompletionDate(val OptNilPaymentCompletionDate) {
	s.PaymentCompletionDate = val
}

// SetStatusCode sets the value of StatusCode.
func (s *AccountListItem) SetStatusCode(val OptDepositStatusCode) {
	s.StatusCode = val
}

// SetCount sets the value of Count.
func (s *AccountListItem) SetCount(val OptNilCount) {
	s.Count = val
}

// SetBankTransferFee sets the value of BankTransferFee.
func (s *AccountListItem) SetBankTransferFee(val OptNilBankTransferFee) {
	s.BankTransferFee = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *AccountListItem) SetTotalAmount(val OptNilAccountPropertiesTotalAmount) {
	s.TotalAmount = val
}

// SetFeeAmount sets the value of FeeAmount.
func (s *AccountListItem) SetFeeAmount(val OptNilFeeAmount) {
	s.FeeAmount = val
}

// SetWebRegistrationFeeAmount sets the value of WebRegistrationFeeAmount.
func (s *AccountListItem) SetWebRegistrationFeeAmount(val OptNilWebRegistrationFeeAmount) {
	s.WebRegistrationFeeAmount = val
}

// SetDepositAmount sets the value of DepositAmount.
func (s *AccountListItem) SetDepositAmount(val OptNilDepositAmount) {
	s.DepositAmount = val
}

// SetPlatformFeeAmount sets the value of PlatformFeeAmount.
func (s *AccountListItem) SetPlatformFeeAmount(val OptNilPlatformFeeAmount) {
	s.PlatformFeeAmount = val
}

// SetPlatformFeeTaxAmount sets the value of PlatformFeeTaxAmount.
func (s *AccountListItem) SetPlatformFeeTaxAmount(val OptNilPlatformFeeTaxAmount) {
	s.PlatformFeeTaxAmount = val
}

// SetCreated sets the value of Created.
func (s *AccountListItem) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *AccountListItem) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// Merged schema.
// Ref: #/components/schemas/Account.ListRetrieving.Response
type AccountListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString      `json:"link_previous"`
	List         []AccountListItem `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *AccountListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *AccountListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *AccountListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *AccountListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *AccountListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *AccountListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *AccountListRetrievingResponse) GetList() []AccountListItem {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *AccountListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *AccountListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *AccountListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *AccountListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *AccountListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *AccountListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *AccountListRetrievingResponse) SetList(val []AccountListItem) {
	s.List = val
}

func (*AccountListRetrievingResponse) retrieveAccountListRes() {}

type AccountName string

type AccountNameKana string

type AccountNumber string

// この売上入金明細に対応する決済で利用された決済手段
// - `VM`: カード決済（VISA / Mastercard）
// - `JA`: カード決済（JCB / American Express / Diners Club / Discover）
// - `KONBINI`: コンビニ決済
// - `Paypay`: PayPay決済
// - `ApplepayVM`: Apple Pay決済（VISA / Mastercard）
// - `ApplepayJA`: Apple Pay決済（JCB / American Express / Discover）
// - `Directdebit`: 口座振替.
// Ref: #/components/schemas/AccountPaymentMethod
type AccountPaymentMethod string

const (
	AccountPaymentMethodVM          AccountPaymentMethod = "VM"
	AccountPaymentMethodJA          AccountPaymentMethod = "JA"
	AccountPaymentMethodKONBINI     AccountPaymentMethod = "KONBINI"
	AccountPaymentMethodPayPay      AccountPaymentMethod = "PayPay"
	AccountPaymentMethodApplepayVM  AccountPaymentMethod = "ApplepayVM"
	AccountPaymentMethodApplepayJA  AccountPaymentMethod = "ApplepayJA"
	AccountPaymentMethodDirectdebit AccountPaymentMethod = "Directdebit"
)

// AllValues returns all AccountPaymentMethod values.
func (AccountPaymentMethod) AllValues() []AccountPaymentMethod {
	return []AccountPaymentMethod{
		AccountPaymentMethodVM,
		AccountPaymentMethodJA,
		AccountPaymentMethodKONBINI,
		AccountPaymentMethodPayPay,
		AccountPaymentMethodApplepayVM,
		AccountPaymentMethodApplepayJA,
		AccountPaymentMethodDirectdebit,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AccountPaymentMethod) MarshalText() ([]byte, error) {
	switch s {
	case AccountPaymentMethodVM:
		return []byte(s), nil
	case AccountPaymentMethodJA:
		return []byte(s), nil
	case AccountPaymentMethodKONBINI:
		return []byte(s), nil
	case AccountPaymentMethodPayPay:
		return []byte(s), nil
	case AccountPaymentMethodApplepayVM:
		return []byte(s), nil
	case AccountPaymentMethodApplepayJA:
		return []byte(s), nil
	case AccountPaymentMethodDirectdebit:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccountPaymentMethod) UnmarshalText(data []byte) error {
	switch AccountPaymentMethod(data) {
	case AccountPaymentMethodVM:
		*s = AccountPaymentMethodVM
		return nil
	case AccountPaymentMethodJA:
		*s = AccountPaymentMethodJA
		return nil
	case AccountPaymentMethodKONBINI:
		*s = AccountPaymentMethodKONBINI
		return nil
	case AccountPaymentMethodPayPay:
		*s = AccountPaymentMethodPayPay
		return nil
	case AccountPaymentMethodApplepayVM:
		*s = AccountPaymentMethodApplepayVM
		return nil
	case AccountPaymentMethodApplepayJA:
		*s = AccountPaymentMethodApplepayJA
		return nil
	case AccountPaymentMethodDirectdebit:
		*s = AccountPaymentMethodDirectdebit
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type AccountPropertiesID string

type AccountPropertiesTotalAmount int

// 口座種別。
// - `0`: 普通預金
// - `1`: 当座預金.
// Ref: #/components/schemas/account_type
type AccountType string

const (
	AccountType0 AccountType = "0"
	AccountType1 AccountType = "1"
)

// AllValues returns all AccountType values.
func (AccountType) AllValues() []AccountType {
	return []AccountType{
		AccountType0,
		AccountType1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AccountType) MarshalText() ([]byte, error) {
	switch s {
	case AccountType0:
		return []byte(s), nil
	case AccountType1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccountType) UnmarshalText(data []byte) error {
	switch AccountType(data) {
	case AccountType0:
		*s = AccountType0
		return nil
	case AccountType1:
		*s = AccountType1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 審査対象
// - `UC`: VISA／Mastercard（UCカード）
// - `TFC`: VISA／Mastercard（トヨタファイナンス）
// - `JCB/AMEX`: JCB／AMEX（JCB）
// - `DINERS`: DINERS（JCB）
// - `APPLE PAY UC`: Apple Pay（UCカード）
// - `APPLE PAY JCB/AMEX`: Apple Pay（JCB）
// - `PAYSLE`: コンビニ決済（電算システム）
// - `PAYPAY`: コンビニ決済（PayPay）
// - `DIRECT DEBIT`: 口座振替（三井住友カード）.
// Ref: #/components/schemas/Acquirer
type Acquirer string

const (
	AcquirerUC              Acquirer = "UC"
	AcquirerTFC             Acquirer = "TFC"
	AcquirerJCBAMEX         Acquirer = "JCB/AMEX"
	AcquirerDINERS          Acquirer = "DINERS"
	AcquirerAPPLEPAYUC      Acquirer = "APPLE PAY UC"
	AcquirerAPPLEPAYJCBAMEX Acquirer = "APPLE PAY JCB/AMEX"
	AcquirerPAYSLE          Acquirer = "PAYSLE"
	AcquirerPAYPAY          Acquirer = "PAYPAY"
	AcquirerDIRECTDEBIT     Acquirer = "DIRECT DEBIT"
)

// AllValues returns all Acquirer values.
func (Acquirer) AllValues() []Acquirer {
	return []Acquirer{
		AcquirerUC,
		AcquirerTFC,
		AcquirerJCBAMEX,
		AcquirerDINERS,
		AcquirerAPPLEPAYUC,
		AcquirerAPPLEPAYJCBAMEX,
		AcquirerPAYSLE,
		AcquirerPAYPAY,
		AcquirerDIRECTDEBIT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Acquirer) MarshalText() ([]byte, error) {
	switch s {
	case AcquirerUC:
		return []byte(s), nil
	case AcquirerTFC:
		return []byte(s), nil
	case AcquirerJCBAMEX:
		return []byte(s), nil
	case AcquirerDINERS:
		return []byte(s), nil
	case AcquirerAPPLEPAYUC:
		return []byte(s), nil
	case AcquirerAPPLEPAYJCBAMEX:
		return []byte(s), nil
	case AcquirerPAYSLE:
		return []byte(s), nil
	case AcquirerPAYPAY:
		return []byte(s), nil
	case AcquirerDIRECTDEBIT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Acquirer) UnmarshalText(data []byte) error {
	switch Acquirer(data) {
	case AcquirerUC:
		*s = AcquirerUC
		return nil
	case AcquirerTFC:
		*s = AcquirerTFC
		return nil
	case AcquirerJCBAMEX:
		*s = AcquirerJCBAMEX
		return nil
	case AcquirerDINERS:
		*s = AcquirerDINERS
		return nil
	case AcquirerAPPLEPAYUC:
		*s = AcquirerAPPLEPAYUC
		return nil
	case AcquirerAPPLEPAYJCBAMEX:
		*s = AcquirerAPPLEPAYJCBAMEX
		return nil
	case AcquirerPAYSLE:
		*s = AcquirerPAYSLE
		return nil
	case AcquirerPAYPAY:
		*s = AcquirerPAYPAY
		return nil
	case AcquirerDIRECTDEBIT:
		*s = AcquirerDIRECTDEBIT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 決済事業者 契約ステータス
// - `701`: 申込なし<br /><span
// class="smallText">まだこの決済手段を利用申請していません</span>
// - `702`: 審査受付<br /><span
// class="smallText">fincodeが審査を受け付けました。まだこの決済手段は利用できません。</span>
// - `703`: 審査待ち<br /><span
// class="smallText">fincodeによる審査開始を待っています。まだこの決済手段は利用できません。</span>
// - `704`: 審査中<br /><span
// class="smallText">fincodeによる審査中です。まだこの決済手段は利用できません。</span>
// - `705`: 審査保留中<br /><span
// class="smallText">審査の過程で保留中が発生しました。まだこの決済手段は利用できません。</span>
// - `706`: 審査OK<br /><span
// class="smallText">fincodeによる審査の結果OKとなりました。まだこの決済手段は利用できません。</span>
// - `707`: 利用可能<br /><span
// class="smallText">この決済手段は利用可能です。</span>
// - `708`: 審査NG<br /><span
// class="smallText">fincodeによる審査の結果NGとなりました。この決済手段は利用できません。</span>
// - `709`: 申込中止<br /><span
// class="smallText">この決済手段の利用申請を中止しました。</span>.
// Ref: #/components/schemas/AcquirerContractStatus
type AcquirerContractStatus string

const (
	AcquirerContractStatus701 AcquirerContractStatus = "701"
	AcquirerContractStatus702 AcquirerContractStatus = "702"
	AcquirerContractStatus703 AcquirerContractStatus = "703"
	AcquirerContractStatus704 AcquirerContractStatus = "704"
	AcquirerContractStatus705 AcquirerContractStatus = "705"
	AcquirerContractStatus706 AcquirerContractStatus = "706"
	AcquirerContractStatus707 AcquirerContractStatus = "707"
	AcquirerContractStatus708 AcquirerContractStatus = "708"
	AcquirerContractStatus709 AcquirerContractStatus = "709"
)

// AllValues returns all AcquirerContractStatus values.
func (AcquirerContractStatus) AllValues() []AcquirerContractStatus {
	return []AcquirerContractStatus{
		AcquirerContractStatus701,
		AcquirerContractStatus702,
		AcquirerContractStatus703,
		AcquirerContractStatus704,
		AcquirerContractStatus705,
		AcquirerContractStatus706,
		AcquirerContractStatus707,
		AcquirerContractStatus708,
		AcquirerContractStatus709,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AcquirerContractStatus) MarshalText() ([]byte, error) {
	switch s {
	case AcquirerContractStatus701:
		return []byte(s), nil
	case AcquirerContractStatus702:
		return []byte(s), nil
	case AcquirerContractStatus703:
		return []byte(s), nil
	case AcquirerContractStatus704:
		return []byte(s), nil
	case AcquirerContractStatus705:
		return []byte(s), nil
	case AcquirerContractStatus706:
		return []byte(s), nil
	case AcquirerContractStatus707:
		return []byte(s), nil
	case AcquirerContractStatus708:
		return []byte(s), nil
	case AcquirerContractStatus709:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AcquirerContractStatus) UnmarshalText(data []byte) error {
	switch AcquirerContractStatus(data) {
	case AcquirerContractStatus701:
		*s = AcquirerContractStatus701
		return nil
	case AcquirerContractStatus702:
		*s = AcquirerContractStatus702
		return nil
	case AcquirerContractStatus703:
		*s = AcquirerContractStatus703
		return nil
	case AcquirerContractStatus704:
		*s = AcquirerContractStatus704
		return nil
	case AcquirerContractStatus705:
		*s = AcquirerContractStatus705
		return nil
	case AcquirerContractStatus706:
		*s = AcquirerContractStatus706
		return nil
	case AcquirerContractStatus707:
		*s = AcquirerContractStatus707
		return nil
	case AcquirerContractStatus708:
		*s = AcquirerContractStatus708
		return nil
	case AcquirerContractStatus709:
		*s = AcquirerContractStatus709
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type AddrCity string

type AddrCountry string

type AddrLine1 string

type AddrLine2 string

type AddrLine3 string

type AddrPostCode string

type AddrState string

type AggregateTermEnd string

type AggregateTermStart string

type Amount string

// 取引種別\
// この決済に対し決済実行を行った際、仮売上にするか即座に売上確定するか、カードの有効性チェックのみを行うかを指定します。
// - `AUTH`：仮売上にする
// - `CAPTURE`：即時売上.
// Ref: #/components/schemas/ApplePayPaymentJobCode
type ApplePayPaymentJobCode string

const (
	ApplePayPaymentJobCodeAUTH    ApplePayPaymentJobCode = "AUTH"
	ApplePayPaymentJobCodeCAPTURE ApplePayPaymentJobCode = "CAPTURE"
)

// AllValues returns all ApplePayPaymentJobCode values.
func (ApplePayPaymentJobCode) AllValues() []ApplePayPaymentJobCode {
	return []ApplePayPaymentJobCode{
		ApplePayPaymentJobCodeAUTH,
		ApplePayPaymentJobCodeCAPTURE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ApplePayPaymentJobCode) MarshalText() ([]byte, error) {
	switch s {
	case ApplePayPaymentJobCodeAUTH:
		return []byte(s), nil
	case ApplePayPaymentJobCodeCAPTURE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ApplePayPaymentJobCode) UnmarshalText(data []byte) error {
	switch ApplePayPaymentJobCode(data) {
	case ApplePayPaymentJobCodeAUTH:
		*s = ApplePayPaymentJobCodeAUTH
		return nil
	case ApplePayPaymentJobCodeCAPTURE:
		*s = ApplePayPaymentJobCodeCAPTURE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Approve string

type AuthMaxDate string

// Ref: #/components/schemas/BankAccountInfo.V2
type BankAccountInfoV2 struct {
	// 金融機関コード.
	BankCode OptString `json:"bank_code"`
	// 支店コード.
	BranchCode string `json:"branch_code"`
	// 口座種別
	// - `0`: 普通
	// - `1`: 当座.
	AccountKind BankAccountInfoV2AccountKind `json:"account_kind"`
	// 口座番号.
	AccountNumber string `json:"account_number"`
	// 口座名義.
	AccountName string `json:"account_name"`
}

// GetBankCode returns the value of BankCode.
func (s *BankAccountInfoV2) GetBankCode() OptString {
	return s.BankCode
}

// GetBranchCode returns the value of BranchCode.
func (s *BankAccountInfoV2) GetBranchCode() string {
	return s.BranchCode
}

// GetAccountKind returns the value of AccountKind.
func (s *BankAccountInfoV2) GetAccountKind() BankAccountInfoV2AccountKind {
	return s.AccountKind
}

// GetAccountNumber returns the value of AccountNumber.
func (s *BankAccountInfoV2) GetAccountNumber() string {
	return s.AccountNumber
}

// GetAccountName returns the value of AccountName.
func (s *BankAccountInfoV2) GetAccountName() string {
	return s.AccountName
}

// SetBankCode sets the value of BankCode.
func (s *BankAccountInfoV2) SetBankCode(val OptString) {
	s.BankCode = val
}

// SetBranchCode sets the value of BranchCode.
func (s *BankAccountInfoV2) SetBranchCode(val string) {
	s.BranchCode = val
}

// SetAccountKind sets the value of AccountKind.
func (s *BankAccountInfoV2) SetAccountKind(val BankAccountInfoV2AccountKind) {
	s.AccountKind = val
}

// SetAccountNumber sets the value of AccountNumber.
func (s *BankAccountInfoV2) SetAccountNumber(val string) {
	s.AccountNumber = val
}

// SetAccountName sets the value of AccountName.
func (s *BankAccountInfoV2) SetAccountName(val string) {
	s.AccountName = val
}

// 口座種別
// - `0`: 普通
// - `1`: 当座.
type BankAccountInfoV2AccountKind float64

const (
	BankAccountInfoV2AccountKind0 BankAccountInfoV2AccountKind = 0
	BankAccountInfoV2AccountKind1 BankAccountInfoV2AccountKind = 1
)

// AllValues returns all BankAccountInfoV2AccountKind values.
func (BankAccountInfoV2AccountKind) AllValues() []BankAccountInfoV2AccountKind {
	return []BankAccountInfoV2AccountKind{
		BankAccountInfoV2AccountKind0,
		BankAccountInfoV2AccountKind1,
	}
}

type BankCode string

type BankTransferFee int

type BranchCode string

type BusinessDetails string

type CancelDescription string

// キャンセル後支払フラグ\
// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
// - `0`: キャンセル後支払は行われていない
// - `1`: キャンセル後、購入者による支払いが行われた.
// Ref: #/components/schemas/cancel_overpayment_flag
type CancelOverpaymentFlag string

const (
	CancelOverpaymentFlag0 CancelOverpaymentFlag = "0"
	CancelOverpaymentFlag1 CancelOverpaymentFlag = "1"
)

// AllValues returns all CancelOverpaymentFlag values.
func (CancelOverpaymentFlag) AllValues() []CancelOverpaymentFlag {
	return []CancelOverpaymentFlag{
		CancelOverpaymentFlag0,
		CancelOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CancelOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case CancelOverpaymentFlag0:
		return []byte(s), nil
	case CancelOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CancelOverpaymentFlag) UnmarshalText(data []byte) error {
	switch CancelOverpaymentFlag(data) {
	case CancelOverpaymentFlag0:
		*s = CancelOverpaymentFlag0
		return nil
	case CancelOverpaymentFlag1:
		*s = CancelOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// CancelPaymentOK represents sum type.
type CancelPaymentOK struct {
	Type                                CancelPaymentOKType // switch on this field
	PaymentCardCancelingResponse        PaymentCardCancelingResponse
	PaymentApplePayCancelingResponse    PaymentApplePayCancelingResponse
	PaymentKonbiniCancelingResponse     PaymentKonbiniCancelingResponse
	PaymentPayPayCancelingResponse      PaymentPayPayCancelingResponse
	PaymentDirectDebitCancelingResponse PaymentDirectDebitCancelingResponse
}

// CancelPaymentOKType is oneOf type of CancelPaymentOK.
type CancelPaymentOKType string

// Possible values for CancelPaymentOKType.
const (
	PaymentCardCancelingResponseCancelPaymentOK        CancelPaymentOKType = "PaymentCardCancelingResponse"
	PaymentApplePayCancelingResponseCancelPaymentOK    CancelPaymentOKType = "PaymentApplePayCancelingResponse"
	PaymentKonbiniCancelingResponseCancelPaymentOK     CancelPaymentOKType = "PaymentKonbiniCancelingResponse"
	PaymentPayPayCancelingResponseCancelPaymentOK      CancelPaymentOKType = "PaymentPayPayCancelingResponse"
	PaymentDirectDebitCancelingResponseCancelPaymentOK CancelPaymentOKType = "PaymentDirectDebitCancelingResponse"
)

// IsPaymentCardCancelingResponse reports whether CancelPaymentOK is PaymentCardCancelingResponse.
func (s CancelPaymentOK) IsPaymentCardCancelingResponse() bool {
	return s.Type == PaymentCardCancelingResponseCancelPaymentOK
}

// IsPaymentApplePayCancelingResponse reports whether CancelPaymentOK is PaymentApplePayCancelingResponse.
func (s CancelPaymentOK) IsPaymentApplePayCancelingResponse() bool {
	return s.Type == PaymentApplePayCancelingResponseCancelPaymentOK
}

// IsPaymentKonbiniCancelingResponse reports whether CancelPaymentOK is PaymentKonbiniCancelingResponse.
func (s CancelPaymentOK) IsPaymentKonbiniCancelingResponse() bool {
	return s.Type == PaymentKonbiniCancelingResponseCancelPaymentOK
}

// IsPaymentPayPayCancelingResponse reports whether CancelPaymentOK is PaymentPayPayCancelingResponse.
func (s CancelPaymentOK) IsPaymentPayPayCancelingResponse() bool {
	return s.Type == PaymentPayPayCancelingResponseCancelPaymentOK
}

// IsPaymentDirectDebitCancelingResponse reports whether CancelPaymentOK is PaymentDirectDebitCancelingResponse.
func (s CancelPaymentOK) IsPaymentDirectDebitCancelingResponse() bool {
	return s.Type == PaymentDirectDebitCancelingResponseCancelPaymentOK
}

// SetPaymentCardCancelingResponse sets CancelPaymentOK to PaymentCardCancelingResponse.
func (s *CancelPaymentOK) SetPaymentCardCancelingResponse(v PaymentCardCancelingResponse) {
	s.Type = PaymentCardCancelingResponseCancelPaymentOK
	s.PaymentCardCancelingResponse = v
}

// GetPaymentCardCancelingResponse returns PaymentCardCancelingResponse and true boolean if CancelPaymentOK is PaymentCardCancelingResponse.
func (s CancelPaymentOK) GetPaymentCardCancelingResponse() (v PaymentCardCancelingResponse, ok bool) {
	if !s.IsPaymentCardCancelingResponse() {
		return v, false
	}
	return s.PaymentCardCancelingResponse, true
}

// NewPaymentCardCancelingResponseCancelPaymentOK returns new CancelPaymentOK from PaymentCardCancelingResponse.
func NewPaymentCardCancelingResponseCancelPaymentOK(v PaymentCardCancelingResponse) CancelPaymentOK {
	var s CancelPaymentOK
	s.SetPaymentCardCancelingResponse(v)
	return s
}

// SetPaymentApplePayCancelingResponse sets CancelPaymentOK to PaymentApplePayCancelingResponse.
func (s *CancelPaymentOK) SetPaymentApplePayCancelingResponse(v PaymentApplePayCancelingResponse) {
	s.Type = PaymentApplePayCancelingResponseCancelPaymentOK
	s.PaymentApplePayCancelingResponse = v
}

// GetPaymentApplePayCancelingResponse returns PaymentApplePayCancelingResponse and true boolean if CancelPaymentOK is PaymentApplePayCancelingResponse.
func (s CancelPaymentOK) GetPaymentApplePayCancelingResponse() (v PaymentApplePayCancelingResponse, ok bool) {
	if !s.IsPaymentApplePayCancelingResponse() {
		return v, false
	}
	return s.PaymentApplePayCancelingResponse, true
}

// NewPaymentApplePayCancelingResponseCancelPaymentOK returns new CancelPaymentOK from PaymentApplePayCancelingResponse.
func NewPaymentApplePayCancelingResponseCancelPaymentOK(v PaymentApplePayCancelingResponse) CancelPaymentOK {
	var s CancelPaymentOK
	s.SetPaymentApplePayCancelingResponse(v)
	return s
}

// SetPaymentKonbiniCancelingResponse sets CancelPaymentOK to PaymentKonbiniCancelingResponse.
func (s *CancelPaymentOK) SetPaymentKonbiniCancelingResponse(v PaymentKonbiniCancelingResponse) {
	s.Type = PaymentKonbiniCancelingResponseCancelPaymentOK
	s.PaymentKonbiniCancelingResponse = v
}

// GetPaymentKonbiniCancelingResponse returns PaymentKonbiniCancelingResponse and true boolean if CancelPaymentOK is PaymentKonbiniCancelingResponse.
func (s CancelPaymentOK) GetPaymentKonbiniCancelingResponse() (v PaymentKonbiniCancelingResponse, ok bool) {
	if !s.IsPaymentKonbiniCancelingResponse() {
		return v, false
	}
	return s.PaymentKonbiniCancelingResponse, true
}

// NewPaymentKonbiniCancelingResponseCancelPaymentOK returns new CancelPaymentOK from PaymentKonbiniCancelingResponse.
func NewPaymentKonbiniCancelingResponseCancelPaymentOK(v PaymentKonbiniCancelingResponse) CancelPaymentOK {
	var s CancelPaymentOK
	s.SetPaymentKonbiniCancelingResponse(v)
	return s
}

// SetPaymentPayPayCancelingResponse sets CancelPaymentOK to PaymentPayPayCancelingResponse.
func (s *CancelPaymentOK) SetPaymentPayPayCancelingResponse(v PaymentPayPayCancelingResponse) {
	s.Type = PaymentPayPayCancelingResponseCancelPaymentOK
	s.PaymentPayPayCancelingResponse = v
}

// GetPaymentPayPayCancelingResponse returns PaymentPayPayCancelingResponse and true boolean if CancelPaymentOK is PaymentPayPayCancelingResponse.
func (s CancelPaymentOK) GetPaymentPayPayCancelingResponse() (v PaymentPayPayCancelingResponse, ok bool) {
	if !s.IsPaymentPayPayCancelingResponse() {
		return v, false
	}
	return s.PaymentPayPayCancelingResponse, true
}

// NewPaymentPayPayCancelingResponseCancelPaymentOK returns new CancelPaymentOK from PaymentPayPayCancelingResponse.
func NewPaymentPayPayCancelingResponseCancelPaymentOK(v PaymentPayPayCancelingResponse) CancelPaymentOK {
	var s CancelPaymentOK
	s.SetPaymentPayPayCancelingResponse(v)
	return s
}

// SetPaymentDirectDebitCancelingResponse sets CancelPaymentOK to PaymentDirectDebitCancelingResponse.
func (s *CancelPaymentOK) SetPaymentDirectDebitCancelingResponse(v PaymentDirectDebitCancelingResponse) {
	s.Type = PaymentDirectDebitCancelingResponseCancelPaymentOK
	s.PaymentDirectDebitCancelingResponse = v
}

// GetPaymentDirectDebitCancelingResponse returns PaymentDirectDebitCancelingResponse and true boolean if CancelPaymentOK is PaymentDirectDebitCancelingResponse.
func (s CancelPaymentOK) GetPaymentDirectDebitCancelingResponse() (v PaymentDirectDebitCancelingResponse, ok bool) {
	if !s.IsPaymentDirectDebitCancelingResponse() {
		return v, false
	}
	return s.PaymentDirectDebitCancelingResponse, true
}

// NewPaymentDirectDebitCancelingResponseCancelPaymentOK returns new CancelPaymentOK from PaymentDirectDebitCancelingResponse.
func NewPaymentDirectDebitCancelingResponseCancelPaymentOK(v PaymentDirectDebitCancelingResponse) CancelPaymentOK {
	var s CancelPaymentOK
	s.SetPaymentDirectDebitCancelingResponse(v)
	return s
}

func (*CancelPaymentOK) cancelPaymentRes() {}

// CancelPaymentReq represents sum type.
type CancelPaymentReq struct {
	Type                               CancelPaymentReqType // switch on this field
	PaymentCardCancelingRequest        PaymentCardCancelingRequest
	PaymentApplePayCancelingRequest    PaymentApplePayCancelingRequest
	PaymentKonbiniCancelingRequest     PaymentKonbiniCancelingRequest
	PaymentPayPayCancelingRequest      PaymentPayPayCancelingRequest
	PaymentDirectDebitCancelingRequest PaymentDirectDebitCancelingRequest
}

// CancelPaymentReqType is oneOf type of CancelPaymentReq.
type CancelPaymentReqType string

// Possible values for CancelPaymentReqType.
const (
	PaymentCardCancelingRequestCancelPaymentReq        CancelPaymentReqType = "Card"
	PaymentApplePayCancelingRequestCancelPaymentReq    CancelPaymentReqType = "ApplePay"
	PaymentKonbiniCancelingRequestCancelPaymentReq     CancelPaymentReqType = "Konbini"
	PaymentPayPayCancelingRequestCancelPaymentReq      CancelPaymentReqType = "PayPay"
	PaymentDirectDebitCancelingRequestCancelPaymentReq CancelPaymentReqType = "DirectDebit"
)

// IsPaymentCardCancelingRequest reports whether CancelPaymentReq is PaymentCardCancelingRequest.
func (s CancelPaymentReq) IsPaymentCardCancelingRequest() bool {
	return s.Type == PaymentCardCancelingRequestCancelPaymentReq
}

// IsPaymentApplePayCancelingRequest reports whether CancelPaymentReq is PaymentApplePayCancelingRequest.
func (s CancelPaymentReq) IsPaymentApplePayCancelingRequest() bool {
	return s.Type == PaymentApplePayCancelingRequestCancelPaymentReq
}

// IsPaymentKonbiniCancelingRequest reports whether CancelPaymentReq is PaymentKonbiniCancelingRequest.
func (s CancelPaymentReq) IsPaymentKonbiniCancelingRequest() bool {
	return s.Type == PaymentKonbiniCancelingRequestCancelPaymentReq
}

// IsPaymentPayPayCancelingRequest reports whether CancelPaymentReq is PaymentPayPayCancelingRequest.
func (s CancelPaymentReq) IsPaymentPayPayCancelingRequest() bool {
	return s.Type == PaymentPayPayCancelingRequestCancelPaymentReq
}

// IsPaymentDirectDebitCancelingRequest reports whether CancelPaymentReq is PaymentDirectDebitCancelingRequest.
func (s CancelPaymentReq) IsPaymentDirectDebitCancelingRequest() bool {
	return s.Type == PaymentDirectDebitCancelingRequestCancelPaymentReq
}

// SetPaymentCardCancelingRequest sets CancelPaymentReq to PaymentCardCancelingRequest.
func (s *CancelPaymentReq) SetPaymentCardCancelingRequest(v PaymentCardCancelingRequest) {
	s.Type = PaymentCardCancelingRequestCancelPaymentReq
	s.PaymentCardCancelingRequest = v
}

// GetPaymentCardCancelingRequest returns PaymentCardCancelingRequest and true boolean if CancelPaymentReq is PaymentCardCancelingRequest.
func (s CancelPaymentReq) GetPaymentCardCancelingRequest() (v PaymentCardCancelingRequest, ok bool) {
	if !s.IsPaymentCardCancelingRequest() {
		return v, false
	}
	return s.PaymentCardCancelingRequest, true
}

// NewPaymentCardCancelingRequestCancelPaymentReq returns new CancelPaymentReq from PaymentCardCancelingRequest.
func NewPaymentCardCancelingRequestCancelPaymentReq(v PaymentCardCancelingRequest) CancelPaymentReq {
	var s CancelPaymentReq
	s.SetPaymentCardCancelingRequest(v)
	return s
}

// SetPaymentApplePayCancelingRequest sets CancelPaymentReq to PaymentApplePayCancelingRequest.
func (s *CancelPaymentReq) SetPaymentApplePayCancelingRequest(v PaymentApplePayCancelingRequest) {
	s.Type = PaymentApplePayCancelingRequestCancelPaymentReq
	s.PaymentApplePayCancelingRequest = v
}

// GetPaymentApplePayCancelingRequest returns PaymentApplePayCancelingRequest and true boolean if CancelPaymentReq is PaymentApplePayCancelingRequest.
func (s CancelPaymentReq) GetPaymentApplePayCancelingRequest() (v PaymentApplePayCancelingRequest, ok bool) {
	if !s.IsPaymentApplePayCancelingRequest() {
		return v, false
	}
	return s.PaymentApplePayCancelingRequest, true
}

// NewPaymentApplePayCancelingRequestCancelPaymentReq returns new CancelPaymentReq from PaymentApplePayCancelingRequest.
func NewPaymentApplePayCancelingRequestCancelPaymentReq(v PaymentApplePayCancelingRequest) CancelPaymentReq {
	var s CancelPaymentReq
	s.SetPaymentApplePayCancelingRequest(v)
	return s
}

// SetPaymentKonbiniCancelingRequest sets CancelPaymentReq to PaymentKonbiniCancelingRequest.
func (s *CancelPaymentReq) SetPaymentKonbiniCancelingRequest(v PaymentKonbiniCancelingRequest) {
	s.Type = PaymentKonbiniCancelingRequestCancelPaymentReq
	s.PaymentKonbiniCancelingRequest = v
}

// GetPaymentKonbiniCancelingRequest returns PaymentKonbiniCancelingRequest and true boolean if CancelPaymentReq is PaymentKonbiniCancelingRequest.
func (s CancelPaymentReq) GetPaymentKonbiniCancelingRequest() (v PaymentKonbiniCancelingRequest, ok bool) {
	if !s.IsPaymentKonbiniCancelingRequest() {
		return v, false
	}
	return s.PaymentKonbiniCancelingRequest, true
}

// NewPaymentKonbiniCancelingRequestCancelPaymentReq returns new CancelPaymentReq from PaymentKonbiniCancelingRequest.
func NewPaymentKonbiniCancelingRequestCancelPaymentReq(v PaymentKonbiniCancelingRequest) CancelPaymentReq {
	var s CancelPaymentReq
	s.SetPaymentKonbiniCancelingRequest(v)
	return s
}

// SetPaymentPayPayCancelingRequest sets CancelPaymentReq to PaymentPayPayCancelingRequest.
func (s *CancelPaymentReq) SetPaymentPayPayCancelingRequest(v PaymentPayPayCancelingRequest) {
	s.Type = PaymentPayPayCancelingRequestCancelPaymentReq
	s.PaymentPayPayCancelingRequest = v
}

// GetPaymentPayPayCancelingRequest returns PaymentPayPayCancelingRequest and true boolean if CancelPaymentReq is PaymentPayPayCancelingRequest.
func (s CancelPaymentReq) GetPaymentPayPayCancelingRequest() (v PaymentPayPayCancelingRequest, ok bool) {
	if !s.IsPaymentPayPayCancelingRequest() {
		return v, false
	}
	return s.PaymentPayPayCancelingRequest, true
}

// NewPaymentPayPayCancelingRequestCancelPaymentReq returns new CancelPaymentReq from PaymentPayPayCancelingRequest.
func NewPaymentPayPayCancelingRequestCancelPaymentReq(v PaymentPayPayCancelingRequest) CancelPaymentReq {
	var s CancelPaymentReq
	s.SetPaymentPayPayCancelingRequest(v)
	return s
}

// SetPaymentDirectDebitCancelingRequest sets CancelPaymentReq to PaymentDirectDebitCancelingRequest.
func (s *CancelPaymentReq) SetPaymentDirectDebitCancelingRequest(v PaymentDirectDebitCancelingRequest) {
	s.Type = PaymentDirectDebitCancelingRequestCancelPaymentReq
	s.PaymentDirectDebitCancelingRequest = v
}

// GetPaymentDirectDebitCancelingRequest returns PaymentDirectDebitCancelingRequest and true boolean if CancelPaymentReq is PaymentDirectDebitCancelingRequest.
func (s CancelPaymentReq) GetPaymentDirectDebitCancelingRequest() (v PaymentDirectDebitCancelingRequest, ok bool) {
	if !s.IsPaymentDirectDebitCancelingRequest() {
		return v, false
	}
	return s.PaymentDirectDebitCancelingRequest, true
}

// NewPaymentDirectDebitCancelingRequestCancelPaymentReq returns new CancelPaymentReq from PaymentDirectDebitCancelingRequest.
func NewPaymentDirectDebitCancelingRequestCancelPaymentReq(v PaymentDirectDebitCancelingRequest) CancelPaymentReq {
	var s CancelPaymentReq
	s.SetPaymentDirectDebitCancelingRequest(v)
	return s
}

type CancelURL string

type Capital float64

type CaptureDescription string

// CapturePaymentOK represents sum type.
type CapturePaymentOK struct {
	Type                             CapturePaymentOKType // switch on this field
	PaymentCardCapturingResponse     PaymentCardCapturingResponse
	PaymentApplePayCapturingResponse PaymentApplePayCapturingResponse
	PaymentPayPayCapturingResponse   PaymentPayPayCapturingResponse
}

// CapturePaymentOKType is oneOf type of CapturePaymentOK.
type CapturePaymentOKType string

// Possible values for CapturePaymentOKType.
const (
	PaymentCardCapturingResponseCapturePaymentOK     CapturePaymentOKType = "PaymentCardCapturingResponse"
	PaymentApplePayCapturingResponseCapturePaymentOK CapturePaymentOKType = "PaymentApplePayCapturingResponse"
	PaymentPayPayCapturingResponseCapturePaymentOK   CapturePaymentOKType = "PaymentPayPayCapturingResponse"
)

// IsPaymentCardCapturingResponse reports whether CapturePaymentOK is PaymentCardCapturingResponse.
func (s CapturePaymentOK) IsPaymentCardCapturingResponse() bool {
	return s.Type == PaymentCardCapturingResponseCapturePaymentOK
}

// IsPaymentApplePayCapturingResponse reports whether CapturePaymentOK is PaymentApplePayCapturingResponse.
func (s CapturePaymentOK) IsPaymentApplePayCapturingResponse() bool {
	return s.Type == PaymentApplePayCapturingResponseCapturePaymentOK
}

// IsPaymentPayPayCapturingResponse reports whether CapturePaymentOK is PaymentPayPayCapturingResponse.
func (s CapturePaymentOK) IsPaymentPayPayCapturingResponse() bool {
	return s.Type == PaymentPayPayCapturingResponseCapturePaymentOK
}

// SetPaymentCardCapturingResponse sets CapturePaymentOK to PaymentCardCapturingResponse.
func (s *CapturePaymentOK) SetPaymentCardCapturingResponse(v PaymentCardCapturingResponse) {
	s.Type = PaymentCardCapturingResponseCapturePaymentOK
	s.PaymentCardCapturingResponse = v
}

// GetPaymentCardCapturingResponse returns PaymentCardCapturingResponse and true boolean if CapturePaymentOK is PaymentCardCapturingResponse.
func (s CapturePaymentOK) GetPaymentCardCapturingResponse() (v PaymentCardCapturingResponse, ok bool) {
	if !s.IsPaymentCardCapturingResponse() {
		return v, false
	}
	return s.PaymentCardCapturingResponse, true
}

// NewPaymentCardCapturingResponseCapturePaymentOK returns new CapturePaymentOK from PaymentCardCapturingResponse.
func NewPaymentCardCapturingResponseCapturePaymentOK(v PaymentCardCapturingResponse) CapturePaymentOK {
	var s CapturePaymentOK
	s.SetPaymentCardCapturingResponse(v)
	return s
}

// SetPaymentApplePayCapturingResponse sets CapturePaymentOK to PaymentApplePayCapturingResponse.
func (s *CapturePaymentOK) SetPaymentApplePayCapturingResponse(v PaymentApplePayCapturingResponse) {
	s.Type = PaymentApplePayCapturingResponseCapturePaymentOK
	s.PaymentApplePayCapturingResponse = v
}

// GetPaymentApplePayCapturingResponse returns PaymentApplePayCapturingResponse and true boolean if CapturePaymentOK is PaymentApplePayCapturingResponse.
func (s CapturePaymentOK) GetPaymentApplePayCapturingResponse() (v PaymentApplePayCapturingResponse, ok bool) {
	if !s.IsPaymentApplePayCapturingResponse() {
		return v, false
	}
	return s.PaymentApplePayCapturingResponse, true
}

// NewPaymentApplePayCapturingResponseCapturePaymentOK returns new CapturePaymentOK from PaymentApplePayCapturingResponse.
func NewPaymentApplePayCapturingResponseCapturePaymentOK(v PaymentApplePayCapturingResponse) CapturePaymentOK {
	var s CapturePaymentOK
	s.SetPaymentApplePayCapturingResponse(v)
	return s
}

// SetPaymentPayPayCapturingResponse sets CapturePaymentOK to PaymentPayPayCapturingResponse.
func (s *CapturePaymentOK) SetPaymentPayPayCapturingResponse(v PaymentPayPayCapturingResponse) {
	s.Type = PaymentPayPayCapturingResponseCapturePaymentOK
	s.PaymentPayPayCapturingResponse = v
}

// GetPaymentPayPayCapturingResponse returns PaymentPayPayCapturingResponse and true boolean if CapturePaymentOK is PaymentPayPayCapturingResponse.
func (s CapturePaymentOK) GetPaymentPayPayCapturingResponse() (v PaymentPayPayCapturingResponse, ok bool) {
	if !s.IsPaymentPayPayCapturingResponse() {
		return v, false
	}
	return s.PaymentPayPayCapturingResponse, true
}

// NewPaymentPayPayCapturingResponseCapturePaymentOK returns new CapturePaymentOK from PaymentPayPayCapturingResponse.
func NewPaymentPayPayCapturingResponseCapturePaymentOK(v PaymentPayPayCapturingResponse) CapturePaymentOK {
	var s CapturePaymentOK
	s.SetPaymentPayPayCapturingResponse(v)
	return s
}

func (*CapturePaymentOK) capturePaymentRes() {}

// CapturePaymentReq represents sum type.
type CapturePaymentReq struct {
	Type                            CapturePaymentReqType // switch on this field
	PaymentCardCapturingRequest     PaymentCardCapturingRequest
	PaymentApplePayCapturingRequest PaymentApplePayCapturingRequest
	PaymentPayPayCapturingRequest   PaymentPayPayCapturingRequest
}

// CapturePaymentReqType is oneOf type of CapturePaymentReq.
type CapturePaymentReqType string

// Possible values for CapturePaymentReqType.
const (
	PaymentCardCapturingRequestCapturePaymentReq     CapturePaymentReqType = "PaymentCardCapturingRequest"
	PaymentApplePayCapturingRequestCapturePaymentReq CapturePaymentReqType = "PaymentApplePayCapturingRequest"
	PaymentPayPayCapturingRequestCapturePaymentReq   CapturePaymentReqType = "PaymentPayPayCapturingRequest"
)

// IsPaymentCardCapturingRequest reports whether CapturePaymentReq is PaymentCardCapturingRequest.
func (s CapturePaymentReq) IsPaymentCardCapturingRequest() bool {
	return s.Type == PaymentCardCapturingRequestCapturePaymentReq
}

// IsPaymentApplePayCapturingRequest reports whether CapturePaymentReq is PaymentApplePayCapturingRequest.
func (s CapturePaymentReq) IsPaymentApplePayCapturingRequest() bool {
	return s.Type == PaymentApplePayCapturingRequestCapturePaymentReq
}

// IsPaymentPayPayCapturingRequest reports whether CapturePaymentReq is PaymentPayPayCapturingRequest.
func (s CapturePaymentReq) IsPaymentPayPayCapturingRequest() bool {
	return s.Type == PaymentPayPayCapturingRequestCapturePaymentReq
}

// SetPaymentCardCapturingRequest sets CapturePaymentReq to PaymentCardCapturingRequest.
func (s *CapturePaymentReq) SetPaymentCardCapturingRequest(v PaymentCardCapturingRequest) {
	s.Type = PaymentCardCapturingRequestCapturePaymentReq
	s.PaymentCardCapturingRequest = v
}

// GetPaymentCardCapturingRequest returns PaymentCardCapturingRequest and true boolean if CapturePaymentReq is PaymentCardCapturingRequest.
func (s CapturePaymentReq) GetPaymentCardCapturingRequest() (v PaymentCardCapturingRequest, ok bool) {
	if !s.IsPaymentCardCapturingRequest() {
		return v, false
	}
	return s.PaymentCardCapturingRequest, true
}

// NewPaymentCardCapturingRequestCapturePaymentReq returns new CapturePaymentReq from PaymentCardCapturingRequest.
func NewPaymentCardCapturingRequestCapturePaymentReq(v PaymentCardCapturingRequest) CapturePaymentReq {
	var s CapturePaymentReq
	s.SetPaymentCardCapturingRequest(v)
	return s
}

// SetPaymentApplePayCapturingRequest sets CapturePaymentReq to PaymentApplePayCapturingRequest.
func (s *CapturePaymentReq) SetPaymentApplePayCapturingRequest(v PaymentApplePayCapturingRequest) {
	s.Type = PaymentApplePayCapturingRequestCapturePaymentReq
	s.PaymentApplePayCapturingRequest = v
}

// GetPaymentApplePayCapturingRequest returns PaymentApplePayCapturingRequest and true boolean if CapturePaymentReq is PaymentApplePayCapturingRequest.
func (s CapturePaymentReq) GetPaymentApplePayCapturingRequest() (v PaymentApplePayCapturingRequest, ok bool) {
	if !s.IsPaymentApplePayCapturingRequest() {
		return v, false
	}
	return s.PaymentApplePayCapturingRequest, true
}

// NewPaymentApplePayCapturingRequestCapturePaymentReq returns new CapturePaymentReq from PaymentApplePayCapturingRequest.
func NewPaymentApplePayCapturingRequestCapturePaymentReq(v PaymentApplePayCapturingRequest) CapturePaymentReq {
	var s CapturePaymentReq
	s.SetPaymentApplePayCapturingRequest(v)
	return s
}

// SetPaymentPayPayCapturingRequest sets CapturePaymentReq to PaymentPayPayCapturingRequest.
func (s *CapturePaymentReq) SetPaymentPayPayCapturingRequest(v PaymentPayPayCapturingRequest) {
	s.Type = PaymentPayPayCapturingRequestCapturePaymentReq
	s.PaymentPayPayCapturingRequest = v
}

// GetPaymentPayPayCapturingRequest returns PaymentPayPayCapturingRequest and true boolean if CapturePaymentReq is PaymentPayPayCapturingRequest.
func (s CapturePaymentReq) GetPaymentPayPayCapturingRequest() (v PaymentPayPayCapturingRequest, ok bool) {
	if !s.IsPaymentPayPayCapturingRequest() {
		return v, false
	}
	return s.PaymentPayPayCapturingRequest, true
}

// NewPaymentPayPayCapturingRequestCapturePaymentReq returns new CapturePaymentReq from PaymentPayPayCapturingRequest.
func NewPaymentPayPayCapturingRequestCapturePaymentReq(v PaymentPayPayCapturingRequest) CapturePaymentReq {
	var s CapturePaymentReq
	s.SetPaymentPayPayCapturingRequest(v)
	return s
}

// Ref: #/components/schemas/Card
type Card struct {
	// カードID.
	ID OptString `json:"id"`
	// 顧客ID\
	// このカードが紐づく顧客のID.
	CustomerID OptString `json:"customer_id"`
	// デフォルトフラグ。\
	// このカードが決済実行やサブスクリプション登録などでカードIDを指定しない場合に自動的に使用するカードかどうかを示すフラグです。\
	// 顧客に対して必ず1つのデフォルトカードが存在します。（カードが1つも登録されていない場合を除く）
	// - `0`: デフォルトカードではない
	// - `1`: デフォルトカード.
	DefaultFlag OptCardDefaultFlag `json:"default_flag"`
	CardNo      OptCardNo          `json:"card_no"`
	Expire      OptNilExpire       `json:"expire"`
	HolderName  OptNilHolderName   `json:"holder_name"`
	Type        OptCardType        `json:"type"`
	Brand       OptCardBrand       `json:"brand"`
	CardNoHash  OptCardNoHash      `json:"card_no_hash"`
	Created     OptCreated         `json:"created"`
	Updated     OptNilUpdated      `json:"updated"`
}

// GetID returns the value of ID.
func (s *Card) GetID() OptString {
	return s.ID
}

// GetCustomerID returns the value of CustomerID.
func (s *Card) GetCustomerID() OptString {
	return s.CustomerID
}

// GetDefaultFlag returns the value of DefaultFlag.
func (s *Card) GetDefaultFlag() OptCardDefaultFlag {
	return s.DefaultFlag
}

// GetCardNo returns the value of CardNo.
func (s *Card) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *Card) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *Card) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetType returns the value of Type.
func (s *Card) GetType() OptCardType {
	return s.Type
}

// GetBrand returns the value of Brand.
func (s *Card) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNoHash returns the value of CardNoHash.
func (s *Card) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetCreated returns the value of Created.
func (s *Card) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *Card) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *Card) SetID(val OptString) {
	s.ID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *Card) SetCustomerID(val OptString) {
	s.CustomerID = val
}

// SetDefaultFlag sets the value of DefaultFlag.
func (s *Card) SetDefaultFlag(val OptCardDefaultFlag) {
	s.DefaultFlag = val
}

// SetCardNo sets the value of CardNo.
func (s *Card) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *Card) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *Card) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetType sets the value of Type.
func (s *Card) SetType(val OptCardType) {
	s.Type = val
}

// SetBrand sets the value of Brand.
func (s *Card) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *Card) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetCreated sets the value of Created.
func (s *Card) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *Card) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*Card) createCustomerCardRes()   {}
func (*Card) retrieveCustomerCardRes() {}
func (*Card) updateCustomerCardRes()   {}

// カードブランドを表します。
// - `VISA`: VISA
// - `MASTER`: Mastercard
// - `JCB`: JCB
// - `AMEX`: American Express
// - `DINERS`: Diners Club
// - `DISCOVER`: Discover
// - `""`（空文字列） : 判定不能.
// Ref: #/components/schemas/CardBrand
type CardBrand string

const (
	CardBrandVISA     CardBrand = "VISA"
	CardBrandMASTER   CardBrand = "MASTER"
	CardBrandJCB      CardBrand = "JCB"
	CardBrandAMEX     CardBrand = "AMEX"
	CardBrandDINERS   CardBrand = "DINERS"
	CardBrandDISCOVER CardBrand = "DISCOVER"
	CardBrandEmpty    CardBrand = ""
)

// AllValues returns all CardBrand values.
func (CardBrand) AllValues() []CardBrand {
	return []CardBrand{
		CardBrandVISA,
		CardBrandMASTER,
		CardBrandJCB,
		CardBrandAMEX,
		CardBrandDINERS,
		CardBrandDISCOVER,
		CardBrandEmpty,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardBrand) MarshalText() ([]byte, error) {
	switch s {
	case CardBrandVISA:
		return []byte(s), nil
	case CardBrandMASTER:
		return []byte(s), nil
	case CardBrandJCB:
		return []byte(s), nil
	case CardBrandAMEX:
		return []byte(s), nil
	case CardBrandDINERS:
		return []byte(s), nil
	case CardBrandDISCOVER:
		return []byte(s), nil
	case CardBrandEmpty:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardBrand) UnmarshalText(data []byte) error {
	switch CardBrand(data) {
	case CardBrandVISA:
		*s = CardBrandVISA
		return nil
	case CardBrandMASTER:
		*s = CardBrandMASTER
		return nil
	case CardBrandJCB:
		*s = CardBrandJCB
		return nil
	case CardBrandAMEX:
		*s = CardBrandAMEX
		return nil
	case CardBrandDINERS:
		*s = CardBrandDINERS
		return nil
	case CardBrandDISCOVER:
		*s = CardBrandDISCOVER
		return nil
	case CardBrandEmpty:
		*s = CardBrandEmpty
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// デフォルトフラグ。\
// このカードが決済実行やサブスクリプション登録などでカードIDを指定しない場合に自動的に使用するカードかどうかを示すフラグです。\
// 顧客に対して必ず1つのデフォルトカードが存在します。（カードが1つも登録されていない場合を除く）
// - `0`: デフォルトカードではない
// - `1`: デフォルトカード.
type CardDefaultFlag string

const (
	CardDefaultFlag0 CardDefaultFlag = "0"
	CardDefaultFlag1 CardDefaultFlag = "1"
)

// AllValues returns all CardDefaultFlag values.
func (CardDefaultFlag) AllValues() []CardDefaultFlag {
	return []CardDefaultFlag{
		CardDefaultFlag0,
		CardDefaultFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardDefaultFlag) MarshalText() ([]byte, error) {
	switch s {
	case CardDefaultFlag0:
		return []byte(s), nil
	case CardDefaultFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardDefaultFlag) UnmarshalText(data []byte) error {
	switch CardDefaultFlag(data) {
	case CardDefaultFlag0:
		*s = CardDefaultFlag0
		return nil
	case CardDefaultFlag1:
		*s = CardDefaultFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CardDestination
type CardDestination struct {
	// カードマスタID.
	ContractCardInfoMasterID OptNilInt              `json:"contract_card_info_master_id"`
	ExaminationMasterID      OptExaminationMasterId `json:"examination_master_id"`
	// 仕向け先.
	Destination OptNilString `json:"destination"`
	// 仕向け先種別.
	DestinationType OptNilFloat64 `json:"destination_type"`
}

// GetContractCardInfoMasterID returns the value of ContractCardInfoMasterID.
func (s *CardDestination) GetContractCardInfoMasterID() OptNilInt {
	return s.ContractCardInfoMasterID
}

// GetExaminationMasterID returns the value of ExaminationMasterID.
func (s *CardDestination) GetExaminationMasterID() OptExaminationMasterId {
	return s.ExaminationMasterID
}

// GetDestination returns the value of Destination.
func (s *CardDestination) GetDestination() OptNilString {
	return s.Destination
}

// GetDestinationType returns the value of DestinationType.
func (s *CardDestination) GetDestinationType() OptNilFloat64 {
	return s.DestinationType
}

// SetContractCardInfoMasterID sets the value of ContractCardInfoMasterID.
func (s *CardDestination) SetContractCardInfoMasterID(val OptNilInt) {
	s.ContractCardInfoMasterID = val
}

// SetExaminationMasterID sets the value of ExaminationMasterID.
func (s *CardDestination) SetExaminationMasterID(val OptExaminationMasterId) {
	s.ExaminationMasterID = val
}

// SetDestination sets the value of Destination.
func (s *CardDestination) SetDestination(val OptNilString) {
	s.Destination = val
}

// SetDestinationType sets the value of DestinationType.
func (s *CardDestination) SetDestinationType(val OptNilFloat64) {
	s.DestinationType = val
}

type CardIdSchema string

// Ref: #/components/schemas/Card.list
type CardList struct {
	List []Card `json:"list"`
}

// GetList returns the value of List.
func (s *CardList) GetList() []Card {
	return s.List
}

// SetList sets the value of List.
func (s *CardList) SetList(val []Card) {
	s.List = val
}

func (*CardList) retrieveCustomerCardListRes() {}

type CardNo string

type CardNoHash string

// 支払方法
// - `1`: 一括払い
// - `2`: 分割払い
// - `5`: リボ払い.
// Ref: #/components/schemas/CardPayMethod
type CardPayMethod string

const (
	CardPayMethod1 CardPayMethod = "1"
	CardPayMethod2 CardPayMethod = "2"
	CardPayMethod5 CardPayMethod = "5"
)

// AllValues returns all CardPayMethod values.
func (CardPayMethod) AllValues() []CardPayMethod {
	return []CardPayMethod{
		CardPayMethod1,
		CardPayMethod2,
		CardPayMethod5,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardPayMethod) MarshalText() ([]byte, error) {
	switch s {
	case CardPayMethod1:
		return []byte(s), nil
	case CardPayMethod2:
		return []byte(s), nil
	case CardPayMethod5:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardPayMethod) UnmarshalText(data []byte) error {
	switch CardPayMethod(data) {
	case CardPayMethod1:
		*s = CardPayMethod1
		return nil
	case CardPayMethod2:
		*s = CardPayMethod2
		return nil
	case CardPayMethod5:
		*s = CardPayMethod5
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// （分割払いの場合）支払回数\
// \
// 指定可能な値： `3`, `5`, `6`, `10`, `12`, `15`, `18`, `20`, `24`.
// Ref: #/components/schemas/CardPayTimes
type CardPayTimes string

const (
	CardPayTimes3  CardPayTimes = "3"
	CardPayTimes5  CardPayTimes = "5"
	CardPayTimes6  CardPayTimes = "6"
	CardPayTimes10 CardPayTimes = "10"
	CardPayTimes12 CardPayTimes = "12"
	CardPayTimes15 CardPayTimes = "15"
	CardPayTimes18 CardPayTimes = "18"
	CardPayTimes20 CardPayTimes = "20"
	CardPayTimes24 CardPayTimes = "24"
)

// AllValues returns all CardPayTimes values.
func (CardPayTimes) AllValues() []CardPayTimes {
	return []CardPayTimes{
		CardPayTimes3,
		CardPayTimes5,
		CardPayTimes6,
		CardPayTimes10,
		CardPayTimes12,
		CardPayTimes15,
		CardPayTimes18,
		CardPayTimes20,
		CardPayTimes24,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardPayTimes) MarshalText() ([]byte, error) {
	switch s {
	case CardPayTimes3:
		return []byte(s), nil
	case CardPayTimes5:
		return []byte(s), nil
	case CardPayTimes6:
		return []byte(s), nil
	case CardPayTimes10:
		return []byte(s), nil
	case CardPayTimes12:
		return []byte(s), nil
	case CardPayTimes15:
		return []byte(s), nil
	case CardPayTimes18:
		return []byte(s), nil
	case CardPayTimes20:
		return []byte(s), nil
	case CardPayTimes24:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardPayTimes) UnmarshalText(data []byte) error {
	switch CardPayTimes(data) {
	case CardPayTimes3:
		*s = CardPayTimes3
		return nil
	case CardPayTimes5:
		*s = CardPayTimes5
		return nil
	case CardPayTimes6:
		*s = CardPayTimes6
		return nil
	case CardPayTimes10:
		*s = CardPayTimes10
		return nil
	case CardPayTimes12:
		*s = CardPayTimes12
		return nil
	case CardPayTimes15:
		*s = CardPayTimes15
		return nil
	case CardPayTimes18:
		*s = CardPayTimes18
		return nil
	case CardPayTimes20:
		*s = CardPayTimes20
		return nil
	case CardPayTimes24:
		*s = CardPayTimes24
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 取引種別\
// この決済に対し決済実行を行った際、仮売上にするか即座に売上確定するか、カードの有効性チェックのみを行うかを指定します。
// - `CHECK`：有効性チェックのみ行う
// - `AUTH`：仮売上にする
// - `CAPTURE`：即時売上.
// Ref: #/components/schemas/CardPaymentJobCode
type CardPaymentJobCode string

const (
	CardPaymentJobCodeCHECK   CardPaymentJobCode = "CHECK"
	CardPaymentJobCodeAUTH    CardPaymentJobCode = "AUTH"
	CardPaymentJobCodeCAPTURE CardPaymentJobCode = "CAPTURE"
)

// AllValues returns all CardPaymentJobCode values.
func (CardPaymentJobCode) AllValues() []CardPaymentJobCode {
	return []CardPaymentJobCode{
		CardPaymentJobCodeCHECK,
		CardPaymentJobCodeAUTH,
		CardPaymentJobCodeCAPTURE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardPaymentJobCode) MarshalText() ([]byte, error) {
	switch s {
	case CardPaymentJobCodeCHECK:
		return []byte(s), nil
	case CardPaymentJobCodeAUTH:
		return []byte(s), nil
	case CardPaymentJobCodeCAPTURE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardPaymentJobCode) UnmarshalText(data []byte) error {
	switch CardPaymentJobCode(data) {
	case CardPaymentJobCodeCHECK:
		*s = CardPaymentJobCodeCHECK
		return nil
	case CardPaymentJobCodeAUTH:
		*s = CardPaymentJobCodeAUTH
		return nil
	case CardPaymentJobCodeCAPTURE:
		*s = CardPaymentJobCodeCAPTURE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 取引種別\
// この決済URL上でカード決済を行った際、仮売上にするか即座に売上確定するか指定します。
// - `AUTH`：仮売上にする（デフォルト）
// - `CAPTURE`：即時売上.
// Ref: #/components/schemas/CardPaymentSessionJobCode
type CardPaymentSessionJobCode string

const (
	CardPaymentSessionJobCodeAUTH    CardPaymentSessionJobCode = "AUTH"
	CardPaymentSessionJobCodeCAPTURE CardPaymentSessionJobCode = "CAPTURE"
)

// AllValues returns all CardPaymentSessionJobCode values.
func (CardPaymentSessionJobCode) AllValues() []CardPaymentSessionJobCode {
	return []CardPaymentSessionJobCode{
		CardPaymentSessionJobCodeAUTH,
		CardPaymentSessionJobCodeCAPTURE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardPaymentSessionJobCode) MarshalText() ([]byte, error) {
	switch s {
	case CardPaymentSessionJobCodeAUTH:
		return []byte(s), nil
	case CardPaymentSessionJobCodeCAPTURE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardPaymentSessionJobCode) UnmarshalText(data []byte) error {
	switch CardPaymentSessionJobCode(data) {
	case CardPaymentSessionJobCodeAUTH:
		*s = CardPaymentSessionJobCodeAUTH
		return nil
	case CardPaymentSessionJobCodeCAPTURE:
		*s = CardPaymentSessionJobCodeCAPTURE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CardPaymentSetting
type CardPaymentSetting struct {
	// （VISA／Mastercard）3Dセキュア認証が有効かどうか
	// - `true`: 3Dセキュア認証が有効
	// - `false`: 3Dセキュア認証が無効.
	VMTdsAvailable OptNilBool `json:"vm_tds_available"`
	// （VISA／Mastercard）3Dセキュア認証の利用が必須かどうか
	// - `true`: 3Dセキュア認証の使用が必須
	// - `false`: 3Dセキュア認証の使用が任意.
	VMTdsRequired OptNilBool `json:"vm_tds_required"`
	// （JCB／AMEX）3Dセキュア認証が有効かどうか
	// - `true`: 3Dセキュア認証が有効
	// - `false`: 3Dセキュア認証が無効.
	JaTdsAvailable OptNilBool `json:"ja_tds_available"`
	// （JCB／AMEX）3Dセキュア認証の利用が必須かどうか
	// - `true`: 3Dセキュア認証の使用が必須
	// - `false`: 3Dセキュア認証の使用が任意.
	JaTdsRequired OptNilBool `json:"ja_tds_required"`
	// 分割払い／リボ払いが利用可能かどうか
	// - `true`: 利用可能
	// - `false`: 利用不可.
	InstallPaymentAvailable OptNilBool `json:"install_payment_available"`
}

// GetVMTdsAvailable returns the value of VMTdsAvailable.
func (s *CardPaymentSetting) GetVMTdsAvailable() OptNilBool {
	return s.VMTdsAvailable
}

// GetVMTdsRequired returns the value of VMTdsRequired.
func (s *CardPaymentSetting) GetVMTdsRequired() OptNilBool {
	return s.VMTdsRequired
}

// GetJaTdsAvailable returns the value of JaTdsAvailable.
func (s *CardPaymentSetting) GetJaTdsAvailable() OptNilBool {
	return s.JaTdsAvailable
}

// GetJaTdsRequired returns the value of JaTdsRequired.
func (s *CardPaymentSetting) GetJaTdsRequired() OptNilBool {
	return s.JaTdsRequired
}

// GetInstallPaymentAvailable returns the value of InstallPaymentAvailable.
func (s *CardPaymentSetting) GetInstallPaymentAvailable() OptNilBool {
	return s.InstallPaymentAvailable
}

// SetVMTdsAvailable sets the value of VMTdsAvailable.
func (s *CardPaymentSetting) SetVMTdsAvailable(val OptNilBool) {
	s.VMTdsAvailable = val
}

// SetVMTdsRequired sets the value of VMTdsRequired.
func (s *CardPaymentSetting) SetVMTdsRequired(val OptNilBool) {
	s.VMTdsRequired = val
}

// SetJaTdsAvailable sets the value of JaTdsAvailable.
func (s *CardPaymentSetting) SetJaTdsAvailable(val OptNilBool) {
	s.JaTdsAvailable = val
}

// SetJaTdsRequired sets the value of JaTdsRequired.
func (s *CardPaymentSetting) SetJaTdsRequired(val OptNilBool) {
	s.JaTdsRequired = val
}

// SetInstallPaymentAvailable sets the value of InstallPaymentAvailable.
func (s *CardPaymentSetting) SetInstallPaymentAvailable(val OptNilBool) {
	s.InstallPaymentAvailable = val
}

// Ref: #/components/schemas/CardRegistrationSession
type CardRegistrationSession struct {
	// リダイレクト型カード登録URL ID.
	ID OptString `json:"id"`
	// リダイレクト型カード登録URL\
	// カード登録を行うユーザーがこのURLにアクセスし、カード情報を登録することで登録手続きが完了します。.
	LinkURL OptString `json:"link_url"`
	// 成功時リダイレクトURL\
	// `link_url`上でカード登録に成功すると、fincodeはこのURLにPOSTメソッドでリダイレクトします。.
	SuccessURL OptNilString `json:"success_url"`
	// キャンセル時リダイレクトURL\
	// `link_url`上でカード登録がキャンセルされると、fincodeはこのURLにPOSTメソッドでリダイレクトします。.
	CancelURL OptNilString                     `json:"cancel_url"`
	Status    OptCardRegistrationSessionStatus `json:"status"`
	// リダイレクト型カード登録URL 有効期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	Expire OptString `json:"expire"`
	// ショップ／サービス名\
	// カード登録URL上で表示されるショップおよびサービスの名称です。\
	// \
	// デフォルトでは本番環境申請時に登録した「明細書表記」の値が設定されます。.
	ShopServiceName OptNilString `json:"shop_service_name"`
	// カード登録メール 送信フラグ\
	// リダイレクト型カード登録URLをfincodeからのメール送信機能で送信したかどうかを示します。
	// - `0`：送信しなかった（デフォルト）
	// - `1`：送信した.
	GuideMailSendFlag OptCardRegistrationSessionGuideMailSendFlag `json:"guide_mail_send_flag"`
	// カード登録メール 送信先メールアドレス\
	// リダイレクト型カード登録URLをfincodeからのメール送信機能で送信する場合の送信先メールアドレスです。.
	ReceiverMail OptNilString `json:"receiver_mail"`
	// カード登録メール カード登録をするユーザーの名前\
	// リダイレクト型決済URLをfincodeからのメール送信機能で送信する場合のメール中で用いられるユーザーの名前です。\
	// \
	// fincodeが提供するデフォルトのメールテンプレートでは敬称がテンプレート側に含まれています。.
	MailCustomerName OptNilString `json:"mail_customer_name"`
	// 完了メール 送信フラグ\
	// 決済が完了した際にカード登録をしたユーザーに完了メールを送信するかどうかを示します。
	// - `0`：送信しない（デフォルト）
	// - `1`：送信する.
	CompletionMailSendFlag OptCardRegistrationSessionCompletionMailSendFlag `json:"completion_mail_send_flag"`
	// メールテンプレートID\
	// メールテンプレートIDが設定されている場合、リダイレクト型カード登録URLの送信先メールアドレスに送信されるメールのテンプレートが変更されます。\
	// \
	// fincodeが提供するデフォルトのメールテンプレートを使用する場合は`null`を設定します。.
	ShopMailTemplateID OptNilString `json:"shop_mail_template_id"`
	CustomerID         OptID        `json:"customer_id"`
	// 顧客名.
	CustomerName OptNilString    `json:"customer_name"`
	TdsType      OptNilTdsType   `json:"tds_type"`
	TdTenantName OptTdTenantName `json:"td_tenant_name"`
	Tds2Type     OptNilTds2Type  `json:"tds2_type"`
	Created      OptCreated      `json:"created"`
	Updated      OptNilUpdated   `json:"updated"`
}

// GetID returns the value of ID.
func (s *CardRegistrationSession) GetID() OptString {
	return s.ID
}

// GetLinkURL returns the value of LinkURL.
func (s *CardRegistrationSession) GetLinkURL() OptString {
	return s.LinkURL
}

// GetSuccessURL returns the value of SuccessURL.
func (s *CardRegistrationSession) GetSuccessURL() OptNilString {
	return s.SuccessURL
}

// GetCancelURL returns the value of CancelURL.
func (s *CardRegistrationSession) GetCancelURL() OptNilString {
	return s.CancelURL
}

// GetStatus returns the value of Status.
func (s *CardRegistrationSession) GetStatus() OptCardRegistrationSessionStatus {
	return s.Status
}

// GetExpire returns the value of Expire.
func (s *CardRegistrationSession) GetExpire() OptString {
	return s.Expire
}

// GetShopServiceName returns the value of ShopServiceName.
func (s *CardRegistrationSession) GetShopServiceName() OptNilString {
	return s.ShopServiceName
}

// GetGuideMailSendFlag returns the value of GuideMailSendFlag.
func (s *CardRegistrationSession) GetGuideMailSendFlag() OptCardRegistrationSessionGuideMailSendFlag {
	return s.GuideMailSendFlag
}

// GetReceiverMail returns the value of ReceiverMail.
func (s *CardRegistrationSession) GetReceiverMail() OptNilString {
	return s.ReceiverMail
}

// GetMailCustomerName returns the value of MailCustomerName.
func (s *CardRegistrationSession) GetMailCustomerName() OptNilString {
	return s.MailCustomerName
}

// GetCompletionMailSendFlag returns the value of CompletionMailSendFlag.
func (s *CardRegistrationSession) GetCompletionMailSendFlag() OptCardRegistrationSessionCompletionMailSendFlag {
	return s.CompletionMailSendFlag
}

// GetShopMailTemplateID returns the value of ShopMailTemplateID.
func (s *CardRegistrationSession) GetShopMailTemplateID() OptNilString {
	return s.ShopMailTemplateID
}

// GetCustomerID returns the value of CustomerID.
func (s *CardRegistrationSession) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerName returns the value of CustomerName.
func (s *CardRegistrationSession) GetCustomerName() OptNilString {
	return s.CustomerName
}

// GetTdsType returns the value of TdsType.
func (s *CardRegistrationSession) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTdTenantName returns the value of TdTenantName.
func (s *CardRegistrationSession) GetTdTenantName() OptTdTenantName {
	return s.TdTenantName
}

// GetTds2Type returns the value of Tds2Type.
func (s *CardRegistrationSession) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetCreated returns the value of Created.
func (s *CardRegistrationSession) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *CardRegistrationSession) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *CardRegistrationSession) SetID(val OptString) {
	s.ID = val
}

// SetLinkURL sets the value of LinkURL.
func (s *CardRegistrationSession) SetLinkURL(val OptString) {
	s.LinkURL = val
}

// SetSuccessURL sets the value of SuccessURL.
func (s *CardRegistrationSession) SetSuccessURL(val OptNilString) {
	s.SuccessURL = val
}

// SetCancelURL sets the value of CancelURL.
func (s *CardRegistrationSession) SetCancelURL(val OptNilString) {
	s.CancelURL = val
}

// SetStatus sets the value of Status.
func (s *CardRegistrationSession) SetStatus(val OptCardRegistrationSessionStatus) {
	s.Status = val
}

// SetExpire sets the value of Expire.
func (s *CardRegistrationSession) SetExpire(val OptString) {
	s.Expire = val
}

// SetShopServiceName sets the value of ShopServiceName.
func (s *CardRegistrationSession) SetShopServiceName(val OptNilString) {
	s.ShopServiceName = val
}

// SetGuideMailSendFlag sets the value of GuideMailSendFlag.
func (s *CardRegistrationSession) SetGuideMailSendFlag(val OptCardRegistrationSessionGuideMailSendFlag) {
	s.GuideMailSendFlag = val
}

// SetReceiverMail sets the value of ReceiverMail.
func (s *CardRegistrationSession) SetReceiverMail(val OptNilString) {
	s.ReceiverMail = val
}

// SetMailCustomerName sets the value of MailCustomerName.
func (s *CardRegistrationSession) SetMailCustomerName(val OptNilString) {
	s.MailCustomerName = val
}

// SetCompletionMailSendFlag sets the value of CompletionMailSendFlag.
func (s *CardRegistrationSession) SetCompletionMailSendFlag(val OptCardRegistrationSessionCompletionMailSendFlag) {
	s.CompletionMailSendFlag = val
}

// SetShopMailTemplateID sets the value of ShopMailTemplateID.
func (s *CardRegistrationSession) SetShopMailTemplateID(val OptNilString) {
	s.ShopMailTemplateID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *CardRegistrationSession) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerName sets the value of CustomerName.
func (s *CardRegistrationSession) SetCustomerName(val OptNilString) {
	s.CustomerName = val
}

// SetTdsType sets the value of TdsType.
func (s *CardRegistrationSession) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTdTenantName sets the value of TdTenantName.
func (s *CardRegistrationSession) SetTdTenantName(val OptTdTenantName) {
	s.TdTenantName = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *CardRegistrationSession) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetCreated sets the value of Created.
func (s *CardRegistrationSession) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *CardRegistrationSession) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*CardRegistrationSession) createCardRegistrationSessionRes() {}

// 完了メール 送信フラグ\
// 決済が完了した際にカード登録をしたユーザーに完了メールを送信するかどうかを示します。
// - `0`：送信しない（デフォルト）
// - `1`：送信する.
type CardRegistrationSessionCompletionMailSendFlag string

const (
	CardRegistrationSessionCompletionMailSendFlag0 CardRegistrationSessionCompletionMailSendFlag = "0"
	CardRegistrationSessionCompletionMailSendFlag1 CardRegistrationSessionCompletionMailSendFlag = "1"
)

// AllValues returns all CardRegistrationSessionCompletionMailSendFlag values.
func (CardRegistrationSessionCompletionMailSendFlag) AllValues() []CardRegistrationSessionCompletionMailSendFlag {
	return []CardRegistrationSessionCompletionMailSendFlag{
		CardRegistrationSessionCompletionMailSendFlag0,
		CardRegistrationSessionCompletionMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardRegistrationSessionCompletionMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case CardRegistrationSessionCompletionMailSendFlag0:
		return []byte(s), nil
	case CardRegistrationSessionCompletionMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardRegistrationSessionCompletionMailSendFlag) UnmarshalText(data []byte) error {
	switch CardRegistrationSessionCompletionMailSendFlag(data) {
	case CardRegistrationSessionCompletionMailSendFlag0:
		*s = CardRegistrationSessionCompletionMailSendFlag0
		return nil
	case CardRegistrationSessionCompletionMailSendFlag1:
		*s = CardRegistrationSessionCompletionMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CardRegistrationSession.Creating.Request
type CardRegistrationSessionCreatingRequest struct {
	SuccessURL                OptNilPropertiesSuccessURL                 `json:"success_url"`
	CancelURL                 OptNilPropertiesCancelURL                  `json:"cancel_url"`
	Expire                    OptCardRegistrationSessionPropertiesExpire `json:"expire"`
	ShopServiceName           OptNilPropertiesShopServiceName            `json:"shop_service_name"`
	ReceiverMail              OptNilPropertiesReceiverMail               `json:"receiver_mail"`
	MailCustomerName          OptNilPropertiesMailCustomerName           `json:"mail_customer_name"`
	GuideMailSendFlag         OptPropertiesGuideMailSendFlag             `json:"guide_mail_send_flag"`
	CompletionMailSendFlag    OptCompletionMailSendFlag                  `json:"completion_mail_send_flag"`
	ShopMailTemplateID        OptNilPropertiesShopMailTemplateID         `json:"shop_mail_template_id"`
	CustomerID                OptID                                      `json:"customer_id"`
	CustomerName              OptNilCustomerName                         `json:"customer_name"`
	TdTenantName              OptTdTenantName                            `json:"td_tenant_name"`
	TdsType                   OptNilTdsType                              `json:"tds_type"`
	Tds2Type                  OptNilTds2Type                             `json:"tds2_type"`
	Tds2ChAccChange           OptNilTds2ChAccChange                      `json:"tds2_ch_acc_change"`
	Tds2ChAccDate             OptNilTds2ChAccDate                        `json:"tds2_ch_acc_date"`
	Tds2ChAccPwChange         OptNilTds2ChAccPwChange                    `json:"tds2_ch_acc_pw_change"`
	Tds2NbPurchaseAccount     OptNilTds2NbPurchaseAccount                `json:"tds2_nb_purchase_account"`
	Tds2PaymentAccAge         OptNilTds2PaymentAccAge                    `json:"tds2_payment_acc_age"`
	Tds2ProvisionAttemptsDay  OptNilTds2ProvisionAttemptsDay             `json:"tds2_provision_attempts_day"`
	Tds2ShipAddressUsage      OptNilTds2ShipAddressUsage                 `json:"tds2_ship_address_usage"`
	Tds2ShipNameInd           OptNilTds2ShipNameInd                      `json:"tds2_ship_name_ind"`
	Tds2SuspiciousAccActivity OptNilTds2SuspiciousAccActivity            `json:"tds2_suspicious_acc_activity"`
	Tds2TxnActivityDay        OptNilTds2TxnActivityDay                   `json:"tds2_txn_activity_day"`
	Tds2TxnActivityYear       OptNilTds2TxnActivityYear                  `json:"tds2_txn_activity_year"`
	Tds2ThreeDsReqAuthData    OptNilTds2ThreeDsReqAuthData               `json:"tds2_three_ds_req_auth_data"`
	Tds2ThreeDsReqAuthMethod  OptNilTds2ThreeDsReqAuthMethod             `json:"tds2_three_ds_req_auth_method"`
	Tds2AddrMatch             OptNilTds2AddrMatch                        `json:"tds2_addr_match"`
	Tds2BillAddrCountry       OptNilTds2BillAddrCountry                  `json:"tds2_bill_addr_country"`
	Tds2BillAddrState         OptNilTds2BillAddrState                    `json:"tds2_bill_addr_state"`
	Tds2BillAddrCity          OptNilTds2BillAddrCity                     `json:"tds2_bill_addr_city"`
	Tds2BillAddrLine1         OptNilTds2BillAddrLine1                    `json:"tds2_bill_addr_line_1"`
	Tds2BillAddrLine2         OptNilTds2BillAddrLine2                    `json:"tds2_bill_addr_line_2"`
	Tds2BillAddrLine3         OptTds2BillAddrLine3                       `json:"tds2_bill_addr_line_3"`
	Tds2BillAddrPostCode      OptNilTds2BillAddrPostCode                 `json:"tds2_bill_addr_post_code"`
	Tds2ShipAddrCountry       OptNilTds2ShipAddrCountry                  `json:"tds2_ship_addr_country"`
	Tds2ShipAddrState         OptNilTds2ShipAddrState                    `json:"tds2_ship_addr_state"`
	Tds2ShipAddrCity          OptNilTds2ShipAddrCity                     `json:"tds2_ship_addr_city"`
	Tds2ShipAddrLine1         OptNilTds2ShipAddrLine1                    `json:"tds2_ship_addr_line_1"`
	Tds2ShipAddrLine2         OptNilTds2ShipAddrLine2                    `json:"tds2_ship_addr_line_2"`
	Tds2ShipAddrLine3         OptNilTds2ShipAddrLine3                    `json:"tds2_ship_addr_line_3"`
	Tds2ShipAddrPostCode      OptNilTds2ShipAddrPostCode                 `json:"tds2_ship_addr_post_code"`
	Tds2ShipInd               OptNilTds2ShipInd                          `json:"tds2_ship_ind"`
	Tds2DeliveryEmailAddress  OptNilTds2DeliveryEmailAddress             `json:"tds2_delivery_email_address"`
	Tds2HomePhoneCc           OptNilTds2HomePhoneCc                      `json:"tds2_home_phone_cc"`
	Tds2HomePhoneNo           OptNilTds2HomePhoneNo                      `json:"tds2_home_phone_no"`
	Tds2MobilePhoneCc         OptNilTds2MobilePhoneCc                    `json:"tds2_mobile_phone_cc"`
	Tds2MobilePhoneNo         OptNilTds2MobilePhoneNo                    `json:"tds2_mobile_phone_no"`
	Tds2WorkPhoneCc           OptNilTds2WorkPhoneCc                      `json:"tds2_work_phone_cc"`
	Tds2WorkPhoneNo           OptNilTds2WorkPhoneNo                      `json:"tds2_work_phone_no"`
	Tds2DeliveryTimeframe     OptNilTds2DeliveryTimeframe                `json:"tds2_delivery_timeframe"`
	Tds2PreOrderDate          OptNilTds2PreOrderDate                     `json:"tds2_pre_order_date"`
	Tds2PreOrderPurchaseInd   OptNilTds2PreOrderPurchaseInd              `json:"tds2_pre_order_purchase_ind"`
	Tds2ReorderItemsInd       OptNilTds2ReorderItemsInd                  `json:"tds2_reorder_items_ind"`
	Tds2RecurringExpiry       OptNilTds2RecurringExpiry                  `json:"tds2_recurring_expiry"`
	Tds2RecurringFrequency    OptNilTds2RecurringFrequency               `json:"tds2_recurring_frequency"`
	Tds2GiftCardAmount        OptNilTds2GiftCardAmount                   `json:"tds2_gift_card_amount"`
	Tds2GiftCardCount         OptNilTds2GiftCardCount                    `json:"tds2_gift_card_count"`
	Tds2GiftCardCurr          OptNilTds2GiftCardCurr                     `json:"tds2_gift_card_curr"`
}

// GetSuccessURL returns the value of SuccessURL.
func (s *CardRegistrationSessionCreatingRequest) GetSuccessURL() OptNilPropertiesSuccessURL {
	return s.SuccessURL
}

// GetCancelURL returns the value of CancelURL.
func (s *CardRegistrationSessionCreatingRequest) GetCancelURL() OptNilPropertiesCancelURL {
	return s.CancelURL
}

// GetExpire returns the value of Expire.
func (s *CardRegistrationSessionCreatingRequest) GetExpire() OptCardRegistrationSessionPropertiesExpire {
	return s.Expire
}

// GetShopServiceName returns the value of ShopServiceName.
func (s *CardRegistrationSessionCreatingRequest) GetShopServiceName() OptNilPropertiesShopServiceName {
	return s.ShopServiceName
}

// GetReceiverMail returns the value of ReceiverMail.
func (s *CardRegistrationSessionCreatingRequest) GetReceiverMail() OptNilPropertiesReceiverMail {
	return s.ReceiverMail
}

// GetMailCustomerName returns the value of MailCustomerName.
func (s *CardRegistrationSessionCreatingRequest) GetMailCustomerName() OptNilPropertiesMailCustomerName {
	return s.MailCustomerName
}

// GetGuideMailSendFlag returns the value of GuideMailSendFlag.
func (s *CardRegistrationSessionCreatingRequest) GetGuideMailSendFlag() OptPropertiesGuideMailSendFlag {
	return s.GuideMailSendFlag
}

// GetCompletionMailSendFlag returns the value of CompletionMailSendFlag.
func (s *CardRegistrationSessionCreatingRequest) GetCompletionMailSendFlag() OptCompletionMailSendFlag {
	return s.CompletionMailSendFlag
}

// GetShopMailTemplateID returns the value of ShopMailTemplateID.
func (s *CardRegistrationSessionCreatingRequest) GetShopMailTemplateID() OptNilPropertiesShopMailTemplateID {
	return s.ShopMailTemplateID
}

// GetCustomerID returns the value of CustomerID.
func (s *CardRegistrationSessionCreatingRequest) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerName returns the value of CustomerName.
func (s *CardRegistrationSessionCreatingRequest) GetCustomerName() OptNilCustomerName {
	return s.CustomerName
}

// GetTdTenantName returns the value of TdTenantName.
func (s *CardRegistrationSessionCreatingRequest) GetTdTenantName() OptTdTenantName {
	return s.TdTenantName
}

// GetTdsType returns the value of TdsType.
func (s *CardRegistrationSessionCreatingRequest) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *CardRegistrationSessionCreatingRequest) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2ChAccChange returns the value of Tds2ChAccChange.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ChAccChange() OptNilTds2ChAccChange {
	return s.Tds2ChAccChange
}

// GetTds2ChAccDate returns the value of Tds2ChAccDate.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ChAccDate() OptNilTds2ChAccDate {
	return s.Tds2ChAccDate
}

// GetTds2ChAccPwChange returns the value of Tds2ChAccPwChange.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ChAccPwChange() OptNilTds2ChAccPwChange {
	return s.Tds2ChAccPwChange
}

// GetTds2NbPurchaseAccount returns the value of Tds2NbPurchaseAccount.
func (s *CardRegistrationSessionCreatingRequest) GetTds2NbPurchaseAccount() OptNilTds2NbPurchaseAccount {
	return s.Tds2NbPurchaseAccount
}

// GetTds2PaymentAccAge returns the value of Tds2PaymentAccAge.
func (s *CardRegistrationSessionCreatingRequest) GetTds2PaymentAccAge() OptNilTds2PaymentAccAge {
	return s.Tds2PaymentAccAge
}

// GetTds2ProvisionAttemptsDay returns the value of Tds2ProvisionAttemptsDay.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ProvisionAttemptsDay() OptNilTds2ProvisionAttemptsDay {
	return s.Tds2ProvisionAttemptsDay
}

// GetTds2ShipAddressUsage returns the value of Tds2ShipAddressUsage.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipAddressUsage() OptNilTds2ShipAddressUsage {
	return s.Tds2ShipAddressUsage
}

// GetTds2ShipNameInd returns the value of Tds2ShipNameInd.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipNameInd() OptNilTds2ShipNameInd {
	return s.Tds2ShipNameInd
}

// GetTds2SuspiciousAccActivity returns the value of Tds2SuspiciousAccActivity.
func (s *CardRegistrationSessionCreatingRequest) GetTds2SuspiciousAccActivity() OptNilTds2SuspiciousAccActivity {
	return s.Tds2SuspiciousAccActivity
}

// GetTds2TxnActivityDay returns the value of Tds2TxnActivityDay.
func (s *CardRegistrationSessionCreatingRequest) GetTds2TxnActivityDay() OptNilTds2TxnActivityDay {
	return s.Tds2TxnActivityDay
}

// GetTds2TxnActivityYear returns the value of Tds2TxnActivityYear.
func (s *CardRegistrationSessionCreatingRequest) GetTds2TxnActivityYear() OptNilTds2TxnActivityYear {
	return s.Tds2TxnActivityYear
}

// GetTds2ThreeDsReqAuthData returns the value of Tds2ThreeDsReqAuthData.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ThreeDsReqAuthData() OptNilTds2ThreeDsReqAuthData {
	return s.Tds2ThreeDsReqAuthData
}

// GetTds2ThreeDsReqAuthMethod returns the value of Tds2ThreeDsReqAuthMethod.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ThreeDsReqAuthMethod() OptNilTds2ThreeDsReqAuthMethod {
	return s.Tds2ThreeDsReqAuthMethod
}

// GetTds2AddrMatch returns the value of Tds2AddrMatch.
func (s *CardRegistrationSessionCreatingRequest) GetTds2AddrMatch() OptNilTds2AddrMatch {
	return s.Tds2AddrMatch
}

// GetTds2BillAddrCountry returns the value of Tds2BillAddrCountry.
func (s *CardRegistrationSessionCreatingRequest) GetTds2BillAddrCountry() OptNilTds2BillAddrCountry {
	return s.Tds2BillAddrCountry
}

// GetTds2BillAddrState returns the value of Tds2BillAddrState.
func (s *CardRegistrationSessionCreatingRequest) GetTds2BillAddrState() OptNilTds2BillAddrState {
	return s.Tds2BillAddrState
}

// GetTds2BillAddrCity returns the value of Tds2BillAddrCity.
func (s *CardRegistrationSessionCreatingRequest) GetTds2BillAddrCity() OptNilTds2BillAddrCity {
	return s.Tds2BillAddrCity
}

// GetTds2BillAddrLine1 returns the value of Tds2BillAddrLine1.
func (s *CardRegistrationSessionCreatingRequest) GetTds2BillAddrLine1() OptNilTds2BillAddrLine1 {
	return s.Tds2BillAddrLine1
}

// GetTds2BillAddrLine2 returns the value of Tds2BillAddrLine2.
func (s *CardRegistrationSessionCreatingRequest) GetTds2BillAddrLine2() OptNilTds2BillAddrLine2 {
	return s.Tds2BillAddrLine2
}

// GetTds2BillAddrLine3 returns the value of Tds2BillAddrLine3.
func (s *CardRegistrationSessionCreatingRequest) GetTds2BillAddrLine3() OptTds2BillAddrLine3 {
	return s.Tds2BillAddrLine3
}

// GetTds2BillAddrPostCode returns the value of Tds2BillAddrPostCode.
func (s *CardRegistrationSessionCreatingRequest) GetTds2BillAddrPostCode() OptNilTds2BillAddrPostCode {
	return s.Tds2BillAddrPostCode
}

// GetTds2ShipAddrCountry returns the value of Tds2ShipAddrCountry.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipAddrCountry() OptNilTds2ShipAddrCountry {
	return s.Tds2ShipAddrCountry
}

// GetTds2ShipAddrState returns the value of Tds2ShipAddrState.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipAddrState() OptNilTds2ShipAddrState {
	return s.Tds2ShipAddrState
}

// GetTds2ShipAddrCity returns the value of Tds2ShipAddrCity.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipAddrCity() OptNilTds2ShipAddrCity {
	return s.Tds2ShipAddrCity
}

// GetTds2ShipAddrLine1 returns the value of Tds2ShipAddrLine1.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipAddrLine1() OptNilTds2ShipAddrLine1 {
	return s.Tds2ShipAddrLine1
}

// GetTds2ShipAddrLine2 returns the value of Tds2ShipAddrLine2.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipAddrLine2() OptNilTds2ShipAddrLine2 {
	return s.Tds2ShipAddrLine2
}

// GetTds2ShipAddrLine3 returns the value of Tds2ShipAddrLine3.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipAddrLine3() OptNilTds2ShipAddrLine3 {
	return s.Tds2ShipAddrLine3
}

// GetTds2ShipAddrPostCode returns the value of Tds2ShipAddrPostCode.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipAddrPostCode() OptNilTds2ShipAddrPostCode {
	return s.Tds2ShipAddrPostCode
}

// GetTds2ShipInd returns the value of Tds2ShipInd.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ShipInd() OptNilTds2ShipInd {
	return s.Tds2ShipInd
}

// GetTds2DeliveryEmailAddress returns the value of Tds2DeliveryEmailAddress.
func (s *CardRegistrationSessionCreatingRequest) GetTds2DeliveryEmailAddress() OptNilTds2DeliveryEmailAddress {
	return s.Tds2DeliveryEmailAddress
}

// GetTds2HomePhoneCc returns the value of Tds2HomePhoneCc.
func (s *CardRegistrationSessionCreatingRequest) GetTds2HomePhoneCc() OptNilTds2HomePhoneCc {
	return s.Tds2HomePhoneCc
}

// GetTds2HomePhoneNo returns the value of Tds2HomePhoneNo.
func (s *CardRegistrationSessionCreatingRequest) GetTds2HomePhoneNo() OptNilTds2HomePhoneNo {
	return s.Tds2HomePhoneNo
}

// GetTds2MobilePhoneCc returns the value of Tds2MobilePhoneCc.
func (s *CardRegistrationSessionCreatingRequest) GetTds2MobilePhoneCc() OptNilTds2MobilePhoneCc {
	return s.Tds2MobilePhoneCc
}

// GetTds2MobilePhoneNo returns the value of Tds2MobilePhoneNo.
func (s *CardRegistrationSessionCreatingRequest) GetTds2MobilePhoneNo() OptNilTds2MobilePhoneNo {
	return s.Tds2MobilePhoneNo
}

// GetTds2WorkPhoneCc returns the value of Tds2WorkPhoneCc.
func (s *CardRegistrationSessionCreatingRequest) GetTds2WorkPhoneCc() OptNilTds2WorkPhoneCc {
	return s.Tds2WorkPhoneCc
}

// GetTds2WorkPhoneNo returns the value of Tds2WorkPhoneNo.
func (s *CardRegistrationSessionCreatingRequest) GetTds2WorkPhoneNo() OptNilTds2WorkPhoneNo {
	return s.Tds2WorkPhoneNo
}

// GetTds2DeliveryTimeframe returns the value of Tds2DeliveryTimeframe.
func (s *CardRegistrationSessionCreatingRequest) GetTds2DeliveryTimeframe() OptNilTds2DeliveryTimeframe {
	return s.Tds2DeliveryTimeframe
}

// GetTds2PreOrderDate returns the value of Tds2PreOrderDate.
func (s *CardRegistrationSessionCreatingRequest) GetTds2PreOrderDate() OptNilTds2PreOrderDate {
	return s.Tds2PreOrderDate
}

// GetTds2PreOrderPurchaseInd returns the value of Tds2PreOrderPurchaseInd.
func (s *CardRegistrationSessionCreatingRequest) GetTds2PreOrderPurchaseInd() OptNilTds2PreOrderPurchaseInd {
	return s.Tds2PreOrderPurchaseInd
}

// GetTds2ReorderItemsInd returns the value of Tds2ReorderItemsInd.
func (s *CardRegistrationSessionCreatingRequest) GetTds2ReorderItemsInd() OptNilTds2ReorderItemsInd {
	return s.Tds2ReorderItemsInd
}

// GetTds2RecurringExpiry returns the value of Tds2RecurringExpiry.
func (s *CardRegistrationSessionCreatingRequest) GetTds2RecurringExpiry() OptNilTds2RecurringExpiry {
	return s.Tds2RecurringExpiry
}

// GetTds2RecurringFrequency returns the value of Tds2RecurringFrequency.
func (s *CardRegistrationSessionCreatingRequest) GetTds2RecurringFrequency() OptNilTds2RecurringFrequency {
	return s.Tds2RecurringFrequency
}

// GetTds2GiftCardAmount returns the value of Tds2GiftCardAmount.
func (s *CardRegistrationSessionCreatingRequest) GetTds2GiftCardAmount() OptNilTds2GiftCardAmount {
	return s.Tds2GiftCardAmount
}

// GetTds2GiftCardCount returns the value of Tds2GiftCardCount.
func (s *CardRegistrationSessionCreatingRequest) GetTds2GiftCardCount() OptNilTds2GiftCardCount {
	return s.Tds2GiftCardCount
}

// GetTds2GiftCardCurr returns the value of Tds2GiftCardCurr.
func (s *CardRegistrationSessionCreatingRequest) GetTds2GiftCardCurr() OptNilTds2GiftCardCurr {
	return s.Tds2GiftCardCurr
}

// SetSuccessURL sets the value of SuccessURL.
func (s *CardRegistrationSessionCreatingRequest) SetSuccessURL(val OptNilPropertiesSuccessURL) {
	s.SuccessURL = val
}

// SetCancelURL sets the value of CancelURL.
func (s *CardRegistrationSessionCreatingRequest) SetCancelURL(val OptNilPropertiesCancelURL) {
	s.CancelURL = val
}

// SetExpire sets the value of Expire.
func (s *CardRegistrationSessionCreatingRequest) SetExpire(val OptCardRegistrationSessionPropertiesExpire) {
	s.Expire = val
}

// SetShopServiceName sets the value of ShopServiceName.
func (s *CardRegistrationSessionCreatingRequest) SetShopServiceName(val OptNilPropertiesShopServiceName) {
	s.ShopServiceName = val
}

// SetReceiverMail sets the value of ReceiverMail.
func (s *CardRegistrationSessionCreatingRequest) SetReceiverMail(val OptNilPropertiesReceiverMail) {
	s.ReceiverMail = val
}

// SetMailCustomerName sets the value of MailCustomerName.
func (s *CardRegistrationSessionCreatingRequest) SetMailCustomerName(val OptNilPropertiesMailCustomerName) {
	s.MailCustomerName = val
}

// SetGuideMailSendFlag sets the value of GuideMailSendFlag.
func (s *CardRegistrationSessionCreatingRequest) SetGuideMailSendFlag(val OptPropertiesGuideMailSendFlag) {
	s.GuideMailSendFlag = val
}

// SetCompletionMailSendFlag sets the value of CompletionMailSendFlag.
func (s *CardRegistrationSessionCreatingRequest) SetCompletionMailSendFlag(val OptCompletionMailSendFlag) {
	s.CompletionMailSendFlag = val
}

// SetShopMailTemplateID sets the value of ShopMailTemplateID.
func (s *CardRegistrationSessionCreatingRequest) SetShopMailTemplateID(val OptNilPropertiesShopMailTemplateID) {
	s.ShopMailTemplateID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *CardRegistrationSessionCreatingRequest) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerName sets the value of CustomerName.
func (s *CardRegistrationSessionCreatingRequest) SetCustomerName(val OptNilCustomerName) {
	s.CustomerName = val
}

// SetTdTenantName sets the value of TdTenantName.
func (s *CardRegistrationSessionCreatingRequest) SetTdTenantName(val OptTdTenantName) {
	s.TdTenantName = val
}

// SetTdsType sets the value of TdsType.
func (s *CardRegistrationSessionCreatingRequest) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *CardRegistrationSessionCreatingRequest) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2ChAccChange sets the value of Tds2ChAccChange.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ChAccChange(val OptNilTds2ChAccChange) {
	s.Tds2ChAccChange = val
}

// SetTds2ChAccDate sets the value of Tds2ChAccDate.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ChAccDate(val OptNilTds2ChAccDate) {
	s.Tds2ChAccDate = val
}

// SetTds2ChAccPwChange sets the value of Tds2ChAccPwChange.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ChAccPwChange(val OptNilTds2ChAccPwChange) {
	s.Tds2ChAccPwChange = val
}

// SetTds2NbPurchaseAccount sets the value of Tds2NbPurchaseAccount.
func (s *CardRegistrationSessionCreatingRequest) SetTds2NbPurchaseAccount(val OptNilTds2NbPurchaseAccount) {
	s.Tds2NbPurchaseAccount = val
}

// SetTds2PaymentAccAge sets the value of Tds2PaymentAccAge.
func (s *CardRegistrationSessionCreatingRequest) SetTds2PaymentAccAge(val OptNilTds2PaymentAccAge) {
	s.Tds2PaymentAccAge = val
}

// SetTds2ProvisionAttemptsDay sets the value of Tds2ProvisionAttemptsDay.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ProvisionAttemptsDay(val OptNilTds2ProvisionAttemptsDay) {
	s.Tds2ProvisionAttemptsDay = val
}

// SetTds2ShipAddressUsage sets the value of Tds2ShipAddressUsage.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipAddressUsage(val OptNilTds2ShipAddressUsage) {
	s.Tds2ShipAddressUsage = val
}

// SetTds2ShipNameInd sets the value of Tds2ShipNameInd.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipNameInd(val OptNilTds2ShipNameInd) {
	s.Tds2ShipNameInd = val
}

// SetTds2SuspiciousAccActivity sets the value of Tds2SuspiciousAccActivity.
func (s *CardRegistrationSessionCreatingRequest) SetTds2SuspiciousAccActivity(val OptNilTds2SuspiciousAccActivity) {
	s.Tds2SuspiciousAccActivity = val
}

// SetTds2TxnActivityDay sets the value of Tds2TxnActivityDay.
func (s *CardRegistrationSessionCreatingRequest) SetTds2TxnActivityDay(val OptNilTds2TxnActivityDay) {
	s.Tds2TxnActivityDay = val
}

// SetTds2TxnActivityYear sets the value of Tds2TxnActivityYear.
func (s *CardRegistrationSessionCreatingRequest) SetTds2TxnActivityYear(val OptNilTds2TxnActivityYear) {
	s.Tds2TxnActivityYear = val
}

// SetTds2ThreeDsReqAuthData sets the value of Tds2ThreeDsReqAuthData.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ThreeDsReqAuthData(val OptNilTds2ThreeDsReqAuthData) {
	s.Tds2ThreeDsReqAuthData = val
}

// SetTds2ThreeDsReqAuthMethod sets the value of Tds2ThreeDsReqAuthMethod.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ThreeDsReqAuthMethod(val OptNilTds2ThreeDsReqAuthMethod) {
	s.Tds2ThreeDsReqAuthMethod = val
}

// SetTds2AddrMatch sets the value of Tds2AddrMatch.
func (s *CardRegistrationSessionCreatingRequest) SetTds2AddrMatch(val OptNilTds2AddrMatch) {
	s.Tds2AddrMatch = val
}

// SetTds2BillAddrCountry sets the value of Tds2BillAddrCountry.
func (s *CardRegistrationSessionCreatingRequest) SetTds2BillAddrCountry(val OptNilTds2BillAddrCountry) {
	s.Tds2BillAddrCountry = val
}

// SetTds2BillAddrState sets the value of Tds2BillAddrState.
func (s *CardRegistrationSessionCreatingRequest) SetTds2BillAddrState(val OptNilTds2BillAddrState) {
	s.Tds2BillAddrState = val
}

// SetTds2BillAddrCity sets the value of Tds2BillAddrCity.
func (s *CardRegistrationSessionCreatingRequest) SetTds2BillAddrCity(val OptNilTds2BillAddrCity) {
	s.Tds2BillAddrCity = val
}

// SetTds2BillAddrLine1 sets the value of Tds2BillAddrLine1.
func (s *CardRegistrationSessionCreatingRequest) SetTds2BillAddrLine1(val OptNilTds2BillAddrLine1) {
	s.Tds2BillAddrLine1 = val
}

// SetTds2BillAddrLine2 sets the value of Tds2BillAddrLine2.
func (s *CardRegistrationSessionCreatingRequest) SetTds2BillAddrLine2(val OptNilTds2BillAddrLine2) {
	s.Tds2BillAddrLine2 = val
}

// SetTds2BillAddrLine3 sets the value of Tds2BillAddrLine3.
func (s *CardRegistrationSessionCreatingRequest) SetTds2BillAddrLine3(val OptTds2BillAddrLine3) {
	s.Tds2BillAddrLine3 = val
}

// SetTds2BillAddrPostCode sets the value of Tds2BillAddrPostCode.
func (s *CardRegistrationSessionCreatingRequest) SetTds2BillAddrPostCode(val OptNilTds2BillAddrPostCode) {
	s.Tds2BillAddrPostCode = val
}

// SetTds2ShipAddrCountry sets the value of Tds2ShipAddrCountry.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipAddrCountry(val OptNilTds2ShipAddrCountry) {
	s.Tds2ShipAddrCountry = val
}

// SetTds2ShipAddrState sets the value of Tds2ShipAddrState.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipAddrState(val OptNilTds2ShipAddrState) {
	s.Tds2ShipAddrState = val
}

// SetTds2ShipAddrCity sets the value of Tds2ShipAddrCity.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipAddrCity(val OptNilTds2ShipAddrCity) {
	s.Tds2ShipAddrCity = val
}

// SetTds2ShipAddrLine1 sets the value of Tds2ShipAddrLine1.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipAddrLine1(val OptNilTds2ShipAddrLine1) {
	s.Tds2ShipAddrLine1 = val
}

// SetTds2ShipAddrLine2 sets the value of Tds2ShipAddrLine2.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipAddrLine2(val OptNilTds2ShipAddrLine2) {
	s.Tds2ShipAddrLine2 = val
}

// SetTds2ShipAddrLine3 sets the value of Tds2ShipAddrLine3.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipAddrLine3(val OptNilTds2ShipAddrLine3) {
	s.Tds2ShipAddrLine3 = val
}

// SetTds2ShipAddrPostCode sets the value of Tds2ShipAddrPostCode.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipAddrPostCode(val OptNilTds2ShipAddrPostCode) {
	s.Tds2ShipAddrPostCode = val
}

// SetTds2ShipInd sets the value of Tds2ShipInd.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ShipInd(val OptNilTds2ShipInd) {
	s.Tds2ShipInd = val
}

// SetTds2DeliveryEmailAddress sets the value of Tds2DeliveryEmailAddress.
func (s *CardRegistrationSessionCreatingRequest) SetTds2DeliveryEmailAddress(val OptNilTds2DeliveryEmailAddress) {
	s.Tds2DeliveryEmailAddress = val
}

// SetTds2HomePhoneCc sets the value of Tds2HomePhoneCc.
func (s *CardRegistrationSessionCreatingRequest) SetTds2HomePhoneCc(val OptNilTds2HomePhoneCc) {
	s.Tds2HomePhoneCc = val
}

// SetTds2HomePhoneNo sets the value of Tds2HomePhoneNo.
func (s *CardRegistrationSessionCreatingRequest) SetTds2HomePhoneNo(val OptNilTds2HomePhoneNo) {
	s.Tds2HomePhoneNo = val
}

// SetTds2MobilePhoneCc sets the value of Tds2MobilePhoneCc.
func (s *CardRegistrationSessionCreatingRequest) SetTds2MobilePhoneCc(val OptNilTds2MobilePhoneCc) {
	s.Tds2MobilePhoneCc = val
}

// SetTds2MobilePhoneNo sets the value of Tds2MobilePhoneNo.
func (s *CardRegistrationSessionCreatingRequest) SetTds2MobilePhoneNo(val OptNilTds2MobilePhoneNo) {
	s.Tds2MobilePhoneNo = val
}

// SetTds2WorkPhoneCc sets the value of Tds2WorkPhoneCc.
func (s *CardRegistrationSessionCreatingRequest) SetTds2WorkPhoneCc(val OptNilTds2WorkPhoneCc) {
	s.Tds2WorkPhoneCc = val
}

// SetTds2WorkPhoneNo sets the value of Tds2WorkPhoneNo.
func (s *CardRegistrationSessionCreatingRequest) SetTds2WorkPhoneNo(val OptNilTds2WorkPhoneNo) {
	s.Tds2WorkPhoneNo = val
}

// SetTds2DeliveryTimeframe sets the value of Tds2DeliveryTimeframe.
func (s *CardRegistrationSessionCreatingRequest) SetTds2DeliveryTimeframe(val OptNilTds2DeliveryTimeframe) {
	s.Tds2DeliveryTimeframe = val
}

// SetTds2PreOrderDate sets the value of Tds2PreOrderDate.
func (s *CardRegistrationSessionCreatingRequest) SetTds2PreOrderDate(val OptNilTds2PreOrderDate) {
	s.Tds2PreOrderDate = val
}

// SetTds2PreOrderPurchaseInd sets the value of Tds2PreOrderPurchaseInd.
func (s *CardRegistrationSessionCreatingRequest) SetTds2PreOrderPurchaseInd(val OptNilTds2PreOrderPurchaseInd) {
	s.Tds2PreOrderPurchaseInd = val
}

// SetTds2ReorderItemsInd sets the value of Tds2ReorderItemsInd.
func (s *CardRegistrationSessionCreatingRequest) SetTds2ReorderItemsInd(val OptNilTds2ReorderItemsInd) {
	s.Tds2ReorderItemsInd = val
}

// SetTds2RecurringExpiry sets the value of Tds2RecurringExpiry.
func (s *CardRegistrationSessionCreatingRequest) SetTds2RecurringExpiry(val OptNilTds2RecurringExpiry) {
	s.Tds2RecurringExpiry = val
}

// SetTds2RecurringFrequency sets the value of Tds2RecurringFrequency.
func (s *CardRegistrationSessionCreatingRequest) SetTds2RecurringFrequency(val OptNilTds2RecurringFrequency) {
	s.Tds2RecurringFrequency = val
}

// SetTds2GiftCardAmount sets the value of Tds2GiftCardAmount.
func (s *CardRegistrationSessionCreatingRequest) SetTds2GiftCardAmount(val OptNilTds2GiftCardAmount) {
	s.Tds2GiftCardAmount = val
}

// SetTds2GiftCardCount sets the value of Tds2GiftCardCount.
func (s *CardRegistrationSessionCreatingRequest) SetTds2GiftCardCount(val OptNilTds2GiftCardCount) {
	s.Tds2GiftCardCount = val
}

// SetTds2GiftCardCurr sets the value of Tds2GiftCardCurr.
func (s *CardRegistrationSessionCreatingRequest) SetTds2GiftCardCurr(val OptNilTds2GiftCardCurr) {
	s.Tds2GiftCardCurr = val
}

// カード登録メール 送信フラグ\
// リダイレクト型カード登録URLをfincodeからのメール送信機能で送信したかどうかを示します。
// - `0`：送信しなかった（デフォルト）
// - `1`：送信した.
type CardRegistrationSessionGuideMailSendFlag string

const (
	CardRegistrationSessionGuideMailSendFlag0 CardRegistrationSessionGuideMailSendFlag = "0"
	CardRegistrationSessionGuideMailSendFlag1 CardRegistrationSessionGuideMailSendFlag = "1"
)

// AllValues returns all CardRegistrationSessionGuideMailSendFlag values.
func (CardRegistrationSessionGuideMailSendFlag) AllValues() []CardRegistrationSessionGuideMailSendFlag {
	return []CardRegistrationSessionGuideMailSendFlag{
		CardRegistrationSessionGuideMailSendFlag0,
		CardRegistrationSessionGuideMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardRegistrationSessionGuideMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case CardRegistrationSessionGuideMailSendFlag0:
		return []byte(s), nil
	case CardRegistrationSessionGuideMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardRegistrationSessionGuideMailSendFlag) UnmarshalText(data []byte) error {
	switch CardRegistrationSessionGuideMailSendFlag(data) {
	case CardRegistrationSessionGuideMailSendFlag0:
		*s = CardRegistrationSessionGuideMailSendFlag0
		return nil
	case CardRegistrationSessionGuideMailSendFlag1:
		*s = CardRegistrationSessionGuideMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CardRegistrationSessionPropertiesExpire string

// ステータス\
// リダイレクト型カード登録URLのステータスを表します。
// - `CREATE`：カード登録URLが作成された状態.
// Ref: #/components/schemas/CardRegistrationSessionStatus
type CardRegistrationSessionStatus string

const (
	CardRegistrationSessionStatusCREATE CardRegistrationSessionStatus = "CREATE"
)

// AllValues returns all CardRegistrationSessionStatus values.
func (CardRegistrationSessionStatus) AllValues() []CardRegistrationSessionStatus {
	return []CardRegistrationSessionStatus{
		CardRegistrationSessionStatusCREATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardRegistrationSessionStatus) MarshalText() ([]byte, error) {
	switch s {
	case CardRegistrationSessionStatusCREATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardRegistrationSessionStatus) UnmarshalText(data []byte) error {
	switch CardRegistrationSessionStatus(data) {
	case CardRegistrationSessionStatusCREATE:
		*s = CardRegistrationSessionStatusCREATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// クレジットカード種別。
// - `0`: 不明（[テストカード](https://docs.fincode.
// jp/develop_support/test_resources)を含む）
// - `1`: デビットカード
// - `2`: プリペイドカード
// - `3`: クレジットカード.
// Ref: #/components/schemas/CardType
type CardType string

const (
	CardType0 CardType = "0"
	CardType1 CardType = "1"
	CardType2 CardType = "2"
	CardType3 CardType = "3"
)

// AllValues returns all CardType values.
func (CardType) AllValues() []CardType {
	return []CardType{
		CardType0,
		CardType1,
		CardType2,
		CardType3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CardType) MarshalText() ([]byte, error) {
	switch s {
	case CardType0:
		return []byte(s), nil
	case CardType1:
		return []byte(s), nil
	case CardType2:
		return []byte(s), nil
	case CardType3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CardType) UnmarshalText(data []byte) error {
	switch CardType(data) {
	case CardType0:
		*s = CardType0
		return nil
	case CardType1:
		*s = CardType1
		return nil
	case CardType2:
		*s = CardType2
		return nil
	case CardType3:
		*s = CardType3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ChangeAmountOfPaymentOK represents sum type.
type ChangeAmountOfPaymentOK struct {
	Type                                     ChangeAmountOfPaymentOKType // switch on this field
	PaymentCardChangingAmountResponse        PaymentCardChangingAmountResponse
	PaymentPayPayChangingAmountResponse      PaymentPayPayChangingAmountResponse
	PaymentDirectDebitChangingAmountResponse PaymentDirectDebitChangingAmountResponse
}

// ChangeAmountOfPaymentOKType is oneOf type of ChangeAmountOfPaymentOK.
type ChangeAmountOfPaymentOKType string

// Possible values for ChangeAmountOfPaymentOKType.
const (
	PaymentCardChangingAmountResponseChangeAmountOfPaymentOK        ChangeAmountOfPaymentOKType = "PaymentCardChangingAmountResponse"
	PaymentPayPayChangingAmountResponseChangeAmountOfPaymentOK      ChangeAmountOfPaymentOKType = "PaymentPayPayChangingAmountResponse"
	PaymentDirectDebitChangingAmountResponseChangeAmountOfPaymentOK ChangeAmountOfPaymentOKType = "PaymentDirectDebitChangingAmountResponse"
)

// IsPaymentCardChangingAmountResponse reports whether ChangeAmountOfPaymentOK is PaymentCardChangingAmountResponse.
func (s ChangeAmountOfPaymentOK) IsPaymentCardChangingAmountResponse() bool {
	return s.Type == PaymentCardChangingAmountResponseChangeAmountOfPaymentOK
}

// IsPaymentPayPayChangingAmountResponse reports whether ChangeAmountOfPaymentOK is PaymentPayPayChangingAmountResponse.
func (s ChangeAmountOfPaymentOK) IsPaymentPayPayChangingAmountResponse() bool {
	return s.Type == PaymentPayPayChangingAmountResponseChangeAmountOfPaymentOK
}

// IsPaymentDirectDebitChangingAmountResponse reports whether ChangeAmountOfPaymentOK is PaymentDirectDebitChangingAmountResponse.
func (s ChangeAmountOfPaymentOK) IsPaymentDirectDebitChangingAmountResponse() bool {
	return s.Type == PaymentDirectDebitChangingAmountResponseChangeAmountOfPaymentOK
}

// SetPaymentCardChangingAmountResponse sets ChangeAmountOfPaymentOK to PaymentCardChangingAmountResponse.
func (s *ChangeAmountOfPaymentOK) SetPaymentCardChangingAmountResponse(v PaymentCardChangingAmountResponse) {
	s.Type = PaymentCardChangingAmountResponseChangeAmountOfPaymentOK
	s.PaymentCardChangingAmountResponse = v
}

// GetPaymentCardChangingAmountResponse returns PaymentCardChangingAmountResponse and true boolean if ChangeAmountOfPaymentOK is PaymentCardChangingAmountResponse.
func (s ChangeAmountOfPaymentOK) GetPaymentCardChangingAmountResponse() (v PaymentCardChangingAmountResponse, ok bool) {
	if !s.IsPaymentCardChangingAmountResponse() {
		return v, false
	}
	return s.PaymentCardChangingAmountResponse, true
}

// NewPaymentCardChangingAmountResponseChangeAmountOfPaymentOK returns new ChangeAmountOfPaymentOK from PaymentCardChangingAmountResponse.
func NewPaymentCardChangingAmountResponseChangeAmountOfPaymentOK(v PaymentCardChangingAmountResponse) ChangeAmountOfPaymentOK {
	var s ChangeAmountOfPaymentOK
	s.SetPaymentCardChangingAmountResponse(v)
	return s
}

// SetPaymentPayPayChangingAmountResponse sets ChangeAmountOfPaymentOK to PaymentPayPayChangingAmountResponse.
func (s *ChangeAmountOfPaymentOK) SetPaymentPayPayChangingAmountResponse(v PaymentPayPayChangingAmountResponse) {
	s.Type = PaymentPayPayChangingAmountResponseChangeAmountOfPaymentOK
	s.PaymentPayPayChangingAmountResponse = v
}

// GetPaymentPayPayChangingAmountResponse returns PaymentPayPayChangingAmountResponse and true boolean if ChangeAmountOfPaymentOK is PaymentPayPayChangingAmountResponse.
func (s ChangeAmountOfPaymentOK) GetPaymentPayPayChangingAmountResponse() (v PaymentPayPayChangingAmountResponse, ok bool) {
	if !s.IsPaymentPayPayChangingAmountResponse() {
		return v, false
	}
	return s.PaymentPayPayChangingAmountResponse, true
}

// NewPaymentPayPayChangingAmountResponseChangeAmountOfPaymentOK returns new ChangeAmountOfPaymentOK from PaymentPayPayChangingAmountResponse.
func NewPaymentPayPayChangingAmountResponseChangeAmountOfPaymentOK(v PaymentPayPayChangingAmountResponse) ChangeAmountOfPaymentOK {
	var s ChangeAmountOfPaymentOK
	s.SetPaymentPayPayChangingAmountResponse(v)
	return s
}

// SetPaymentDirectDebitChangingAmountResponse sets ChangeAmountOfPaymentOK to PaymentDirectDebitChangingAmountResponse.
func (s *ChangeAmountOfPaymentOK) SetPaymentDirectDebitChangingAmountResponse(v PaymentDirectDebitChangingAmountResponse) {
	s.Type = PaymentDirectDebitChangingAmountResponseChangeAmountOfPaymentOK
	s.PaymentDirectDebitChangingAmountResponse = v
}

// GetPaymentDirectDebitChangingAmountResponse returns PaymentDirectDebitChangingAmountResponse and true boolean if ChangeAmountOfPaymentOK is PaymentDirectDebitChangingAmountResponse.
func (s ChangeAmountOfPaymentOK) GetPaymentDirectDebitChangingAmountResponse() (v PaymentDirectDebitChangingAmountResponse, ok bool) {
	if !s.IsPaymentDirectDebitChangingAmountResponse() {
		return v, false
	}
	return s.PaymentDirectDebitChangingAmountResponse, true
}

// NewPaymentDirectDebitChangingAmountResponseChangeAmountOfPaymentOK returns new ChangeAmountOfPaymentOK from PaymentDirectDebitChangingAmountResponse.
func NewPaymentDirectDebitChangingAmountResponseChangeAmountOfPaymentOK(v PaymentDirectDebitChangingAmountResponse) ChangeAmountOfPaymentOK {
	var s ChangeAmountOfPaymentOK
	s.SetPaymentDirectDebitChangingAmountResponse(v)
	return s
}

func (*ChangeAmountOfPaymentOK) changeAmountOfPaymentRes() {}

// ChangeAmountOfPaymentReq represents sum type.
type ChangeAmountOfPaymentReq struct {
	Type                                    ChangeAmountOfPaymentReqType // switch on this field
	PaymentCardChangingAmountRequest        PaymentCardChangingAmountRequest
	PaymentPayPayChangingAmountRequest      PaymentPayPayChangingAmountRequest
	PaymentDirectDebitChangingAmountRequest PaymentDirectDebitChangingAmountRequest
}

// ChangeAmountOfPaymentReqType is oneOf type of ChangeAmountOfPaymentReq.
type ChangeAmountOfPaymentReqType string

// Possible values for ChangeAmountOfPaymentReqType.
const (
	PaymentCardChangingAmountRequestChangeAmountOfPaymentReq        ChangeAmountOfPaymentReqType = "PaymentCardChangingAmountRequest"
	PaymentPayPayChangingAmountRequestChangeAmountOfPaymentReq      ChangeAmountOfPaymentReqType = "PaymentPayPayChangingAmountRequest"
	PaymentDirectDebitChangingAmountRequestChangeAmountOfPaymentReq ChangeAmountOfPaymentReqType = "PaymentDirectDebitChangingAmountRequest"
)

// IsPaymentCardChangingAmountRequest reports whether ChangeAmountOfPaymentReq is PaymentCardChangingAmountRequest.
func (s ChangeAmountOfPaymentReq) IsPaymentCardChangingAmountRequest() bool {
	return s.Type == PaymentCardChangingAmountRequestChangeAmountOfPaymentReq
}

// IsPaymentPayPayChangingAmountRequest reports whether ChangeAmountOfPaymentReq is PaymentPayPayChangingAmountRequest.
func (s ChangeAmountOfPaymentReq) IsPaymentPayPayChangingAmountRequest() bool {
	return s.Type == PaymentPayPayChangingAmountRequestChangeAmountOfPaymentReq
}

// IsPaymentDirectDebitChangingAmountRequest reports whether ChangeAmountOfPaymentReq is PaymentDirectDebitChangingAmountRequest.
func (s ChangeAmountOfPaymentReq) IsPaymentDirectDebitChangingAmountRequest() bool {
	return s.Type == PaymentDirectDebitChangingAmountRequestChangeAmountOfPaymentReq
}

// SetPaymentCardChangingAmountRequest sets ChangeAmountOfPaymentReq to PaymentCardChangingAmountRequest.
func (s *ChangeAmountOfPaymentReq) SetPaymentCardChangingAmountRequest(v PaymentCardChangingAmountRequest) {
	s.Type = PaymentCardChangingAmountRequestChangeAmountOfPaymentReq
	s.PaymentCardChangingAmountRequest = v
}

// GetPaymentCardChangingAmountRequest returns PaymentCardChangingAmountRequest and true boolean if ChangeAmountOfPaymentReq is PaymentCardChangingAmountRequest.
func (s ChangeAmountOfPaymentReq) GetPaymentCardChangingAmountRequest() (v PaymentCardChangingAmountRequest, ok bool) {
	if !s.IsPaymentCardChangingAmountRequest() {
		return v, false
	}
	return s.PaymentCardChangingAmountRequest, true
}

// NewPaymentCardChangingAmountRequestChangeAmountOfPaymentReq returns new ChangeAmountOfPaymentReq from PaymentCardChangingAmountRequest.
func NewPaymentCardChangingAmountRequestChangeAmountOfPaymentReq(v PaymentCardChangingAmountRequest) ChangeAmountOfPaymentReq {
	var s ChangeAmountOfPaymentReq
	s.SetPaymentCardChangingAmountRequest(v)
	return s
}

// SetPaymentPayPayChangingAmountRequest sets ChangeAmountOfPaymentReq to PaymentPayPayChangingAmountRequest.
func (s *ChangeAmountOfPaymentReq) SetPaymentPayPayChangingAmountRequest(v PaymentPayPayChangingAmountRequest) {
	s.Type = PaymentPayPayChangingAmountRequestChangeAmountOfPaymentReq
	s.PaymentPayPayChangingAmountRequest = v
}

// GetPaymentPayPayChangingAmountRequest returns PaymentPayPayChangingAmountRequest and true boolean if ChangeAmountOfPaymentReq is PaymentPayPayChangingAmountRequest.
func (s ChangeAmountOfPaymentReq) GetPaymentPayPayChangingAmountRequest() (v PaymentPayPayChangingAmountRequest, ok bool) {
	if !s.IsPaymentPayPayChangingAmountRequest() {
		return v, false
	}
	return s.PaymentPayPayChangingAmountRequest, true
}

// NewPaymentPayPayChangingAmountRequestChangeAmountOfPaymentReq returns new ChangeAmountOfPaymentReq from PaymentPayPayChangingAmountRequest.
func NewPaymentPayPayChangingAmountRequestChangeAmountOfPaymentReq(v PaymentPayPayChangingAmountRequest) ChangeAmountOfPaymentReq {
	var s ChangeAmountOfPaymentReq
	s.SetPaymentPayPayChangingAmountRequest(v)
	return s
}

// SetPaymentDirectDebitChangingAmountRequest sets ChangeAmountOfPaymentReq to PaymentDirectDebitChangingAmountRequest.
func (s *ChangeAmountOfPaymentReq) SetPaymentDirectDebitChangingAmountRequest(v PaymentDirectDebitChangingAmountRequest) {
	s.Type = PaymentDirectDebitChangingAmountRequestChangeAmountOfPaymentReq
	s.PaymentDirectDebitChangingAmountRequest = v
}

// GetPaymentDirectDebitChangingAmountRequest returns PaymentDirectDebitChangingAmountRequest and true boolean if ChangeAmountOfPaymentReq is PaymentDirectDebitChangingAmountRequest.
func (s ChangeAmountOfPaymentReq) GetPaymentDirectDebitChangingAmountRequest() (v PaymentDirectDebitChangingAmountRequest, ok bool) {
	if !s.IsPaymentDirectDebitChangingAmountRequest() {
		return v, false
	}
	return s.PaymentDirectDebitChangingAmountRequest, true
}

// NewPaymentDirectDebitChangingAmountRequestChangeAmountOfPaymentReq returns new ChangeAmountOfPaymentReq from PaymentDirectDebitChangingAmountRequest.
func NewPaymentDirectDebitChangingAmountRequestChangeAmountOfPaymentReq(v PaymentDirectDebitChangingAmountRequest) ChangeAmountOfPaymentReq {
	var s ChangeAmountOfPaymentReq
	s.SetPaymentDirectDebitChangingAmountRequest(v)
	return s
}

type ClientFieldN string

type CodeExpiryDate string

type CodeID string

type CompanyAddressBuildingName string

type CompanyAddressBuildingNameKana string

type CompanyAddressChrome string

type CompanyAddressChromeKana string

type CompanyAddressMunicipality string

type CompanyAddressMunicipalityKana string

type CompanyAddressSection string

type CompanyAddressSectionKana string

type CompanyPostalCode string

type CompanyPrefecture string

type CompanyPrefectureKana string

type CompanyTel string

// 完了メール 送信フラグ\
// 決済が完了した際にカード登録をしたユーザーに完了メールを送信するかどうかを示します。
// - `0`：送信しない（デフォルト）
// - `1`：送信する.
// Ref: #/components/schemas/completion_mail_send_flag
type CompletionMailSendFlag string

const (
	CompletionMailSendFlag0 CompletionMailSendFlag = "0"
	CompletionMailSendFlag1 CompletionMailSendFlag = "1"
)

// AllValues returns all CompletionMailSendFlag values.
func (CompletionMailSendFlag) AllValues() []CompletionMailSendFlag {
	return []CompletionMailSendFlag{
		CompletionMailSendFlag0,
		CompletionMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CompletionMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case CompletionMailSendFlag0:
		return []byte(s), nil
	case CompletionMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CompletionMailSendFlag) UnmarshalText(data []byte) error {
	switch CompletionMailSendFlag(data) {
	case CompletionMailSendFlag0:
		*s = CompletionMailSendFlag0
		return nil
	case CompletionMailSendFlag1:
		*s = CompletionMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ContentDescription string

// Merged schema.
// Ref: #/components/schemas/ContentInfo
type ContentInfo struct {
	// 商材1 名称.
	Content1Name OptString `json:"content1_name"`
	// 商材1 説明.
	Content1Description OptString `json:"content1_description"`
	// 商材1 単価.
	Content1UnitPrice OptInt `json:"content1_unit_price"`
	// 商材2 名称.
	Content2Name OptString `json:"content2_name"`
	// 商材2 説明.
	Content2Description OptString `json:"content2_description"`
	// 商材2 単価.
	Content2UnitPrice OptInt `json:"content2_unit_price"`
	// 商材3 名称.
	Content3Name OptString `json:"content3_name"`
	// 商材3 説明.
	Content3Description OptString `json:"content3_description"`
	// 商材3 単価.
	Content3UnitPrice OptInt `json:"content3_unit_price"`
	// 商品情報ID.
	ID OptNilString `json:"id"`
	// 取扱商材 品目種別
	// - `0`: 物品販売
	// - `1`: サービス
	// - `2`: デジタルコンテンツ.
	Type OptContentInfoType `json:"type"`
}

// GetContent1Name returns the value of Content1Name.
func (s *ContentInfo) GetContent1Name() OptString {
	return s.Content1Name
}

// GetContent1Description returns the value of Content1Description.
func (s *ContentInfo) GetContent1Description() OptString {
	return s.Content1Description
}

// GetContent1UnitPrice returns the value of Content1UnitPrice.
func (s *ContentInfo) GetContent1UnitPrice() OptInt {
	return s.Content1UnitPrice
}

// GetContent2Name returns the value of Content2Name.
func (s *ContentInfo) GetContent2Name() OptString {
	return s.Content2Name
}

// GetContent2Description returns the value of Content2Description.
func (s *ContentInfo) GetContent2Description() OptString {
	return s.Content2Description
}

// GetContent2UnitPrice returns the value of Content2UnitPrice.
func (s *ContentInfo) GetContent2UnitPrice() OptInt {
	return s.Content2UnitPrice
}

// GetContent3Name returns the value of Content3Name.
func (s *ContentInfo) GetContent3Name() OptString {
	return s.Content3Name
}

// GetContent3Description returns the value of Content3Description.
func (s *ContentInfo) GetContent3Description() OptString {
	return s.Content3Description
}

// GetContent3UnitPrice returns the value of Content3UnitPrice.
func (s *ContentInfo) GetContent3UnitPrice() OptInt {
	return s.Content3UnitPrice
}

// GetID returns the value of ID.
func (s *ContentInfo) GetID() OptNilString {
	return s.ID
}

// GetType returns the value of Type.
func (s *ContentInfo) GetType() OptContentInfoType {
	return s.Type
}

// SetContent1Name sets the value of Content1Name.
func (s *ContentInfo) SetContent1Name(val OptString) {
	s.Content1Name = val
}

// SetContent1Description sets the value of Content1Description.
func (s *ContentInfo) SetContent1Description(val OptString) {
	s.Content1Description = val
}

// SetContent1UnitPrice sets the value of Content1UnitPrice.
func (s *ContentInfo) SetContent1UnitPrice(val OptInt) {
	s.Content1UnitPrice = val
}

// SetContent2Name sets the value of Content2Name.
func (s *ContentInfo) SetContent2Name(val OptString) {
	s.Content2Name = val
}

// SetContent2Description sets the value of Content2Description.
func (s *ContentInfo) SetContent2Description(val OptString) {
	s.Content2Description = val
}

// SetContent2UnitPrice sets the value of Content2UnitPrice.
func (s *ContentInfo) SetContent2UnitPrice(val OptInt) {
	s.Content2UnitPrice = val
}

// SetContent3Name sets the value of Content3Name.
func (s *ContentInfo) SetContent3Name(val OptString) {
	s.Content3Name = val
}

// SetContent3Description sets the value of Content3Description.
func (s *ContentInfo) SetContent3Description(val OptString) {
	s.Content3Description = val
}

// SetContent3UnitPrice sets the value of Content3UnitPrice.
func (s *ContentInfo) SetContent3UnitPrice(val OptInt) {
	s.Content3UnitPrice = val
}

// SetID sets the value of ID.
func (s *ContentInfo) SetID(val OptNilString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *ContentInfo) SetType(val OptContentInfoType) {
	s.Type = val
}

// 取扱商材 品目種別
// - `0`: 物品販売
// - `1`: サービス
// - `2`: デジタルコンテンツ.
type ContentInfoType float64

const (
	ContentInfoType0 ContentInfoType = 0
	ContentInfoType1 ContentInfoType = 1
	ContentInfoType2 ContentInfoType = 2
)

// AllValues returns all ContentInfoType values.
func (ContentInfoType) AllValues() []ContentInfoType {
	return []ContentInfoType{
		ContentInfoType0,
		ContentInfoType1,
		ContentInfoType2,
	}
}

// Ref: #/components/schemas/ContentInfo.V2
type ContentInfoV2 struct {
	// 商材1 名称.
	Content1Name OptString `json:"content1_name"`
	// 商材1 説明.
	Content1Description OptString `json:"content1_description"`
	// 商材1 単価.
	Content1UnitPrice OptInt `json:"content1_unit_price"`
	// 商材2 名称.
	Content2Name OptString `json:"content2_name"`
	// 商材2 説明.
	Content2Description OptString `json:"content2_description"`
	// 商材2 単価.
	Content2UnitPrice OptInt `json:"content2_unit_price"`
	// 商材3 名称.
	Content3Name OptString `json:"content3_name"`
	// 商材3 説明.
	Content3Description OptString `json:"content3_description"`
	// 商材3 単価.
	Content3UnitPrice OptInt `json:"content3_unit_price"`
}

// GetContent1Name returns the value of Content1Name.
func (s *ContentInfoV2) GetContent1Name() OptString {
	return s.Content1Name
}

// GetContent1Description returns the value of Content1Description.
func (s *ContentInfoV2) GetContent1Description() OptString {
	return s.Content1Description
}

// GetContent1UnitPrice returns the value of Content1UnitPrice.
func (s *ContentInfoV2) GetContent1UnitPrice() OptInt {
	return s.Content1UnitPrice
}

// GetContent2Name returns the value of Content2Name.
func (s *ContentInfoV2) GetContent2Name() OptString {
	return s.Content2Name
}

// GetContent2Description returns the value of Content2Description.
func (s *ContentInfoV2) GetContent2Description() OptString {
	return s.Content2Description
}

// GetContent2UnitPrice returns the value of Content2UnitPrice.
func (s *ContentInfoV2) GetContent2UnitPrice() OptInt {
	return s.Content2UnitPrice
}

// GetContent3Name returns the value of Content3Name.
func (s *ContentInfoV2) GetContent3Name() OptString {
	return s.Content3Name
}

// GetContent3Description returns the value of Content3Description.
func (s *ContentInfoV2) GetContent3Description() OptString {
	return s.Content3Description
}

// GetContent3UnitPrice returns the value of Content3UnitPrice.
func (s *ContentInfoV2) GetContent3UnitPrice() OptInt {
	return s.Content3UnitPrice
}

// SetContent1Name sets the value of Content1Name.
func (s *ContentInfoV2) SetContent1Name(val OptString) {
	s.Content1Name = val
}

// SetContent1Description sets the value of Content1Description.
func (s *ContentInfoV2) SetContent1Description(val OptString) {
	s.Content1Description = val
}

// SetContent1UnitPrice sets the value of Content1UnitPrice.
func (s *ContentInfoV2) SetContent1UnitPrice(val OptInt) {
	s.Content1UnitPrice = val
}

// SetContent2Name sets the value of Content2Name.
func (s *ContentInfoV2) SetContent2Name(val OptString) {
	s.Content2Name = val
}

// SetContent2Description sets the value of Content2Description.
func (s *ContentInfoV2) SetContent2Description(val OptString) {
	s.Content2Description = val
}

// SetContent2UnitPrice sets the value of Content2UnitPrice.
func (s *ContentInfoV2) SetContent2UnitPrice(val OptInt) {
	s.Content2UnitPrice = val
}

// SetContent3Name sets the value of Content3Name.
func (s *ContentInfoV2) SetContent3Name(val OptString) {
	s.Content3Name = val
}

// SetContent3Description sets the value of Content3Description.
func (s *ContentInfoV2) SetContent3Description(val OptString) {
	s.Content3Description = val
}

// SetContent3UnitPrice sets the value of Content3UnitPrice.
func (s *ContentInfoV2) SetContent3UnitPrice(val OptInt) {
	s.Content3UnitPrice = val
}

// Ref: #/components/schemas/Contract
type Contract struct {
	ShopID     OptShopPropertiesID `json:"shop_id"`
	PlatformID OptPlatformID       `json:"platform_id"`
	ShopType   OptNilShopType      `json:"shop_type"`
	StatusCode OptContractStatus   `json:"status_code"`
	// 審査情報\
	// \
	// 決済事業者ごとの審査状況を配列に格納しています。\
	// ある決済手段について審査が開始されていない場合、その決済手段に対応する`examination_master_id`をもつオブジェクトは配列中に存在しません。.
	Examination []Examination `json:"examination"`
	// 利用可能モード
	// - 201: テスト環境のみ利用可能
	// - 202: 本番環境利用可能.
	AvailableStatusCode OptContractAvailableStatusCode `json:"available_status_code"`
	// ショップを作成したユーザーの登録日
	// 形式：`yyyy/MM/dd`.
	CreateDate OptString `json:"create_date"`
	// 本番環境申請日
	// 形式：`yyyy/MM/dd`.
	ContractedAt OptNilString `json:"contracted_at"`
	// 初回登録完了日
	// 形式：`yyyy/MM/dd`.
	StartChargingAt OptNilString `json:"start_charging_at"`
	// 解約日
	// 形式：`yyyy/MM/dd`.
	ExpiredAt OptNilString `json:"expired_at"`
	// 売上入金 可否ステータス
	// - `501`: 入金に必要な手続きが未完了
	// - `502`: 入金可能
	// - `503`: 入金保留.
	SalesDepositStatusCode OptNilContractSalesDepositStatusCode `json:"sales_deposit_status_code"`
	// 売上入金 可否ステータス 更新日
	// 形式：`yyyy/MM/dd`.
	SalesDepositStatusUpdatedDate OptNilString `json:"sales_deposit_status_updated_date"`
	// 契約不成立日
	// 形式：`yyyy/MM/dd`.
	DeniedAt OptNilString `json:"denied_at"`
	// 請求停止フラグ.
	SuspendedBilling OptNilBool `json:"suspended_billing"`
	// 請求停止フラグ 更新日
	// 形式：`yyyy/MM/dd`.
	SuspendedBillingDate OptNilString `json:"suspended_billing_date"`
	// 入金停止フラグ.
	SuspendedPayment OptNilBool `json:"suspended_payment"`
	// 入金停止フラグ 更新日
	// 形式：`yyyy/MM/dd`.
	SuspendedPaymentDate OptNilString `json:"suspended_payment_date"`
	// サービス停止フラグ.
	SuspendedService OptNilBool `json:"suspended_service"`
	// サービス停止フラグ 更新日
	// 形式：`yyyy/MM/dd`.
	SuspendedServiceDate OptNilString `json:"suspended_service_date"`
	// 即時利用停止フラグ.
	SuspededImmediateUse OptNilBool `json:"suspeded_immediate_use"`
	// 即時利用停止フラグ 更新日
	// 形式：`yyyy/MM/dd`.
	SuspendedImmediateUseDate OptNilString `json:"suspended_immediate_use_date"`
	// 停止・解約 備考.
	StopCancelaltionMemo OptNilString `json:"stop_cancelaltion_memo"`
	// 特記事項（債権債務）.
	ObligationsNotice OptNilString `json:"obligations_notice"`
	// ショップ名（ユーザー用）.
	UserShopName OptNilString `json:"user_shop_name"`
	// 登録メールアドレス.
	RegisterMail OptNilString `json:"register_mail"`
	// プラットフォームの代表ショップか
	// - true: 代表ショップ
	// - false: 代表ショップではない.
	PlatformReprentativeShop OptNilBool               `json:"platform_reprentative_shop"`
	SharedCustomerFlag       OptNilSharedCustomerFlag `json:"shared_customer_flag"`
	// 契約情報.
	ContractDetail      OptContractContractDetail  `json:"contract_detail"`
	ContractBankAccount OptContractBankAccountInfo `json:"contract_bank_account"`
	ContractVirtualBank OptContractBankAccountInfo `json:"contract_virtual_bank"`
	// カード決済 仕向け先のリスト.
	ContractCardDestination         []CardDestination        `json:"contract_card_destination"`
	CreditCardSetting               OptCardPaymentSetting    `json:"credit_card_setting"`
	OfficialRegisteredCorporateInfo OptRegistryCorporateInfo `json:"official_registered_corporate_info"`
}

// GetShopID returns the value of ShopID.
func (s *Contract) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetPlatformID returns the value of PlatformID.
func (s *Contract) GetPlatformID() OptPlatformID {
	return s.PlatformID
}

// GetShopType returns the value of ShopType.
func (s *Contract) GetShopType() OptNilShopType {
	return s.ShopType
}

// GetStatusCode returns the value of StatusCode.
func (s *Contract) GetStatusCode() OptContractStatus {
	return s.StatusCode
}

// GetExamination returns the value of Examination.
func (s *Contract) GetExamination() []Examination {
	return s.Examination
}

// GetAvailableStatusCode returns the value of AvailableStatusCode.
func (s *Contract) GetAvailableStatusCode() OptContractAvailableStatusCode {
	return s.AvailableStatusCode
}

// GetCreateDate returns the value of CreateDate.
func (s *Contract) GetCreateDate() OptString {
	return s.CreateDate
}

// GetContractedAt returns the value of ContractedAt.
func (s *Contract) GetContractedAt() OptNilString {
	return s.ContractedAt
}

// GetStartChargingAt returns the value of StartChargingAt.
func (s *Contract) GetStartChargingAt() OptNilString {
	return s.StartChargingAt
}

// GetExpiredAt returns the value of ExpiredAt.
func (s *Contract) GetExpiredAt() OptNilString {
	return s.ExpiredAt
}

// GetSalesDepositStatusCode returns the value of SalesDepositStatusCode.
func (s *Contract) GetSalesDepositStatusCode() OptNilContractSalesDepositStatusCode {
	return s.SalesDepositStatusCode
}

// GetSalesDepositStatusUpdatedDate returns the value of SalesDepositStatusUpdatedDate.
func (s *Contract) GetSalesDepositStatusUpdatedDate() OptNilString {
	return s.SalesDepositStatusUpdatedDate
}

// GetDeniedAt returns the value of DeniedAt.
func (s *Contract) GetDeniedAt() OptNilString {
	return s.DeniedAt
}

// GetSuspendedBilling returns the value of SuspendedBilling.
func (s *Contract) GetSuspendedBilling() OptNilBool {
	return s.SuspendedBilling
}

// GetSuspendedBillingDate returns the value of SuspendedBillingDate.
func (s *Contract) GetSuspendedBillingDate() OptNilString {
	return s.SuspendedBillingDate
}

// GetSuspendedPayment returns the value of SuspendedPayment.
func (s *Contract) GetSuspendedPayment() OptNilBool {
	return s.SuspendedPayment
}

// GetSuspendedPaymentDate returns the value of SuspendedPaymentDate.
func (s *Contract) GetSuspendedPaymentDate() OptNilString {
	return s.SuspendedPaymentDate
}

// GetSuspendedService returns the value of SuspendedService.
func (s *Contract) GetSuspendedService() OptNilBool {
	return s.SuspendedService
}

// GetSuspendedServiceDate returns the value of SuspendedServiceDate.
func (s *Contract) GetSuspendedServiceDate() OptNilString {
	return s.SuspendedServiceDate
}

// GetSuspededImmediateUse returns the value of SuspededImmediateUse.
func (s *Contract) GetSuspededImmediateUse() OptNilBool {
	return s.SuspededImmediateUse
}

// GetSuspendedImmediateUseDate returns the value of SuspendedImmediateUseDate.
func (s *Contract) GetSuspendedImmediateUseDate() OptNilString {
	return s.SuspendedImmediateUseDate
}

// GetStopCancelaltionMemo returns the value of StopCancelaltionMemo.
func (s *Contract) GetStopCancelaltionMemo() OptNilString {
	return s.StopCancelaltionMemo
}

// GetObligationsNotice returns the value of ObligationsNotice.
func (s *Contract) GetObligationsNotice() OptNilString {
	return s.ObligationsNotice
}

// GetUserShopName returns the value of UserShopName.
func (s *Contract) GetUserShopName() OptNilString {
	return s.UserShopName
}

// GetRegisterMail returns the value of RegisterMail.
func (s *Contract) GetRegisterMail() OptNilString {
	return s.RegisterMail
}

// GetPlatformReprentativeShop returns the value of PlatformReprentativeShop.
func (s *Contract) GetPlatformReprentativeShop() OptNilBool {
	return s.PlatformReprentativeShop
}

// GetSharedCustomerFlag returns the value of SharedCustomerFlag.
func (s *Contract) GetSharedCustomerFlag() OptNilSharedCustomerFlag {
	return s.SharedCustomerFlag
}

// GetContractDetail returns the value of ContractDetail.
func (s *Contract) GetContractDetail() OptContractContractDetail {
	return s.ContractDetail
}

// GetContractBankAccount returns the value of ContractBankAccount.
func (s *Contract) GetContractBankAccount() OptContractBankAccountInfo {
	return s.ContractBankAccount
}

// GetContractVirtualBank returns the value of ContractVirtualBank.
func (s *Contract) GetContractVirtualBank() OptContractBankAccountInfo {
	return s.ContractVirtualBank
}

// GetContractCardDestination returns the value of ContractCardDestination.
func (s *Contract) GetContractCardDestination() []CardDestination {
	return s.ContractCardDestination
}

// GetCreditCardSetting returns the value of CreditCardSetting.
func (s *Contract) GetCreditCardSetting() OptCardPaymentSetting {
	return s.CreditCardSetting
}

// GetOfficialRegisteredCorporateInfo returns the value of OfficialRegisteredCorporateInfo.
func (s *Contract) GetOfficialRegisteredCorporateInfo() OptRegistryCorporateInfo {
	return s.OfficialRegisteredCorporateInfo
}

// SetShopID sets the value of ShopID.
func (s *Contract) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetPlatformID sets the value of PlatformID.
func (s *Contract) SetPlatformID(val OptPlatformID) {
	s.PlatformID = val
}

// SetShopType sets the value of ShopType.
func (s *Contract) SetShopType(val OptNilShopType) {
	s.ShopType = val
}

// SetStatusCode sets the value of StatusCode.
func (s *Contract) SetStatusCode(val OptContractStatus) {
	s.StatusCode = val
}

// SetExamination sets the value of Examination.
func (s *Contract) SetExamination(val []Examination) {
	s.Examination = val
}

// SetAvailableStatusCode sets the value of AvailableStatusCode.
func (s *Contract) SetAvailableStatusCode(val OptContractAvailableStatusCode) {
	s.AvailableStatusCode = val
}

// SetCreateDate sets the value of CreateDate.
func (s *Contract) SetCreateDate(val OptString) {
	s.CreateDate = val
}

// SetContractedAt sets the value of ContractedAt.
func (s *Contract) SetContractedAt(val OptNilString) {
	s.ContractedAt = val
}

// SetStartChargingAt sets the value of StartChargingAt.
func (s *Contract) SetStartChargingAt(val OptNilString) {
	s.StartChargingAt = val
}

// SetExpiredAt sets the value of ExpiredAt.
func (s *Contract) SetExpiredAt(val OptNilString) {
	s.ExpiredAt = val
}

// SetSalesDepositStatusCode sets the value of SalesDepositStatusCode.
func (s *Contract) SetSalesDepositStatusCode(val OptNilContractSalesDepositStatusCode) {
	s.SalesDepositStatusCode = val
}

// SetSalesDepositStatusUpdatedDate sets the value of SalesDepositStatusUpdatedDate.
func (s *Contract) SetSalesDepositStatusUpdatedDate(val OptNilString) {
	s.SalesDepositStatusUpdatedDate = val
}

// SetDeniedAt sets the value of DeniedAt.
func (s *Contract) SetDeniedAt(val OptNilString) {
	s.DeniedAt = val
}

// SetSuspendedBilling sets the value of SuspendedBilling.
func (s *Contract) SetSuspendedBilling(val OptNilBool) {
	s.SuspendedBilling = val
}

// SetSuspendedBillingDate sets the value of SuspendedBillingDate.
func (s *Contract) SetSuspendedBillingDate(val OptNilString) {
	s.SuspendedBillingDate = val
}

// SetSuspendedPayment sets the value of SuspendedPayment.
func (s *Contract) SetSuspendedPayment(val OptNilBool) {
	s.SuspendedPayment = val
}

// SetSuspendedPaymentDate sets the value of SuspendedPaymentDate.
func (s *Contract) SetSuspendedPaymentDate(val OptNilString) {
	s.SuspendedPaymentDate = val
}

// SetSuspendedService sets the value of SuspendedService.
func (s *Contract) SetSuspendedService(val OptNilBool) {
	s.SuspendedService = val
}

// SetSuspendedServiceDate sets the value of SuspendedServiceDate.
func (s *Contract) SetSuspendedServiceDate(val OptNilString) {
	s.SuspendedServiceDate = val
}

// SetSuspededImmediateUse sets the value of SuspededImmediateUse.
func (s *Contract) SetSuspededImmediateUse(val OptNilBool) {
	s.SuspededImmediateUse = val
}

// SetSuspendedImmediateUseDate sets the value of SuspendedImmediateUseDate.
func (s *Contract) SetSuspendedImmediateUseDate(val OptNilString) {
	s.SuspendedImmediateUseDate = val
}

// SetStopCancelaltionMemo sets the value of StopCancelaltionMemo.
func (s *Contract) SetStopCancelaltionMemo(val OptNilString) {
	s.StopCancelaltionMemo = val
}

// SetObligationsNotice sets the value of ObligationsNotice.
func (s *Contract) SetObligationsNotice(val OptNilString) {
	s.ObligationsNotice = val
}

// SetUserShopName sets the value of UserShopName.
func (s *Contract) SetUserShopName(val OptNilString) {
	s.UserShopName = val
}

// SetRegisterMail sets the value of RegisterMail.
func (s *Contract) SetRegisterMail(val OptNilString) {
	s.RegisterMail = val
}

// SetPlatformReprentativeShop sets the value of PlatformReprentativeShop.
func (s *Contract) SetPlatformReprentativeShop(val OptNilBool) {
	s.PlatformReprentativeShop = val
}

// SetSharedCustomerFlag sets the value of SharedCustomerFlag.
func (s *Contract) SetSharedCustomerFlag(val OptNilSharedCustomerFlag) {
	s.SharedCustomerFlag = val
}

// SetContractDetail sets the value of ContractDetail.
func (s *Contract) SetContractDetail(val OptContractContractDetail) {
	s.ContractDetail = val
}

// SetContractBankAccount sets the value of ContractBankAccount.
func (s *Contract) SetContractBankAccount(val OptContractBankAccountInfo) {
	s.ContractBankAccount = val
}

// SetContractVirtualBank sets the value of ContractVirtualBank.
func (s *Contract) SetContractVirtualBank(val OptContractBankAccountInfo) {
	s.ContractVirtualBank = val
}

// SetContractCardDestination sets the value of ContractCardDestination.
func (s *Contract) SetContractCardDestination(val []CardDestination) {
	s.ContractCardDestination = val
}

// SetCreditCardSetting sets the value of CreditCardSetting.
func (s *Contract) SetCreditCardSetting(val OptCardPaymentSetting) {
	s.CreditCardSetting = val
}

// SetOfficialRegisteredCorporateInfo sets the value of OfficialRegisteredCorporateInfo.
func (s *Contract) SetOfficialRegisteredCorporateInfo(val OptRegistryCorporateInfo) {
	s.OfficialRegisteredCorporateInfo = val
}

func (*Contract) retrieveTenantContractRes() {}

// 利用可能モード
// - 201: テスト環境のみ利用可能
// - 202: 本番環境利用可能.
type ContractAvailableStatusCode int

const (
	ContractAvailableStatusCode201 ContractAvailableStatusCode = 201
	ContractAvailableStatusCode202 ContractAvailableStatusCode = 202
)

// AllValues returns all ContractAvailableStatusCode values.
func (ContractAvailableStatusCode) AllValues() []ContractAvailableStatusCode {
	return []ContractAvailableStatusCode{
		ContractAvailableStatusCode201,
		ContractAvailableStatusCode202,
	}
}

// Ref: #/components/schemas/ContractBankAccountInfo
type ContractBankAccountInfo struct {
	// 銀行名.
	BankName OptString `json:"bank_name"`
	// 銀行名（カナ）.
	BankNameKana OptString `json:"bank_name_kana"`
	// 金融機関コード.
	BankCode OptString `json:"bank_code"`
	// 支店コード.
	BranchCode OptString `json:"branch_code"`
	// 支店名.
	BranchName OptString `json:"branch_name"`
	// 支店名（カナ）.
	BranchNameKana OptString `json:"branch_name_kana"`
	// 口座種別
	// - `0`: 普通
	// - `1`: 当座.
	AccountKind OptContractBankAccountInfoAccountKind `json:"account_kind"`
	// 口座番号.
	AccountNumber OptString `json:"account_number"`
	// 口座名義（カタカナ）.
	AccountName OptString `json:"account_name"`
}

// GetBankName returns the value of BankName.
func (s *ContractBankAccountInfo) GetBankName() OptString {
	return s.BankName
}

// GetBankNameKana returns the value of BankNameKana.
func (s *ContractBankAccountInfo) GetBankNameKana() OptString {
	return s.BankNameKana
}

// GetBankCode returns the value of BankCode.
func (s *ContractBankAccountInfo) GetBankCode() OptString {
	return s.BankCode
}

// GetBranchCode returns the value of BranchCode.
func (s *ContractBankAccountInfo) GetBranchCode() OptString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *ContractBankAccountInfo) GetBranchName() OptString {
	return s.BranchName
}

// GetBranchNameKana returns the value of BranchNameKana.
func (s *ContractBankAccountInfo) GetBranchNameKana() OptString {
	return s.BranchNameKana
}

// GetAccountKind returns the value of AccountKind.
func (s *ContractBankAccountInfo) GetAccountKind() OptContractBankAccountInfoAccountKind {
	return s.AccountKind
}

// GetAccountNumber returns the value of AccountNumber.
func (s *ContractBankAccountInfo) GetAccountNumber() OptString {
	return s.AccountNumber
}

// GetAccountName returns the value of AccountName.
func (s *ContractBankAccountInfo) GetAccountName() OptString {
	return s.AccountName
}

// SetBankName sets the value of BankName.
func (s *ContractBankAccountInfo) SetBankName(val OptString) {
	s.BankName = val
}

// SetBankNameKana sets the value of BankNameKana.
func (s *ContractBankAccountInfo) SetBankNameKana(val OptString) {
	s.BankNameKana = val
}

// SetBankCode sets the value of BankCode.
func (s *ContractBankAccountInfo) SetBankCode(val OptString) {
	s.BankCode = val
}

// SetBranchCode sets the value of BranchCode.
func (s *ContractBankAccountInfo) SetBranchCode(val OptString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *ContractBankAccountInfo) SetBranchName(val OptString) {
	s.BranchName = val
}

// SetBranchNameKana sets the value of BranchNameKana.
func (s *ContractBankAccountInfo) SetBranchNameKana(val OptString) {
	s.BranchNameKana = val
}

// SetAccountKind sets the value of AccountKind.
func (s *ContractBankAccountInfo) SetAccountKind(val OptContractBankAccountInfoAccountKind) {
	s.AccountKind = val
}

// SetAccountNumber sets the value of AccountNumber.
func (s *ContractBankAccountInfo) SetAccountNumber(val OptString) {
	s.AccountNumber = val
}

// SetAccountName sets the value of AccountName.
func (s *ContractBankAccountInfo) SetAccountName(val OptString) {
	s.AccountName = val
}

// 口座種別
// - `0`: 普通
// - `1`: 当座.
type ContractBankAccountInfoAccountKind float64

const (
	ContractBankAccountInfoAccountKind0 ContractBankAccountInfoAccountKind = 0
	ContractBankAccountInfoAccountKind1 ContractBankAccountInfoAccountKind = 1
)

// AllValues returns all ContractBankAccountInfoAccountKind values.
func (ContractBankAccountInfoAccountKind) AllValues() []ContractBankAccountInfoAccountKind {
	return []ContractBankAccountInfoAccountKind{
		ContractBankAccountInfoAccountKind0,
		ContractBankAccountInfoAccountKind1,
	}
}

// Merged schema.
type ContractContractDetail struct {
	// 事業形態
	// - `true`: 法人
	// - `false`: 個人事業主.
	Corporate                             OptNilBool                                  `json:"corporate"`
	CorporateNumber                       OptNilCorporateNumber                       `json:"corporate_number"`
	CorporateName                         OptCorporateName                            `json:"corporate_name"`
	CorporateNameKana                     OptCorporateNameKana                        `json:"corporate_name_kana"`
	Hp                                    OptNilHp                                    `json:"hp"`
	Capital                               OptNilCapital                               `json:"capital"`
	EstablishedAt                         OptNilEstablishedAt                         `json:"established_at"`
	YearlySales                           OptNilYearlySales                           `json:"yearly_sales"`
	BusinessDetails                       OptNilBusinessDetails                       `json:"business_details"`
	CompanyPostalCode                     OptNilCompanyPostalCode                     `json:"company_postal_code"`
	CompanyPrefecture                     OptNilCompanyPrefecture                     `json:"company_prefecture"`
	CompanyPrefectureKana                 OptNilCompanyPrefectureKana                 `json:"company_prefecture_kana"`
	CompanyAddressMunicipality            OptNilCompanyAddressMunicipality            `json:"company_address_municipality"`
	CompanyAddressMunicipalityKana        OptNilCompanyAddressMunicipalityKana        `json:"company_address_municipality_kana"`
	CompanyAddressSection                 OptNilCompanyAddressSection                 `json:"company_address_section"`
	CompanyAddressSectionKana             OptNilCompanyAddressSectionKana             `json:"company_address_section_kana"`
	CompanyAddressChrome                  OptNilCompanyAddressChrome                  `json:"company_address_chrome"`
	CompanyAddressChromeKana              OptNilCompanyAddressChromeKana              `json:"company_address_chrome_kana"`
	CompanyAddressBuildingName            OptNilCompanyAddressBuildingName            `json:"company_address_building_name"`
	CompanyAddressBuildingNameKana        OptNilCompanyAddressBuildingNameKana        `json:"company_address_building_name_kana"`
	CompanyTel                            OptNilCompanyTel                            `json:"company_tel"`
	RepresentativeLastName                OptNilRepresentativeLastName                `json:"representative_last_name"`
	RepresentativeLastNameKana            OptNilRepresentativeLastNameKana            `json:"representative_last_name_kana"`
	RepresentativeFirstName               OptNilRepresentativeFirstName               `json:"representative_first_name"`
	RepresentativeFirstNameKana           OptNilRepresentativeFirstNameKana           `json:"representative_first_name_kana"`
	RepresentativeBirthday                OptNilRepresentativeBirthday                `json:"representative_birthday"`
	RepresentativeGender                  OptNilRepresentativeGender                  `json:"representative_gender"`
	RepresentativePostalCode              OptNilRepresentativePostalCode              `json:"representative_postal_code"`
	RepresentativePrefecture              OptNilRepresentativePrefecture              `json:"representative_prefecture"`
	RepresentativePrefectureKana          OptNilRepresentativePrefectureKana          `json:"representative_prefecture_kana"`
	RepresentativeAddressMunicipality     OptNilRepresentativeAddressMunicipality     `json:"representative_address_municipality"`
	RepresentativeAddressMunicipalityKana OptNilRepresentativeAddressMunicipalityKana `json:"representative_address_municipality_kana"`
	RepresentativeAddressSection          OptNilRepresentativeAddressSection          `json:"representative_address_section"`
	RepresentativeAddressSectionKana      OptNilRepresentativeAddressSectionKana      `json:"representative_address_section_kana"`
	RepresentativeAddressChrome           OptNilRepresentativeAddressChrome           `json:"representative_address_chrome"`
	RepresentativeAddressChromeKana       OptNilRepresentativeAddressChromeKana       `json:"representative_address_chrome_kana"`
	RepresentativeTel                     OptNilRepresentativeTel                     `json:"representative_tel"`
	Staff1LastName                        OptNilStaff1LastName                        `json:"staff1_last_name"`
	Staff1LastNameKana                    OptNilStaff1LastNameKana                    `json:"staff1_last_name_kana"`
	Staff1FirstName                       OptNilStaff1FirstName                       `json:"staff1_first_name"`
	Staff1FirstNameKana                   OptNilStaff1FirstNameKana                   `json:"staff1_first_name_kana"`
	Staff1Tel                             OptNilStaff1Tel                             `json:"staff1_tel"`
	Staff1Mail                            OptNilStaff1Mail                            `json:"staff1_mail"`
	Staff2LastName                        OptNilStaff2LastName                        `json:"staff2_last_name"`
	Staff2LastNameKana                    OptNilStaff2LastNameKana                    `json:"staff2_last_name_kana"`
	Staff2FirstName                       OptNilStaff2FirstName                       `json:"staff2_first_name"`
	Staff2FirstNameKana                   OptNilStaff2FirstNameKana                   `json:"staff2_first_name_kana"`
	Staff2Tel                             OptNilStaff2Tel                             `json:"staff2_tel"`
	Staff2Mail                            OptNilStaff2Mail                            `json:"staff2_mail"`
	UsedOnApp                             OptNilUsedOnApp                             `json:"used_on_app"`
	UsedOnWeb                             OptNilUsedOnWeb                             `json:"used_on_web"`
	// その他の箇所での利用有無\
	// \
	// Webアプリケーションやネイティブアプリ上でない箇所で利用があるかどうか
	// - `true`: Webアプリ／ネイティブアプリでない箇所でfincodeを使用する.
	UsedOnOther OptNilBool `json:"used_on_other"`
	// Webサイトの公開状況\
	// \
	// fincode審査時点で決済機能を提供するWebサイトが閲覧可能かどうかを示します。
	// - `0`: fincode審査チームがサイトを閲覧可能
	// - `1`: fincode審査チームがサイトを閲覧不可能（ただし準備中）
	// - `2`: fincode審査チームがサイトを閲覧不可能.
	SiteExisting   OptContractContractDetailSiteExisting `json:"site_existing"`
	URL            OptNilURL                             `json:"url"`
	SiteCredential OptNilCredential                      `json:"site_credential"`
	ShopName       OptPropertiesShopName                 `json:"shop_name"`
	ShopNameKana   OptPropertiesShopNameKana             `json:"shop_name_kana"`
	ShopNameEn     OptShopNameEn                         `json:"shop_name_en"`
	// プラットフォーム名.
	PlatformName           OptNilString         `json:"platform_name"`
	SupportTel             OptNilSupportTel     `json:"support_tel"`
	SupportMail            OptNilSupportMail    `json:"support_mail"`
	ProvidesProduct        OptNilProduct        `json:"provides_product"`
	ProvidesService        OptNilService        `json:"provides_service"`
	ProvidesDigitalContent OptNilDigitalContent `json:"provides_digital_content"`
	Prepaid                OptNilPrepaidPoint   `json:"prepaid"`
	UnitPrice              OptNilUnitPrice      `json:"unit_price"`
	// 取扱商材カテゴリID.
	ContentCategoryMasterID OptNilFloat64               `json:"content_category_master_id"`
	ContentDescription      OptNilContentDescription    `json:"content_description"`
	ExpiretionDateOfPoint   OptNilAboutExpiration       `json:"expiretion_date_of_point"`
	UsageOfPoint            OptNilHowToUse              `json:"usage_of_point"`
	LostTrial               OptNilLostTrial             `json:"lost_trial"`
	DealsInsecureContent    OptNilDealsInsecureContent  `json:"deals_insecure_content"`
	DealsLongApplyContent   OptNilDealsLongApplyContent `json:"deals_long_apply_content"`
	PayBy                   OptShopPaymentMethod        `json:"pay_by"`
}

// GetCorporate returns the value of Corporate.
func (s *ContractContractDetail) GetCorporate() OptNilBool {
	return s.Corporate
}

// GetCorporateNumber returns the value of CorporateNumber.
func (s *ContractContractDetail) GetCorporateNumber() OptNilCorporateNumber {
	return s.CorporateNumber
}

// GetCorporateName returns the value of CorporateName.
func (s *ContractContractDetail) GetCorporateName() OptCorporateName {
	return s.CorporateName
}

// GetCorporateNameKana returns the value of CorporateNameKana.
func (s *ContractContractDetail) GetCorporateNameKana() OptCorporateNameKana {
	return s.CorporateNameKana
}

// GetHp returns the value of Hp.
func (s *ContractContractDetail) GetHp() OptNilHp {
	return s.Hp
}

// GetCapital returns the value of Capital.
func (s *ContractContractDetail) GetCapital() OptNilCapital {
	return s.Capital
}

// GetEstablishedAt returns the value of EstablishedAt.
func (s *ContractContractDetail) GetEstablishedAt() OptNilEstablishedAt {
	return s.EstablishedAt
}

// GetYearlySales returns the value of YearlySales.
func (s *ContractContractDetail) GetYearlySales() OptNilYearlySales {
	return s.YearlySales
}

// GetBusinessDetails returns the value of BusinessDetails.
func (s *ContractContractDetail) GetBusinessDetails() OptNilBusinessDetails {
	return s.BusinessDetails
}

// GetCompanyPostalCode returns the value of CompanyPostalCode.
func (s *ContractContractDetail) GetCompanyPostalCode() OptNilCompanyPostalCode {
	return s.CompanyPostalCode
}

// GetCompanyPrefecture returns the value of CompanyPrefecture.
func (s *ContractContractDetail) GetCompanyPrefecture() OptNilCompanyPrefecture {
	return s.CompanyPrefecture
}

// GetCompanyPrefectureKana returns the value of CompanyPrefectureKana.
func (s *ContractContractDetail) GetCompanyPrefectureKana() OptNilCompanyPrefectureKana {
	return s.CompanyPrefectureKana
}

// GetCompanyAddressMunicipality returns the value of CompanyAddressMunicipality.
func (s *ContractContractDetail) GetCompanyAddressMunicipality() OptNilCompanyAddressMunicipality {
	return s.CompanyAddressMunicipality
}

// GetCompanyAddressMunicipalityKana returns the value of CompanyAddressMunicipalityKana.
func (s *ContractContractDetail) GetCompanyAddressMunicipalityKana() OptNilCompanyAddressMunicipalityKana {
	return s.CompanyAddressMunicipalityKana
}

// GetCompanyAddressSection returns the value of CompanyAddressSection.
func (s *ContractContractDetail) GetCompanyAddressSection() OptNilCompanyAddressSection {
	return s.CompanyAddressSection
}

// GetCompanyAddressSectionKana returns the value of CompanyAddressSectionKana.
func (s *ContractContractDetail) GetCompanyAddressSectionKana() OptNilCompanyAddressSectionKana {
	return s.CompanyAddressSectionKana
}

// GetCompanyAddressChrome returns the value of CompanyAddressChrome.
func (s *ContractContractDetail) GetCompanyAddressChrome() OptNilCompanyAddressChrome {
	return s.CompanyAddressChrome
}

// GetCompanyAddressChromeKana returns the value of CompanyAddressChromeKana.
func (s *ContractContractDetail) GetCompanyAddressChromeKana() OptNilCompanyAddressChromeKana {
	return s.CompanyAddressChromeKana
}

// GetCompanyAddressBuildingName returns the value of CompanyAddressBuildingName.
func (s *ContractContractDetail) GetCompanyAddressBuildingName() OptNilCompanyAddressBuildingName {
	return s.CompanyAddressBuildingName
}

// GetCompanyAddressBuildingNameKana returns the value of CompanyAddressBuildingNameKana.
func (s *ContractContractDetail) GetCompanyAddressBuildingNameKana() OptNilCompanyAddressBuildingNameKana {
	return s.CompanyAddressBuildingNameKana
}

// GetCompanyTel returns the value of CompanyTel.
func (s *ContractContractDetail) GetCompanyTel() OptNilCompanyTel {
	return s.CompanyTel
}

// GetRepresentativeLastName returns the value of RepresentativeLastName.
func (s *ContractContractDetail) GetRepresentativeLastName() OptNilRepresentativeLastName {
	return s.RepresentativeLastName
}

// GetRepresentativeLastNameKana returns the value of RepresentativeLastNameKana.
func (s *ContractContractDetail) GetRepresentativeLastNameKana() OptNilRepresentativeLastNameKana {
	return s.RepresentativeLastNameKana
}

// GetRepresentativeFirstName returns the value of RepresentativeFirstName.
func (s *ContractContractDetail) GetRepresentativeFirstName() OptNilRepresentativeFirstName {
	return s.RepresentativeFirstName
}

// GetRepresentativeFirstNameKana returns the value of RepresentativeFirstNameKana.
func (s *ContractContractDetail) GetRepresentativeFirstNameKana() OptNilRepresentativeFirstNameKana {
	return s.RepresentativeFirstNameKana
}

// GetRepresentativeBirthday returns the value of RepresentativeBirthday.
func (s *ContractContractDetail) GetRepresentativeBirthday() OptNilRepresentativeBirthday {
	return s.RepresentativeBirthday
}

// GetRepresentativeGender returns the value of RepresentativeGender.
func (s *ContractContractDetail) GetRepresentativeGender() OptNilRepresentativeGender {
	return s.RepresentativeGender
}

// GetRepresentativePostalCode returns the value of RepresentativePostalCode.
func (s *ContractContractDetail) GetRepresentativePostalCode() OptNilRepresentativePostalCode {
	return s.RepresentativePostalCode
}

// GetRepresentativePrefecture returns the value of RepresentativePrefecture.
func (s *ContractContractDetail) GetRepresentativePrefecture() OptNilRepresentativePrefecture {
	return s.RepresentativePrefecture
}

// GetRepresentativePrefectureKana returns the value of RepresentativePrefectureKana.
func (s *ContractContractDetail) GetRepresentativePrefectureKana() OptNilRepresentativePrefectureKana {
	return s.RepresentativePrefectureKana
}

// GetRepresentativeAddressMunicipality returns the value of RepresentativeAddressMunicipality.
func (s *ContractContractDetail) GetRepresentativeAddressMunicipality() OptNilRepresentativeAddressMunicipality {
	return s.RepresentativeAddressMunicipality
}

// GetRepresentativeAddressMunicipalityKana returns the value of RepresentativeAddressMunicipalityKana.
func (s *ContractContractDetail) GetRepresentativeAddressMunicipalityKana() OptNilRepresentativeAddressMunicipalityKana {
	return s.RepresentativeAddressMunicipalityKana
}

// GetRepresentativeAddressSection returns the value of RepresentativeAddressSection.
func (s *ContractContractDetail) GetRepresentativeAddressSection() OptNilRepresentativeAddressSection {
	return s.RepresentativeAddressSection
}

// GetRepresentativeAddressSectionKana returns the value of RepresentativeAddressSectionKana.
func (s *ContractContractDetail) GetRepresentativeAddressSectionKana() OptNilRepresentativeAddressSectionKana {
	return s.RepresentativeAddressSectionKana
}

// GetRepresentativeAddressChrome returns the value of RepresentativeAddressChrome.
func (s *ContractContractDetail) GetRepresentativeAddressChrome() OptNilRepresentativeAddressChrome {
	return s.RepresentativeAddressChrome
}

// GetRepresentativeAddressChromeKana returns the value of RepresentativeAddressChromeKana.
func (s *ContractContractDetail) GetRepresentativeAddressChromeKana() OptNilRepresentativeAddressChromeKana {
	return s.RepresentativeAddressChromeKana
}

// GetRepresentativeTel returns the value of RepresentativeTel.
func (s *ContractContractDetail) GetRepresentativeTel() OptNilRepresentativeTel {
	return s.RepresentativeTel
}

// GetStaff1LastName returns the value of Staff1LastName.
func (s *ContractContractDetail) GetStaff1LastName() OptNilStaff1LastName {
	return s.Staff1LastName
}

// GetStaff1LastNameKana returns the value of Staff1LastNameKana.
func (s *ContractContractDetail) GetStaff1LastNameKana() OptNilStaff1LastNameKana {
	return s.Staff1LastNameKana
}

// GetStaff1FirstName returns the value of Staff1FirstName.
func (s *ContractContractDetail) GetStaff1FirstName() OptNilStaff1FirstName {
	return s.Staff1FirstName
}

// GetStaff1FirstNameKana returns the value of Staff1FirstNameKana.
func (s *ContractContractDetail) GetStaff1FirstNameKana() OptNilStaff1FirstNameKana {
	return s.Staff1FirstNameKana
}

// GetStaff1Tel returns the value of Staff1Tel.
func (s *ContractContractDetail) GetStaff1Tel() OptNilStaff1Tel {
	return s.Staff1Tel
}

// GetStaff1Mail returns the value of Staff1Mail.
func (s *ContractContractDetail) GetStaff1Mail() OptNilStaff1Mail {
	return s.Staff1Mail
}

// GetStaff2LastName returns the value of Staff2LastName.
func (s *ContractContractDetail) GetStaff2LastName() OptNilStaff2LastName {
	return s.Staff2LastName
}

// GetStaff2LastNameKana returns the value of Staff2LastNameKana.
func (s *ContractContractDetail) GetStaff2LastNameKana() OptNilStaff2LastNameKana {
	return s.Staff2LastNameKana
}

// GetStaff2FirstName returns the value of Staff2FirstName.
func (s *ContractContractDetail) GetStaff2FirstName() OptNilStaff2FirstName {
	return s.Staff2FirstName
}

// GetStaff2FirstNameKana returns the value of Staff2FirstNameKana.
func (s *ContractContractDetail) GetStaff2FirstNameKana() OptNilStaff2FirstNameKana {
	return s.Staff2FirstNameKana
}

// GetStaff2Tel returns the value of Staff2Tel.
func (s *ContractContractDetail) GetStaff2Tel() OptNilStaff2Tel {
	return s.Staff2Tel
}

// GetStaff2Mail returns the value of Staff2Mail.
func (s *ContractContractDetail) GetStaff2Mail() OptNilStaff2Mail {
	return s.Staff2Mail
}

// GetUsedOnApp returns the value of UsedOnApp.
func (s *ContractContractDetail) GetUsedOnApp() OptNilUsedOnApp {
	return s.UsedOnApp
}

// GetUsedOnWeb returns the value of UsedOnWeb.
func (s *ContractContractDetail) GetUsedOnWeb() OptNilUsedOnWeb {
	return s.UsedOnWeb
}

// GetUsedOnOther returns the value of UsedOnOther.
func (s *ContractContractDetail) GetUsedOnOther() OptNilBool {
	return s.UsedOnOther
}

// GetSiteExisting returns the value of SiteExisting.
func (s *ContractContractDetail) GetSiteExisting() OptContractContractDetailSiteExisting {
	return s.SiteExisting
}

// GetURL returns the value of URL.
func (s *ContractContractDetail) GetURL() OptNilURL {
	return s.URL
}

// GetSiteCredential returns the value of SiteCredential.
func (s *ContractContractDetail) GetSiteCredential() OptNilCredential {
	return s.SiteCredential
}

// GetShopName returns the value of ShopName.
func (s *ContractContractDetail) GetShopName() OptPropertiesShopName {
	return s.ShopName
}

// GetShopNameKana returns the value of ShopNameKana.
func (s *ContractContractDetail) GetShopNameKana() OptPropertiesShopNameKana {
	return s.ShopNameKana
}

// GetShopNameEn returns the value of ShopNameEn.
func (s *ContractContractDetail) GetShopNameEn() OptShopNameEn {
	return s.ShopNameEn
}

// GetPlatformName returns the value of PlatformName.
func (s *ContractContractDetail) GetPlatformName() OptNilString {
	return s.PlatformName
}

// GetSupportTel returns the value of SupportTel.
func (s *ContractContractDetail) GetSupportTel() OptNilSupportTel {
	return s.SupportTel
}

// GetSupportMail returns the value of SupportMail.
func (s *ContractContractDetail) GetSupportMail() OptNilSupportMail {
	return s.SupportMail
}

// GetProvidesProduct returns the value of ProvidesProduct.
func (s *ContractContractDetail) GetProvidesProduct() OptNilProduct {
	return s.ProvidesProduct
}

// GetProvidesService returns the value of ProvidesService.
func (s *ContractContractDetail) GetProvidesService() OptNilService {
	return s.ProvidesService
}

// GetProvidesDigitalContent returns the value of ProvidesDigitalContent.
func (s *ContractContractDetail) GetProvidesDigitalContent() OptNilDigitalContent {
	return s.ProvidesDigitalContent
}

// GetPrepaid returns the value of Prepaid.
func (s *ContractContractDetail) GetPrepaid() OptNilPrepaidPoint {
	return s.Prepaid
}

// GetUnitPrice returns the value of UnitPrice.
func (s *ContractContractDetail) GetUnitPrice() OptNilUnitPrice {
	return s.UnitPrice
}

// GetContentCategoryMasterID returns the value of ContentCategoryMasterID.
func (s *ContractContractDetail) GetContentCategoryMasterID() OptNilFloat64 {
	return s.ContentCategoryMasterID
}

// GetContentDescription returns the value of ContentDescription.
func (s *ContractContractDetail) GetContentDescription() OptNilContentDescription {
	return s.ContentDescription
}

// GetExpiretionDateOfPoint returns the value of ExpiretionDateOfPoint.
func (s *ContractContractDetail) GetExpiretionDateOfPoint() OptNilAboutExpiration {
	return s.ExpiretionDateOfPoint
}

// GetUsageOfPoint returns the value of UsageOfPoint.
func (s *ContractContractDetail) GetUsageOfPoint() OptNilHowToUse {
	return s.UsageOfPoint
}

// GetLostTrial returns the value of LostTrial.
func (s *ContractContractDetail) GetLostTrial() OptNilLostTrial {
	return s.LostTrial
}

// GetDealsInsecureContent returns the value of DealsInsecureContent.
func (s *ContractContractDetail) GetDealsInsecureContent() OptNilDealsInsecureContent {
	return s.DealsInsecureContent
}

// GetDealsLongApplyContent returns the value of DealsLongApplyContent.
func (s *ContractContractDetail) GetDealsLongApplyContent() OptNilDealsLongApplyContent {
	return s.DealsLongApplyContent
}

// GetPayBy returns the value of PayBy.
func (s *ContractContractDetail) GetPayBy() OptShopPaymentMethod {
	return s.PayBy
}

// SetCorporate sets the value of Corporate.
func (s *ContractContractDetail) SetCorporate(val OptNilBool) {
	s.Corporate = val
}

// SetCorporateNumber sets the value of CorporateNumber.
func (s *ContractContractDetail) SetCorporateNumber(val OptNilCorporateNumber) {
	s.CorporateNumber = val
}

// SetCorporateName sets the value of CorporateName.
func (s *ContractContractDetail) SetCorporateName(val OptCorporateName) {
	s.CorporateName = val
}

// SetCorporateNameKana sets the value of CorporateNameKana.
func (s *ContractContractDetail) SetCorporateNameKana(val OptCorporateNameKana) {
	s.CorporateNameKana = val
}

// SetHp sets the value of Hp.
func (s *ContractContractDetail) SetHp(val OptNilHp) {
	s.Hp = val
}

// SetCapital sets the value of Capital.
func (s *ContractContractDetail) SetCapital(val OptNilCapital) {
	s.Capital = val
}

// SetEstablishedAt sets the value of EstablishedAt.
func (s *ContractContractDetail) SetEstablishedAt(val OptNilEstablishedAt) {
	s.EstablishedAt = val
}

// SetYearlySales sets the value of YearlySales.
func (s *ContractContractDetail) SetYearlySales(val OptNilYearlySales) {
	s.YearlySales = val
}

// SetBusinessDetails sets the value of BusinessDetails.
func (s *ContractContractDetail) SetBusinessDetails(val OptNilBusinessDetails) {
	s.BusinessDetails = val
}

// SetCompanyPostalCode sets the value of CompanyPostalCode.
func (s *ContractContractDetail) SetCompanyPostalCode(val OptNilCompanyPostalCode) {
	s.CompanyPostalCode = val
}

// SetCompanyPrefecture sets the value of CompanyPrefecture.
func (s *ContractContractDetail) SetCompanyPrefecture(val OptNilCompanyPrefecture) {
	s.CompanyPrefecture = val
}

// SetCompanyPrefectureKana sets the value of CompanyPrefectureKana.
func (s *ContractContractDetail) SetCompanyPrefectureKana(val OptNilCompanyPrefectureKana) {
	s.CompanyPrefectureKana = val
}

// SetCompanyAddressMunicipality sets the value of CompanyAddressMunicipality.
func (s *ContractContractDetail) SetCompanyAddressMunicipality(val OptNilCompanyAddressMunicipality) {
	s.CompanyAddressMunicipality = val
}

// SetCompanyAddressMunicipalityKana sets the value of CompanyAddressMunicipalityKana.
func (s *ContractContractDetail) SetCompanyAddressMunicipalityKana(val OptNilCompanyAddressMunicipalityKana) {
	s.CompanyAddressMunicipalityKana = val
}

// SetCompanyAddressSection sets the value of CompanyAddressSection.
func (s *ContractContractDetail) SetCompanyAddressSection(val OptNilCompanyAddressSection) {
	s.CompanyAddressSection = val
}

// SetCompanyAddressSectionKana sets the value of CompanyAddressSectionKana.
func (s *ContractContractDetail) SetCompanyAddressSectionKana(val OptNilCompanyAddressSectionKana) {
	s.CompanyAddressSectionKana = val
}

// SetCompanyAddressChrome sets the value of CompanyAddressChrome.
func (s *ContractContractDetail) SetCompanyAddressChrome(val OptNilCompanyAddressChrome) {
	s.CompanyAddressChrome = val
}

// SetCompanyAddressChromeKana sets the value of CompanyAddressChromeKana.
func (s *ContractContractDetail) SetCompanyAddressChromeKana(val OptNilCompanyAddressChromeKana) {
	s.CompanyAddressChromeKana = val
}

// SetCompanyAddressBuildingName sets the value of CompanyAddressBuildingName.
func (s *ContractContractDetail) SetCompanyAddressBuildingName(val OptNilCompanyAddressBuildingName) {
	s.CompanyAddressBuildingName = val
}

// SetCompanyAddressBuildingNameKana sets the value of CompanyAddressBuildingNameKana.
func (s *ContractContractDetail) SetCompanyAddressBuildingNameKana(val OptNilCompanyAddressBuildingNameKana) {
	s.CompanyAddressBuildingNameKana = val
}

// SetCompanyTel sets the value of CompanyTel.
func (s *ContractContractDetail) SetCompanyTel(val OptNilCompanyTel) {
	s.CompanyTel = val
}

// SetRepresentativeLastName sets the value of RepresentativeLastName.
func (s *ContractContractDetail) SetRepresentativeLastName(val OptNilRepresentativeLastName) {
	s.RepresentativeLastName = val
}

// SetRepresentativeLastNameKana sets the value of RepresentativeLastNameKana.
func (s *ContractContractDetail) SetRepresentativeLastNameKana(val OptNilRepresentativeLastNameKana) {
	s.RepresentativeLastNameKana = val
}

// SetRepresentativeFirstName sets the value of RepresentativeFirstName.
func (s *ContractContractDetail) SetRepresentativeFirstName(val OptNilRepresentativeFirstName) {
	s.RepresentativeFirstName = val
}

// SetRepresentativeFirstNameKana sets the value of RepresentativeFirstNameKana.
func (s *ContractContractDetail) SetRepresentativeFirstNameKana(val OptNilRepresentativeFirstNameKana) {
	s.RepresentativeFirstNameKana = val
}

// SetRepresentativeBirthday sets the value of RepresentativeBirthday.
func (s *ContractContractDetail) SetRepresentativeBirthday(val OptNilRepresentativeBirthday) {
	s.RepresentativeBirthday = val
}

// SetRepresentativeGender sets the value of RepresentativeGender.
func (s *ContractContractDetail) SetRepresentativeGender(val OptNilRepresentativeGender) {
	s.RepresentativeGender = val
}

// SetRepresentativePostalCode sets the value of RepresentativePostalCode.
func (s *ContractContractDetail) SetRepresentativePostalCode(val OptNilRepresentativePostalCode) {
	s.RepresentativePostalCode = val
}

// SetRepresentativePrefecture sets the value of RepresentativePrefecture.
func (s *ContractContractDetail) SetRepresentativePrefecture(val OptNilRepresentativePrefecture) {
	s.RepresentativePrefecture = val
}

// SetRepresentativePrefectureKana sets the value of RepresentativePrefectureKana.
func (s *ContractContractDetail) SetRepresentativePrefectureKana(val OptNilRepresentativePrefectureKana) {
	s.RepresentativePrefectureKana = val
}

// SetRepresentativeAddressMunicipality sets the value of RepresentativeAddressMunicipality.
func (s *ContractContractDetail) SetRepresentativeAddressMunicipality(val OptNilRepresentativeAddressMunicipality) {
	s.RepresentativeAddressMunicipality = val
}

// SetRepresentativeAddressMunicipalityKana sets the value of RepresentativeAddressMunicipalityKana.
func (s *ContractContractDetail) SetRepresentativeAddressMunicipalityKana(val OptNilRepresentativeAddressMunicipalityKana) {
	s.RepresentativeAddressMunicipalityKana = val
}

// SetRepresentativeAddressSection sets the value of RepresentativeAddressSection.
func (s *ContractContractDetail) SetRepresentativeAddressSection(val OptNilRepresentativeAddressSection) {
	s.RepresentativeAddressSection = val
}

// SetRepresentativeAddressSectionKana sets the value of RepresentativeAddressSectionKana.
func (s *ContractContractDetail) SetRepresentativeAddressSectionKana(val OptNilRepresentativeAddressSectionKana) {
	s.RepresentativeAddressSectionKana = val
}

// SetRepresentativeAddressChrome sets the value of RepresentativeAddressChrome.
func (s *ContractContractDetail) SetRepresentativeAddressChrome(val OptNilRepresentativeAddressChrome) {
	s.RepresentativeAddressChrome = val
}

// SetRepresentativeAddressChromeKana sets the value of RepresentativeAddressChromeKana.
func (s *ContractContractDetail) SetRepresentativeAddressChromeKana(val OptNilRepresentativeAddressChromeKana) {
	s.RepresentativeAddressChromeKana = val
}

// SetRepresentativeTel sets the value of RepresentativeTel.
func (s *ContractContractDetail) SetRepresentativeTel(val OptNilRepresentativeTel) {
	s.RepresentativeTel = val
}

// SetStaff1LastName sets the value of Staff1LastName.
func (s *ContractContractDetail) SetStaff1LastName(val OptNilStaff1LastName) {
	s.Staff1LastName = val
}

// SetStaff1LastNameKana sets the value of Staff1LastNameKana.
func (s *ContractContractDetail) SetStaff1LastNameKana(val OptNilStaff1LastNameKana) {
	s.Staff1LastNameKana = val
}

// SetStaff1FirstName sets the value of Staff1FirstName.
func (s *ContractContractDetail) SetStaff1FirstName(val OptNilStaff1FirstName) {
	s.Staff1FirstName = val
}

// SetStaff1FirstNameKana sets the value of Staff1FirstNameKana.
func (s *ContractContractDetail) SetStaff1FirstNameKana(val OptNilStaff1FirstNameKana) {
	s.Staff1FirstNameKana = val
}

// SetStaff1Tel sets the value of Staff1Tel.
func (s *ContractContractDetail) SetStaff1Tel(val OptNilStaff1Tel) {
	s.Staff1Tel = val
}

// SetStaff1Mail sets the value of Staff1Mail.
func (s *ContractContractDetail) SetStaff1Mail(val OptNilStaff1Mail) {
	s.Staff1Mail = val
}

// SetStaff2LastName sets the value of Staff2LastName.
func (s *ContractContractDetail) SetStaff2LastName(val OptNilStaff2LastName) {
	s.Staff2LastName = val
}

// SetStaff2LastNameKana sets the value of Staff2LastNameKana.
func (s *ContractContractDetail) SetStaff2LastNameKana(val OptNilStaff2LastNameKana) {
	s.Staff2LastNameKana = val
}

// SetStaff2FirstName sets the value of Staff2FirstName.
func (s *ContractContractDetail) SetStaff2FirstName(val OptNilStaff2FirstName) {
	s.Staff2FirstName = val
}

// SetStaff2FirstNameKana sets the value of Staff2FirstNameKana.
func (s *ContractContractDetail) SetStaff2FirstNameKana(val OptNilStaff2FirstNameKana) {
	s.Staff2FirstNameKana = val
}

// SetStaff2Tel sets the value of Staff2Tel.
func (s *ContractContractDetail) SetStaff2Tel(val OptNilStaff2Tel) {
	s.Staff2Tel = val
}

// SetStaff2Mail sets the value of Staff2Mail.
func (s *ContractContractDetail) SetStaff2Mail(val OptNilStaff2Mail) {
	s.Staff2Mail = val
}

// SetUsedOnApp sets the value of UsedOnApp.
func (s *ContractContractDetail) SetUsedOnApp(val OptNilUsedOnApp) {
	s.UsedOnApp = val
}

// SetUsedOnWeb sets the value of UsedOnWeb.
func (s *ContractContractDetail) SetUsedOnWeb(val OptNilUsedOnWeb) {
	s.UsedOnWeb = val
}

// SetUsedOnOther sets the value of UsedOnOther.
func (s *ContractContractDetail) SetUsedOnOther(val OptNilBool) {
	s.UsedOnOther = val
}

// SetSiteExisting sets the value of SiteExisting.
func (s *ContractContractDetail) SetSiteExisting(val OptContractContractDetailSiteExisting) {
	s.SiteExisting = val
}

// SetURL sets the value of URL.
func (s *ContractContractDetail) SetURL(val OptNilURL) {
	s.URL = val
}

// SetSiteCredential sets the value of SiteCredential.
func (s *ContractContractDetail) SetSiteCredential(val OptNilCredential) {
	s.SiteCredential = val
}

// SetShopName sets the value of ShopName.
func (s *ContractContractDetail) SetShopName(val OptPropertiesShopName) {
	s.ShopName = val
}

// SetShopNameKana sets the value of ShopNameKana.
func (s *ContractContractDetail) SetShopNameKana(val OptPropertiesShopNameKana) {
	s.ShopNameKana = val
}

// SetShopNameEn sets the value of ShopNameEn.
func (s *ContractContractDetail) SetShopNameEn(val OptShopNameEn) {
	s.ShopNameEn = val
}

// SetPlatformName sets the value of PlatformName.
func (s *ContractContractDetail) SetPlatformName(val OptNilString) {
	s.PlatformName = val
}

// SetSupportTel sets the value of SupportTel.
func (s *ContractContractDetail) SetSupportTel(val OptNilSupportTel) {
	s.SupportTel = val
}

// SetSupportMail sets the value of SupportMail.
func (s *ContractContractDetail) SetSupportMail(val OptNilSupportMail) {
	s.SupportMail = val
}

// SetProvidesProduct sets the value of ProvidesProduct.
func (s *ContractContractDetail) SetProvidesProduct(val OptNilProduct) {
	s.ProvidesProduct = val
}

// SetProvidesService sets the value of ProvidesService.
func (s *ContractContractDetail) SetProvidesService(val OptNilService) {
	s.ProvidesService = val
}

// SetProvidesDigitalContent sets the value of ProvidesDigitalContent.
func (s *ContractContractDetail) SetProvidesDigitalContent(val OptNilDigitalContent) {
	s.ProvidesDigitalContent = val
}

// SetPrepaid sets the value of Prepaid.
func (s *ContractContractDetail) SetPrepaid(val OptNilPrepaidPoint) {
	s.Prepaid = val
}

// SetUnitPrice sets the value of UnitPrice.
func (s *ContractContractDetail) SetUnitPrice(val OptNilUnitPrice) {
	s.UnitPrice = val
}

// SetContentCategoryMasterID sets the value of ContentCategoryMasterID.
func (s *ContractContractDetail) SetContentCategoryMasterID(val OptNilFloat64) {
	s.ContentCategoryMasterID = val
}

// SetContentDescription sets the value of ContentDescription.
func (s *ContractContractDetail) SetContentDescription(val OptNilContentDescription) {
	s.ContentDescription = val
}

// SetExpiretionDateOfPoint sets the value of ExpiretionDateOfPoint.
func (s *ContractContractDetail) SetExpiretionDateOfPoint(val OptNilAboutExpiration) {
	s.ExpiretionDateOfPoint = val
}

// SetUsageOfPoint sets the value of UsageOfPoint.
func (s *ContractContractDetail) SetUsageOfPoint(val OptNilHowToUse) {
	s.UsageOfPoint = val
}

// SetLostTrial sets the value of LostTrial.
func (s *ContractContractDetail) SetLostTrial(val OptNilLostTrial) {
	s.LostTrial = val
}

// SetDealsInsecureContent sets the value of DealsInsecureContent.
func (s *ContractContractDetail) SetDealsInsecureContent(val OptNilDealsInsecureContent) {
	s.DealsInsecureContent = val
}

// SetDealsLongApplyContent sets the value of DealsLongApplyContent.
func (s *ContractContractDetail) SetDealsLongApplyContent(val OptNilDealsLongApplyContent) {
	s.DealsLongApplyContent = val
}

// SetPayBy sets the value of PayBy.
func (s *ContractContractDetail) SetPayBy(val OptShopPaymentMethod) {
	s.PayBy = val
}

// Webサイトの公開状況\
// \
// fincode審査時点で決済機能を提供するWebサイトが閲覧可能かどうかを示します。
// - `0`: fincode審査チームがサイトを閲覧可能
// - `1`: fincode審査チームがサイトを閲覧不可能（ただし準備中）
// - `2`: fincode審査チームがサイトを閲覧不可能.
type ContractContractDetailSiteExisting float64

const (
	ContractContractDetailSiteExisting0 ContractContractDetailSiteExisting = 0
	ContractContractDetailSiteExisting1 ContractContractDetailSiteExisting = 1
	ContractContractDetailSiteExisting2 ContractContractDetailSiteExisting = 2
)

// AllValues returns all ContractContractDetailSiteExisting values.
func (ContractContractDetailSiteExisting) AllValues() []ContractContractDetailSiteExisting {
	return []ContractContractDetailSiteExisting{
		ContractContractDetailSiteExisting0,
		ContractContractDetailSiteExisting1,
		ContractContractDetailSiteExisting2,
	}
}

// Ref: #/components/schemas/ContractInfo.V2
type ContractInfoV2 struct {
	// 代表者 姓
	// 形式： 漢字/ひらがな/カタカナ/半角英字.
	RepresentativeLastName NilString `json:"representative_last_name"`
	// 代表者 姓（カナ）\
	// 形式： 全角カナ.
	RepresentativeLastNameKana NilString `json:"representative_last_name_kana"`
	// 代表者 名\
	// 形式： 漢字/ひらがな/カタカナ/半角英字.
	RepresentativeFirstName NilString `json:"representative_first_name"`
	// 代表者 名（カナ）\
	// 形式： 全角カナ.
	RepresentativeFirstNameKana NilString `json:"representative_first_name_kana"`
	// 代表者 住所 郵便番号\
	// 形式：`xxx-xxxx`.
	RepresentativePostalCode NilString `json:"representative_postal_code"`
	// 代表者 住所 都道府県\
	// 形式： 漢字.
	RepresentativePrefecture NilString `json:"representative_prefecture"`
	// 代表者 住所 都道府県（カナ）\
	// 形式： 全角カナ.
	RepresentativePrefectureKana NilString `json:"representative_prefecture_kana"`
	// 代表者 住所 市区町村\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	RepresentativeAddressMunicipality NilString `json:"representative_address_municipality"`
	// 代表者 住所 市区町村（カナ）\
	// 形式： 全角カナ.
	RepresentativeAddressMunicipalityKana NilString `json:"representative_address_municipality_kana"`
	// 代表者 住所 町域\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	RepresentativeAddressSection NilString `json:"representative_address_section"`
	// 代表者 住所 町域（カナ）\
	// 形式： 全角カナ.
	RepresentativeAddressSectionKana NilString `json:"representative_address_section_kana"`
	// 代表者 住所 番地\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	RepresentativeAddressChrome NilString `json:"representative_address_chrome"`
	// 代表者 住所 番地（カナ）.
	RepresentativeAddressChromeKana NilString `json:"representative_address_chrome_kana"`
	// 代表者 住所 建物名\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	RepresentativeAddressBuildingName OptNilString `json:"representative_address_building_name"`
	// 代表者 住所 建物名（カナ）\
	// 形式： 全角カナ.
	RepresentativeAddressBuildingNameKana OptNilString `json:"representative_address_building_name_kana"`
	// 代表者 電話番号\
	// 形式： 半角数字（ハイフンなし、PHS番号不可）.
	RepresentativeTel NilString `json:"representative_tel"`
	// 代表者 生年月日\
	// \
	// 形式：`yyyy/MM/dd`.
	RepresentativeBirthday NilString `json:"representative_birthday"`
	// 代表者 性別
	// - `0`: 男性
	// - `1`: 女性.
	RepresentativeGender NilContractInfoV2RepresentativeGender `json:"representative_gender"`
	// 担当者1 姓\
	// 形式： 漢字/ひらがな/カタカナ/半角英字\
	// \
	// fincodeは担当者1,
	// 2宛てに審査結果の通知や審査保留対応の連絡などを行います。.
	Staff1LastName NilString `json:"staff1_last_name"`
	// 担当者1 姓（カナ）\
	// 形式： 全角カナ.
	Staff1LastNameKana NilString `json:"staff1_last_name_kana"`
	// 担当者1 名\
	// 形式： 漢字/ひらがな/カタカナ/半角英字.
	Staff1FirstName NilString `json:"staff1_first_name"`
	// 担当者1 名（カナ）\
	// 形式： 全角カナ.
	Staff1FirstNameKana NilString `json:"staff1_first_name_kana"`
	// 担当者1 会社名\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	Staff1CompanyName NilString `json:"staff1_company_name"`
	// 担当者1 部署名\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	Staff1Belongs NilString `json:"staff1_belongs"`
	// 担当者1 電話番号\
	// 形式： 半角数字（ハイフンなし、PHS番号不可）.
	Staff1Tel NilString `json:"staff1_tel"`
	// 担当者1 メールアドレス\
	// 形式： RFC 5322.
	Staff1Mail NilString `json:"staff1_mail"`
	// 担当者2 姓\
	// 形式： 漢字/ひらがな/カタカナ/半角英字.
	Staff2LastName OptNilString `json:"staff2_last_name"`
	// 担当者2 姓（カナ）\
	// 形式： 全角カナ.
	Staff2LastNameKana OptNilString `json:"staff2_last_name_kana"`
	// 担当者2 名\
	// 形式： 漢字/ひらがな/カタカナ/半角英字.
	Staff2FirstName OptNilString `json:"staff2_first_name"`
	// 担当者2 名（カナ）\
	// 形式： 全角カナ.
	Staff2FirstNameKana OptNilString `json:"staff2_first_name_kana"`
	// 担当者2 会社名\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	Staff2CompanyName OptNilString `json:"staff2_company_name"`
	// 担当者2 部署名\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	Staff2Belongs OptNilString `json:"staff2_belongs"`
	// 担当者2 電話番号\
	// 形式： 半角数字（ハイフンなし、PHS番号不可）.
	Staff2Tel OptNilString `json:"staff2_tel"`
	// 担当者2 メールアドレス\
	// 形式： RFC 5322.
	Staff2Mail OptNilString `json:"staff2_mail"`
	// 事業形態\
	// \
	// - `true`: 法人\
	// - `false`: 個人事業主.
	Corporate     NilBool            `json:"corporate"`
	CorporateInfo OptCorporateInfoV2 `json:"corporate_info"`
}

// GetRepresentativeLastName returns the value of RepresentativeLastName.
func (s *ContractInfoV2) GetRepresentativeLastName() NilString {
	return s.RepresentativeLastName
}

// GetRepresentativeLastNameKana returns the value of RepresentativeLastNameKana.
func (s *ContractInfoV2) GetRepresentativeLastNameKana() NilString {
	return s.RepresentativeLastNameKana
}

// GetRepresentativeFirstName returns the value of RepresentativeFirstName.
func (s *ContractInfoV2) GetRepresentativeFirstName() NilString {
	return s.RepresentativeFirstName
}

// GetRepresentativeFirstNameKana returns the value of RepresentativeFirstNameKana.
func (s *ContractInfoV2) GetRepresentativeFirstNameKana() NilString {
	return s.RepresentativeFirstNameKana
}

// GetRepresentativePostalCode returns the value of RepresentativePostalCode.
func (s *ContractInfoV2) GetRepresentativePostalCode() NilString {
	return s.RepresentativePostalCode
}

// GetRepresentativePrefecture returns the value of RepresentativePrefecture.
func (s *ContractInfoV2) GetRepresentativePrefecture() NilString {
	return s.RepresentativePrefecture
}

// GetRepresentativePrefectureKana returns the value of RepresentativePrefectureKana.
func (s *ContractInfoV2) GetRepresentativePrefectureKana() NilString {
	return s.RepresentativePrefectureKana
}

// GetRepresentativeAddressMunicipality returns the value of RepresentativeAddressMunicipality.
func (s *ContractInfoV2) GetRepresentativeAddressMunicipality() NilString {
	return s.RepresentativeAddressMunicipality
}

// GetRepresentativeAddressMunicipalityKana returns the value of RepresentativeAddressMunicipalityKana.
func (s *ContractInfoV2) GetRepresentativeAddressMunicipalityKana() NilString {
	return s.RepresentativeAddressMunicipalityKana
}

// GetRepresentativeAddressSection returns the value of RepresentativeAddressSection.
func (s *ContractInfoV2) GetRepresentativeAddressSection() NilString {
	return s.RepresentativeAddressSection
}

// GetRepresentativeAddressSectionKana returns the value of RepresentativeAddressSectionKana.
func (s *ContractInfoV2) GetRepresentativeAddressSectionKana() NilString {
	return s.RepresentativeAddressSectionKana
}

// GetRepresentativeAddressChrome returns the value of RepresentativeAddressChrome.
func (s *ContractInfoV2) GetRepresentativeAddressChrome() NilString {
	return s.RepresentativeAddressChrome
}

// GetRepresentativeAddressChromeKana returns the value of RepresentativeAddressChromeKana.
func (s *ContractInfoV2) GetRepresentativeAddressChromeKana() NilString {
	return s.RepresentativeAddressChromeKana
}

// GetRepresentativeAddressBuildingName returns the value of RepresentativeAddressBuildingName.
func (s *ContractInfoV2) GetRepresentativeAddressBuildingName() OptNilString {
	return s.RepresentativeAddressBuildingName
}

// GetRepresentativeAddressBuildingNameKana returns the value of RepresentativeAddressBuildingNameKana.
func (s *ContractInfoV2) GetRepresentativeAddressBuildingNameKana() OptNilString {
	return s.RepresentativeAddressBuildingNameKana
}

// GetRepresentativeTel returns the value of RepresentativeTel.
func (s *ContractInfoV2) GetRepresentativeTel() NilString {
	return s.RepresentativeTel
}

// GetRepresentativeBirthday returns the value of RepresentativeBirthday.
func (s *ContractInfoV2) GetRepresentativeBirthday() NilString {
	return s.RepresentativeBirthday
}

// GetRepresentativeGender returns the value of RepresentativeGender.
func (s *ContractInfoV2) GetRepresentativeGender() NilContractInfoV2RepresentativeGender {
	return s.RepresentativeGender
}

// GetStaff1LastName returns the value of Staff1LastName.
func (s *ContractInfoV2) GetStaff1LastName() NilString {
	return s.Staff1LastName
}

// GetStaff1LastNameKana returns the value of Staff1LastNameKana.
func (s *ContractInfoV2) GetStaff1LastNameKana() NilString {
	return s.Staff1LastNameKana
}

// GetStaff1FirstName returns the value of Staff1FirstName.
func (s *ContractInfoV2) GetStaff1FirstName() NilString {
	return s.Staff1FirstName
}

// GetStaff1FirstNameKana returns the value of Staff1FirstNameKana.
func (s *ContractInfoV2) GetStaff1FirstNameKana() NilString {
	return s.Staff1FirstNameKana
}

// GetStaff1CompanyName returns the value of Staff1CompanyName.
func (s *ContractInfoV2) GetStaff1CompanyName() NilString {
	return s.Staff1CompanyName
}

// GetStaff1Belongs returns the value of Staff1Belongs.
func (s *ContractInfoV2) GetStaff1Belongs() NilString {
	return s.Staff1Belongs
}

// GetStaff1Tel returns the value of Staff1Tel.
func (s *ContractInfoV2) GetStaff1Tel() NilString {
	return s.Staff1Tel
}

// GetStaff1Mail returns the value of Staff1Mail.
func (s *ContractInfoV2) GetStaff1Mail() NilString {
	return s.Staff1Mail
}

// GetStaff2LastName returns the value of Staff2LastName.
func (s *ContractInfoV2) GetStaff2LastName() OptNilString {
	return s.Staff2LastName
}

// GetStaff2LastNameKana returns the value of Staff2LastNameKana.
func (s *ContractInfoV2) GetStaff2LastNameKana() OptNilString {
	return s.Staff2LastNameKana
}

// GetStaff2FirstName returns the value of Staff2FirstName.
func (s *ContractInfoV2) GetStaff2FirstName() OptNilString {
	return s.Staff2FirstName
}

// GetStaff2FirstNameKana returns the value of Staff2FirstNameKana.
func (s *ContractInfoV2) GetStaff2FirstNameKana() OptNilString {
	return s.Staff2FirstNameKana
}

// GetStaff2CompanyName returns the value of Staff2CompanyName.
func (s *ContractInfoV2) GetStaff2CompanyName() OptNilString {
	return s.Staff2CompanyName
}

// GetStaff2Belongs returns the value of Staff2Belongs.
func (s *ContractInfoV2) GetStaff2Belongs() OptNilString {
	return s.Staff2Belongs
}

// GetStaff2Tel returns the value of Staff2Tel.
func (s *ContractInfoV2) GetStaff2Tel() OptNilString {
	return s.Staff2Tel
}

// GetStaff2Mail returns the value of Staff2Mail.
func (s *ContractInfoV2) GetStaff2Mail() OptNilString {
	return s.Staff2Mail
}

// GetCorporate returns the value of Corporate.
func (s *ContractInfoV2) GetCorporate() NilBool {
	return s.Corporate
}

// GetCorporateInfo returns the value of CorporateInfo.
func (s *ContractInfoV2) GetCorporateInfo() OptCorporateInfoV2 {
	return s.CorporateInfo
}

// SetRepresentativeLastName sets the value of RepresentativeLastName.
func (s *ContractInfoV2) SetRepresentativeLastName(val NilString) {
	s.RepresentativeLastName = val
}

// SetRepresentativeLastNameKana sets the value of RepresentativeLastNameKana.
func (s *ContractInfoV2) SetRepresentativeLastNameKana(val NilString) {
	s.RepresentativeLastNameKana = val
}

// SetRepresentativeFirstName sets the value of RepresentativeFirstName.
func (s *ContractInfoV2) SetRepresentativeFirstName(val NilString) {
	s.RepresentativeFirstName = val
}

// SetRepresentativeFirstNameKana sets the value of RepresentativeFirstNameKana.
func (s *ContractInfoV2) SetRepresentativeFirstNameKana(val NilString) {
	s.RepresentativeFirstNameKana = val
}

// SetRepresentativePostalCode sets the value of RepresentativePostalCode.
func (s *ContractInfoV2) SetRepresentativePostalCode(val NilString) {
	s.RepresentativePostalCode = val
}

// SetRepresentativePrefecture sets the value of RepresentativePrefecture.
func (s *ContractInfoV2) SetRepresentativePrefecture(val NilString) {
	s.RepresentativePrefecture = val
}

// SetRepresentativePrefectureKana sets the value of RepresentativePrefectureKana.
func (s *ContractInfoV2) SetRepresentativePrefectureKana(val NilString) {
	s.RepresentativePrefectureKana = val
}

// SetRepresentativeAddressMunicipality sets the value of RepresentativeAddressMunicipality.
func (s *ContractInfoV2) SetRepresentativeAddressMunicipality(val NilString) {
	s.RepresentativeAddressMunicipality = val
}

// SetRepresentativeAddressMunicipalityKana sets the value of RepresentativeAddressMunicipalityKana.
func (s *ContractInfoV2) SetRepresentativeAddressMunicipalityKana(val NilString) {
	s.RepresentativeAddressMunicipalityKana = val
}

// SetRepresentativeAddressSection sets the value of RepresentativeAddressSection.
func (s *ContractInfoV2) SetRepresentativeAddressSection(val NilString) {
	s.RepresentativeAddressSection = val
}

// SetRepresentativeAddressSectionKana sets the value of RepresentativeAddressSectionKana.
func (s *ContractInfoV2) SetRepresentativeAddressSectionKana(val NilString) {
	s.RepresentativeAddressSectionKana = val
}

// SetRepresentativeAddressChrome sets the value of RepresentativeAddressChrome.
func (s *ContractInfoV2) SetRepresentativeAddressChrome(val NilString) {
	s.RepresentativeAddressChrome = val
}

// SetRepresentativeAddressChromeKana sets the value of RepresentativeAddressChromeKana.
func (s *ContractInfoV2) SetRepresentativeAddressChromeKana(val NilString) {
	s.RepresentativeAddressChromeKana = val
}

// SetRepresentativeAddressBuildingName sets the value of RepresentativeAddressBuildingName.
func (s *ContractInfoV2) SetRepresentativeAddressBuildingName(val OptNilString) {
	s.RepresentativeAddressBuildingName = val
}

// SetRepresentativeAddressBuildingNameKana sets the value of RepresentativeAddressBuildingNameKana.
func (s *ContractInfoV2) SetRepresentativeAddressBuildingNameKana(val OptNilString) {
	s.RepresentativeAddressBuildingNameKana = val
}

// SetRepresentativeTel sets the value of RepresentativeTel.
func (s *ContractInfoV2) SetRepresentativeTel(val NilString) {
	s.RepresentativeTel = val
}

// SetRepresentativeBirthday sets the value of RepresentativeBirthday.
func (s *ContractInfoV2) SetRepresentativeBirthday(val NilString) {
	s.RepresentativeBirthday = val
}

// SetRepresentativeGender sets the value of RepresentativeGender.
func (s *ContractInfoV2) SetRepresentativeGender(val NilContractInfoV2RepresentativeGender) {
	s.RepresentativeGender = val
}

// SetStaff1LastName sets the value of Staff1LastName.
func (s *ContractInfoV2) SetStaff1LastName(val NilString) {
	s.Staff1LastName = val
}

// SetStaff1LastNameKana sets the value of Staff1LastNameKana.
func (s *ContractInfoV2) SetStaff1LastNameKana(val NilString) {
	s.Staff1LastNameKana = val
}

// SetStaff1FirstName sets the value of Staff1FirstName.
func (s *ContractInfoV2) SetStaff1FirstName(val NilString) {
	s.Staff1FirstName = val
}

// SetStaff1FirstNameKana sets the value of Staff1FirstNameKana.
func (s *ContractInfoV2) SetStaff1FirstNameKana(val NilString) {
	s.Staff1FirstNameKana = val
}

// SetStaff1CompanyName sets the value of Staff1CompanyName.
func (s *ContractInfoV2) SetStaff1CompanyName(val NilString) {
	s.Staff1CompanyName = val
}

// SetStaff1Belongs sets the value of Staff1Belongs.
func (s *ContractInfoV2) SetStaff1Belongs(val NilString) {
	s.Staff1Belongs = val
}

// SetStaff1Tel sets the value of Staff1Tel.
func (s *ContractInfoV2) SetStaff1Tel(val NilString) {
	s.Staff1Tel = val
}

// SetStaff1Mail sets the value of Staff1Mail.
func (s *ContractInfoV2) SetStaff1Mail(val NilString) {
	s.Staff1Mail = val
}

// SetStaff2LastName sets the value of Staff2LastName.
func (s *ContractInfoV2) SetStaff2LastName(val OptNilString) {
	s.Staff2LastName = val
}

// SetStaff2LastNameKana sets the value of Staff2LastNameKana.
func (s *ContractInfoV2) SetStaff2LastNameKana(val OptNilString) {
	s.Staff2LastNameKana = val
}

// SetStaff2FirstName sets the value of Staff2FirstName.
func (s *ContractInfoV2) SetStaff2FirstName(val OptNilString) {
	s.Staff2FirstName = val
}

// SetStaff2FirstNameKana sets the value of Staff2FirstNameKana.
func (s *ContractInfoV2) SetStaff2FirstNameKana(val OptNilString) {
	s.Staff2FirstNameKana = val
}

// SetStaff2CompanyName sets the value of Staff2CompanyName.
func (s *ContractInfoV2) SetStaff2CompanyName(val OptNilString) {
	s.Staff2CompanyName = val
}

// SetStaff2Belongs sets the value of Staff2Belongs.
func (s *ContractInfoV2) SetStaff2Belongs(val OptNilString) {
	s.Staff2Belongs = val
}

// SetStaff2Tel sets the value of Staff2Tel.
func (s *ContractInfoV2) SetStaff2Tel(val OptNilString) {
	s.Staff2Tel = val
}

// SetStaff2Mail sets the value of Staff2Mail.
func (s *ContractInfoV2) SetStaff2Mail(val OptNilString) {
	s.Staff2Mail = val
}

// SetCorporate sets the value of Corporate.
func (s *ContractInfoV2) SetCorporate(val NilBool) {
	s.Corporate = val
}

// SetCorporateInfo sets the value of CorporateInfo.
func (s *ContractInfoV2) SetCorporateInfo(val OptCorporateInfoV2) {
	s.CorporateInfo = val
}

// 代表者 性別
// - `0`: 男性
// - `1`: 女性.
type ContractInfoV2RepresentativeGender int

const (
	ContractInfoV2RepresentativeGender0 ContractInfoV2RepresentativeGender = 0
	ContractInfoV2RepresentativeGender1 ContractInfoV2RepresentativeGender = 1
)

// AllValues returns all ContractInfoV2RepresentativeGender values.
func (ContractInfoV2RepresentativeGender) AllValues() []ContractInfoV2RepresentativeGender {
	return []ContractInfoV2RepresentativeGender{
		ContractInfoV2RepresentativeGender0,
		ContractInfoV2RepresentativeGender1,
	}
}

// 本番環境申請情報入力ステータス
// - `301`: 全項目未入力
// - `302`: 一部入力済み
// - `303`: 全項目入力済み
// - `304`: 本番環境申請済み.
// Ref: #/components/schemas/ContractInputStatus
type ContractInputStatus float64

const (
	ContractInputStatus301 ContractInputStatus = 301
	ContractInputStatus302 ContractInputStatus = 302
	ContractInputStatus303 ContractInputStatus = 303
	ContractInputStatus304 ContractInputStatus = 304
)

// AllValues returns all ContractInputStatus values.
func (ContractInputStatus) AllValues() []ContractInputStatus {
	return []ContractInputStatus{
		ContractInputStatus301,
		ContractInputStatus302,
		ContractInputStatus303,
		ContractInputStatus304,
	}
}

// 売上入金 可否ステータス
// - `501`: 入金に必要な手続きが未完了
// - `502`: 入金可能
// - `503`: 入金保留.
type ContractSalesDepositStatusCode int

const (
	ContractSalesDepositStatusCode501 ContractSalesDepositStatusCode = 501
	ContractSalesDepositStatusCode502 ContractSalesDepositStatusCode = 502
	ContractSalesDepositStatusCode503 ContractSalesDepositStatusCode = 503
)

// AllValues returns all ContractSalesDepositStatusCode values.
func (ContractSalesDepositStatusCode) AllValues() []ContractSalesDepositStatusCode {
	return []ContractSalesDepositStatusCode{
		ContractSalesDepositStatusCode501,
		ContractSalesDepositStatusCode502,
		ContractSalesDepositStatusCode503,
	}
}

// 契約ステータス\
// \
// fincodeとそのショップの運営事業者の契約のステータスを表します。
// - `101`: 未契約<br /><span
// class="smallText">まだfincodeの本番環境申請の提出が完了していない状態です。</span>
// - `102`: 利用審査中<br /><span
// class="smallText">fincodeの本番環境申請の提出が完了し、利用審査中の状態です。</span>
// - `103`: 利用審査中（VISA/Mastercard利用可）<br /><span
// class="smallText">即時利用によりVISA/Mastercardブランドの決済受付が可能な状態です。審査は継続して行われます。</span>
// - `105`: 解約済
// - `106`: 契約不成立<br /><span
// class="smallText">審査の結果、fincodeの利用が不可となった状態です。</span>
// - `107`: 稼働中<br /><span
// class="smallText">fincodeの本番環境申請が完了し、クレジットカード決済の受付が可能な状態です。</span>.
// Ref: #/components/schemas/ContractStatus
type ContractStatus string

const (
	ContractStatus101 ContractStatus = "101"
	ContractStatus102 ContractStatus = "102"
	ContractStatus103 ContractStatus = "103"
	ContractStatus105 ContractStatus = "105"
	ContractStatus106 ContractStatus = "106"
	ContractStatus107 ContractStatus = "107"
)

// AllValues returns all ContractStatus values.
func (ContractStatus) AllValues() []ContractStatus {
	return []ContractStatus{
		ContractStatus101,
		ContractStatus102,
		ContractStatus103,
		ContractStatus105,
		ContractStatus106,
		ContractStatus107,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ContractStatus) MarshalText() ([]byte, error) {
	switch s {
	case ContractStatus101:
		return []byte(s), nil
	case ContractStatus102:
		return []byte(s), nil
	case ContractStatus103:
		return []byte(s), nil
	case ContractStatus105:
		return []byte(s), nil
	case ContractStatus106:
		return []byte(s), nil
	case ContractStatus107:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ContractStatus) UnmarshalText(data []byte) error {
	switch ContractStatus(data) {
	case ContractStatus101:
		*s = ContractStatus101
		return nil
	case ContractStatus102:
		*s = ContractStatus102
		return nil
	case ContractStatus103:
		*s = ContractStatus103
		return nil
	case ContractStatus105:
		*s = ContractStatus105
		return nil
	case ContractStatus106:
		*s = ContractStatus106
		return nil
	case ContractStatus107:
		*s = ContractStatus107
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CorporateInfo.V2
type CorporateInfoV2 struct {
	// 法人番号.
	CorporateNumber NilString `json:"corporate_number"`
	// 法人名.
	CorporateName string `json:"corporate_name"`
	// 法人名（カナ）.
	CorporateNameKana string `json:"corporate_name_kana"`
	// 企業サイトURL.
	Hp OptNilString `json:"hp"`
	// 資本金.
	Capital NilFloat64 `json:"capital"`
	// 設立日.
	EstablishedAt NilString `json:"established_at"`
	// 年商.
	YearlySales NilFloat64 `json:"yearly_sales"`
	// 事業内容.
	BusinessDetails NilString `json:"business_details"`
	// 会社住所 郵便番号\
	// 形式： 半角数字（ハイフンあり）.
	CompanyPostalCode NilString `json:"company_postal_code"`
	// 会社住所 都道府県\
	// 形式： 漢字.
	CompanyPrefecture NilString `json:"company_prefecture"`
	// 会社住所 都道府県（カナ）\
	// 形式： 全角カタカナ.
	CompanyPrefectureKana NilString `json:"company_prefecture_kana"`
	// 会社住所 市区町村\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	CompanyAddressMunicipality NilString `json:"company_address_municipality"`
	// 会社住所 市区町村（カナ）\
	// 形式： 全角カタカナ.
	CompanyAddressMunicipalityKana NilString `json:"company_address_municipality_kana"`
	// 会社住所 町域\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	CompanyAddressSection NilString `json:"company_address_section"`
	// 会社住所 町域（カナ）\
	// 形式： 全角カタカナ.
	CompanyAddressSectionKana NilString `json:"company_address_section_kana"`
	// 会社住所 番地\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	CompanyAddressChrome NilString `json:"company_address_chrome"`
	// 会社住所 番地（カナ）\
	// 形式： 全角カタカナ.
	CompanyAddressChromeKana NilString `json:"company_address_chrome_kana"`
	// 会社住所 ビル名\
	// 形式： 漢字/ひらがな/カタカナ/半角英数.
	CompanyAddressBuildingName OptNilString `json:"company_address_building_name"`
	// 会社住所 ビル名（カナ）\
	// 形式： 全角カタカナ.
	CompanyAddressBuildingNameKana OptNilString `json:"company_address_building_name_kana"`
	// 会社情報 電話番号\
	// 形式： 半角数字（ハイフンなし）.
	CompanyTel NilString `json:"company_tel"`
}

// GetCorporateNumber returns the value of CorporateNumber.
func (s *CorporateInfoV2) GetCorporateNumber() NilString {
	return s.CorporateNumber
}

// GetCorporateName returns the value of CorporateName.
func (s *CorporateInfoV2) GetCorporateName() string {
	return s.CorporateName
}

// GetCorporateNameKana returns the value of CorporateNameKana.
func (s *CorporateInfoV2) GetCorporateNameKana() string {
	return s.CorporateNameKana
}

// GetHp returns the value of Hp.
func (s *CorporateInfoV2) GetHp() OptNilString {
	return s.Hp
}

// GetCapital returns the value of Capital.
func (s *CorporateInfoV2) GetCapital() NilFloat64 {
	return s.Capital
}

// GetEstablishedAt returns the value of EstablishedAt.
func (s *CorporateInfoV2) GetEstablishedAt() NilString {
	return s.EstablishedAt
}

// GetYearlySales returns the value of YearlySales.
func (s *CorporateInfoV2) GetYearlySales() NilFloat64 {
	return s.YearlySales
}

// GetBusinessDetails returns the value of BusinessDetails.
func (s *CorporateInfoV2) GetBusinessDetails() NilString {
	return s.BusinessDetails
}

// GetCompanyPostalCode returns the value of CompanyPostalCode.
func (s *CorporateInfoV2) GetCompanyPostalCode() NilString {
	return s.CompanyPostalCode
}

// GetCompanyPrefecture returns the value of CompanyPrefecture.
func (s *CorporateInfoV2) GetCompanyPrefecture() NilString {
	return s.CompanyPrefecture
}

// GetCompanyPrefectureKana returns the value of CompanyPrefectureKana.
func (s *CorporateInfoV2) GetCompanyPrefectureKana() NilString {
	return s.CompanyPrefectureKana
}

// GetCompanyAddressMunicipality returns the value of CompanyAddressMunicipality.
func (s *CorporateInfoV2) GetCompanyAddressMunicipality() NilString {
	return s.CompanyAddressMunicipality
}

// GetCompanyAddressMunicipalityKana returns the value of CompanyAddressMunicipalityKana.
func (s *CorporateInfoV2) GetCompanyAddressMunicipalityKana() NilString {
	return s.CompanyAddressMunicipalityKana
}

// GetCompanyAddressSection returns the value of CompanyAddressSection.
func (s *CorporateInfoV2) GetCompanyAddressSection() NilString {
	return s.CompanyAddressSection
}

// GetCompanyAddressSectionKana returns the value of CompanyAddressSectionKana.
func (s *CorporateInfoV2) GetCompanyAddressSectionKana() NilString {
	return s.CompanyAddressSectionKana
}

// GetCompanyAddressChrome returns the value of CompanyAddressChrome.
func (s *CorporateInfoV2) GetCompanyAddressChrome() NilString {
	return s.CompanyAddressChrome
}

// GetCompanyAddressChromeKana returns the value of CompanyAddressChromeKana.
func (s *CorporateInfoV2) GetCompanyAddressChromeKana() NilString {
	return s.CompanyAddressChromeKana
}

// GetCompanyAddressBuildingName returns the value of CompanyAddressBuildingName.
func (s *CorporateInfoV2) GetCompanyAddressBuildingName() OptNilString {
	return s.CompanyAddressBuildingName
}

// GetCompanyAddressBuildingNameKana returns the value of CompanyAddressBuildingNameKana.
func (s *CorporateInfoV2) GetCompanyAddressBuildingNameKana() OptNilString {
	return s.CompanyAddressBuildingNameKana
}

// GetCompanyTel returns the value of CompanyTel.
func (s *CorporateInfoV2) GetCompanyTel() NilString {
	return s.CompanyTel
}

// SetCorporateNumber sets the value of CorporateNumber.
func (s *CorporateInfoV2) SetCorporateNumber(val NilString) {
	s.CorporateNumber = val
}

// SetCorporateName sets the value of CorporateName.
func (s *CorporateInfoV2) SetCorporateName(val string) {
	s.CorporateName = val
}

// SetCorporateNameKana sets the value of CorporateNameKana.
func (s *CorporateInfoV2) SetCorporateNameKana(val string) {
	s.CorporateNameKana = val
}

// SetHp sets the value of Hp.
func (s *CorporateInfoV2) SetHp(val OptNilString) {
	s.Hp = val
}

// SetCapital sets the value of Capital.
func (s *CorporateInfoV2) SetCapital(val NilFloat64) {
	s.Capital = val
}

// SetEstablishedAt sets the value of EstablishedAt.
func (s *CorporateInfoV2) SetEstablishedAt(val NilString) {
	s.EstablishedAt = val
}

// SetYearlySales sets the value of YearlySales.
func (s *CorporateInfoV2) SetYearlySales(val NilFloat64) {
	s.YearlySales = val
}

// SetBusinessDetails sets the value of BusinessDetails.
func (s *CorporateInfoV2) SetBusinessDetails(val NilString) {
	s.BusinessDetails = val
}

// SetCompanyPostalCode sets the value of CompanyPostalCode.
func (s *CorporateInfoV2) SetCompanyPostalCode(val NilString) {
	s.CompanyPostalCode = val
}

// SetCompanyPrefecture sets the value of CompanyPrefecture.
func (s *CorporateInfoV2) SetCompanyPrefecture(val NilString) {
	s.CompanyPrefecture = val
}

// SetCompanyPrefectureKana sets the value of CompanyPrefectureKana.
func (s *CorporateInfoV2) SetCompanyPrefectureKana(val NilString) {
	s.CompanyPrefectureKana = val
}

// SetCompanyAddressMunicipality sets the value of CompanyAddressMunicipality.
func (s *CorporateInfoV2) SetCompanyAddressMunicipality(val NilString) {
	s.CompanyAddressMunicipality = val
}

// SetCompanyAddressMunicipalityKana sets the value of CompanyAddressMunicipalityKana.
func (s *CorporateInfoV2) SetCompanyAddressMunicipalityKana(val NilString) {
	s.CompanyAddressMunicipalityKana = val
}

// SetCompanyAddressSection sets the value of CompanyAddressSection.
func (s *CorporateInfoV2) SetCompanyAddressSection(val NilString) {
	s.CompanyAddressSection = val
}

// SetCompanyAddressSectionKana sets the value of CompanyAddressSectionKana.
func (s *CorporateInfoV2) SetCompanyAddressSectionKana(val NilString) {
	s.CompanyAddressSectionKana = val
}

// SetCompanyAddressChrome sets the value of CompanyAddressChrome.
func (s *CorporateInfoV2) SetCompanyAddressChrome(val NilString) {
	s.CompanyAddressChrome = val
}

// SetCompanyAddressChromeKana sets the value of CompanyAddressChromeKana.
func (s *CorporateInfoV2) SetCompanyAddressChromeKana(val NilString) {
	s.CompanyAddressChromeKana = val
}

// SetCompanyAddressBuildingName sets the value of CompanyAddressBuildingName.
func (s *CorporateInfoV2) SetCompanyAddressBuildingName(val OptNilString) {
	s.CompanyAddressBuildingName = val
}

// SetCompanyAddressBuildingNameKana sets the value of CompanyAddressBuildingNameKana.
func (s *CorporateInfoV2) SetCompanyAddressBuildingNameKana(val OptNilString) {
	s.CompanyAddressBuildingNameKana = val
}

// SetCompanyTel sets the value of CompanyTel.
func (s *CorporateInfoV2) SetCompanyTel(val NilString) {
	s.CompanyTel = val
}

type CorporateName string

type CorporateNameKana string

type CorporateNumber string

type Count int

// CreatePaymentOK represents sum type.
type CreatePaymentOK struct {
	Type                               CreatePaymentOKType // switch on this field
	PaymentCardCreatingResponse        PaymentCardCreatingResponse
	PaymentApplePayCreatingResponse    PaymentApplePayCreatingResponse
	PaymentKonbiniCreatingResponse     PaymentKonbiniCreatingResponse
	PaymentPayPayCreatingResponse      PaymentPayPayCreatingResponse
	PaymentDirectDebitCreatingResponse PaymentDirectDebitCreatingResponse
}

// CreatePaymentOKType is oneOf type of CreatePaymentOK.
type CreatePaymentOKType string

// Possible values for CreatePaymentOKType.
const (
	PaymentCardCreatingResponseCreatePaymentOK        CreatePaymentOKType = "PaymentCardCreatingResponse"
	PaymentApplePayCreatingResponseCreatePaymentOK    CreatePaymentOKType = "PaymentApplePayCreatingResponse"
	PaymentKonbiniCreatingResponseCreatePaymentOK     CreatePaymentOKType = "PaymentKonbiniCreatingResponse"
	PaymentPayPayCreatingResponseCreatePaymentOK      CreatePaymentOKType = "PaymentPayPayCreatingResponse"
	PaymentDirectDebitCreatingResponseCreatePaymentOK CreatePaymentOKType = "PaymentDirectDebitCreatingResponse"
)

// IsPaymentCardCreatingResponse reports whether CreatePaymentOK is PaymentCardCreatingResponse.
func (s CreatePaymentOK) IsPaymentCardCreatingResponse() bool {
	return s.Type == PaymentCardCreatingResponseCreatePaymentOK
}

// IsPaymentApplePayCreatingResponse reports whether CreatePaymentOK is PaymentApplePayCreatingResponse.
func (s CreatePaymentOK) IsPaymentApplePayCreatingResponse() bool {
	return s.Type == PaymentApplePayCreatingResponseCreatePaymentOK
}

// IsPaymentKonbiniCreatingResponse reports whether CreatePaymentOK is PaymentKonbiniCreatingResponse.
func (s CreatePaymentOK) IsPaymentKonbiniCreatingResponse() bool {
	return s.Type == PaymentKonbiniCreatingResponseCreatePaymentOK
}

// IsPaymentPayPayCreatingResponse reports whether CreatePaymentOK is PaymentPayPayCreatingResponse.
func (s CreatePaymentOK) IsPaymentPayPayCreatingResponse() bool {
	return s.Type == PaymentPayPayCreatingResponseCreatePaymentOK
}

// IsPaymentDirectDebitCreatingResponse reports whether CreatePaymentOK is PaymentDirectDebitCreatingResponse.
func (s CreatePaymentOK) IsPaymentDirectDebitCreatingResponse() bool {
	return s.Type == PaymentDirectDebitCreatingResponseCreatePaymentOK
}

// SetPaymentCardCreatingResponse sets CreatePaymentOK to PaymentCardCreatingResponse.
func (s *CreatePaymentOK) SetPaymentCardCreatingResponse(v PaymentCardCreatingResponse) {
	s.Type = PaymentCardCreatingResponseCreatePaymentOK
	s.PaymentCardCreatingResponse = v
}

// GetPaymentCardCreatingResponse returns PaymentCardCreatingResponse and true boolean if CreatePaymentOK is PaymentCardCreatingResponse.
func (s CreatePaymentOK) GetPaymentCardCreatingResponse() (v PaymentCardCreatingResponse, ok bool) {
	if !s.IsPaymentCardCreatingResponse() {
		return v, false
	}
	return s.PaymentCardCreatingResponse, true
}

// NewPaymentCardCreatingResponseCreatePaymentOK returns new CreatePaymentOK from PaymentCardCreatingResponse.
func NewPaymentCardCreatingResponseCreatePaymentOK(v PaymentCardCreatingResponse) CreatePaymentOK {
	var s CreatePaymentOK
	s.SetPaymentCardCreatingResponse(v)
	return s
}

// SetPaymentApplePayCreatingResponse sets CreatePaymentOK to PaymentApplePayCreatingResponse.
func (s *CreatePaymentOK) SetPaymentApplePayCreatingResponse(v PaymentApplePayCreatingResponse) {
	s.Type = PaymentApplePayCreatingResponseCreatePaymentOK
	s.PaymentApplePayCreatingResponse = v
}

// GetPaymentApplePayCreatingResponse returns PaymentApplePayCreatingResponse and true boolean if CreatePaymentOK is PaymentApplePayCreatingResponse.
func (s CreatePaymentOK) GetPaymentApplePayCreatingResponse() (v PaymentApplePayCreatingResponse, ok bool) {
	if !s.IsPaymentApplePayCreatingResponse() {
		return v, false
	}
	return s.PaymentApplePayCreatingResponse, true
}

// NewPaymentApplePayCreatingResponseCreatePaymentOK returns new CreatePaymentOK from PaymentApplePayCreatingResponse.
func NewPaymentApplePayCreatingResponseCreatePaymentOK(v PaymentApplePayCreatingResponse) CreatePaymentOK {
	var s CreatePaymentOK
	s.SetPaymentApplePayCreatingResponse(v)
	return s
}

// SetPaymentKonbiniCreatingResponse sets CreatePaymentOK to PaymentKonbiniCreatingResponse.
func (s *CreatePaymentOK) SetPaymentKonbiniCreatingResponse(v PaymentKonbiniCreatingResponse) {
	s.Type = PaymentKonbiniCreatingResponseCreatePaymentOK
	s.PaymentKonbiniCreatingResponse = v
}

// GetPaymentKonbiniCreatingResponse returns PaymentKonbiniCreatingResponse and true boolean if CreatePaymentOK is PaymentKonbiniCreatingResponse.
func (s CreatePaymentOK) GetPaymentKonbiniCreatingResponse() (v PaymentKonbiniCreatingResponse, ok bool) {
	if !s.IsPaymentKonbiniCreatingResponse() {
		return v, false
	}
	return s.PaymentKonbiniCreatingResponse, true
}

// NewPaymentKonbiniCreatingResponseCreatePaymentOK returns new CreatePaymentOK from PaymentKonbiniCreatingResponse.
func NewPaymentKonbiniCreatingResponseCreatePaymentOK(v PaymentKonbiniCreatingResponse) CreatePaymentOK {
	var s CreatePaymentOK
	s.SetPaymentKonbiniCreatingResponse(v)
	return s
}

// SetPaymentPayPayCreatingResponse sets CreatePaymentOK to PaymentPayPayCreatingResponse.
func (s *CreatePaymentOK) SetPaymentPayPayCreatingResponse(v PaymentPayPayCreatingResponse) {
	s.Type = PaymentPayPayCreatingResponseCreatePaymentOK
	s.PaymentPayPayCreatingResponse = v
}

// GetPaymentPayPayCreatingResponse returns PaymentPayPayCreatingResponse and true boolean if CreatePaymentOK is PaymentPayPayCreatingResponse.
func (s CreatePaymentOK) GetPaymentPayPayCreatingResponse() (v PaymentPayPayCreatingResponse, ok bool) {
	if !s.IsPaymentPayPayCreatingResponse() {
		return v, false
	}
	return s.PaymentPayPayCreatingResponse, true
}

// NewPaymentPayPayCreatingResponseCreatePaymentOK returns new CreatePaymentOK from PaymentPayPayCreatingResponse.
func NewPaymentPayPayCreatingResponseCreatePaymentOK(v PaymentPayPayCreatingResponse) CreatePaymentOK {
	var s CreatePaymentOK
	s.SetPaymentPayPayCreatingResponse(v)
	return s
}

// SetPaymentDirectDebitCreatingResponse sets CreatePaymentOK to PaymentDirectDebitCreatingResponse.
func (s *CreatePaymentOK) SetPaymentDirectDebitCreatingResponse(v PaymentDirectDebitCreatingResponse) {
	s.Type = PaymentDirectDebitCreatingResponseCreatePaymentOK
	s.PaymentDirectDebitCreatingResponse = v
}

// GetPaymentDirectDebitCreatingResponse returns PaymentDirectDebitCreatingResponse and true boolean if CreatePaymentOK is PaymentDirectDebitCreatingResponse.
func (s CreatePaymentOK) GetPaymentDirectDebitCreatingResponse() (v PaymentDirectDebitCreatingResponse, ok bool) {
	if !s.IsPaymentDirectDebitCreatingResponse() {
		return v, false
	}
	return s.PaymentDirectDebitCreatingResponse, true
}

// NewPaymentDirectDebitCreatingResponseCreatePaymentOK returns new CreatePaymentOK from PaymentDirectDebitCreatingResponse.
func NewPaymentDirectDebitCreatingResponseCreatePaymentOK(v PaymentDirectDebitCreatingResponse) CreatePaymentOK {
	var s CreatePaymentOK
	s.SetPaymentDirectDebitCreatingResponse(v)
	return s
}

func (*CreatePaymentOK) createPaymentRes() {}

// CreatePaymentReq represents sum type.
type CreatePaymentReq struct {
	Type                              CreatePaymentReqType // switch on this field
	PaymentCardCreatingRequest        PaymentCardCreatingRequest
	PaymentApplePayCreatingRequest    PaymentApplePayCreatingRequest
	PaymentKonbiniCreatingRequest     PaymentKonbiniCreatingRequest
	PaymentPayPayCreatingRequest      PaymentPayPayCreatingRequest
	PaymentDirectDebitCreatingRequest PaymentDirectDebitCreatingRequest
}

// CreatePaymentReqType is oneOf type of CreatePaymentReq.
type CreatePaymentReqType string

// Possible values for CreatePaymentReqType.
const (
	PaymentCardCreatingRequestCreatePaymentReq        CreatePaymentReqType = "PaymentCardCreatingRequest"
	PaymentApplePayCreatingRequestCreatePaymentReq    CreatePaymentReqType = "PaymentApplePayCreatingRequest"
	PaymentKonbiniCreatingRequestCreatePaymentReq     CreatePaymentReqType = "PaymentKonbiniCreatingRequest"
	PaymentPayPayCreatingRequestCreatePaymentReq      CreatePaymentReqType = "PaymentPayPayCreatingRequest"
	PaymentDirectDebitCreatingRequestCreatePaymentReq CreatePaymentReqType = "PaymentDirectDebitCreatingRequest"
)

// IsPaymentCardCreatingRequest reports whether CreatePaymentReq is PaymentCardCreatingRequest.
func (s CreatePaymentReq) IsPaymentCardCreatingRequest() bool {
	return s.Type == PaymentCardCreatingRequestCreatePaymentReq
}

// IsPaymentApplePayCreatingRequest reports whether CreatePaymentReq is PaymentApplePayCreatingRequest.
func (s CreatePaymentReq) IsPaymentApplePayCreatingRequest() bool {
	return s.Type == PaymentApplePayCreatingRequestCreatePaymentReq
}

// IsPaymentKonbiniCreatingRequest reports whether CreatePaymentReq is PaymentKonbiniCreatingRequest.
func (s CreatePaymentReq) IsPaymentKonbiniCreatingRequest() bool {
	return s.Type == PaymentKonbiniCreatingRequestCreatePaymentReq
}

// IsPaymentPayPayCreatingRequest reports whether CreatePaymentReq is PaymentPayPayCreatingRequest.
func (s CreatePaymentReq) IsPaymentPayPayCreatingRequest() bool {
	return s.Type == PaymentPayPayCreatingRequestCreatePaymentReq
}

// IsPaymentDirectDebitCreatingRequest reports whether CreatePaymentReq is PaymentDirectDebitCreatingRequest.
func (s CreatePaymentReq) IsPaymentDirectDebitCreatingRequest() bool {
	return s.Type == PaymentDirectDebitCreatingRequestCreatePaymentReq
}

// SetPaymentCardCreatingRequest sets CreatePaymentReq to PaymentCardCreatingRequest.
func (s *CreatePaymentReq) SetPaymentCardCreatingRequest(v PaymentCardCreatingRequest) {
	s.Type = PaymentCardCreatingRequestCreatePaymentReq
	s.PaymentCardCreatingRequest = v
}

// GetPaymentCardCreatingRequest returns PaymentCardCreatingRequest and true boolean if CreatePaymentReq is PaymentCardCreatingRequest.
func (s CreatePaymentReq) GetPaymentCardCreatingRequest() (v PaymentCardCreatingRequest, ok bool) {
	if !s.IsPaymentCardCreatingRequest() {
		return v, false
	}
	return s.PaymentCardCreatingRequest, true
}

// NewPaymentCardCreatingRequestCreatePaymentReq returns new CreatePaymentReq from PaymentCardCreatingRequest.
func NewPaymentCardCreatingRequestCreatePaymentReq(v PaymentCardCreatingRequest) CreatePaymentReq {
	var s CreatePaymentReq
	s.SetPaymentCardCreatingRequest(v)
	return s
}

// SetPaymentApplePayCreatingRequest sets CreatePaymentReq to PaymentApplePayCreatingRequest.
func (s *CreatePaymentReq) SetPaymentApplePayCreatingRequest(v PaymentApplePayCreatingRequest) {
	s.Type = PaymentApplePayCreatingRequestCreatePaymentReq
	s.PaymentApplePayCreatingRequest = v
}

// GetPaymentApplePayCreatingRequest returns PaymentApplePayCreatingRequest and true boolean if CreatePaymentReq is PaymentApplePayCreatingRequest.
func (s CreatePaymentReq) GetPaymentApplePayCreatingRequest() (v PaymentApplePayCreatingRequest, ok bool) {
	if !s.IsPaymentApplePayCreatingRequest() {
		return v, false
	}
	return s.PaymentApplePayCreatingRequest, true
}

// NewPaymentApplePayCreatingRequestCreatePaymentReq returns new CreatePaymentReq from PaymentApplePayCreatingRequest.
func NewPaymentApplePayCreatingRequestCreatePaymentReq(v PaymentApplePayCreatingRequest) CreatePaymentReq {
	var s CreatePaymentReq
	s.SetPaymentApplePayCreatingRequest(v)
	return s
}

// SetPaymentKonbiniCreatingRequest sets CreatePaymentReq to PaymentKonbiniCreatingRequest.
func (s *CreatePaymentReq) SetPaymentKonbiniCreatingRequest(v PaymentKonbiniCreatingRequest) {
	s.Type = PaymentKonbiniCreatingRequestCreatePaymentReq
	s.PaymentKonbiniCreatingRequest = v
}

// GetPaymentKonbiniCreatingRequest returns PaymentKonbiniCreatingRequest and true boolean if CreatePaymentReq is PaymentKonbiniCreatingRequest.
func (s CreatePaymentReq) GetPaymentKonbiniCreatingRequest() (v PaymentKonbiniCreatingRequest, ok bool) {
	if !s.IsPaymentKonbiniCreatingRequest() {
		return v, false
	}
	return s.PaymentKonbiniCreatingRequest, true
}

// NewPaymentKonbiniCreatingRequestCreatePaymentReq returns new CreatePaymentReq from PaymentKonbiniCreatingRequest.
func NewPaymentKonbiniCreatingRequestCreatePaymentReq(v PaymentKonbiniCreatingRequest) CreatePaymentReq {
	var s CreatePaymentReq
	s.SetPaymentKonbiniCreatingRequest(v)
	return s
}

// SetPaymentPayPayCreatingRequest sets CreatePaymentReq to PaymentPayPayCreatingRequest.
func (s *CreatePaymentReq) SetPaymentPayPayCreatingRequest(v PaymentPayPayCreatingRequest) {
	s.Type = PaymentPayPayCreatingRequestCreatePaymentReq
	s.PaymentPayPayCreatingRequest = v
}

// GetPaymentPayPayCreatingRequest returns PaymentPayPayCreatingRequest and true boolean if CreatePaymentReq is PaymentPayPayCreatingRequest.
func (s CreatePaymentReq) GetPaymentPayPayCreatingRequest() (v PaymentPayPayCreatingRequest, ok bool) {
	if !s.IsPaymentPayPayCreatingRequest() {
		return v, false
	}
	return s.PaymentPayPayCreatingRequest, true
}

// NewPaymentPayPayCreatingRequestCreatePaymentReq returns new CreatePaymentReq from PaymentPayPayCreatingRequest.
func NewPaymentPayPayCreatingRequestCreatePaymentReq(v PaymentPayPayCreatingRequest) CreatePaymentReq {
	var s CreatePaymentReq
	s.SetPaymentPayPayCreatingRequest(v)
	return s
}

// SetPaymentDirectDebitCreatingRequest sets CreatePaymentReq to PaymentDirectDebitCreatingRequest.
func (s *CreatePaymentReq) SetPaymentDirectDebitCreatingRequest(v PaymentDirectDebitCreatingRequest) {
	s.Type = PaymentDirectDebitCreatingRequestCreatePaymentReq
	s.PaymentDirectDebitCreatingRequest = v
}

// GetPaymentDirectDebitCreatingRequest returns PaymentDirectDebitCreatingRequest and true boolean if CreatePaymentReq is PaymentDirectDebitCreatingRequest.
func (s CreatePaymentReq) GetPaymentDirectDebitCreatingRequest() (v PaymentDirectDebitCreatingRequest, ok bool) {
	if !s.IsPaymentDirectDebitCreatingRequest() {
		return v, false
	}
	return s.PaymentDirectDebitCreatingRequest, true
}

// NewPaymentDirectDebitCreatingRequestCreatePaymentReq returns new CreatePaymentReq from PaymentDirectDebitCreatingRequest.
func NewPaymentDirectDebitCreatingRequestCreatePaymentReq(v PaymentDirectDebitCreatingRequest) CreatePaymentReq {
	var s CreatePaymentReq
	s.SetPaymentDirectDebitCreatingRequest(v)
	return s
}

type Created string

type Credential string

// 通貨コード\
// この決済で利用された通貨のコードです。
// - `JPY`: 日本円.
// Ref: #/components/schemas/CurrencyCode
type CurrencyCode string

const (
	CurrencyCodeJPY CurrencyCode = "JPY"
)

// AllValues returns all CurrencyCode values.
func (CurrencyCode) AllValues() []CurrencyCode {
	return []CurrencyCode{
		CurrencyCodeJPY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CurrencyCode) MarshalText() ([]byte, error) {
	switch s {
	case CurrencyCodeJPY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CurrencyCode) UnmarshalText(data []byte) error {
	switch CurrencyCode(data) {
	case CurrencyCodeJPY:
		*s = CurrencyCodeJPY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Customer
type Customer struct {
	// 顧客ID.
	ID OptString `json:"id"`
	// 顧客の名前.
	Name OptNilString `json:"name"`
	// 顧客のメールアドレス\
	// 形式： RFC5322.
	Email OptNilString `json:"email"`
	// 顧客の電話番号の国コード\
	// 形式： ITU-T E.164.
	PhoneCc OptNilString `json:"phone_cc"`
	// 顧客の電話番号.
	PhoneNo OptNilString `json:"phone_no"`
	// 顧客の住所の国コード\
	// 形式： ISO 3166-1 numeric.
	AddrCountry OptNilString `json:"addr_country"`
	// 顧客の住所の州コードまたは都道府県コード\
	// 参照： [国土交通省 都道府県コード](https://nlftp.mlit.go.jp/ksj/gml/codelist/PrefCd.
	// html).
	AddrState OptNilString `json:"addr_state"`
	// 顧客の住所の都市名.
	AddrCity OptNilString `json:"addr_city"`
	// 顧客の住所の番地・区画.
	AddrLine1 OptNilString `json:"addr_line_1"`
	// 顧客の住所の建物名・部屋番号.
	AddrLine2 OptNilString `json:"addr_line_2"`
	// 顧客の住所 その他.
	AddrLine3 OptNilString `json:"addr_line_3"`
	// 顧客の住所の郵便番号.
	AddrPostCode OptNilString `json:"addr_post_code"`
	// 決済手段（カード）登録状況
	// - `0`: 未登録
	// - `1`: 1件以上のカードが登録済み.
	CardRegistration OptNilCustomerCardRegistration `json:"card_registration"`
	// 決済手段（口座振替）登録状況
	// - `0`: 未登録
	// - `1`: 1件以上の振替用口座が登録済み.
	DirectdebitRegistration OptNilCustomerDirectdebitRegistration `json:"directdebit_registration"`
	Created                 OptCreated                            `json:"created"`
	Updated                 OptNilUpdated                         `json:"updated"`
}

// GetID returns the value of ID.
func (s *Customer) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *Customer) GetName() OptNilString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *Customer) GetEmail() OptNilString {
	return s.Email
}

// GetPhoneCc returns the value of PhoneCc.
func (s *Customer) GetPhoneCc() OptNilString {
	return s.PhoneCc
}

// GetPhoneNo returns the value of PhoneNo.
func (s *Customer) GetPhoneNo() OptNilString {
	return s.PhoneNo
}

// GetAddrCountry returns the value of AddrCountry.
func (s *Customer) GetAddrCountry() OptNilString {
	return s.AddrCountry
}

// GetAddrState returns the value of AddrState.
func (s *Customer) GetAddrState() OptNilString {
	return s.AddrState
}

// GetAddrCity returns the value of AddrCity.
func (s *Customer) GetAddrCity() OptNilString {
	return s.AddrCity
}

// GetAddrLine1 returns the value of AddrLine1.
func (s *Customer) GetAddrLine1() OptNilString {
	return s.AddrLine1
}

// GetAddrLine2 returns the value of AddrLine2.
func (s *Customer) GetAddrLine2() OptNilString {
	return s.AddrLine2
}

// GetAddrLine3 returns the value of AddrLine3.
func (s *Customer) GetAddrLine3() OptNilString {
	return s.AddrLine3
}

// GetAddrPostCode returns the value of AddrPostCode.
func (s *Customer) GetAddrPostCode() OptNilString {
	return s.AddrPostCode
}

// GetCardRegistration returns the value of CardRegistration.
func (s *Customer) GetCardRegistration() OptNilCustomerCardRegistration {
	return s.CardRegistration
}

// GetDirectdebitRegistration returns the value of DirectdebitRegistration.
func (s *Customer) GetDirectdebitRegistration() OptNilCustomerDirectdebitRegistration {
	return s.DirectdebitRegistration
}

// GetCreated returns the value of Created.
func (s *Customer) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *Customer) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *Customer) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Customer) SetName(val OptNilString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *Customer) SetEmail(val OptNilString) {
	s.Email = val
}

// SetPhoneCc sets the value of PhoneCc.
func (s *Customer) SetPhoneCc(val OptNilString) {
	s.PhoneCc = val
}

// SetPhoneNo sets the value of PhoneNo.
func (s *Customer) SetPhoneNo(val OptNilString) {
	s.PhoneNo = val
}

// SetAddrCountry sets the value of AddrCountry.
func (s *Customer) SetAddrCountry(val OptNilString) {
	s.AddrCountry = val
}

// SetAddrState sets the value of AddrState.
func (s *Customer) SetAddrState(val OptNilString) {
	s.AddrState = val
}

// SetAddrCity sets the value of AddrCity.
func (s *Customer) SetAddrCity(val OptNilString) {
	s.AddrCity = val
}

// SetAddrLine1 sets the value of AddrLine1.
func (s *Customer) SetAddrLine1(val OptNilString) {
	s.AddrLine1 = val
}

// SetAddrLine2 sets the value of AddrLine2.
func (s *Customer) SetAddrLine2(val OptNilString) {
	s.AddrLine2 = val
}

// SetAddrLine3 sets the value of AddrLine3.
func (s *Customer) SetAddrLine3(val OptNilString) {
	s.AddrLine3 = val
}

// SetAddrPostCode sets the value of AddrPostCode.
func (s *Customer) SetAddrPostCode(val OptNilString) {
	s.AddrPostCode = val
}

// SetCardRegistration sets the value of CardRegistration.
func (s *Customer) SetCardRegistration(val OptNilCustomerCardRegistration) {
	s.CardRegistration = val
}

// SetDirectdebitRegistration sets the value of DirectdebitRegistration.
func (s *Customer) SetDirectdebitRegistration(val OptNilCustomerDirectdebitRegistration) {
	s.DirectdebitRegistration = val
}

// SetCreated sets the value of Created.
func (s *Customer) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *Customer) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*Customer) createCustomerRes()   {}
func (*Customer) retrieveCustomerRes() {}
func (*Customer) updateCustomerRes()   {}

// Ref: #/components/schemas/CustomerCard.Creating.Request
type CustomerCardCreatingRequest struct {
	Token       Token       `json:"token"`
	DefaultFlag DefaultFlag `json:"default_flag"`
}

// GetToken returns the value of Token.
func (s *CustomerCardCreatingRequest) GetToken() Token {
	return s.Token
}

// GetDefaultFlag returns the value of DefaultFlag.
func (s *CustomerCardCreatingRequest) GetDefaultFlag() DefaultFlag {
	return s.DefaultFlag
}

// SetToken sets the value of Token.
func (s *CustomerCardCreatingRequest) SetToken(val Token) {
	s.Token = val
}

// SetDefaultFlag sets the value of DefaultFlag.
func (s *CustomerCardCreatingRequest) SetDefaultFlag(val DefaultFlag) {
	s.DefaultFlag = val
}

// Ref: #/components/schemas/CustomerCard.Deleting.Response
type CustomerCardDeletingResponse struct {
	ID         OptPropertiesID `json:"id"`
	CustomerID OptID           `json:"customer_id"`
	DeleteFlag OptDeleteFlag   `json:"delete_flag"`
}

// GetID returns the value of ID.
func (s *CustomerCardDeletingResponse) GetID() OptPropertiesID {
	return s.ID
}

// GetCustomerID returns the value of CustomerID.
func (s *CustomerCardDeletingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *CustomerCardDeletingResponse) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// SetID sets the value of ID.
func (s *CustomerCardDeletingResponse) SetID(val OptPropertiesID) {
	s.ID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *CustomerCardDeletingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *CustomerCardDeletingResponse) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

func (*CustomerCardDeletingResponse) deleteCustomerCardRes() {}

// 決済手段（カード）登録状況
// - `0`: 未登録
// - `1`: 1件以上のカードが登録済み.
type CustomerCardRegistration string

const (
	CustomerCardRegistration0 CustomerCardRegistration = "0"
	CustomerCardRegistration1 CustomerCardRegistration = "1"
)

// AllValues returns all CustomerCardRegistration values.
func (CustomerCardRegistration) AllValues() []CustomerCardRegistration {
	return []CustomerCardRegistration{
		CustomerCardRegistration0,
		CustomerCardRegistration1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CustomerCardRegistration) MarshalText() ([]byte, error) {
	switch s {
	case CustomerCardRegistration0:
		return []byte(s), nil
	case CustomerCardRegistration1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CustomerCardRegistration) UnmarshalText(data []byte) error {
	switch CustomerCardRegistration(data) {
	case CustomerCardRegistration0:
		*s = CustomerCardRegistration0
		return nil
	case CustomerCardRegistration1:
		*s = CustomerCardRegistration1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CustomerCard.Updating.Request
type CustomerCardUpdatingRequest struct {
	Token       OptNilXReqPropertiesToken `json:"token"`
	DefaultFlag OptDefaultFlag            `json:"default_flag"`
	HolderName  OptNilHolderName          `json:"holder_name"`
	Expire      OptNilExpire              `json:"expire"`
}

// GetToken returns the value of Token.
func (s *CustomerCardUpdatingRequest) GetToken() OptNilXReqPropertiesToken {
	return s.Token
}

// GetDefaultFlag returns the value of DefaultFlag.
func (s *CustomerCardUpdatingRequest) GetDefaultFlag() OptDefaultFlag {
	return s.DefaultFlag
}

// GetHolderName returns the value of HolderName.
func (s *CustomerCardUpdatingRequest) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetExpire returns the value of Expire.
func (s *CustomerCardUpdatingRequest) GetExpire() OptNilExpire {
	return s.Expire
}

// SetToken sets the value of Token.
func (s *CustomerCardUpdatingRequest) SetToken(val OptNilXReqPropertiesToken) {
	s.Token = val
}

// SetDefaultFlag sets the value of DefaultFlag.
func (s *CustomerCardUpdatingRequest) SetDefaultFlag(val OptDefaultFlag) {
	s.DefaultFlag = val
}

// SetHolderName sets the value of HolderName.
func (s *CustomerCardUpdatingRequest) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetExpire sets the value of Expire.
func (s *CustomerCardUpdatingRequest) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// Ref: #/components/schemas/Customer.Creating.Request
type CustomerCreatingRequest struct {
	ID           OptID              `json:"id"`
	Name         OptNilName         `json:"name"`
	Email        OptNilEmail        `json:"email"`
	PhoneCc      OptNilPhoneCc      `json:"phone_cc"`
	PhoneNo      OptNilPhoneNo      `json:"phone_no"`
	AddrCountry  OptNilAddrCountry  `json:"addr_country"`
	AddrState    OptNilAddrState    `json:"addr_state"`
	AddrCity     OptNilAddrCity     `json:"addr_city"`
	AddrLine1    OptNilAddrLine1    `json:"addr_line_1"`
	AddrLine2    OptNilAddrLine2    `json:"addr_line_2"`
	AddrLine3    OptNilAddrLine3    `json:"addr_line_3"`
	AddrPostCode OptNilAddrPostCode `json:"addr_post_code"`
}

// GetID returns the value of ID.
func (s *CustomerCreatingRequest) GetID() OptID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CustomerCreatingRequest) GetName() OptNilName {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *CustomerCreatingRequest) GetEmail() OptNilEmail {
	return s.Email
}

// GetPhoneCc returns the value of PhoneCc.
func (s *CustomerCreatingRequest) GetPhoneCc() OptNilPhoneCc {
	return s.PhoneCc
}

// GetPhoneNo returns the value of PhoneNo.
func (s *CustomerCreatingRequest) GetPhoneNo() OptNilPhoneNo {
	return s.PhoneNo
}

// GetAddrCountry returns the value of AddrCountry.
func (s *CustomerCreatingRequest) GetAddrCountry() OptNilAddrCountry {
	return s.AddrCountry
}

// GetAddrState returns the value of AddrState.
func (s *CustomerCreatingRequest) GetAddrState() OptNilAddrState {
	return s.AddrState
}

// GetAddrCity returns the value of AddrCity.
func (s *CustomerCreatingRequest) GetAddrCity() OptNilAddrCity {
	return s.AddrCity
}

// GetAddrLine1 returns the value of AddrLine1.
func (s *CustomerCreatingRequest) GetAddrLine1() OptNilAddrLine1 {
	return s.AddrLine1
}

// GetAddrLine2 returns the value of AddrLine2.
func (s *CustomerCreatingRequest) GetAddrLine2() OptNilAddrLine2 {
	return s.AddrLine2
}

// GetAddrLine3 returns the value of AddrLine3.
func (s *CustomerCreatingRequest) GetAddrLine3() OptNilAddrLine3 {
	return s.AddrLine3
}

// GetAddrPostCode returns the value of AddrPostCode.
func (s *CustomerCreatingRequest) GetAddrPostCode() OptNilAddrPostCode {
	return s.AddrPostCode
}

// SetID sets the value of ID.
func (s *CustomerCreatingRequest) SetID(val OptID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CustomerCreatingRequest) SetName(val OptNilName) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *CustomerCreatingRequest) SetEmail(val OptNilEmail) {
	s.Email = val
}

// SetPhoneCc sets the value of PhoneCc.
func (s *CustomerCreatingRequest) SetPhoneCc(val OptNilPhoneCc) {
	s.PhoneCc = val
}

// SetPhoneNo sets the value of PhoneNo.
func (s *CustomerCreatingRequest) SetPhoneNo(val OptNilPhoneNo) {
	s.PhoneNo = val
}

// SetAddrCountry sets the value of AddrCountry.
func (s *CustomerCreatingRequest) SetAddrCountry(val OptNilAddrCountry) {
	s.AddrCountry = val
}

// SetAddrState sets the value of AddrState.
func (s *CustomerCreatingRequest) SetAddrState(val OptNilAddrState) {
	s.AddrState = val
}

// SetAddrCity sets the value of AddrCity.
func (s *CustomerCreatingRequest) SetAddrCity(val OptNilAddrCity) {
	s.AddrCity = val
}

// SetAddrLine1 sets the value of AddrLine1.
func (s *CustomerCreatingRequest) SetAddrLine1(val OptNilAddrLine1) {
	s.AddrLine1 = val
}

// SetAddrLine2 sets the value of AddrLine2.
func (s *CustomerCreatingRequest) SetAddrLine2(val OptNilAddrLine2) {
	s.AddrLine2 = val
}

// SetAddrLine3 sets the value of AddrLine3.
func (s *CustomerCreatingRequest) SetAddrLine3(val OptNilAddrLine3) {
	s.AddrLine3 = val
}

// SetAddrPostCode sets the value of AddrPostCode.
func (s *CustomerCreatingRequest) SetAddrPostCode(val OptNilAddrPostCode) {
	s.AddrPostCode = val
}

// Ref: #/components/schemas/Customer.Deleting.Response
type CustomerDeletingResponse struct {
	ID         OptID         `json:"id"`
	DeleteFlag OptDeleteFlag `json:"delete_flag"`
}

// GetID returns the value of ID.
func (s *CustomerDeletingResponse) GetID() OptID {
	return s.ID
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *CustomerDeletingResponse) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// SetID sets the value of ID.
func (s *CustomerDeletingResponse) SetID(val OptID) {
	s.ID = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *CustomerDeletingResponse) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

func (*CustomerDeletingResponse) deleteCustomerRes() {}

// 決済手段（口座振替）登録状況
// - `0`: 未登録
// - `1`: 1件以上の振替用口座が登録済み.
type CustomerDirectdebitRegistration string

const (
	CustomerDirectdebitRegistration0 CustomerDirectdebitRegistration = "0"
	CustomerDirectdebitRegistration1 CustomerDirectdebitRegistration = "1"
)

// AllValues returns all CustomerDirectdebitRegistration values.
func (CustomerDirectdebitRegistration) AllValues() []CustomerDirectdebitRegistration {
	return []CustomerDirectdebitRegistration{
		CustomerDirectdebitRegistration0,
		CustomerDirectdebitRegistration1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CustomerDirectdebitRegistration) MarshalText() ([]byte, error) {
	switch s {
	case CustomerDirectdebitRegistration0:
		return []byte(s), nil
	case CustomerDirectdebitRegistration1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CustomerDirectdebitRegistration) UnmarshalText(data []byte) error {
	switch CustomerDirectdebitRegistration(data) {
	case CustomerDirectdebitRegistration0:
		*s = CustomerDirectdebitRegistration0
		return nil
	case CustomerDirectdebitRegistration1:
		*s = CustomerDirectdebitRegistration1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CustomerGroupID string

type CustomerIdSchema string

// Merged schema.
// Ref: #/components/schemas/Customer.ListRetrieving.Response
type CustomerListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString `json:"link_previous"`
	List         []Customer   `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *CustomerListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *CustomerListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *CustomerListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *CustomerListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *CustomerListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *CustomerListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *CustomerListRetrievingResponse) GetList() []Customer {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *CustomerListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *CustomerListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *CustomerListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *CustomerListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *CustomerListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *CustomerListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *CustomerListRetrievingResponse) SetList(val []Customer) {
	s.List = val
}

func (*CustomerListRetrievingResponse) retrieveCustomerListRes() {}

type CustomerName string

// Ref: #/components/schemas/CustomerPaymentMethod.Creating.Request
type CustomerPaymentMethodCreatingRequest struct {
	PayType            PaymentMethodPayType     `json:"pay_type"`
	DefaultFlag        PropertiesDefaultFlag    `json:"default_flag"`
	ReturnURL          OptNilReturnURL          `json:"return_url"`
	ReturnURLOnFailure OptNilReturnURLOnFailure `json:"return_url_on_failure"`
	ClientField1       OptNilClientFieldN       `json:"client_field_1"`
	ClientField2       OptNilClientFieldN       `json:"client_field_2"`
	ClientField3       OptNilClientFieldN       `json:"client_field_3"`
	// <span class="smallText">※ `pay_type =
	// "Card"`（この決済手段登録がカード情報登録である）のとき必須</span>.
	Card OptNilCustomerPaymentMethodCreatingRequestCard `json:"card"`
	// <span class="smallText">※ `pay_type =
	// "Directdebit"`（この決済手段登録が口座振替用の口座情報登録である）のとき必須</span>.
	Directdebit OptNilCustomerPaymentMethodCreatingRequestDirectdebit `json:"directdebit"`
}

// GetPayType returns the value of PayType.
func (s *CustomerPaymentMethodCreatingRequest) GetPayType() PaymentMethodPayType {
	return s.PayType
}

// GetDefaultFlag returns the value of DefaultFlag.
func (s *CustomerPaymentMethodCreatingRequest) GetDefaultFlag() PropertiesDefaultFlag {
	return s.DefaultFlag
}

// GetReturnURL returns the value of ReturnURL.
func (s *CustomerPaymentMethodCreatingRequest) GetReturnURL() OptNilReturnURL {
	return s.ReturnURL
}

// GetReturnURLOnFailure returns the value of ReturnURLOnFailure.
func (s *CustomerPaymentMethodCreatingRequest) GetReturnURLOnFailure() OptNilReturnURLOnFailure {
	return s.ReturnURLOnFailure
}

// GetClientField1 returns the value of ClientField1.
func (s *CustomerPaymentMethodCreatingRequest) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *CustomerPaymentMethodCreatingRequest) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *CustomerPaymentMethodCreatingRequest) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetCard returns the value of Card.
func (s *CustomerPaymentMethodCreatingRequest) GetCard() OptNilCustomerPaymentMethodCreatingRequestCard {
	return s.Card
}

// GetDirectdebit returns the value of Directdebit.
func (s *CustomerPaymentMethodCreatingRequest) GetDirectdebit() OptNilCustomerPaymentMethodCreatingRequestDirectdebit {
	return s.Directdebit
}

// SetPayType sets the value of PayType.
func (s *CustomerPaymentMethodCreatingRequest) SetPayType(val PaymentMethodPayType) {
	s.PayType = val
}

// SetDefaultFlag sets the value of DefaultFlag.
func (s *CustomerPaymentMethodCreatingRequest) SetDefaultFlag(val PropertiesDefaultFlag) {
	s.DefaultFlag = val
}

// SetReturnURL sets the value of ReturnURL.
func (s *CustomerPaymentMethodCreatingRequest) SetReturnURL(val OptNilReturnURL) {
	s.ReturnURL = val
}

// SetReturnURLOnFailure sets the value of ReturnURLOnFailure.
func (s *CustomerPaymentMethodCreatingRequest) SetReturnURLOnFailure(val OptNilReturnURLOnFailure) {
	s.ReturnURLOnFailure = val
}

// SetClientField1 sets the value of ClientField1.
func (s *CustomerPaymentMethodCreatingRequest) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *CustomerPaymentMethodCreatingRequest) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *CustomerPaymentMethodCreatingRequest) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetCard sets the value of Card.
func (s *CustomerPaymentMethodCreatingRequest) SetCard(val OptNilCustomerPaymentMethodCreatingRequestCard) {
	s.Card = val
}

// SetDirectdebit sets the value of Directdebit.
func (s *CustomerPaymentMethodCreatingRequest) SetDirectdebit(val OptNilCustomerPaymentMethodCreatingRequestDirectdebit) {
	s.Directdebit = val
}

// <span class="smallText">※ `pay_type =
// "Card"`（この決済手段登録がカード情報登録である）のとき必須</span>.
type CustomerPaymentMethodCreatingRequestCard struct {
	Token                     Token                           `json:"token"`
	TdsType                   OptNilTdsType                   `json:"tds_type"`
	Tds2Type                  OptNilTds2Type                  `json:"tds2_type"`
	TdTenantName              OptTdTenantName                 `json:"td_tenant_name"`
	Tds2ChAccChange           OptNilTds2ChAccChange           `json:"tds2_ch_acc_change"`
	Tds2ChAccDate             OptNilTds2ChAccDate             `json:"tds2_ch_acc_date"`
	Tds2ChAccPwChange         OptNilTds2ChAccPwChange         `json:"tds2_ch_acc_pw_change"`
	Tds2NbPurchaseAccount     OptNilTds2NbPurchaseAccount     `json:"tds2_nb_purchase_account"`
	Tds2PaymentAccAge         OptNilTds2PaymentAccAge         `json:"tds2_payment_acc_age"`
	Tds2ProvisionAttemptsDay  OptNilTds2ProvisionAttemptsDay  `json:"tds2_provision_attempts_day"`
	Tds2ShipAddressUsage      OptNilTds2ShipAddressUsage      `json:"tds2_ship_address_usage"`
	Tds2ShipNameInd           OptNilTds2ShipNameInd           `json:"tds2_ship_name_ind"`
	Tds2SuspiciousAccActivity OptNilTds2SuspiciousAccActivity `json:"tds2_suspicious_acc_activity"`
	Tds2TxnActivityDay        OptNilTds2TxnActivityDay        `json:"tds2_txn_activity_day"`
	Tds2TxnActivityYear       OptNilTds2TxnActivityYear       `json:"tds2_txn_activity_year"`
	Tds2ThreeDsReqAuthData    OptNilTds2ThreeDsReqAuthData    `json:"tds2_three_ds_req_auth_data"`
	Tds2ThreeDsReqAuthMethod  OptNilTds2ThreeDsReqAuthMethod  `json:"tds2_three_ds_req_auth_method"`
	Tds2AddrMatch             OptNilTds2AddrMatch             `json:"tds2_addr_match"`
	Tds2BillAddrCountry       OptNilTds2BillAddrCountry       `json:"tds2_bill_addr_country"`
	Tds2BillAddrState         OptNilTds2BillAddrState         `json:"tds2_bill_addr_state"`
	Tds2BillAddrCity          OptNilTds2BillAddrCity          `json:"tds2_bill_addr_city"`
	Tds2BillAddrLine1         OptNilTds2BillAddrLine1         `json:"tds2_bill_addr_line_1"`
	Tds2BillAddrLine2         OptNilTds2BillAddrLine2         `json:"tds2_bill_addr_line_2"`
	Tds2BillAddrLine3         OptTds2BillAddrLine3            `json:"tds2_bill_addr_line_3"`
	Tds2BillAddrPostCode      OptNilTds2BillAddrPostCode      `json:"tds2_bill_addr_post_code"`
	Tds2ShipAddrCountry       OptNilTds2ShipAddrCountry       `json:"tds2_ship_addr_country"`
	Tds2ShipAddrState         OptNilTds2ShipAddrState         `json:"tds2_ship_addr_state"`
	Tds2ShipAddrCity          OptNilTds2ShipAddrCity          `json:"tds2_ship_addr_city"`
	Tds2ShipAddrLine1         OptNilTds2ShipAddrLine1         `json:"tds2_ship_addr_line_1"`
	Tds2ShipAddrLine2         OptNilTds2ShipAddrLine2         `json:"tds2_ship_addr_line_2"`
	Tds2ShipAddrLine3         OptNilTds2ShipAddrLine3         `json:"tds2_ship_addr_line_3"`
	Tds2ShipAddrPostCode      OptNilTds2ShipAddrPostCode      `json:"tds2_ship_addr_post_code"`
	Tds2ShipInd               OptNilTds2ShipInd               `json:"tds2_ship_ind"`
	Tds2DeliveryEmailAddress  OptNilTds2DeliveryEmailAddress  `json:"tds2_delivery_email_address"`
	Tds2HomePhoneCc           OptNilTds2HomePhoneCc           `json:"tds2_home_phone_cc"`
	Tds2HomePhoneNo           OptNilTds2HomePhoneNo           `json:"tds2_home_phone_no"`
	Tds2MobilePhoneCc         OptNilTds2MobilePhoneCc         `json:"tds2_mobile_phone_cc"`
	Tds2MobilePhoneNo         OptNilTds2MobilePhoneNo         `json:"tds2_mobile_phone_no"`
	Tds2WorkPhoneCc           OptNilTds2WorkPhoneCc           `json:"tds2_work_phone_cc"`
	Tds2WorkPhoneNo           OptNilTds2WorkPhoneNo           `json:"tds2_work_phone_no"`
	Tds2DeliveryTimeframe     OptNilTds2DeliveryTimeframe     `json:"tds2_delivery_timeframe"`
	Tds2PreOrderDate          OptNilTds2PreOrderDate          `json:"tds2_pre_order_date"`
	Tds2PreOrderPurchaseInd   OptNilTds2PreOrderPurchaseInd   `json:"tds2_pre_order_purchase_ind"`
	Tds2ReorderItemsInd       OptNilTds2ReorderItemsInd       `json:"tds2_reorder_items_ind"`
	Tds2RecurringExpiry       OptNilTds2RecurringExpiry       `json:"tds2_recurring_expiry"`
	Tds2RecurringFrequency    OptNilTds2RecurringFrequency    `json:"tds2_recurring_frequency"`
	Tds2GiftCardAmount        OptNilTds2GiftCardAmount        `json:"tds2_gift_card_amount"`
	Tds2GiftCardCount         OptNilTds2GiftCardCount         `json:"tds2_gift_card_count"`
	Tds2GiftCardCurr          OptNilTds2GiftCardCurr          `json:"tds2_gift_card_curr"`
}

// GetToken returns the value of Token.
func (s *CustomerPaymentMethodCreatingRequestCard) GetToken() Token {
	return s.Token
}

// GetTdsType returns the value of TdsType.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTdTenantName returns the value of TdTenantName.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTdTenantName() OptTdTenantName {
	return s.TdTenantName
}

// GetTds2ChAccChange returns the value of Tds2ChAccChange.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ChAccChange() OptNilTds2ChAccChange {
	return s.Tds2ChAccChange
}

// GetTds2ChAccDate returns the value of Tds2ChAccDate.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ChAccDate() OptNilTds2ChAccDate {
	return s.Tds2ChAccDate
}

// GetTds2ChAccPwChange returns the value of Tds2ChAccPwChange.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ChAccPwChange() OptNilTds2ChAccPwChange {
	return s.Tds2ChAccPwChange
}

// GetTds2NbPurchaseAccount returns the value of Tds2NbPurchaseAccount.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2NbPurchaseAccount() OptNilTds2NbPurchaseAccount {
	return s.Tds2NbPurchaseAccount
}

// GetTds2PaymentAccAge returns the value of Tds2PaymentAccAge.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2PaymentAccAge() OptNilTds2PaymentAccAge {
	return s.Tds2PaymentAccAge
}

// GetTds2ProvisionAttemptsDay returns the value of Tds2ProvisionAttemptsDay.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ProvisionAttemptsDay() OptNilTds2ProvisionAttemptsDay {
	return s.Tds2ProvisionAttemptsDay
}

// GetTds2ShipAddressUsage returns the value of Tds2ShipAddressUsage.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipAddressUsage() OptNilTds2ShipAddressUsage {
	return s.Tds2ShipAddressUsage
}

// GetTds2ShipNameInd returns the value of Tds2ShipNameInd.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipNameInd() OptNilTds2ShipNameInd {
	return s.Tds2ShipNameInd
}

// GetTds2SuspiciousAccActivity returns the value of Tds2SuspiciousAccActivity.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2SuspiciousAccActivity() OptNilTds2SuspiciousAccActivity {
	return s.Tds2SuspiciousAccActivity
}

// GetTds2TxnActivityDay returns the value of Tds2TxnActivityDay.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2TxnActivityDay() OptNilTds2TxnActivityDay {
	return s.Tds2TxnActivityDay
}

// GetTds2TxnActivityYear returns the value of Tds2TxnActivityYear.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2TxnActivityYear() OptNilTds2TxnActivityYear {
	return s.Tds2TxnActivityYear
}

// GetTds2ThreeDsReqAuthData returns the value of Tds2ThreeDsReqAuthData.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ThreeDsReqAuthData() OptNilTds2ThreeDsReqAuthData {
	return s.Tds2ThreeDsReqAuthData
}

// GetTds2ThreeDsReqAuthMethod returns the value of Tds2ThreeDsReqAuthMethod.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ThreeDsReqAuthMethod() OptNilTds2ThreeDsReqAuthMethod {
	return s.Tds2ThreeDsReqAuthMethod
}

// GetTds2AddrMatch returns the value of Tds2AddrMatch.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2AddrMatch() OptNilTds2AddrMatch {
	return s.Tds2AddrMatch
}

// GetTds2BillAddrCountry returns the value of Tds2BillAddrCountry.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2BillAddrCountry() OptNilTds2BillAddrCountry {
	return s.Tds2BillAddrCountry
}

// GetTds2BillAddrState returns the value of Tds2BillAddrState.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2BillAddrState() OptNilTds2BillAddrState {
	return s.Tds2BillAddrState
}

// GetTds2BillAddrCity returns the value of Tds2BillAddrCity.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2BillAddrCity() OptNilTds2BillAddrCity {
	return s.Tds2BillAddrCity
}

// GetTds2BillAddrLine1 returns the value of Tds2BillAddrLine1.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2BillAddrLine1() OptNilTds2BillAddrLine1 {
	return s.Tds2BillAddrLine1
}

// GetTds2BillAddrLine2 returns the value of Tds2BillAddrLine2.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2BillAddrLine2() OptNilTds2BillAddrLine2 {
	return s.Tds2BillAddrLine2
}

// GetTds2BillAddrLine3 returns the value of Tds2BillAddrLine3.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2BillAddrLine3() OptTds2BillAddrLine3 {
	return s.Tds2BillAddrLine3
}

// GetTds2BillAddrPostCode returns the value of Tds2BillAddrPostCode.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2BillAddrPostCode() OptNilTds2BillAddrPostCode {
	return s.Tds2BillAddrPostCode
}

// GetTds2ShipAddrCountry returns the value of Tds2ShipAddrCountry.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipAddrCountry() OptNilTds2ShipAddrCountry {
	return s.Tds2ShipAddrCountry
}

// GetTds2ShipAddrState returns the value of Tds2ShipAddrState.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipAddrState() OptNilTds2ShipAddrState {
	return s.Tds2ShipAddrState
}

// GetTds2ShipAddrCity returns the value of Tds2ShipAddrCity.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipAddrCity() OptNilTds2ShipAddrCity {
	return s.Tds2ShipAddrCity
}

// GetTds2ShipAddrLine1 returns the value of Tds2ShipAddrLine1.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipAddrLine1() OptNilTds2ShipAddrLine1 {
	return s.Tds2ShipAddrLine1
}

// GetTds2ShipAddrLine2 returns the value of Tds2ShipAddrLine2.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipAddrLine2() OptNilTds2ShipAddrLine2 {
	return s.Tds2ShipAddrLine2
}

// GetTds2ShipAddrLine3 returns the value of Tds2ShipAddrLine3.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipAddrLine3() OptNilTds2ShipAddrLine3 {
	return s.Tds2ShipAddrLine3
}

// GetTds2ShipAddrPostCode returns the value of Tds2ShipAddrPostCode.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipAddrPostCode() OptNilTds2ShipAddrPostCode {
	return s.Tds2ShipAddrPostCode
}

// GetTds2ShipInd returns the value of Tds2ShipInd.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ShipInd() OptNilTds2ShipInd {
	return s.Tds2ShipInd
}

// GetTds2DeliveryEmailAddress returns the value of Tds2DeliveryEmailAddress.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2DeliveryEmailAddress() OptNilTds2DeliveryEmailAddress {
	return s.Tds2DeliveryEmailAddress
}

// GetTds2HomePhoneCc returns the value of Tds2HomePhoneCc.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2HomePhoneCc() OptNilTds2HomePhoneCc {
	return s.Tds2HomePhoneCc
}

// GetTds2HomePhoneNo returns the value of Tds2HomePhoneNo.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2HomePhoneNo() OptNilTds2HomePhoneNo {
	return s.Tds2HomePhoneNo
}

// GetTds2MobilePhoneCc returns the value of Tds2MobilePhoneCc.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2MobilePhoneCc() OptNilTds2MobilePhoneCc {
	return s.Tds2MobilePhoneCc
}

// GetTds2MobilePhoneNo returns the value of Tds2MobilePhoneNo.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2MobilePhoneNo() OptNilTds2MobilePhoneNo {
	return s.Tds2MobilePhoneNo
}

// GetTds2WorkPhoneCc returns the value of Tds2WorkPhoneCc.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2WorkPhoneCc() OptNilTds2WorkPhoneCc {
	return s.Tds2WorkPhoneCc
}

// GetTds2WorkPhoneNo returns the value of Tds2WorkPhoneNo.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2WorkPhoneNo() OptNilTds2WorkPhoneNo {
	return s.Tds2WorkPhoneNo
}

// GetTds2DeliveryTimeframe returns the value of Tds2DeliveryTimeframe.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2DeliveryTimeframe() OptNilTds2DeliveryTimeframe {
	return s.Tds2DeliveryTimeframe
}

// GetTds2PreOrderDate returns the value of Tds2PreOrderDate.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2PreOrderDate() OptNilTds2PreOrderDate {
	return s.Tds2PreOrderDate
}

// GetTds2PreOrderPurchaseInd returns the value of Tds2PreOrderPurchaseInd.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2PreOrderPurchaseInd() OptNilTds2PreOrderPurchaseInd {
	return s.Tds2PreOrderPurchaseInd
}

// GetTds2ReorderItemsInd returns the value of Tds2ReorderItemsInd.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2ReorderItemsInd() OptNilTds2ReorderItemsInd {
	return s.Tds2ReorderItemsInd
}

// GetTds2RecurringExpiry returns the value of Tds2RecurringExpiry.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2RecurringExpiry() OptNilTds2RecurringExpiry {
	return s.Tds2RecurringExpiry
}

// GetTds2RecurringFrequency returns the value of Tds2RecurringFrequency.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2RecurringFrequency() OptNilTds2RecurringFrequency {
	return s.Tds2RecurringFrequency
}

// GetTds2GiftCardAmount returns the value of Tds2GiftCardAmount.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2GiftCardAmount() OptNilTds2GiftCardAmount {
	return s.Tds2GiftCardAmount
}

// GetTds2GiftCardCount returns the value of Tds2GiftCardCount.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2GiftCardCount() OptNilTds2GiftCardCount {
	return s.Tds2GiftCardCount
}

// GetTds2GiftCardCurr returns the value of Tds2GiftCardCurr.
func (s *CustomerPaymentMethodCreatingRequestCard) GetTds2GiftCardCurr() OptNilTds2GiftCardCurr {
	return s.Tds2GiftCardCurr
}

// SetToken sets the value of Token.
func (s *CustomerPaymentMethodCreatingRequestCard) SetToken(val Token) {
	s.Token = val
}

// SetTdsType sets the value of TdsType.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTdTenantName sets the value of TdTenantName.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTdTenantName(val OptTdTenantName) {
	s.TdTenantName = val
}

// SetTds2ChAccChange sets the value of Tds2ChAccChange.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ChAccChange(val OptNilTds2ChAccChange) {
	s.Tds2ChAccChange = val
}

// SetTds2ChAccDate sets the value of Tds2ChAccDate.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ChAccDate(val OptNilTds2ChAccDate) {
	s.Tds2ChAccDate = val
}

// SetTds2ChAccPwChange sets the value of Tds2ChAccPwChange.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ChAccPwChange(val OptNilTds2ChAccPwChange) {
	s.Tds2ChAccPwChange = val
}

// SetTds2NbPurchaseAccount sets the value of Tds2NbPurchaseAccount.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2NbPurchaseAccount(val OptNilTds2NbPurchaseAccount) {
	s.Tds2NbPurchaseAccount = val
}

// SetTds2PaymentAccAge sets the value of Tds2PaymentAccAge.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2PaymentAccAge(val OptNilTds2PaymentAccAge) {
	s.Tds2PaymentAccAge = val
}

// SetTds2ProvisionAttemptsDay sets the value of Tds2ProvisionAttemptsDay.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ProvisionAttemptsDay(val OptNilTds2ProvisionAttemptsDay) {
	s.Tds2ProvisionAttemptsDay = val
}

// SetTds2ShipAddressUsage sets the value of Tds2ShipAddressUsage.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipAddressUsage(val OptNilTds2ShipAddressUsage) {
	s.Tds2ShipAddressUsage = val
}

// SetTds2ShipNameInd sets the value of Tds2ShipNameInd.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipNameInd(val OptNilTds2ShipNameInd) {
	s.Tds2ShipNameInd = val
}

// SetTds2SuspiciousAccActivity sets the value of Tds2SuspiciousAccActivity.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2SuspiciousAccActivity(val OptNilTds2SuspiciousAccActivity) {
	s.Tds2SuspiciousAccActivity = val
}

// SetTds2TxnActivityDay sets the value of Tds2TxnActivityDay.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2TxnActivityDay(val OptNilTds2TxnActivityDay) {
	s.Tds2TxnActivityDay = val
}

// SetTds2TxnActivityYear sets the value of Tds2TxnActivityYear.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2TxnActivityYear(val OptNilTds2TxnActivityYear) {
	s.Tds2TxnActivityYear = val
}

// SetTds2ThreeDsReqAuthData sets the value of Tds2ThreeDsReqAuthData.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ThreeDsReqAuthData(val OptNilTds2ThreeDsReqAuthData) {
	s.Tds2ThreeDsReqAuthData = val
}

// SetTds2ThreeDsReqAuthMethod sets the value of Tds2ThreeDsReqAuthMethod.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ThreeDsReqAuthMethod(val OptNilTds2ThreeDsReqAuthMethod) {
	s.Tds2ThreeDsReqAuthMethod = val
}

// SetTds2AddrMatch sets the value of Tds2AddrMatch.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2AddrMatch(val OptNilTds2AddrMatch) {
	s.Tds2AddrMatch = val
}

// SetTds2BillAddrCountry sets the value of Tds2BillAddrCountry.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2BillAddrCountry(val OptNilTds2BillAddrCountry) {
	s.Tds2BillAddrCountry = val
}

// SetTds2BillAddrState sets the value of Tds2BillAddrState.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2BillAddrState(val OptNilTds2BillAddrState) {
	s.Tds2BillAddrState = val
}

// SetTds2BillAddrCity sets the value of Tds2BillAddrCity.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2BillAddrCity(val OptNilTds2BillAddrCity) {
	s.Tds2BillAddrCity = val
}

// SetTds2BillAddrLine1 sets the value of Tds2BillAddrLine1.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2BillAddrLine1(val OptNilTds2BillAddrLine1) {
	s.Tds2BillAddrLine1 = val
}

// SetTds2BillAddrLine2 sets the value of Tds2BillAddrLine2.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2BillAddrLine2(val OptNilTds2BillAddrLine2) {
	s.Tds2BillAddrLine2 = val
}

// SetTds2BillAddrLine3 sets the value of Tds2BillAddrLine3.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2BillAddrLine3(val OptTds2BillAddrLine3) {
	s.Tds2BillAddrLine3 = val
}

// SetTds2BillAddrPostCode sets the value of Tds2BillAddrPostCode.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2BillAddrPostCode(val OptNilTds2BillAddrPostCode) {
	s.Tds2BillAddrPostCode = val
}

// SetTds2ShipAddrCountry sets the value of Tds2ShipAddrCountry.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipAddrCountry(val OptNilTds2ShipAddrCountry) {
	s.Tds2ShipAddrCountry = val
}

// SetTds2ShipAddrState sets the value of Tds2ShipAddrState.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipAddrState(val OptNilTds2ShipAddrState) {
	s.Tds2ShipAddrState = val
}

// SetTds2ShipAddrCity sets the value of Tds2ShipAddrCity.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipAddrCity(val OptNilTds2ShipAddrCity) {
	s.Tds2ShipAddrCity = val
}

// SetTds2ShipAddrLine1 sets the value of Tds2ShipAddrLine1.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipAddrLine1(val OptNilTds2ShipAddrLine1) {
	s.Tds2ShipAddrLine1 = val
}

// SetTds2ShipAddrLine2 sets the value of Tds2ShipAddrLine2.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipAddrLine2(val OptNilTds2ShipAddrLine2) {
	s.Tds2ShipAddrLine2 = val
}

// SetTds2ShipAddrLine3 sets the value of Tds2ShipAddrLine3.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipAddrLine3(val OptNilTds2ShipAddrLine3) {
	s.Tds2ShipAddrLine3 = val
}

// SetTds2ShipAddrPostCode sets the value of Tds2ShipAddrPostCode.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipAddrPostCode(val OptNilTds2ShipAddrPostCode) {
	s.Tds2ShipAddrPostCode = val
}

// SetTds2ShipInd sets the value of Tds2ShipInd.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ShipInd(val OptNilTds2ShipInd) {
	s.Tds2ShipInd = val
}

// SetTds2DeliveryEmailAddress sets the value of Tds2DeliveryEmailAddress.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2DeliveryEmailAddress(val OptNilTds2DeliveryEmailAddress) {
	s.Tds2DeliveryEmailAddress = val
}

// SetTds2HomePhoneCc sets the value of Tds2HomePhoneCc.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2HomePhoneCc(val OptNilTds2HomePhoneCc) {
	s.Tds2HomePhoneCc = val
}

// SetTds2HomePhoneNo sets the value of Tds2HomePhoneNo.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2HomePhoneNo(val OptNilTds2HomePhoneNo) {
	s.Tds2HomePhoneNo = val
}

// SetTds2MobilePhoneCc sets the value of Tds2MobilePhoneCc.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2MobilePhoneCc(val OptNilTds2MobilePhoneCc) {
	s.Tds2MobilePhoneCc = val
}

// SetTds2MobilePhoneNo sets the value of Tds2MobilePhoneNo.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2MobilePhoneNo(val OptNilTds2MobilePhoneNo) {
	s.Tds2MobilePhoneNo = val
}

// SetTds2WorkPhoneCc sets the value of Tds2WorkPhoneCc.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2WorkPhoneCc(val OptNilTds2WorkPhoneCc) {
	s.Tds2WorkPhoneCc = val
}

// SetTds2WorkPhoneNo sets the value of Tds2WorkPhoneNo.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2WorkPhoneNo(val OptNilTds2WorkPhoneNo) {
	s.Tds2WorkPhoneNo = val
}

// SetTds2DeliveryTimeframe sets the value of Tds2DeliveryTimeframe.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2DeliveryTimeframe(val OptNilTds2DeliveryTimeframe) {
	s.Tds2DeliveryTimeframe = val
}

// SetTds2PreOrderDate sets the value of Tds2PreOrderDate.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2PreOrderDate(val OptNilTds2PreOrderDate) {
	s.Tds2PreOrderDate = val
}

// SetTds2PreOrderPurchaseInd sets the value of Tds2PreOrderPurchaseInd.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2PreOrderPurchaseInd(val OptNilTds2PreOrderPurchaseInd) {
	s.Tds2PreOrderPurchaseInd = val
}

// SetTds2ReorderItemsInd sets the value of Tds2ReorderItemsInd.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2ReorderItemsInd(val OptNilTds2ReorderItemsInd) {
	s.Tds2ReorderItemsInd = val
}

// SetTds2RecurringExpiry sets the value of Tds2RecurringExpiry.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2RecurringExpiry(val OptNilTds2RecurringExpiry) {
	s.Tds2RecurringExpiry = val
}

// SetTds2RecurringFrequency sets the value of Tds2RecurringFrequency.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2RecurringFrequency(val OptNilTds2RecurringFrequency) {
	s.Tds2RecurringFrequency = val
}

// SetTds2GiftCardAmount sets the value of Tds2GiftCardAmount.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2GiftCardAmount(val OptNilTds2GiftCardAmount) {
	s.Tds2GiftCardAmount = val
}

// SetTds2GiftCardCount sets the value of Tds2GiftCardCount.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2GiftCardCount(val OptNilTds2GiftCardCount) {
	s.Tds2GiftCardCount = val
}

// SetTds2GiftCardCurr sets the value of Tds2GiftCardCurr.
func (s *CustomerPaymentMethodCreatingRequestCard) SetTds2GiftCardCurr(val OptNilTds2GiftCardCurr) {
	s.Tds2GiftCardCurr = val
}

// <span class="smallText">※ `pay_type =
// "Directdebit"`（この決済手段登録が口座振替用の口座情報登録である）のとき必須</span>.
type CustomerPaymentMethodCreatingRequestDirectdebit struct {
	ApplicationType  NilDirectDebitApplicationType `json:"application_type"`
	BankCode         NilBankCode                   `json:"bank_code"`
	BranchCode       OptNilBranchCode              `json:"branch_code"`
	AccountType      OptNilAccountType             `json:"account_type"`
	AccountNumber    OptNilAccountNumber           `json:"account_number"`
	AccountName      OptNilAccountName             `json:"account_name"`
	AccountNameKana  NilAccountNameKana            `json:"account_name_kana"`
	PaperApplication OptPaperApplication           `json:"paper_application"`
}

// GetApplicationType returns the value of ApplicationType.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) GetApplicationType() NilDirectDebitApplicationType {
	return s.ApplicationType
}

// GetBankCode returns the value of BankCode.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) GetBankCode() NilBankCode {
	return s.BankCode
}

// GetBranchCode returns the value of BranchCode.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) GetBranchCode() OptNilBranchCode {
	return s.BranchCode
}

// GetAccountType returns the value of AccountType.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) GetAccountType() OptNilAccountType {
	return s.AccountType
}

// GetAccountNumber returns the value of AccountNumber.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) GetAccountNumber() OptNilAccountNumber {
	return s.AccountNumber
}

// GetAccountName returns the value of AccountName.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) GetAccountName() OptNilAccountName {
	return s.AccountName
}

// GetAccountNameKana returns the value of AccountNameKana.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) GetAccountNameKana() NilAccountNameKana {
	return s.AccountNameKana
}

// GetPaperApplication returns the value of PaperApplication.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) GetPaperApplication() OptPaperApplication {
	return s.PaperApplication
}

// SetApplicationType sets the value of ApplicationType.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) SetApplicationType(val NilDirectDebitApplicationType) {
	s.ApplicationType = val
}

// SetBankCode sets the value of BankCode.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) SetBankCode(val NilBankCode) {
	s.BankCode = val
}

// SetBranchCode sets the value of BranchCode.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) SetBranchCode(val OptNilBranchCode) {
	s.BranchCode = val
}

// SetAccountType sets the value of AccountType.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) SetAccountType(val OptNilAccountType) {
	s.AccountType = val
}

// SetAccountNumber sets the value of AccountNumber.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) SetAccountNumber(val OptNilAccountNumber) {
	s.AccountNumber = val
}

// SetAccountName sets the value of AccountName.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) SetAccountName(val OptNilAccountName) {
	s.AccountName = val
}

// SetAccountNameKana sets the value of AccountNameKana.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) SetAccountNameKana(val NilAccountNameKana) {
	s.AccountNameKana = val
}

// SetPaperApplication sets the value of PaperApplication.
func (s *CustomerPaymentMethodCreatingRequestDirectdebit) SetPaperApplication(val OptPaperApplication) {
	s.PaperApplication = val
}

// Ref: #/components/schemas/CustomerPaymentMethod.Deleting.Response
type CustomerPaymentMethodDeletingResponse struct {
	ID         OptPaymentMethodPropertiesID `json:"id"`
	DeleteFlag OptDeleteFlag                `json:"delete_flag"`
}

// GetID returns the value of ID.
func (s *CustomerPaymentMethodDeletingResponse) GetID() OptPaymentMethodPropertiesID {
	return s.ID
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *CustomerPaymentMethodDeletingResponse) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// SetID sets the value of ID.
func (s *CustomerPaymentMethodDeletingResponse) SetID(val OptPaymentMethodPropertiesID) {
	s.ID = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *CustomerPaymentMethodDeletingResponse) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

func (*CustomerPaymentMethodDeletingResponse) deleteCustomerPaymentMethodRes() {}

// Ref: #/components/schemas/CustomerPaymentMethod.ListRetrieving.QueryParams
type CustomerPaymentMethodListRetrievingQueryParams struct {
	PayType PaymentMethodPayType `json:"pay_type"`
}

// GetPayType returns the value of PayType.
func (s *CustomerPaymentMethodListRetrievingQueryParams) GetPayType() PaymentMethodPayType {
	return s.PayType
}

// SetPayType sets the value of PayType.
func (s *CustomerPaymentMethodListRetrievingQueryParams) SetPayType(val PaymentMethodPayType) {
	s.PayType = val
}

// Ref: #/components/schemas/CustomerPaymentMethod.Retrieving.QueryParams
type CustomerPaymentMethodRetrievingQueryParams struct {
	PayType PaymentMethodPayType `json:"pay_type"`
}

// GetPayType returns the value of PayType.
func (s *CustomerPaymentMethodRetrievingQueryParams) GetPayType() PaymentMethodPayType {
	return s.PayType
}

// SetPayType sets the value of PayType.
func (s *CustomerPaymentMethodRetrievingQueryParams) SetPayType(val PaymentMethodPayType) {
	s.PayType = val
}

// Ref: #/components/schemas/Customer.Updating.Request
type CustomerUpdatingRequest struct {
	Name         OptNilName         `json:"name"`
	Email        OptNilEmail        `json:"email"`
	PhoneCc      OptNilPhoneCc      `json:"phone_cc"`
	PhoneNo      OptNilPhoneNo      `json:"phone_no"`
	AddrCountry  OptNilAddrCountry  `json:"addr_country"`
	AddrState    OptNilAddrState    `json:"addr_state"`
	AddrCity     OptNilAddrCity     `json:"addr_city"`
	AddrLine1    OptNilAddrLine1    `json:"addr_line_1"`
	AddrLine2    OptNilAddrLine2    `json:"addr_line_2"`
	AddrLine3    OptNilAddrLine3    `json:"addr_line_3"`
	AddrPostCode OptNilAddrPostCode `json:"addr_post_code"`
}

// GetName returns the value of Name.
func (s *CustomerUpdatingRequest) GetName() OptNilName {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *CustomerUpdatingRequest) GetEmail() OptNilEmail {
	return s.Email
}

// GetPhoneCc returns the value of PhoneCc.
func (s *CustomerUpdatingRequest) GetPhoneCc() OptNilPhoneCc {
	return s.PhoneCc
}

// GetPhoneNo returns the value of PhoneNo.
func (s *CustomerUpdatingRequest) GetPhoneNo() OptNilPhoneNo {
	return s.PhoneNo
}

// GetAddrCountry returns the value of AddrCountry.
func (s *CustomerUpdatingRequest) GetAddrCountry() OptNilAddrCountry {
	return s.AddrCountry
}

// GetAddrState returns the value of AddrState.
func (s *CustomerUpdatingRequest) GetAddrState() OptNilAddrState {
	return s.AddrState
}

// GetAddrCity returns the value of AddrCity.
func (s *CustomerUpdatingRequest) GetAddrCity() OptNilAddrCity {
	return s.AddrCity
}

// GetAddrLine1 returns the value of AddrLine1.
func (s *CustomerUpdatingRequest) GetAddrLine1() OptNilAddrLine1 {
	return s.AddrLine1
}

// GetAddrLine2 returns the value of AddrLine2.
func (s *CustomerUpdatingRequest) GetAddrLine2() OptNilAddrLine2 {
	return s.AddrLine2
}

// GetAddrLine3 returns the value of AddrLine3.
func (s *CustomerUpdatingRequest) GetAddrLine3() OptNilAddrLine3 {
	return s.AddrLine3
}

// GetAddrPostCode returns the value of AddrPostCode.
func (s *CustomerUpdatingRequest) GetAddrPostCode() OptNilAddrPostCode {
	return s.AddrPostCode
}

// SetName sets the value of Name.
func (s *CustomerUpdatingRequest) SetName(val OptNilName) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *CustomerUpdatingRequest) SetEmail(val OptNilEmail) {
	s.Email = val
}

// SetPhoneCc sets the value of PhoneCc.
func (s *CustomerUpdatingRequest) SetPhoneCc(val OptNilPhoneCc) {
	s.PhoneCc = val
}

// SetPhoneNo sets the value of PhoneNo.
func (s *CustomerUpdatingRequest) SetPhoneNo(val OptNilPhoneNo) {
	s.PhoneNo = val
}

// SetAddrCountry sets the value of AddrCountry.
func (s *CustomerUpdatingRequest) SetAddrCountry(val OptNilAddrCountry) {
	s.AddrCountry = val
}

// SetAddrState sets the value of AddrState.
func (s *CustomerUpdatingRequest) SetAddrState(val OptNilAddrState) {
	s.AddrState = val
}

// SetAddrCity sets the value of AddrCity.
func (s *CustomerUpdatingRequest) SetAddrCity(val OptNilAddrCity) {
	s.AddrCity = val
}

// SetAddrLine1 sets the value of AddrLine1.
func (s *CustomerUpdatingRequest) SetAddrLine1(val OptNilAddrLine1) {
	s.AddrLine1 = val
}

// SetAddrLine2 sets the value of AddrLine2.
func (s *CustomerUpdatingRequest) SetAddrLine2(val OptNilAddrLine2) {
	s.AddrLine2 = val
}

// SetAddrLine3 sets the value of AddrLine3.
func (s *CustomerUpdatingRequest) SetAddrLine3(val OptNilAddrLine3) {
	s.AddrLine3 = val
}

// SetAddrPostCode sets the value of AddrPostCode.
func (s *CustomerUpdatingRequest) SetAddrPostCode(val OptNilAddrPostCode) {
	s.AddrPostCode = val
}

type Data jx.Raw

type DealsInsecureContent bool

type DealsLongApplyContent bool

// デフォルトフラグ。\
// このカードが決済実行やサブスクリプション登録などでカードIDを指定しない場合に自動的に使用するカードかどうかを示すフラグです。\
// 顧客に対して必ず1つのデフォルトカードが存在します。（カードが1つも登録されていない場合を除く）
// - `0`: デフォルトカードではない
// - `1`: デフォルトカード.
// Ref: #/components/schemas/default_flag
type DefaultFlag string

const (
	DefaultFlag0 DefaultFlag = "0"
	DefaultFlag1 DefaultFlag = "1"
)

// AllValues returns all DefaultFlag values.
func (DefaultFlag) AllValues() []DefaultFlag {
	return []DefaultFlag{
		DefaultFlag0,
		DefaultFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DefaultFlag) MarshalText() ([]byte, error) {
	switch s {
	case DefaultFlag0:
		return []byte(s), nil
	case DefaultFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DefaultFlag) UnmarshalText(data []byte) error {
	switch DefaultFlag(data) {
	case DefaultFlag0:
		*s = DefaultFlag0
		return nil
	case DefaultFlag1:
		*s = DefaultFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 削除フラグ.
// Ref: #/components/schemas/delete_flag
type DeleteFlag string

const (
	DeleteFlag1 DeleteFlag = "1"
	DeleteFlag0 DeleteFlag = "0"
)

// AllValues returns all DeleteFlag values.
func (DeleteFlag) AllValues() []DeleteFlag {
	return []DeleteFlag{
		DeleteFlag1,
		DeleteFlag0,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DeleteFlag) MarshalText() ([]byte, error) {
	switch s {
	case DeleteFlag1:
		return []byte(s), nil
	case DeleteFlag0:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DeleteFlag) UnmarshalText(data []byte) error {
	switch DeleteFlag(data) {
	case DeleteFlag1:
		*s = DeleteFlag1
		return nil
	case DeleteFlag0:
		*s = DeleteFlag0
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type DepositAmount int

// Ref: #/components/schemas/DepositCycleInfo.V2
type DepositCycleInfoV2 struct {
	DepositCycleMasterID DepositCycleMasterId `json:"deposit_cycle_master_id"`
}

// GetDepositCycleMasterID returns the value of DepositCycleMasterID.
func (s *DepositCycleInfoV2) GetDepositCycleMasterID() DepositCycleMasterId {
	return s.DepositCycleMasterID
}

// SetDepositCycleMasterID sets the value of DepositCycleMasterID.
func (s *DepositCycleInfoV2) SetDepositCycleMasterID(val DepositCycleMasterId) {
	s.DepositCycleMasterID = val
}

// 入金サイクルマスタID\
// 入金サイクルについては[Docs > 精算管理 >
// クレジットカード決済の入金サイクル](https://docs.fincode.
// jp/business_management/deposit)を参照できます。
// - `1`: スタンダード（月1回, 月末締め翌月末入金）
// - `2`: スタンダード（月2回, 15日&月末締め15日後入金）.
// Ref: #/components/schemas/DepositCycleMasterId
type DepositCycleMasterId int

const (
	DepositCycleMasterId1 DepositCycleMasterId = 1
	DepositCycleMasterId2 DepositCycleMasterId = 2
)

// AllValues returns all DepositCycleMasterId values.
func (DepositCycleMasterId) AllValues() []DepositCycleMasterId {
	return []DepositCycleMasterId{
		DepositCycleMasterId1,
		DepositCycleMasterId2,
	}
}

type DepositDate string

// 入金ステータス
// - `3001`: 金額確定前<br /><span
// class="smallText">この集計期間中の売上入金に関してまだ集計中であり金額が確定していない状態。入金はされていません。</span>
// - `3002`: 金額確定済み<br /><span
// class="smallText">この集計期間中の売上入金の金額が確定した状態。入金はされていません。</span>
// - `3003`: 入金済み<br /><span
// class="smallText">この集計期間中のfincodeからの売上の入金が完了した状態。</span>
// - `3004`: 入金停止中<br /><span
// class="smallText">この集計期間中のfincodeからの売上の入金に際し何らかの懸念事項があり差し止めている状態。解消後fincodeはできるだけ早く入金を再試行します。</span>
// - `3005`: 入金エラー<br /><span
// class="smallText">この集計期間中のfincodeからの売上の入金に何らかの理由で失敗した状態。解消後fincodeはできるだけ早く入金を再試行します。</span>
// - `3006`: 請求中<br /><span
// class="smallText">集計期間中のキャンセル金額が売上金額を上回り、fincodeからショップへ請求している状態。</span>
// - `3007`: 請求エラー<br /><span
// class="smallText">集計期間中のキャンセル金額が売上金額を上回り、fincodeからショップへ請求が必要になったものの何らかのエラーにより失敗した状態。</span>
// - `3008`: 請求停止中<br /><span
// class="smallText">集計期間中のキャンセル金額が売上金額を上回り、fincodeからショップへ請求が必要になったものの何らかの理由により差し止めている状態。</span>
// - `3009`: 支払済み<br /><span
// class="smallText">集計期間中のキャンセル金額が売上金額を上回り発生したfincodeからショップへの請求に対する入金が確認できた状担。</span>
// - `3010`: 本人確認書類未確認<br /><span
// class="smallText">この集計期間中のfincodeからの売上の入金に際し本人確認書類の提出が確認できないため差し止めている状態。解消後fincodeはできるだけ早く入金を再試行します。</span>
// - `3011`: 精算済み<br /><span
// class="smallText">売上が0円のまま入金額が確定した状態。</span>
// - `3012`: 入金開始前<br /><span
// class="smallText">初回入金がまだ実施されていない状態。</span>
// - `3013`: 契約不成立<br /><span
// class="smallText">fincodeとの契約が不成立となった状態。</span>.
// Ref: #/components/schemas/DepositStatusCode
type DepositStatusCode int

const (
	DepositStatusCode3001 DepositStatusCode = 3001
	DepositStatusCode3002 DepositStatusCode = 3002
	DepositStatusCode3003 DepositStatusCode = 3003
	DepositStatusCode3004 DepositStatusCode = 3004
	DepositStatusCode3005 DepositStatusCode = 3005
	DepositStatusCode3006 DepositStatusCode = 3006
	DepositStatusCode3007 DepositStatusCode = 3007
	DepositStatusCode3008 DepositStatusCode = 3008
	DepositStatusCode3009 DepositStatusCode = 3009
	DepositStatusCode3010 DepositStatusCode = 3010
	DepositStatusCode3011 DepositStatusCode = 3011
	DepositStatusCode3012 DepositStatusCode = 3012
	DepositStatusCode3013 DepositStatusCode = 3013
)

// AllValues returns all DepositStatusCode values.
func (DepositStatusCode) AllValues() []DepositStatusCode {
	return []DepositStatusCode{
		DepositStatusCode3001,
		DepositStatusCode3002,
		DepositStatusCode3003,
		DepositStatusCode3004,
		DepositStatusCode3005,
		DepositStatusCode3006,
		DepositStatusCode3007,
		DepositStatusCode3008,
		DepositStatusCode3009,
		DepositStatusCode3010,
		DepositStatusCode3011,
		DepositStatusCode3012,
		DepositStatusCode3013,
	}
}

// Ref: #/components/schemas/DepositTargetBankAccountInfo
type DepositTargetBankAccountInfo struct {
	// 法人口座か
	// - `true`: 法人口座
	// - `false`: 個人口座.
	Corporate OptBool `json:"corporate"`
	// 入金先法人名.
	RecipientCorporateName OptString `json:"recipient_corporate_name"`
	// 入金先代表者氏名 姓.
	RecipientRepresntativeLastName OptString `json:"recipient_represntative_last_name"`
	// 入金先代表者氏名 名.
	RecipientRepresntativeFirstName OptString `json:"recipient_represntative_first_name"`
	// 入金先 金融機関コード.
	BankCode OptString `json:"bank_code"`
	// 入金先 金融機関名.
	BankName OptString `json:"bank_name"`
	// 入金先 金融機関名 カナ.
	BankNameKana OptString `json:"bank_name_kana"`
	// 入金先 支店コード.
	BranchCode OptString `json:"branch_code"`
	// 入金先 支店名.
	BranchName OptString `json:"branch_name"`
	// 入金先 支店名 カナ.
	BranchNameKana OptString `json:"branch_name_kana"`
	// 入金先 口座種別
	// - `0`: 普通
	// - `1`: 当座.
	AccountKind OptDepositTargetBankAccountInfoAccountKind `json:"account_kind"`
	// 入金先 口座番号.
	AccountNumber OptString `json:"account_number"`
	// 入金先 口座名義.
	AccountName OptString `json:"account_name"`
}

// GetCorporate returns the value of Corporate.
func (s *DepositTargetBankAccountInfo) GetCorporate() OptBool {
	return s.Corporate
}

// GetRecipientCorporateName returns the value of RecipientCorporateName.
func (s *DepositTargetBankAccountInfo) GetRecipientCorporateName() OptString {
	return s.RecipientCorporateName
}

// GetRecipientRepresntativeLastName returns the value of RecipientRepresntativeLastName.
func (s *DepositTargetBankAccountInfo) GetRecipientRepresntativeLastName() OptString {
	return s.RecipientRepresntativeLastName
}

// GetRecipientRepresntativeFirstName returns the value of RecipientRepresntativeFirstName.
func (s *DepositTargetBankAccountInfo) GetRecipientRepresntativeFirstName() OptString {
	return s.RecipientRepresntativeFirstName
}

// GetBankCode returns the value of BankCode.
func (s *DepositTargetBankAccountInfo) GetBankCode() OptString {
	return s.BankCode
}

// GetBankName returns the value of BankName.
func (s *DepositTargetBankAccountInfo) GetBankName() OptString {
	return s.BankName
}

// GetBankNameKana returns the value of BankNameKana.
func (s *DepositTargetBankAccountInfo) GetBankNameKana() OptString {
	return s.BankNameKana
}

// GetBranchCode returns the value of BranchCode.
func (s *DepositTargetBankAccountInfo) GetBranchCode() OptString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *DepositTargetBankAccountInfo) GetBranchName() OptString {
	return s.BranchName
}

// GetBranchNameKana returns the value of BranchNameKana.
func (s *DepositTargetBankAccountInfo) GetBranchNameKana() OptString {
	return s.BranchNameKana
}

// GetAccountKind returns the value of AccountKind.
func (s *DepositTargetBankAccountInfo) GetAccountKind() OptDepositTargetBankAccountInfoAccountKind {
	return s.AccountKind
}

// GetAccountNumber returns the value of AccountNumber.
func (s *DepositTargetBankAccountInfo) GetAccountNumber() OptString {
	return s.AccountNumber
}

// GetAccountName returns the value of AccountName.
func (s *DepositTargetBankAccountInfo) GetAccountName() OptString {
	return s.AccountName
}

// SetCorporate sets the value of Corporate.
func (s *DepositTargetBankAccountInfo) SetCorporate(val OptBool) {
	s.Corporate = val
}

// SetRecipientCorporateName sets the value of RecipientCorporateName.
func (s *DepositTargetBankAccountInfo) SetRecipientCorporateName(val OptString) {
	s.RecipientCorporateName = val
}

// SetRecipientRepresntativeLastName sets the value of RecipientRepresntativeLastName.
func (s *DepositTargetBankAccountInfo) SetRecipientRepresntativeLastName(val OptString) {
	s.RecipientRepresntativeLastName = val
}

// SetRecipientRepresntativeFirstName sets the value of RecipientRepresntativeFirstName.
func (s *DepositTargetBankAccountInfo) SetRecipientRepresntativeFirstName(val OptString) {
	s.RecipientRepresntativeFirstName = val
}

// SetBankCode sets the value of BankCode.
func (s *DepositTargetBankAccountInfo) SetBankCode(val OptString) {
	s.BankCode = val
}

// SetBankName sets the value of BankName.
func (s *DepositTargetBankAccountInfo) SetBankName(val OptString) {
	s.BankName = val
}

// SetBankNameKana sets the value of BankNameKana.
func (s *DepositTargetBankAccountInfo) SetBankNameKana(val OptString) {
	s.BankNameKana = val
}

// SetBranchCode sets the value of BranchCode.
func (s *DepositTargetBankAccountInfo) SetBranchCode(val OptString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *DepositTargetBankAccountInfo) SetBranchName(val OptString) {
	s.BranchName = val
}

// SetBranchNameKana sets the value of BranchNameKana.
func (s *DepositTargetBankAccountInfo) SetBranchNameKana(val OptString) {
	s.BranchNameKana = val
}

// SetAccountKind sets the value of AccountKind.
func (s *DepositTargetBankAccountInfo) SetAccountKind(val OptDepositTargetBankAccountInfoAccountKind) {
	s.AccountKind = val
}

// SetAccountNumber sets the value of AccountNumber.
func (s *DepositTargetBankAccountInfo) SetAccountNumber(val OptString) {
	s.AccountNumber = val
}

// SetAccountName sets the value of AccountName.
func (s *DepositTargetBankAccountInfo) SetAccountName(val OptString) {
	s.AccountName = val
}

// 入金先 口座種別
// - `0`: 普通
// - `1`: 当座.
type DepositTargetBankAccountInfoAccountKind string

const (
	DepositTargetBankAccountInfoAccountKind0 DepositTargetBankAccountInfoAccountKind = "0"
	DepositTargetBankAccountInfoAccountKind1 DepositTargetBankAccountInfoAccountKind = "1"
)

// AllValues returns all DepositTargetBankAccountInfoAccountKind values.
func (DepositTargetBankAccountInfoAccountKind) AllValues() []DepositTargetBankAccountInfoAccountKind {
	return []DepositTargetBankAccountInfoAccountKind{
		DepositTargetBankAccountInfoAccountKind0,
		DepositTargetBankAccountInfoAccountKind1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DepositTargetBankAccountInfoAccountKind) MarshalText() ([]byte, error) {
	switch s {
	case DepositTargetBankAccountInfoAccountKind0:
		return []byte(s), nil
	case DepositTargetBankAccountInfoAccountKind1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DepositTargetBankAccountInfoAccountKind) UnmarshalText(data []byte) error {
	switch DepositTargetBankAccountInfoAccountKind(data) {
	case DepositTargetBankAccountInfoAccountKind0:
		*s = DepositTargetBankAccountInfoAccountKind0
		return nil
	case DepositTargetBankAccountInfoAccountKind1:
		*s = DepositTargetBankAccountInfoAccountKind1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Description string

type DeviceName string

type DigitalContent bool

// この振替用口座を登録した際の申込方法
// - `PAPER`: 依頼書登録
// - `ONLINE`: Web登録.
// Ref: #/components/schemas/DirectDebitApplicationType
type DirectDebitApplicationType string

const (
	DirectDebitApplicationTypePAPER  DirectDebitApplicationType = "PAPER"
	DirectDebitApplicationTypeONLINE DirectDebitApplicationType = "ONLINE"
)

// AllValues returns all DirectDebitApplicationType values.
func (DirectDebitApplicationType) AllValues() []DirectDebitApplicationType {
	return []DirectDebitApplicationType{
		DirectDebitApplicationTypePAPER,
		DirectDebitApplicationTypeONLINE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DirectDebitApplicationType) MarshalText() ([]byte, error) {
	switch s {
	case DirectDebitApplicationTypePAPER:
		return []byte(s), nil
	case DirectDebitApplicationTypeONLINE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DirectDebitApplicationType) UnmarshalText(data []byte) error {
	switch DirectDebitApplicationType(data) {
	case DirectDebitApplicationTypePAPER:
		*s = DirectDebitApplicationTypePAPER
		return nil
	case DirectDebitApplicationTypeONLINE:
		*s = DirectDebitApplicationTypeONLINE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 最新の振替結果コード。\
// この決済手段で最後に行われた振替の結果コードです。
// - `0`: 振替成功
// - `1`: 残高不足による失敗
// - `2`: 預金取引なしによる失敗<br /><span
// class="smallText">存在しない口座に対して請求した場合などに発生します。</span>
// - `3`: 購入者事由による失敗
// - `4`: 依頼書未着・不備による失敗<br /><span
// class="smallText">口座振替依頼書が金融機関側で登録されていない場合に発生します。</span>
// - `8`: ショップ事由による失敗<br /><span
// class="smallText">通常は発生しません。発生し調査が必要な場合はfincodeにお問い合わせください。 </span>
// - `9`: その他の失敗<br /><span
// class="smallText">通常は発生しません。発生し調査が必要な場合はfincodeにお問い合わせください。 </span>
// - `E`: データエラーに起因する失敗<br /><span
// class="smallText">通常は発生しません。発生し調査が必要な場合はfincodeにお問い合わせください。 </span>
// - `N`: 振替結果未着<br /><span
// class="smallText">通常は発生しません。発生し調査が必要な場合はfincodeにお問い合わせください。 </span>
// [お問い合わせはこちらへ](https://dashboard.fincode.
// jp/contact?_gl=1*vssgo5*_ga*MTU2NDM2NzY1MS4xNjk5MzI0Nzk4*_ga_8Y6Q0J470G*MTcwNzg4MzY4MS4zMTkuMS4xNzA3ODg5NTYwLjYwLjAuMA..&_ga=2.240544707.1302727582.1707783144-1564367651.1699324798).
// Ref: #/components/schemas/DirectDebitLastResultCode
type DirectDebitLastResultCode string

const (
	DirectDebitLastResultCode0 DirectDebitLastResultCode = "0"
	DirectDebitLastResultCode1 DirectDebitLastResultCode = "1"
	DirectDebitLastResultCode2 DirectDebitLastResultCode = "2"
	DirectDebitLastResultCode3 DirectDebitLastResultCode = "3"
	DirectDebitLastResultCode4 DirectDebitLastResultCode = "4"
	DirectDebitLastResultCode8 DirectDebitLastResultCode = "8"
	DirectDebitLastResultCode9 DirectDebitLastResultCode = "9"
	DirectDebitLastResultCodeE DirectDebitLastResultCode = "E"
	DirectDebitLastResultCodeN DirectDebitLastResultCode = "N"
)

// AllValues returns all DirectDebitLastResultCode values.
func (DirectDebitLastResultCode) AllValues() []DirectDebitLastResultCode {
	return []DirectDebitLastResultCode{
		DirectDebitLastResultCode0,
		DirectDebitLastResultCode1,
		DirectDebitLastResultCode2,
		DirectDebitLastResultCode3,
		DirectDebitLastResultCode4,
		DirectDebitLastResultCode8,
		DirectDebitLastResultCode9,
		DirectDebitLastResultCodeE,
		DirectDebitLastResultCodeN,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DirectDebitLastResultCode) MarshalText() ([]byte, error) {
	switch s {
	case DirectDebitLastResultCode0:
		return []byte(s), nil
	case DirectDebitLastResultCode1:
		return []byte(s), nil
	case DirectDebitLastResultCode2:
		return []byte(s), nil
	case DirectDebitLastResultCode3:
		return []byte(s), nil
	case DirectDebitLastResultCode4:
		return []byte(s), nil
	case DirectDebitLastResultCode8:
		return []byte(s), nil
	case DirectDebitLastResultCode9:
		return []byte(s), nil
	case DirectDebitLastResultCodeE:
		return []byte(s), nil
	case DirectDebitLastResultCodeN:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DirectDebitLastResultCode) UnmarshalText(data []byte) error {
	switch DirectDebitLastResultCode(data) {
	case DirectDebitLastResultCode0:
		*s = DirectDebitLastResultCode0
		return nil
	case DirectDebitLastResultCode1:
		*s = DirectDebitLastResultCode1
		return nil
	case DirectDebitLastResultCode2:
		*s = DirectDebitLastResultCode2
		return nil
	case DirectDebitLastResultCode3:
		*s = DirectDebitLastResultCode3
		return nil
	case DirectDebitLastResultCode4:
		*s = DirectDebitLastResultCode4
		return nil
	case DirectDebitLastResultCode8:
		*s = DirectDebitLastResultCode8
		return nil
	case DirectDebitLastResultCode9:
		*s = DirectDebitLastResultCode9
		return nil
	case DirectDebitLastResultCodeE:
		*s = DirectDebitLastResultCodeE
		return nil
	case DirectDebitLastResultCodeN:
		*s = DirectDebitLastResultCodeN
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 振替結果コード
// - `0`: 振替成功<br><span class="smallText">振替が成功しました。</span>
// - `1`: 残高不足（失敗）<br><span
// class="smallText">口座残高の不足により振替に失敗しました。</span>
// - `2`: 預金取引無し（失敗）<br><span
// class="smallText">指定した口座が存在しないなどの理由により振替に失敗しました。</span>
// - `3`: 購入者事由（失敗）<br><span
// class="smallText">購入者による振替取引の停止等により振替に失敗しました。</span>
// - `4`: 依頼書未着・不備（失敗）<br><span
// class="smallText">（依頼書登録）この決済に所定の期日までの口座振替依頼書の提出が確認出来なかったため振替に失敗しました。</span>
// - `8`: ショップ事由（失敗）<br><span
// class="smallText">ショップに起因する事由により振替に失敗しました。詳細はfincodeにお問い合わせください。</span>
// - `9 | E | N`: その他（失敗）<br><span
// class="smallText">その他の理由により振替に失敗しました（通常は発生しません）。詳細はfincodeにお問い合わせください。</span>
// [お問い合わせはこちらのフォームから](https://dashboard.fincode.
// jp/contact)いただけます。.
// Ref: #/components/schemas/DirectDebitResultCode
type DirectDebitResultCode string

const (
	DirectDebitResultCode0 DirectDebitResultCode = "0"
	DirectDebitResultCode1 DirectDebitResultCode = "1"
	DirectDebitResultCode2 DirectDebitResultCode = "2"
	DirectDebitResultCode3 DirectDebitResultCode = "3"
	DirectDebitResultCode4 DirectDebitResultCode = "4"
	DirectDebitResultCode8 DirectDebitResultCode = "8"
	DirectDebitResultCode9 DirectDebitResultCode = "9"
	DirectDebitResultCodeE DirectDebitResultCode = "E"
	DirectDebitResultCodeN DirectDebitResultCode = "N"
)

// AllValues returns all DirectDebitResultCode values.
func (DirectDebitResultCode) AllValues() []DirectDebitResultCode {
	return []DirectDebitResultCode{
		DirectDebitResultCode0,
		DirectDebitResultCode1,
		DirectDebitResultCode2,
		DirectDebitResultCode3,
		DirectDebitResultCode4,
		DirectDebitResultCode8,
		DirectDebitResultCode9,
		DirectDebitResultCodeE,
		DirectDebitResultCodeN,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DirectDebitResultCode) MarshalText() ([]byte, error) {
	switch s {
	case DirectDebitResultCode0:
		return []byte(s), nil
	case DirectDebitResultCode1:
		return []byte(s), nil
	case DirectDebitResultCode2:
		return []byte(s), nil
	case DirectDebitResultCode3:
		return []byte(s), nil
	case DirectDebitResultCode4:
		return []byte(s), nil
	case DirectDebitResultCode8:
		return []byte(s), nil
	case DirectDebitResultCode9:
		return []byte(s), nil
	case DirectDebitResultCodeE:
		return []byte(s), nil
	case DirectDebitResultCodeN:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DirectDebitResultCode) UnmarshalText(data []byte) error {
	switch DirectDebitResultCode(data) {
	case DirectDebitResultCode0:
		*s = DirectDebitResultCode0
		return nil
	case DirectDebitResultCode1:
		*s = DirectDebitResultCode1
		return nil
	case DirectDebitResultCode2:
		*s = DirectDebitResultCode2
		return nil
	case DirectDebitResultCode3:
		*s = DirectDebitResultCode3
		return nil
	case DirectDebitResultCode4:
		*s = DirectDebitResultCode4
		return nil
	case DirectDebitResultCode8:
		*s = DirectDebitResultCode8
		return nil
	case DirectDebitResultCode9:
		*s = DirectDebitResultCode9
		return nil
	case DirectDebitResultCodeE:
		*s = DirectDebitResultCodeE
		return nil
	case DirectDebitResultCodeN:
		*s = DirectDebitResultCodeN
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Email string

// VISA/Mastercard即時利用 結果
// - `1`: OK<br /><span
// class="smallText">即時利用が認められました。VISA/Mastercardブランドの決済受付が可能な状態です。</span>
// - `2`: NG<br /><span
// class="smallText">ネガティブチェックにより、fincodeの利用が認められませんでした。</span>
// - `3`: 保留<br /><span
// class="smallText">即時利用が認められませんでした。審査は継続して行われます。</span>.
// Ref: #/components/schemas/enable_immediate_use
type EnableImmediateUse float64

const (
	EnableImmediateUse1 EnableImmediateUse = 1
	EnableImmediateUse2 EnableImmediateUse = 2
	EnableImmediateUse3 EnableImmediateUse = 3
)

// AllValues returns all EnableImmediateUse values.
func (EnableImmediateUse) AllValues() []EnableImmediateUse {
	return []EnableImmediateUse{
		EnableImmediateUse1,
		EnableImmediateUse2,
		EnableImmediateUse3,
	}
}

// 月末課金フラグ
// - `0`：月末課金を行わない
// - `1`：月末課金を行う.
// Ref: #/components/schemas/end_month_flag
type EndMonthFlag string

const (
	EndMonthFlag0 EndMonthFlag = "0"
	EndMonthFlag1 EndMonthFlag = "1"
)

// AllValues returns all EndMonthFlag values.
func (EndMonthFlag) AllValues() []EndMonthFlag {
	return []EndMonthFlag{
		EndMonthFlag0,
		EndMonthFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EndMonthFlag) MarshalText() ([]byte, error) {
	switch s {
	case EndMonthFlag0:
		return []byte(s), nil
	case EndMonthFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EndMonthFlag) UnmarshalText(data []byte) error {
	switch EndMonthFlag(data) {
	case EndMonthFlag0:
		*s = EndMonthFlag0
		return nil
	case EndMonthFlag1:
		*s = EndMonthFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ErrorCode string

type EstablishedAt string

// Ref: #/components/schemas/Examination
type Examination struct {
	ExaminationMasterID OptExaminationMasterId `json:"examination_master_id"`
	StatusCode          OptExaminationStatus   `json:"status_code"`
	// 加盟店番号.
	MemberCode OptNilString `json:"member_code"`
	// 3Dセキュア認証利用可否
	// - `true`: 利用可
	// - `false`: 利用不可.
	TdsAvailable OptNilBool `json:"tds_available"`
	// 分割払い利用可否
	// - `true`: 利用可
	// - `false`: 利用不可.
	InstallmentsPaymentAvailable OptNilBool `json:"installments_payment_available"`
	// MCC 1.
	Mcc1 OptNilString `json:"mcc_1"`
	// MCC 2.
	Mcc2 OptNilString `json:"mcc_2"`
	// PayPay 加盟店番号.
	PaypayMid OptNilString `json:"paypay_mid"`
	// PayPay 店舗ID.
	PaypayStoreID OptNilString `json:"paypay_store_id"`
	// PAYSLE 企業コード.
	PaysleMerchantCode OptNilString `json:"paysle_merchant_code"`
	// PAYSLE ログイン企業ID.
	PaysleUserID OptNilString `json:"paysle_user_id"`
	// PAYSLE システム接続パスワード.
	PaysleUserPassword OptNilString `json:"paysle_user_password"`
	// 利用開始日\
	// 形式：`yyyy/MM/dd`.
	CutOverAt OptNilString `json:"cut_over_at"`
}

// GetExaminationMasterID returns the value of ExaminationMasterID.
func (s *Examination) GetExaminationMasterID() OptExaminationMasterId {
	return s.ExaminationMasterID
}

// GetStatusCode returns the value of StatusCode.
func (s *Examination) GetStatusCode() OptExaminationStatus {
	return s.StatusCode
}

// GetMemberCode returns the value of MemberCode.
func (s *Examination) GetMemberCode() OptNilString {
	return s.MemberCode
}

// GetTdsAvailable returns the value of TdsAvailable.
func (s *Examination) GetTdsAvailable() OptNilBool {
	return s.TdsAvailable
}

// GetInstallmentsPaymentAvailable returns the value of InstallmentsPaymentAvailable.
func (s *Examination) GetInstallmentsPaymentAvailable() OptNilBool {
	return s.InstallmentsPaymentAvailable
}

// GetMcc1 returns the value of Mcc1.
func (s *Examination) GetMcc1() OptNilString {
	return s.Mcc1
}

// GetMcc2 returns the value of Mcc2.
func (s *Examination) GetMcc2() OptNilString {
	return s.Mcc2
}

// GetPaypayMid returns the value of PaypayMid.
func (s *Examination) GetPaypayMid() OptNilString {
	return s.PaypayMid
}

// GetPaypayStoreID returns the value of PaypayStoreID.
func (s *Examination) GetPaypayStoreID() OptNilString {
	return s.PaypayStoreID
}

// GetPaysleMerchantCode returns the value of PaysleMerchantCode.
func (s *Examination) GetPaysleMerchantCode() OptNilString {
	return s.PaysleMerchantCode
}

// GetPaysleUserID returns the value of PaysleUserID.
func (s *Examination) GetPaysleUserID() OptNilString {
	return s.PaysleUserID
}

// GetPaysleUserPassword returns the value of PaysleUserPassword.
func (s *Examination) GetPaysleUserPassword() OptNilString {
	return s.PaysleUserPassword
}

// GetCutOverAt returns the value of CutOverAt.
func (s *Examination) GetCutOverAt() OptNilString {
	return s.CutOverAt
}

// SetExaminationMasterID sets the value of ExaminationMasterID.
func (s *Examination) SetExaminationMasterID(val OptExaminationMasterId) {
	s.ExaminationMasterID = val
}

// SetStatusCode sets the value of StatusCode.
func (s *Examination) SetStatusCode(val OptExaminationStatus) {
	s.StatusCode = val
}

// SetMemberCode sets the value of MemberCode.
func (s *Examination) SetMemberCode(val OptNilString) {
	s.MemberCode = val
}

// SetTdsAvailable sets the value of TdsAvailable.
func (s *Examination) SetTdsAvailable(val OptNilBool) {
	s.TdsAvailable = val
}

// SetInstallmentsPaymentAvailable sets the value of InstallmentsPaymentAvailable.
func (s *Examination) SetInstallmentsPaymentAvailable(val OptNilBool) {
	s.InstallmentsPaymentAvailable = val
}

// SetMcc1 sets the value of Mcc1.
func (s *Examination) SetMcc1(val OptNilString) {
	s.Mcc1 = val
}

// SetMcc2 sets the value of Mcc2.
func (s *Examination) SetMcc2(val OptNilString) {
	s.Mcc2 = val
}

// SetPaypayMid sets the value of PaypayMid.
func (s *Examination) SetPaypayMid(val OptNilString) {
	s.PaypayMid = val
}

// SetPaypayStoreID sets the value of PaypayStoreID.
func (s *Examination) SetPaypayStoreID(val OptNilString) {
	s.PaypayStoreID = val
}

// SetPaysleMerchantCode sets the value of PaysleMerchantCode.
func (s *Examination) SetPaysleMerchantCode(val OptNilString) {
	s.PaysleMerchantCode = val
}

// SetPaysleUserID sets the value of PaysleUserID.
func (s *Examination) SetPaysleUserID(val OptNilString) {
	s.PaysleUserID = val
}

// SetPaysleUserPassword sets the value of PaysleUserPassword.
func (s *Examination) SetPaysleUserPassword(val OptNilString) {
	s.PaysleUserPassword = val
}

// SetCutOverAt sets the value of CutOverAt.
func (s *Examination) SetCutOverAt(val OptNilString) {
	s.CutOverAt = val
}

// 審査ファイルタイプ\
// \
// fincode審査チームに提出する画像ファイル等の種別を指定します。
// - `DRIVER_LICENSE_FRONT`: 本人確認書類; 運転免許証（表）<br /><span
// class="smallText">本人確認書類として運転免許証を提出する場合に指定します。裏面も提出する必要があります。</span>
// - `DRIVER_LICENSE_BACK`: 本人確認書類; 運転免許証（裏）<br /><span
// class="smallText">本人確認書類として運転免許証を提出する場合に指定します。表面も提出する必要があります。</span>
// - `SEAL_REGISTRATION_FRONT`: 本人確認書類; 印鑑証明書（表）<br /><span
// class="smallText">本人確認書類として印鑑証明書を提出する場合に指定します。</span>
// - `RESIDENT_CARD_FRONT`: 本人確認書類; 在留カード（表）<br /><span
// class="smallText">本人確認書類として在留カードを提出する場合に指定します。裏面も提出する必要があります。</span>
// - `RESIDENT_CARD_BACK`: 本人確認書類; 在留カード（裏）<br /><span
// class="smallText">本人確認書類として在留カードを提出する場合に指定します。表面も提出する必要があります。</span>
// - `SPECIAL_PERMANENT_RESIDENT_FRONT`: 本人確認書類; 特別永住者証明書（表）<br
// /><span
// class="smallText">本人確認書類として特別永住者証明書を提出する場合に指定します。裏面も提出する必要があります。</span>
// - `SPECIAL_PERMANENT_RESIDENT_BACK`: 本人確認書類; 特別永住者証明書（裏）<br
// /><span
// class="smallText">本人確認書類として特別永住者証明書を提出する場合に指定します。表面も提出する必要があります。</span>
// - `CERTIFICATE_OF_RESIDENCE_FRONT`: 本人確認書類; 住民票（表）<br /><span
// class="smallText">本人確認書類として住民票を提出する場合に指定します。</span>
// - `MY_NUMBER_CARD_FRONT`: 本人確認書類; マイナンバーカード（表）<br /><span
// class="smallText">本人確認書類としてマイナンバーカードを提出する場合に指定します。</span>
// - `PRODUCT_IMAGE_1`: 商材審査; 物販商材1 画像<br /><span
// class="smallText">物販商材の情報を提出する場合に指定します。`product_content_info.content1_*`に対応する画像を添付してください。</span>
// - `PRODUCT_IMAGE_2`: 商材審査; 物販商材2 画像<br /><span
// class="smallText">物販商材の情報を提出する場合に指定します。`product_content_info.content2_*`に対応する画像を添付してください。</span>
// - `PRODUCT_IMAGE_3`: 商材審査; 物販商材3 画像<br /><span
// class="smallText">物販商材の情報を提出する場合に指定します。`product_content_info.content3_*`に対応する画像を添付してください。</span>
// - `APP_IMAGE_TOP`: アプリ審査; アプリトップ画像<br /><span
// class="smallText">fincodeをスマートフォン上のネイティブアプリで使用し、かつfincodeによる審査時点でWebサイトが存在しない場合に指定します。アプリのトップ画面のスクリーンショットの画像を添付してください。</span>
// - `APP_IMAGE_ICON`: アプリ審査; アプリアイコン<br /><span
// class="smallText">fincodeをスマートフォン上のネイティブアプリで使用し、かつfincodeによる審査時点でWebサイトが存在しない場合に指定します。アプリのアイコン画像を添付してください。</span>
// - `SALES_LICENSE_1`: 販売免許等; 販売免許等1<br />
// <span class="smallText">
// ショップで取り扱う商品・サービスによっては、下記の許可証の提出が必要となります。免許・許可証の名義は契約名義と一致している必要があります。
// <ul>
// <li>酒類: 酒類小売業販売許可証</li>
// <li>古物: 古物商許可証</li>
// <li>コンタクトレンズ: 高度管理医療機器販売業許可証</li>
// <li>象牙: 経済産業省の許可証</li>
// <li>決済業者から免許証および許可証を求められた場合は提出を依頼することがあります。</li>
// </ul>
// </span>
// - `SALES_LICENSE_2`: 販売免許等; 販売免許等2<br /><span
// class="smallText">許可証が複数ファイルに渡る場合、2ファイル目を提出する場合に指定します。</span>
// - `SALES_LICENSE_3`: 販売免許等; 販売免許等3<br /><span
// class="smallText">許可証が複数ファイルに渡る場合、3ファイル目を提出する場合に指定します。</span>
// - `COPY_OF_CORPORATE_REGISTRATION`: 決済手段追加申請; 登記簿謄本<br /><span
// class="smallText">事業形態が「法人」のショップで「口座振替」の決済手段の追加申請をした際に提出が必要になります。</span>.
// Ref: #/components/schemas/ExaminationFileType
type ExaminationFileType string

const (
	ExaminationFileTypeDRIVERLICENSEFRONT            ExaminationFileType = "DRIVER_LICENSE_FRONT"
	ExaminationFileTypeDRIVERLICENSEBACK             ExaminationFileType = "DRIVER_LICENSE_BACK"
	ExaminationFileTypeSEALREGISTRATIONFRONT         ExaminationFileType = "SEAL_REGISTRATION_FRONT"
	ExaminationFileTypeRESIDENTCARDFRONT             ExaminationFileType = "RESIDENT_CARD_FRONT"
	ExaminationFileTypeRESIDENTCARDBACK              ExaminationFileType = "RESIDENT_CARD_BACK"
	ExaminationFileTypeSPECIALPERMANENTRESIDENTFRONT ExaminationFileType = "SPECIAL_PERMANENT_RESIDENT_FRONT"
	ExaminationFileTypeSPECIALPERMANENTRESIDENTBACK  ExaminationFileType = "SPECIAL_PERMANENT_RESIDENT_BACK"
	ExaminationFileTypeCERTIFICATEOFRESIDENCEFRONT   ExaminationFileType = "CERTIFICATE_OF_RESIDENCE_FRONT"
	ExaminationFileTypeMYNUMBERCARDFRONT             ExaminationFileType = "MY_NUMBER_CARD_FRONT"
	ExaminationFileTypePRODUCTIMAGE1                 ExaminationFileType = "PRODUCT_IMAGE_1"
	ExaminationFileTypePRODUCTIMAGE2                 ExaminationFileType = "PRODUCT_IMAGE_2"
	ExaminationFileTypePRODUCTIMAGE3                 ExaminationFileType = "PRODUCT_IMAGE_3"
	ExaminationFileTypeAPPIMAGETOP                   ExaminationFileType = "APP_IMAGE_TOP"
	ExaminationFileTypeAPPIMAGEICON                  ExaminationFileType = "APP_IMAGE_ICON"
	ExaminationFileTypeSALESLICENSE1                 ExaminationFileType = "SALES_LICENSE_1"
	ExaminationFileTypeSALESLICENSE2                 ExaminationFileType = "SALES_LICENSE_2"
	ExaminationFileTypeSALESLICENSE3                 ExaminationFileType = "SALES_LICENSE_3"
	ExaminationFileTypeCOPYOFCORPORATEREGISTRATION   ExaminationFileType = "COPY_OF_CORPORATE_REGISTRATION"
)

// AllValues returns all ExaminationFileType values.
func (ExaminationFileType) AllValues() []ExaminationFileType {
	return []ExaminationFileType{
		ExaminationFileTypeDRIVERLICENSEFRONT,
		ExaminationFileTypeDRIVERLICENSEBACK,
		ExaminationFileTypeSEALREGISTRATIONFRONT,
		ExaminationFileTypeRESIDENTCARDFRONT,
		ExaminationFileTypeRESIDENTCARDBACK,
		ExaminationFileTypeSPECIALPERMANENTRESIDENTFRONT,
		ExaminationFileTypeSPECIALPERMANENTRESIDENTBACK,
		ExaminationFileTypeCERTIFICATEOFRESIDENCEFRONT,
		ExaminationFileTypeMYNUMBERCARDFRONT,
		ExaminationFileTypePRODUCTIMAGE1,
		ExaminationFileTypePRODUCTIMAGE2,
		ExaminationFileTypePRODUCTIMAGE3,
		ExaminationFileTypeAPPIMAGETOP,
		ExaminationFileTypeAPPIMAGEICON,
		ExaminationFileTypeSALESLICENSE1,
		ExaminationFileTypeSALESLICENSE2,
		ExaminationFileTypeSALESLICENSE3,
		ExaminationFileTypeCOPYOFCORPORATEREGISTRATION,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ExaminationFileType) MarshalText() ([]byte, error) {
	switch s {
	case ExaminationFileTypeDRIVERLICENSEFRONT:
		return []byte(s), nil
	case ExaminationFileTypeDRIVERLICENSEBACK:
		return []byte(s), nil
	case ExaminationFileTypeSEALREGISTRATIONFRONT:
		return []byte(s), nil
	case ExaminationFileTypeRESIDENTCARDFRONT:
		return []byte(s), nil
	case ExaminationFileTypeRESIDENTCARDBACK:
		return []byte(s), nil
	case ExaminationFileTypeSPECIALPERMANENTRESIDENTFRONT:
		return []byte(s), nil
	case ExaminationFileTypeSPECIALPERMANENTRESIDENTBACK:
		return []byte(s), nil
	case ExaminationFileTypeCERTIFICATEOFRESIDENCEFRONT:
		return []byte(s), nil
	case ExaminationFileTypeMYNUMBERCARDFRONT:
		return []byte(s), nil
	case ExaminationFileTypePRODUCTIMAGE1:
		return []byte(s), nil
	case ExaminationFileTypePRODUCTIMAGE2:
		return []byte(s), nil
	case ExaminationFileTypePRODUCTIMAGE3:
		return []byte(s), nil
	case ExaminationFileTypeAPPIMAGETOP:
		return []byte(s), nil
	case ExaminationFileTypeAPPIMAGEICON:
		return []byte(s), nil
	case ExaminationFileTypeSALESLICENSE1:
		return []byte(s), nil
	case ExaminationFileTypeSALESLICENSE2:
		return []byte(s), nil
	case ExaminationFileTypeSALESLICENSE3:
		return []byte(s), nil
	case ExaminationFileTypeCOPYOFCORPORATEREGISTRATION:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ExaminationFileType) UnmarshalText(data []byte) error {
	switch ExaminationFileType(data) {
	case ExaminationFileTypeDRIVERLICENSEFRONT:
		*s = ExaminationFileTypeDRIVERLICENSEFRONT
		return nil
	case ExaminationFileTypeDRIVERLICENSEBACK:
		*s = ExaminationFileTypeDRIVERLICENSEBACK
		return nil
	case ExaminationFileTypeSEALREGISTRATIONFRONT:
		*s = ExaminationFileTypeSEALREGISTRATIONFRONT
		return nil
	case ExaminationFileTypeRESIDENTCARDFRONT:
		*s = ExaminationFileTypeRESIDENTCARDFRONT
		return nil
	case ExaminationFileTypeRESIDENTCARDBACK:
		*s = ExaminationFileTypeRESIDENTCARDBACK
		return nil
	case ExaminationFileTypeSPECIALPERMANENTRESIDENTFRONT:
		*s = ExaminationFileTypeSPECIALPERMANENTRESIDENTFRONT
		return nil
	case ExaminationFileTypeSPECIALPERMANENTRESIDENTBACK:
		*s = ExaminationFileTypeSPECIALPERMANENTRESIDENTBACK
		return nil
	case ExaminationFileTypeCERTIFICATEOFRESIDENCEFRONT:
		*s = ExaminationFileTypeCERTIFICATEOFRESIDENCEFRONT
		return nil
	case ExaminationFileTypeMYNUMBERCARDFRONT:
		*s = ExaminationFileTypeMYNUMBERCARDFRONT
		return nil
	case ExaminationFileTypePRODUCTIMAGE1:
		*s = ExaminationFileTypePRODUCTIMAGE1
		return nil
	case ExaminationFileTypePRODUCTIMAGE2:
		*s = ExaminationFileTypePRODUCTIMAGE2
		return nil
	case ExaminationFileTypePRODUCTIMAGE3:
		*s = ExaminationFileTypePRODUCTIMAGE3
		return nil
	case ExaminationFileTypeAPPIMAGETOP:
		*s = ExaminationFileTypeAPPIMAGETOP
		return nil
	case ExaminationFileTypeAPPIMAGEICON:
		*s = ExaminationFileTypeAPPIMAGEICON
		return nil
	case ExaminationFileTypeSALESLICENSE1:
		*s = ExaminationFileTypeSALESLICENSE1
		return nil
	case ExaminationFileTypeSALESLICENSE2:
		*s = ExaminationFileTypeSALESLICENSE2
		return nil
	case ExaminationFileTypeSALESLICENSE3:
		*s = ExaminationFileTypeSALESLICENSE3
		return nil
	case ExaminationFileTypeCOPYOFCORPORATEREGISTRATION:
		*s = ExaminationFileTypeCOPYOFCORPORATEREGISTRATION
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ExaminationFileUpload
type ExaminationFileUpload struct {
	ExaminationFiles []ExaminationFileUploadExaminationFilesItem `json:"examination_files"`
}

// GetExaminationFiles returns the value of ExaminationFiles.
func (s *ExaminationFileUpload) GetExaminationFiles() []ExaminationFileUploadExaminationFilesItem {
	return s.ExaminationFiles
}

// SetExaminationFiles sets the value of ExaminationFiles.
func (s *ExaminationFileUpload) SetExaminationFiles(val []ExaminationFileUploadExaminationFilesItem) {
	s.ExaminationFiles = val
}

func (*ExaminationFileUpload) uploadExaminationFileRes() {}

type ExaminationFileUploadExaminationFilesItem struct {
	ShopID OptShopPropertiesID    `json:"shop_id"`
	Type   OptExaminationFileType `json:"type"`
	// 審査ファイル名\
	// \
	// 拡張子を含むアップロードされたファイルの名称.
	Filename OptString `json:"filename"`
	// 審査ファイルサイズ\
	// \
	// アップロードされたファイルのサイズ（バイト）.
	Filesize OptFloat64 `json:"filesize"`
}

// GetShopID returns the value of ShopID.
func (s *ExaminationFileUploadExaminationFilesItem) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetType returns the value of Type.
func (s *ExaminationFileUploadExaminationFilesItem) GetType() OptExaminationFileType {
	return s.Type
}

// GetFilename returns the value of Filename.
func (s *ExaminationFileUploadExaminationFilesItem) GetFilename() OptString {
	return s.Filename
}

// GetFilesize returns the value of Filesize.
func (s *ExaminationFileUploadExaminationFilesItem) GetFilesize() OptFloat64 {
	return s.Filesize
}

// SetShopID sets the value of ShopID.
func (s *ExaminationFileUploadExaminationFilesItem) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetType sets the value of Type.
func (s *ExaminationFileUploadExaminationFilesItem) SetType(val OptExaminationFileType) {
	s.Type = val
}

// SetFilename sets the value of Filename.
func (s *ExaminationFileUploadExaminationFilesItem) SetFilename(val OptString) {
	s.Filename = val
}

// SetFilesize sets the value of Filesize.
func (s *ExaminationFileUploadExaminationFilesItem) SetFilesize(val OptFloat64) {
	s.Filesize = val
}

// Ref: #/components/schemas/ExaminationFile.Uploading.Request
type ExaminationFileUploadingRequestMultipart struct {
	Type OptExaminationFileType `json:"type"`
	Data Data                   `json:"data"`
}

// GetType returns the value of Type.
func (s *ExaminationFileUploadingRequestMultipart) GetType() OptExaminationFileType {
	return s.Type
}

// GetData returns the value of Data.
func (s *ExaminationFileUploadingRequestMultipart) GetData() Data {
	return s.Data
}

// SetType sets the value of Type.
func (s *ExaminationFileUploadingRequestMultipart) SetType(val OptExaminationFileType) {
	s.Type = val
}

// SetData sets the value of Data.
func (s *ExaminationFileUploadingRequestMultipart) SetData(val Data) {
	s.Data = val
}

// Ref: #/components/schemas/ExaminationInfo
type ExaminationInfo struct {
	ShopID               OptShopPropertiesID     `json:"shop_id"`
	PlatformID           OptPlatformID           `json:"platform_id"`
	ShopType             OptNilShopType          `json:"shop_type"`
	StatusCode           OptContractStatus       `json:"status_code"`
	DepositCycleMasterID OptDepositCycleMasterId `json:"deposit_cycle_master_id"`
	// 契約情報\
	// \
	// fincodeに登録されているショップ運営事業者の契約情報の詳細.
	ContractDetail OptExaminationInfoContractDetail `json:"contract_detail"`
	// ショップ 取扱商材情報\
	// \
	// fincodeに登録されているショップの取扱商材情報.
	ShopItemDetail      []ContentInfo                         `json:"shop_item_detail"`
	ContractBankAccount OptContractBankAccountInfo            `json:"contract_bank_account"`
	ContractInputStatus OptExaminationInfoContractInputStatus `json:"contract_input_status"`
}

// GetShopID returns the value of ShopID.
func (s *ExaminationInfo) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetPlatformID returns the value of PlatformID.
func (s *ExaminationInfo) GetPlatformID() OptPlatformID {
	return s.PlatformID
}

// GetShopType returns the value of ShopType.
func (s *ExaminationInfo) GetShopType() OptNilShopType {
	return s.ShopType
}

// GetStatusCode returns the value of StatusCode.
func (s *ExaminationInfo) GetStatusCode() OptContractStatus {
	return s.StatusCode
}

// GetDepositCycleMasterID returns the value of DepositCycleMasterID.
func (s *ExaminationInfo) GetDepositCycleMasterID() OptDepositCycleMasterId {
	return s.DepositCycleMasterID
}

// GetContractDetail returns the value of ContractDetail.
func (s *ExaminationInfo) GetContractDetail() OptExaminationInfoContractDetail {
	return s.ContractDetail
}

// GetShopItemDetail returns the value of ShopItemDetail.
func (s *ExaminationInfo) GetShopItemDetail() []ContentInfo {
	return s.ShopItemDetail
}

// GetContractBankAccount returns the value of ContractBankAccount.
func (s *ExaminationInfo) GetContractBankAccount() OptContractBankAccountInfo {
	return s.ContractBankAccount
}

// GetContractInputStatus returns the value of ContractInputStatus.
func (s *ExaminationInfo) GetContractInputStatus() OptExaminationInfoContractInputStatus {
	return s.ContractInputStatus
}

// SetShopID sets the value of ShopID.
func (s *ExaminationInfo) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetPlatformID sets the value of PlatformID.
func (s *ExaminationInfo) SetPlatformID(val OptPlatformID) {
	s.PlatformID = val
}

// SetShopType sets the value of ShopType.
func (s *ExaminationInfo) SetShopType(val OptNilShopType) {
	s.ShopType = val
}

// SetStatusCode sets the value of StatusCode.
func (s *ExaminationInfo) SetStatusCode(val OptContractStatus) {
	s.StatusCode = val
}

// SetDepositCycleMasterID sets the value of DepositCycleMasterID.
func (s *ExaminationInfo) SetDepositCycleMasterID(val OptDepositCycleMasterId) {
	s.DepositCycleMasterID = val
}

// SetContractDetail sets the value of ContractDetail.
func (s *ExaminationInfo) SetContractDetail(val OptExaminationInfoContractDetail) {
	s.ContractDetail = val
}

// SetShopItemDetail sets the value of ShopItemDetail.
func (s *ExaminationInfo) SetShopItemDetail(val []ContentInfo) {
	s.ShopItemDetail = val
}

// SetContractBankAccount sets the value of ContractBankAccount.
func (s *ExaminationInfo) SetContractBankAccount(val OptContractBankAccountInfo) {
	s.ContractBankAccount = val
}

// SetContractInputStatus sets the value of ContractInputStatus.
func (s *ExaminationInfo) SetContractInputStatus(val OptExaminationInfoContractInputStatus) {
	s.ContractInputStatus = val
}

func (*ExaminationInfo) retrieveTenantExaminationInfoRes() {}
func (*ExaminationInfo) updateTenantExaminationInfoRes()   {}

// Merged schema.
type ExaminationInfoContractDetail struct {
	// 事業形態
	// - `true`: 法人
	// - `false`: 個人事業主.
	Corporate                             OptNilBool                                  `json:"corporate"`
	CorporateNumber                       OptNilCorporateNumber                       `json:"corporate_number"`
	CorporateName                         OptCorporateName                            `json:"corporate_name"`
	CorporateNameKana                     OptCorporateNameKana                        `json:"corporate_name_kana"`
	Hp                                    OptNilHp                                    `json:"hp"`
	Capital                               OptNilCapital                               `json:"capital"`
	EstablishedAt                         OptNilEstablishedAt                         `json:"established_at"`
	YearlySales                           OptNilYearlySales                           `json:"yearly_sales"`
	BusinessDetails                       OptNilBusinessDetails                       `json:"business_details"`
	CompanyPostalCode                     OptNilCompanyPostalCode                     `json:"company_postal_code"`
	CompanyPrefecture                     OptNilCompanyPrefecture                     `json:"company_prefecture"`
	CompanyPrefectureKana                 OptNilCompanyPrefectureKana                 `json:"company_prefecture_kana"`
	CompanyAddressMunicipality            OptNilCompanyAddressMunicipality            `json:"company_address_municipality"`
	CompanyAddressMunicipalityKana        OptNilCompanyAddressMunicipalityKana        `json:"company_address_municipality_kana"`
	CompanyAddressSection                 OptNilCompanyAddressSection                 `json:"company_address_section"`
	CompanyAddressSectionKana             OptNilCompanyAddressSectionKana             `json:"company_address_section_kana"`
	CompanyAddressChrome                  OptNilCompanyAddressChrome                  `json:"company_address_chrome"`
	CompanyAddressChromeKana              OptNilCompanyAddressChromeKana              `json:"company_address_chrome_kana"`
	CompanyAddressBuildingName            OptNilCompanyAddressBuildingName            `json:"company_address_building_name"`
	CompanyAddressBuildingNameKana        OptNilCompanyAddressBuildingNameKana        `json:"company_address_building_name_kana"`
	CompanyTel                            OptNilCompanyTel                            `json:"company_tel"`
	RepresentativeLastName                OptNilRepresentativeLastName                `json:"representative_last_name"`
	RepresentativeLastNameKana            OptNilRepresentativeLastNameKana            `json:"representative_last_name_kana"`
	RepresentativeFirstName               OptNilRepresentativeFirstName               `json:"representative_first_name"`
	RepresentativeFirstNameKana           OptNilRepresentativeFirstNameKana           `json:"representative_first_name_kana"`
	RepresentativeBirthday                OptNilRepresentativeBirthday                `json:"representative_birthday"`
	RepresentativeGender                  OptNilRepresentativeGender                  `json:"representative_gender"`
	RepresentativePostalCode              OptNilRepresentativePostalCode              `json:"representative_postal_code"`
	RepresentativePrefecture              OptNilRepresentativePrefecture              `json:"representative_prefecture"`
	RepresentativePrefectureKana          OptNilRepresentativePrefectureKana          `json:"representative_prefecture_kana"`
	RepresentativeAddressMunicipality     OptNilRepresentativeAddressMunicipality     `json:"representative_address_municipality"`
	RepresentativeAddressMunicipalityKana OptNilRepresentativeAddressMunicipalityKana `json:"representative_address_municipality_kana"`
	RepresentativeAddressSection          OptNilRepresentativeAddressSection          `json:"representative_address_section"`
	RepresentativeAddressSectionKana      OptNilRepresentativeAddressSectionKana      `json:"representative_address_section_kana"`
	RepresentativeAddressChrome           OptNilRepresentativeAddressChrome           `json:"representative_address_chrome"`
	RepresentativeAddressChromeKana       OptNilRepresentativeAddressChromeKana       `json:"representative_address_chrome_kana"`
	RepresentativeTel                     OptNilRepresentativeTel                     `json:"representative_tel"`
	Staff1LastName                        OptNilStaff1LastName                        `json:"staff1_last_name"`
	Staff1LastNameKana                    OptNilStaff1LastNameKana                    `json:"staff1_last_name_kana"`
	Staff1FirstName                       OptNilStaff1FirstName                       `json:"staff1_first_name"`
	Staff1FirstNameKana                   OptNilStaff1FirstNameKana                   `json:"staff1_first_name_kana"`
	Staff1Tel                             OptNilStaff1Tel                             `json:"staff1_tel"`
	Staff1Mail                            OptNilStaff1Mail                            `json:"staff1_mail"`
	Staff2LastName                        OptNilStaff2LastName                        `json:"staff2_last_name"`
	Staff2LastNameKana                    OptNilStaff2LastNameKana                    `json:"staff2_last_name_kana"`
	Staff2FirstName                       OptNilStaff2FirstName                       `json:"staff2_first_name"`
	Staff2FirstNameKana                   OptNilStaff2FirstNameKana                   `json:"staff2_first_name_kana"`
	Staff2Tel                             OptNilStaff2Tel                             `json:"staff2_tel"`
	Staff2Mail                            OptNilStaff2Mail                            `json:"staff2_mail"`
	UsedOnApp                             OptNilUsedOnApp                             `json:"used_on_app"`
	UsedOnWeb                             OptNilUsedOnWeb                             `json:"used_on_web"`
	// その他の箇所での利用有無\
	// \
	// Webアプリケーションやネイティブアプリ上でない箇所で利用があるかどうか
	// - `true`: Webアプリ／ネイティブアプリでない箇所でfincodeを使用する.
	UsedOnOther OptNilBool `json:"used_on_other"`
	// Webサイトの公開状況\
	// \
	// fincode審査時点で決済機能を提供するWebサイトが閲覧可能かどうかを示します。
	// - `0`: fincode審査チームがサイトを閲覧可能
	// - `1`: fincode審査チームがサイトを閲覧不可能（ただし準備中）
	// - `2`: fincode審査チームがサイトを閲覧不可能.
	SiteExisting   OptExaminationInfoContractDetailSiteExisting `json:"site_existing"`
	URL            OptNilURL                                    `json:"url"`
	SiteCredential OptNilCredential                             `json:"site_credential"`
	ShopName       OptPropertiesShopName                        `json:"shop_name"`
	ShopNameKana   OptPropertiesShopNameKana                    `json:"shop_name_kana"`
	ShopNameEn     OptShopNameEn                                `json:"shop_name_en"`
	// プラットフォーム名.
	PlatformName           OptNilString         `json:"platform_name"`
	SupportTel             OptNilSupportTel     `json:"support_tel"`
	SupportMail            OptNilSupportMail    `json:"support_mail"`
	ProvidesProduct        OptNilProduct        `json:"provides_product"`
	ProvidesService        OptNilService        `json:"provides_service"`
	ProvidesDigitalContent OptNilDigitalContent `json:"provides_digital_content"`
	Prepaid                OptNilPrepaidPoint   `json:"prepaid"`
	UnitPrice              OptNilUnitPrice      `json:"unit_price"`
	// 取扱商材カテゴリID.
	ContentCategoryMasterID OptNilFloat64               `json:"content_category_master_id"`
	ContentDescription      OptNilContentDescription    `json:"content_description"`
	ExpiretionDateOfPoint   OptNilAboutExpiration       `json:"expiretion_date_of_point"`
	UsageOfPoint            OptNilHowToUse              `json:"usage_of_point"`
	LostTrial               OptNilLostTrial             `json:"lost_trial"`
	DealsInsecureContent    OptNilDealsInsecureContent  `json:"deals_insecure_content"`
	DealsLongApplyContent   OptNilDealsLongApplyContent `json:"deals_long_apply_content"`
	PayBy                   OptShopPaymentMethod        `json:"pay_by"`
}

// GetCorporate returns the value of Corporate.
func (s *ExaminationInfoContractDetail) GetCorporate() OptNilBool {
	return s.Corporate
}

// GetCorporateNumber returns the value of CorporateNumber.
func (s *ExaminationInfoContractDetail) GetCorporateNumber() OptNilCorporateNumber {
	return s.CorporateNumber
}

// GetCorporateName returns the value of CorporateName.
func (s *ExaminationInfoContractDetail) GetCorporateName() OptCorporateName {
	return s.CorporateName
}

// GetCorporateNameKana returns the value of CorporateNameKana.
func (s *ExaminationInfoContractDetail) GetCorporateNameKana() OptCorporateNameKana {
	return s.CorporateNameKana
}

// GetHp returns the value of Hp.
func (s *ExaminationInfoContractDetail) GetHp() OptNilHp {
	return s.Hp
}

// GetCapital returns the value of Capital.
func (s *ExaminationInfoContractDetail) GetCapital() OptNilCapital {
	return s.Capital
}

// GetEstablishedAt returns the value of EstablishedAt.
func (s *ExaminationInfoContractDetail) GetEstablishedAt() OptNilEstablishedAt {
	return s.EstablishedAt
}

// GetYearlySales returns the value of YearlySales.
func (s *ExaminationInfoContractDetail) GetYearlySales() OptNilYearlySales {
	return s.YearlySales
}

// GetBusinessDetails returns the value of BusinessDetails.
func (s *ExaminationInfoContractDetail) GetBusinessDetails() OptNilBusinessDetails {
	return s.BusinessDetails
}

// GetCompanyPostalCode returns the value of CompanyPostalCode.
func (s *ExaminationInfoContractDetail) GetCompanyPostalCode() OptNilCompanyPostalCode {
	return s.CompanyPostalCode
}

// GetCompanyPrefecture returns the value of CompanyPrefecture.
func (s *ExaminationInfoContractDetail) GetCompanyPrefecture() OptNilCompanyPrefecture {
	return s.CompanyPrefecture
}

// GetCompanyPrefectureKana returns the value of CompanyPrefectureKana.
func (s *ExaminationInfoContractDetail) GetCompanyPrefectureKana() OptNilCompanyPrefectureKana {
	return s.CompanyPrefectureKana
}

// GetCompanyAddressMunicipality returns the value of CompanyAddressMunicipality.
func (s *ExaminationInfoContractDetail) GetCompanyAddressMunicipality() OptNilCompanyAddressMunicipality {
	return s.CompanyAddressMunicipality
}

// GetCompanyAddressMunicipalityKana returns the value of CompanyAddressMunicipalityKana.
func (s *ExaminationInfoContractDetail) GetCompanyAddressMunicipalityKana() OptNilCompanyAddressMunicipalityKana {
	return s.CompanyAddressMunicipalityKana
}

// GetCompanyAddressSection returns the value of CompanyAddressSection.
func (s *ExaminationInfoContractDetail) GetCompanyAddressSection() OptNilCompanyAddressSection {
	return s.CompanyAddressSection
}

// GetCompanyAddressSectionKana returns the value of CompanyAddressSectionKana.
func (s *ExaminationInfoContractDetail) GetCompanyAddressSectionKana() OptNilCompanyAddressSectionKana {
	return s.CompanyAddressSectionKana
}

// GetCompanyAddressChrome returns the value of CompanyAddressChrome.
func (s *ExaminationInfoContractDetail) GetCompanyAddressChrome() OptNilCompanyAddressChrome {
	return s.CompanyAddressChrome
}

// GetCompanyAddressChromeKana returns the value of CompanyAddressChromeKana.
func (s *ExaminationInfoContractDetail) GetCompanyAddressChromeKana() OptNilCompanyAddressChromeKana {
	return s.CompanyAddressChromeKana
}

// GetCompanyAddressBuildingName returns the value of CompanyAddressBuildingName.
func (s *ExaminationInfoContractDetail) GetCompanyAddressBuildingName() OptNilCompanyAddressBuildingName {
	return s.CompanyAddressBuildingName
}

// GetCompanyAddressBuildingNameKana returns the value of CompanyAddressBuildingNameKana.
func (s *ExaminationInfoContractDetail) GetCompanyAddressBuildingNameKana() OptNilCompanyAddressBuildingNameKana {
	return s.CompanyAddressBuildingNameKana
}

// GetCompanyTel returns the value of CompanyTel.
func (s *ExaminationInfoContractDetail) GetCompanyTel() OptNilCompanyTel {
	return s.CompanyTel
}

// GetRepresentativeLastName returns the value of RepresentativeLastName.
func (s *ExaminationInfoContractDetail) GetRepresentativeLastName() OptNilRepresentativeLastName {
	return s.RepresentativeLastName
}

// GetRepresentativeLastNameKana returns the value of RepresentativeLastNameKana.
func (s *ExaminationInfoContractDetail) GetRepresentativeLastNameKana() OptNilRepresentativeLastNameKana {
	return s.RepresentativeLastNameKana
}

// GetRepresentativeFirstName returns the value of RepresentativeFirstName.
func (s *ExaminationInfoContractDetail) GetRepresentativeFirstName() OptNilRepresentativeFirstName {
	return s.RepresentativeFirstName
}

// GetRepresentativeFirstNameKana returns the value of RepresentativeFirstNameKana.
func (s *ExaminationInfoContractDetail) GetRepresentativeFirstNameKana() OptNilRepresentativeFirstNameKana {
	return s.RepresentativeFirstNameKana
}

// GetRepresentativeBirthday returns the value of RepresentativeBirthday.
func (s *ExaminationInfoContractDetail) GetRepresentativeBirthday() OptNilRepresentativeBirthday {
	return s.RepresentativeBirthday
}

// GetRepresentativeGender returns the value of RepresentativeGender.
func (s *ExaminationInfoContractDetail) GetRepresentativeGender() OptNilRepresentativeGender {
	return s.RepresentativeGender
}

// GetRepresentativePostalCode returns the value of RepresentativePostalCode.
func (s *ExaminationInfoContractDetail) GetRepresentativePostalCode() OptNilRepresentativePostalCode {
	return s.RepresentativePostalCode
}

// GetRepresentativePrefecture returns the value of RepresentativePrefecture.
func (s *ExaminationInfoContractDetail) GetRepresentativePrefecture() OptNilRepresentativePrefecture {
	return s.RepresentativePrefecture
}

// GetRepresentativePrefectureKana returns the value of RepresentativePrefectureKana.
func (s *ExaminationInfoContractDetail) GetRepresentativePrefectureKana() OptNilRepresentativePrefectureKana {
	return s.RepresentativePrefectureKana
}

// GetRepresentativeAddressMunicipality returns the value of RepresentativeAddressMunicipality.
func (s *ExaminationInfoContractDetail) GetRepresentativeAddressMunicipality() OptNilRepresentativeAddressMunicipality {
	return s.RepresentativeAddressMunicipality
}

// GetRepresentativeAddressMunicipalityKana returns the value of RepresentativeAddressMunicipalityKana.
func (s *ExaminationInfoContractDetail) GetRepresentativeAddressMunicipalityKana() OptNilRepresentativeAddressMunicipalityKana {
	return s.RepresentativeAddressMunicipalityKana
}

// GetRepresentativeAddressSection returns the value of RepresentativeAddressSection.
func (s *ExaminationInfoContractDetail) GetRepresentativeAddressSection() OptNilRepresentativeAddressSection {
	return s.RepresentativeAddressSection
}

// GetRepresentativeAddressSectionKana returns the value of RepresentativeAddressSectionKana.
func (s *ExaminationInfoContractDetail) GetRepresentativeAddressSectionKana() OptNilRepresentativeAddressSectionKana {
	return s.RepresentativeAddressSectionKana
}

// GetRepresentativeAddressChrome returns the value of RepresentativeAddressChrome.
func (s *ExaminationInfoContractDetail) GetRepresentativeAddressChrome() OptNilRepresentativeAddressChrome {
	return s.RepresentativeAddressChrome
}

// GetRepresentativeAddressChromeKana returns the value of RepresentativeAddressChromeKana.
func (s *ExaminationInfoContractDetail) GetRepresentativeAddressChromeKana() OptNilRepresentativeAddressChromeKana {
	return s.RepresentativeAddressChromeKana
}

// GetRepresentativeTel returns the value of RepresentativeTel.
func (s *ExaminationInfoContractDetail) GetRepresentativeTel() OptNilRepresentativeTel {
	return s.RepresentativeTel
}

// GetStaff1LastName returns the value of Staff1LastName.
func (s *ExaminationInfoContractDetail) GetStaff1LastName() OptNilStaff1LastName {
	return s.Staff1LastName
}

// GetStaff1LastNameKana returns the value of Staff1LastNameKana.
func (s *ExaminationInfoContractDetail) GetStaff1LastNameKana() OptNilStaff1LastNameKana {
	return s.Staff1LastNameKana
}

// GetStaff1FirstName returns the value of Staff1FirstName.
func (s *ExaminationInfoContractDetail) GetStaff1FirstName() OptNilStaff1FirstName {
	return s.Staff1FirstName
}

// GetStaff1FirstNameKana returns the value of Staff1FirstNameKana.
func (s *ExaminationInfoContractDetail) GetStaff1FirstNameKana() OptNilStaff1FirstNameKana {
	return s.Staff1FirstNameKana
}

// GetStaff1Tel returns the value of Staff1Tel.
func (s *ExaminationInfoContractDetail) GetStaff1Tel() OptNilStaff1Tel {
	return s.Staff1Tel
}

// GetStaff1Mail returns the value of Staff1Mail.
func (s *ExaminationInfoContractDetail) GetStaff1Mail() OptNilStaff1Mail {
	return s.Staff1Mail
}

// GetStaff2LastName returns the value of Staff2LastName.
func (s *ExaminationInfoContractDetail) GetStaff2LastName() OptNilStaff2LastName {
	return s.Staff2LastName
}

// GetStaff2LastNameKana returns the value of Staff2LastNameKana.
func (s *ExaminationInfoContractDetail) GetStaff2LastNameKana() OptNilStaff2LastNameKana {
	return s.Staff2LastNameKana
}

// GetStaff2FirstName returns the value of Staff2FirstName.
func (s *ExaminationInfoContractDetail) GetStaff2FirstName() OptNilStaff2FirstName {
	return s.Staff2FirstName
}

// GetStaff2FirstNameKana returns the value of Staff2FirstNameKana.
func (s *ExaminationInfoContractDetail) GetStaff2FirstNameKana() OptNilStaff2FirstNameKana {
	return s.Staff2FirstNameKana
}

// GetStaff2Tel returns the value of Staff2Tel.
func (s *ExaminationInfoContractDetail) GetStaff2Tel() OptNilStaff2Tel {
	return s.Staff2Tel
}

// GetStaff2Mail returns the value of Staff2Mail.
func (s *ExaminationInfoContractDetail) GetStaff2Mail() OptNilStaff2Mail {
	return s.Staff2Mail
}

// GetUsedOnApp returns the value of UsedOnApp.
func (s *ExaminationInfoContractDetail) GetUsedOnApp() OptNilUsedOnApp {
	return s.UsedOnApp
}

// GetUsedOnWeb returns the value of UsedOnWeb.
func (s *ExaminationInfoContractDetail) GetUsedOnWeb() OptNilUsedOnWeb {
	return s.UsedOnWeb
}

// GetUsedOnOther returns the value of UsedOnOther.
func (s *ExaminationInfoContractDetail) GetUsedOnOther() OptNilBool {
	return s.UsedOnOther
}

// GetSiteExisting returns the value of SiteExisting.
func (s *ExaminationInfoContractDetail) GetSiteExisting() OptExaminationInfoContractDetailSiteExisting {
	return s.SiteExisting
}

// GetURL returns the value of URL.
func (s *ExaminationInfoContractDetail) GetURL() OptNilURL {
	return s.URL
}

// GetSiteCredential returns the value of SiteCredential.
func (s *ExaminationInfoContractDetail) GetSiteCredential() OptNilCredential {
	return s.SiteCredential
}

// GetShopName returns the value of ShopName.
func (s *ExaminationInfoContractDetail) GetShopName() OptPropertiesShopName {
	return s.ShopName
}

// GetShopNameKana returns the value of ShopNameKana.
func (s *ExaminationInfoContractDetail) GetShopNameKana() OptPropertiesShopNameKana {
	return s.ShopNameKana
}

// GetShopNameEn returns the value of ShopNameEn.
func (s *ExaminationInfoContractDetail) GetShopNameEn() OptShopNameEn {
	return s.ShopNameEn
}

// GetPlatformName returns the value of PlatformName.
func (s *ExaminationInfoContractDetail) GetPlatformName() OptNilString {
	return s.PlatformName
}

// GetSupportTel returns the value of SupportTel.
func (s *ExaminationInfoContractDetail) GetSupportTel() OptNilSupportTel {
	return s.SupportTel
}

// GetSupportMail returns the value of SupportMail.
func (s *ExaminationInfoContractDetail) GetSupportMail() OptNilSupportMail {
	return s.SupportMail
}

// GetProvidesProduct returns the value of ProvidesProduct.
func (s *ExaminationInfoContractDetail) GetProvidesProduct() OptNilProduct {
	return s.ProvidesProduct
}

// GetProvidesService returns the value of ProvidesService.
func (s *ExaminationInfoContractDetail) GetProvidesService() OptNilService {
	return s.ProvidesService
}

// GetProvidesDigitalContent returns the value of ProvidesDigitalContent.
func (s *ExaminationInfoContractDetail) GetProvidesDigitalContent() OptNilDigitalContent {
	return s.ProvidesDigitalContent
}

// GetPrepaid returns the value of Prepaid.
func (s *ExaminationInfoContractDetail) GetPrepaid() OptNilPrepaidPoint {
	return s.Prepaid
}

// GetUnitPrice returns the value of UnitPrice.
func (s *ExaminationInfoContractDetail) GetUnitPrice() OptNilUnitPrice {
	return s.UnitPrice
}

// GetContentCategoryMasterID returns the value of ContentCategoryMasterID.
func (s *ExaminationInfoContractDetail) GetContentCategoryMasterID() OptNilFloat64 {
	return s.ContentCategoryMasterID
}

// GetContentDescription returns the value of ContentDescription.
func (s *ExaminationInfoContractDetail) GetContentDescription() OptNilContentDescription {
	return s.ContentDescription
}

// GetExpiretionDateOfPoint returns the value of ExpiretionDateOfPoint.
func (s *ExaminationInfoContractDetail) GetExpiretionDateOfPoint() OptNilAboutExpiration {
	return s.ExpiretionDateOfPoint
}

// GetUsageOfPoint returns the value of UsageOfPoint.
func (s *ExaminationInfoContractDetail) GetUsageOfPoint() OptNilHowToUse {
	return s.UsageOfPoint
}

// GetLostTrial returns the value of LostTrial.
func (s *ExaminationInfoContractDetail) GetLostTrial() OptNilLostTrial {
	return s.LostTrial
}

// GetDealsInsecureContent returns the value of DealsInsecureContent.
func (s *ExaminationInfoContractDetail) GetDealsInsecureContent() OptNilDealsInsecureContent {
	return s.DealsInsecureContent
}

// GetDealsLongApplyContent returns the value of DealsLongApplyContent.
func (s *ExaminationInfoContractDetail) GetDealsLongApplyContent() OptNilDealsLongApplyContent {
	return s.DealsLongApplyContent
}

// GetPayBy returns the value of PayBy.
func (s *ExaminationInfoContractDetail) GetPayBy() OptShopPaymentMethod {
	return s.PayBy
}

// SetCorporate sets the value of Corporate.
func (s *ExaminationInfoContractDetail) SetCorporate(val OptNilBool) {
	s.Corporate = val
}

// SetCorporateNumber sets the value of CorporateNumber.
func (s *ExaminationInfoContractDetail) SetCorporateNumber(val OptNilCorporateNumber) {
	s.CorporateNumber = val
}

// SetCorporateName sets the value of CorporateName.
func (s *ExaminationInfoContractDetail) SetCorporateName(val OptCorporateName) {
	s.CorporateName = val
}

// SetCorporateNameKana sets the value of CorporateNameKana.
func (s *ExaminationInfoContractDetail) SetCorporateNameKana(val OptCorporateNameKana) {
	s.CorporateNameKana = val
}

// SetHp sets the value of Hp.
func (s *ExaminationInfoContractDetail) SetHp(val OptNilHp) {
	s.Hp = val
}

// SetCapital sets the value of Capital.
func (s *ExaminationInfoContractDetail) SetCapital(val OptNilCapital) {
	s.Capital = val
}

// SetEstablishedAt sets the value of EstablishedAt.
func (s *ExaminationInfoContractDetail) SetEstablishedAt(val OptNilEstablishedAt) {
	s.EstablishedAt = val
}

// SetYearlySales sets the value of YearlySales.
func (s *ExaminationInfoContractDetail) SetYearlySales(val OptNilYearlySales) {
	s.YearlySales = val
}

// SetBusinessDetails sets the value of BusinessDetails.
func (s *ExaminationInfoContractDetail) SetBusinessDetails(val OptNilBusinessDetails) {
	s.BusinessDetails = val
}

// SetCompanyPostalCode sets the value of CompanyPostalCode.
func (s *ExaminationInfoContractDetail) SetCompanyPostalCode(val OptNilCompanyPostalCode) {
	s.CompanyPostalCode = val
}

// SetCompanyPrefecture sets the value of CompanyPrefecture.
func (s *ExaminationInfoContractDetail) SetCompanyPrefecture(val OptNilCompanyPrefecture) {
	s.CompanyPrefecture = val
}

// SetCompanyPrefectureKana sets the value of CompanyPrefectureKana.
func (s *ExaminationInfoContractDetail) SetCompanyPrefectureKana(val OptNilCompanyPrefectureKana) {
	s.CompanyPrefectureKana = val
}

// SetCompanyAddressMunicipality sets the value of CompanyAddressMunicipality.
func (s *ExaminationInfoContractDetail) SetCompanyAddressMunicipality(val OptNilCompanyAddressMunicipality) {
	s.CompanyAddressMunicipality = val
}

// SetCompanyAddressMunicipalityKana sets the value of CompanyAddressMunicipalityKana.
func (s *ExaminationInfoContractDetail) SetCompanyAddressMunicipalityKana(val OptNilCompanyAddressMunicipalityKana) {
	s.CompanyAddressMunicipalityKana = val
}

// SetCompanyAddressSection sets the value of CompanyAddressSection.
func (s *ExaminationInfoContractDetail) SetCompanyAddressSection(val OptNilCompanyAddressSection) {
	s.CompanyAddressSection = val
}

// SetCompanyAddressSectionKana sets the value of CompanyAddressSectionKana.
func (s *ExaminationInfoContractDetail) SetCompanyAddressSectionKana(val OptNilCompanyAddressSectionKana) {
	s.CompanyAddressSectionKana = val
}

// SetCompanyAddressChrome sets the value of CompanyAddressChrome.
func (s *ExaminationInfoContractDetail) SetCompanyAddressChrome(val OptNilCompanyAddressChrome) {
	s.CompanyAddressChrome = val
}

// SetCompanyAddressChromeKana sets the value of CompanyAddressChromeKana.
func (s *ExaminationInfoContractDetail) SetCompanyAddressChromeKana(val OptNilCompanyAddressChromeKana) {
	s.CompanyAddressChromeKana = val
}

// SetCompanyAddressBuildingName sets the value of CompanyAddressBuildingName.
func (s *ExaminationInfoContractDetail) SetCompanyAddressBuildingName(val OptNilCompanyAddressBuildingName) {
	s.CompanyAddressBuildingName = val
}

// SetCompanyAddressBuildingNameKana sets the value of CompanyAddressBuildingNameKana.
func (s *ExaminationInfoContractDetail) SetCompanyAddressBuildingNameKana(val OptNilCompanyAddressBuildingNameKana) {
	s.CompanyAddressBuildingNameKana = val
}

// SetCompanyTel sets the value of CompanyTel.
func (s *ExaminationInfoContractDetail) SetCompanyTel(val OptNilCompanyTel) {
	s.CompanyTel = val
}

// SetRepresentativeLastName sets the value of RepresentativeLastName.
func (s *ExaminationInfoContractDetail) SetRepresentativeLastName(val OptNilRepresentativeLastName) {
	s.RepresentativeLastName = val
}

// SetRepresentativeLastNameKana sets the value of RepresentativeLastNameKana.
func (s *ExaminationInfoContractDetail) SetRepresentativeLastNameKana(val OptNilRepresentativeLastNameKana) {
	s.RepresentativeLastNameKana = val
}

// SetRepresentativeFirstName sets the value of RepresentativeFirstName.
func (s *ExaminationInfoContractDetail) SetRepresentativeFirstName(val OptNilRepresentativeFirstName) {
	s.RepresentativeFirstName = val
}

// SetRepresentativeFirstNameKana sets the value of RepresentativeFirstNameKana.
func (s *ExaminationInfoContractDetail) SetRepresentativeFirstNameKana(val OptNilRepresentativeFirstNameKana) {
	s.RepresentativeFirstNameKana = val
}

// SetRepresentativeBirthday sets the value of RepresentativeBirthday.
func (s *ExaminationInfoContractDetail) SetRepresentativeBirthday(val OptNilRepresentativeBirthday) {
	s.RepresentativeBirthday = val
}

// SetRepresentativeGender sets the value of RepresentativeGender.
func (s *ExaminationInfoContractDetail) SetRepresentativeGender(val OptNilRepresentativeGender) {
	s.RepresentativeGender = val
}

// SetRepresentativePostalCode sets the value of RepresentativePostalCode.
func (s *ExaminationInfoContractDetail) SetRepresentativePostalCode(val OptNilRepresentativePostalCode) {
	s.RepresentativePostalCode = val
}

// SetRepresentativePrefecture sets the value of RepresentativePrefecture.
func (s *ExaminationInfoContractDetail) SetRepresentativePrefecture(val OptNilRepresentativePrefecture) {
	s.RepresentativePrefecture = val
}

// SetRepresentativePrefectureKana sets the value of RepresentativePrefectureKana.
func (s *ExaminationInfoContractDetail) SetRepresentativePrefectureKana(val OptNilRepresentativePrefectureKana) {
	s.RepresentativePrefectureKana = val
}

// SetRepresentativeAddressMunicipality sets the value of RepresentativeAddressMunicipality.
func (s *ExaminationInfoContractDetail) SetRepresentativeAddressMunicipality(val OptNilRepresentativeAddressMunicipality) {
	s.RepresentativeAddressMunicipality = val
}

// SetRepresentativeAddressMunicipalityKana sets the value of RepresentativeAddressMunicipalityKana.
func (s *ExaminationInfoContractDetail) SetRepresentativeAddressMunicipalityKana(val OptNilRepresentativeAddressMunicipalityKana) {
	s.RepresentativeAddressMunicipalityKana = val
}

// SetRepresentativeAddressSection sets the value of RepresentativeAddressSection.
func (s *ExaminationInfoContractDetail) SetRepresentativeAddressSection(val OptNilRepresentativeAddressSection) {
	s.RepresentativeAddressSection = val
}

// SetRepresentativeAddressSectionKana sets the value of RepresentativeAddressSectionKana.
func (s *ExaminationInfoContractDetail) SetRepresentativeAddressSectionKana(val OptNilRepresentativeAddressSectionKana) {
	s.RepresentativeAddressSectionKana = val
}

// SetRepresentativeAddressChrome sets the value of RepresentativeAddressChrome.
func (s *ExaminationInfoContractDetail) SetRepresentativeAddressChrome(val OptNilRepresentativeAddressChrome) {
	s.RepresentativeAddressChrome = val
}

// SetRepresentativeAddressChromeKana sets the value of RepresentativeAddressChromeKana.
func (s *ExaminationInfoContractDetail) SetRepresentativeAddressChromeKana(val OptNilRepresentativeAddressChromeKana) {
	s.RepresentativeAddressChromeKana = val
}

// SetRepresentativeTel sets the value of RepresentativeTel.
func (s *ExaminationInfoContractDetail) SetRepresentativeTel(val OptNilRepresentativeTel) {
	s.RepresentativeTel = val
}

// SetStaff1LastName sets the value of Staff1LastName.
func (s *ExaminationInfoContractDetail) SetStaff1LastName(val OptNilStaff1LastName) {
	s.Staff1LastName = val
}

// SetStaff1LastNameKana sets the value of Staff1LastNameKana.
func (s *ExaminationInfoContractDetail) SetStaff1LastNameKana(val OptNilStaff1LastNameKana) {
	s.Staff1LastNameKana = val
}

// SetStaff1FirstName sets the value of Staff1FirstName.
func (s *ExaminationInfoContractDetail) SetStaff1FirstName(val OptNilStaff1FirstName) {
	s.Staff1FirstName = val
}

// SetStaff1FirstNameKana sets the value of Staff1FirstNameKana.
func (s *ExaminationInfoContractDetail) SetStaff1FirstNameKana(val OptNilStaff1FirstNameKana) {
	s.Staff1FirstNameKana = val
}

// SetStaff1Tel sets the value of Staff1Tel.
func (s *ExaminationInfoContractDetail) SetStaff1Tel(val OptNilStaff1Tel) {
	s.Staff1Tel = val
}

// SetStaff1Mail sets the value of Staff1Mail.
func (s *ExaminationInfoContractDetail) SetStaff1Mail(val OptNilStaff1Mail) {
	s.Staff1Mail = val
}

// SetStaff2LastName sets the value of Staff2LastName.
func (s *ExaminationInfoContractDetail) SetStaff2LastName(val OptNilStaff2LastName) {
	s.Staff2LastName = val
}

// SetStaff2LastNameKana sets the value of Staff2LastNameKana.
func (s *ExaminationInfoContractDetail) SetStaff2LastNameKana(val OptNilStaff2LastNameKana) {
	s.Staff2LastNameKana = val
}

// SetStaff2FirstName sets the value of Staff2FirstName.
func (s *ExaminationInfoContractDetail) SetStaff2FirstName(val OptNilStaff2FirstName) {
	s.Staff2FirstName = val
}

// SetStaff2FirstNameKana sets the value of Staff2FirstNameKana.
func (s *ExaminationInfoContractDetail) SetStaff2FirstNameKana(val OptNilStaff2FirstNameKana) {
	s.Staff2FirstNameKana = val
}

// SetStaff2Tel sets the value of Staff2Tel.
func (s *ExaminationInfoContractDetail) SetStaff2Tel(val OptNilStaff2Tel) {
	s.Staff2Tel = val
}

// SetStaff2Mail sets the value of Staff2Mail.
func (s *ExaminationInfoContractDetail) SetStaff2Mail(val OptNilStaff2Mail) {
	s.Staff2Mail = val
}

// SetUsedOnApp sets the value of UsedOnApp.
func (s *ExaminationInfoContractDetail) SetUsedOnApp(val OptNilUsedOnApp) {
	s.UsedOnApp = val
}

// SetUsedOnWeb sets the value of UsedOnWeb.
func (s *ExaminationInfoContractDetail) SetUsedOnWeb(val OptNilUsedOnWeb) {
	s.UsedOnWeb = val
}

// SetUsedOnOther sets the value of UsedOnOther.
func (s *ExaminationInfoContractDetail) SetUsedOnOther(val OptNilBool) {
	s.UsedOnOther = val
}

// SetSiteExisting sets the value of SiteExisting.
func (s *ExaminationInfoContractDetail) SetSiteExisting(val OptExaminationInfoContractDetailSiteExisting) {
	s.SiteExisting = val
}

// SetURL sets the value of URL.
func (s *ExaminationInfoContractDetail) SetURL(val OptNilURL) {
	s.URL = val
}

// SetSiteCredential sets the value of SiteCredential.
func (s *ExaminationInfoContractDetail) SetSiteCredential(val OptNilCredential) {
	s.SiteCredential = val
}

// SetShopName sets the value of ShopName.
func (s *ExaminationInfoContractDetail) SetShopName(val OptPropertiesShopName) {
	s.ShopName = val
}

// SetShopNameKana sets the value of ShopNameKana.
func (s *ExaminationInfoContractDetail) SetShopNameKana(val OptPropertiesShopNameKana) {
	s.ShopNameKana = val
}

// SetShopNameEn sets the value of ShopNameEn.
func (s *ExaminationInfoContractDetail) SetShopNameEn(val OptShopNameEn) {
	s.ShopNameEn = val
}

// SetPlatformName sets the value of PlatformName.
func (s *ExaminationInfoContractDetail) SetPlatformName(val OptNilString) {
	s.PlatformName = val
}

// SetSupportTel sets the value of SupportTel.
func (s *ExaminationInfoContractDetail) SetSupportTel(val OptNilSupportTel) {
	s.SupportTel = val
}

// SetSupportMail sets the value of SupportMail.
func (s *ExaminationInfoContractDetail) SetSupportMail(val OptNilSupportMail) {
	s.SupportMail = val
}

// SetProvidesProduct sets the value of ProvidesProduct.
func (s *ExaminationInfoContractDetail) SetProvidesProduct(val OptNilProduct) {
	s.ProvidesProduct = val
}

// SetProvidesService sets the value of ProvidesService.
func (s *ExaminationInfoContractDetail) SetProvidesService(val OptNilService) {
	s.ProvidesService = val
}

// SetProvidesDigitalContent sets the value of ProvidesDigitalContent.
func (s *ExaminationInfoContractDetail) SetProvidesDigitalContent(val OptNilDigitalContent) {
	s.ProvidesDigitalContent = val
}

// SetPrepaid sets the value of Prepaid.
func (s *ExaminationInfoContractDetail) SetPrepaid(val OptNilPrepaidPoint) {
	s.Prepaid = val
}

// SetUnitPrice sets the value of UnitPrice.
func (s *ExaminationInfoContractDetail) SetUnitPrice(val OptNilUnitPrice) {
	s.UnitPrice = val
}

// SetContentCategoryMasterID sets the value of ContentCategoryMasterID.
func (s *ExaminationInfoContractDetail) SetContentCategoryMasterID(val OptNilFloat64) {
	s.ContentCategoryMasterID = val
}

// SetContentDescription sets the value of ContentDescription.
func (s *ExaminationInfoContractDetail) SetContentDescription(val OptNilContentDescription) {
	s.ContentDescription = val
}

// SetExpiretionDateOfPoint sets the value of ExpiretionDateOfPoint.
func (s *ExaminationInfoContractDetail) SetExpiretionDateOfPoint(val OptNilAboutExpiration) {
	s.ExpiretionDateOfPoint = val
}

// SetUsageOfPoint sets the value of UsageOfPoint.
func (s *ExaminationInfoContractDetail) SetUsageOfPoint(val OptNilHowToUse) {
	s.UsageOfPoint = val
}

// SetLostTrial sets the value of LostTrial.
func (s *ExaminationInfoContractDetail) SetLostTrial(val OptNilLostTrial) {
	s.LostTrial = val
}

// SetDealsInsecureContent sets the value of DealsInsecureContent.
func (s *ExaminationInfoContractDetail) SetDealsInsecureContent(val OptNilDealsInsecureContent) {
	s.DealsInsecureContent = val
}

// SetDealsLongApplyContent sets the value of DealsLongApplyContent.
func (s *ExaminationInfoContractDetail) SetDealsLongApplyContent(val OptNilDealsLongApplyContent) {
	s.DealsLongApplyContent = val
}

// SetPayBy sets the value of PayBy.
func (s *ExaminationInfoContractDetail) SetPayBy(val OptShopPaymentMethod) {
	s.PayBy = val
}

// Webサイトの公開状況\
// \
// fincode審査時点で決済機能を提供するWebサイトが閲覧可能かどうかを示します。
// - `0`: fincode審査チームがサイトを閲覧可能
// - `1`: fincode審査チームがサイトを閲覧不可能（ただし準備中）
// - `2`: fincode審査チームがサイトを閲覧不可能.
type ExaminationInfoContractDetailSiteExisting float64

const (
	ExaminationInfoContractDetailSiteExisting0 ExaminationInfoContractDetailSiteExisting = 0
	ExaminationInfoContractDetailSiteExisting1 ExaminationInfoContractDetailSiteExisting = 1
	ExaminationInfoContractDetailSiteExisting2 ExaminationInfoContractDetailSiteExisting = 2
)

// AllValues returns all ExaminationInfoContractDetailSiteExisting values.
func (ExaminationInfoContractDetailSiteExisting) AllValues() []ExaminationInfoContractDetailSiteExisting {
	return []ExaminationInfoContractDetailSiteExisting{
		ExaminationInfoContractDetailSiteExisting0,
		ExaminationInfoContractDetailSiteExisting1,
		ExaminationInfoContractDetailSiteExisting2,
	}
}

type ExaminationInfoContractInputStatus struct {
	StatusCode OptContractInputStatus `json:"status_code"`
	// 契約情報入力完了フラグ\
	// \
	// 契約情報の入力が完了しているかどうか.
	ContractInfoInput OptBool `json:"contract_info_input"`
	// ショップ情報入力完了フラグ\
	// \
	// ショップ情報の入力が完了しているかどうか.
	ShopInfoInput OptBool `json:"shop_info_input"`
	// 銀行口座情報入力完了フラグ\
	// \
	// 銀行口座情報の入力が完了しているかどうか.
	AccountInfoInput OptBool `json:"account_info_input"`
	// 請求先クレジットカード情報入力完了フラグ\
	// \
	// fincodeが請求を行う際に請求先となるクレジットカード情報の入力が完了しているかどうか.
	CardInfoInput OptBool `json:"card_info_input"`
}

// GetStatusCode returns the value of StatusCode.
func (s *ExaminationInfoContractInputStatus) GetStatusCode() OptContractInputStatus {
	return s.StatusCode
}

// GetContractInfoInput returns the value of ContractInfoInput.
func (s *ExaminationInfoContractInputStatus) GetContractInfoInput() OptBool {
	return s.ContractInfoInput
}

// GetShopInfoInput returns the value of ShopInfoInput.
func (s *ExaminationInfoContractInputStatus) GetShopInfoInput() OptBool {
	return s.ShopInfoInput
}

// GetAccountInfoInput returns the value of AccountInfoInput.
func (s *ExaminationInfoContractInputStatus) GetAccountInfoInput() OptBool {
	return s.AccountInfoInput
}

// GetCardInfoInput returns the value of CardInfoInput.
func (s *ExaminationInfoContractInputStatus) GetCardInfoInput() OptBool {
	return s.CardInfoInput
}

// SetStatusCode sets the value of StatusCode.
func (s *ExaminationInfoContractInputStatus) SetStatusCode(val OptContractInputStatus) {
	s.StatusCode = val
}

// SetContractInfoInput sets the value of ContractInfoInput.
func (s *ExaminationInfoContractInputStatus) SetContractInfoInput(val OptBool) {
	s.ContractInfoInput = val
}

// SetShopInfoInput sets the value of ShopInfoInput.
func (s *ExaminationInfoContractInputStatus) SetShopInfoInput(val OptBool) {
	s.ShopInfoInput = val
}

// SetAccountInfoInput sets the value of AccountInfoInput.
func (s *ExaminationInfoContractInputStatus) SetAccountInfoInput(val OptBool) {
	s.AccountInfoInput = val
}

// SetCardInfoInput sets the value of CardInfoInput.
func (s *ExaminationInfoContractInputStatus) SetCardInfoInput(val OptBool) {
	s.CardInfoInput = val
}

// Ref: #/components/schemas/ExaminationInfo.Updating.Request
type ExaminationInfoUpdatingRequest struct {
	UpdateContractDetail OptNilUpdateContractDetail `json:"update_contract_detail"`
	UpdateShop           OptNilUpdateShop           `json:"update_shop"`
	UpdateBankAccount    OptNilUpdateBankAccount    `json:"update_bank_account"`
	UpdateDepositCycle   OptNilUpdateDepositCycle   `json:"update_deposit_cycle"`
	DepositCycleMasterID OptDepositCycleMasterId    `json:"deposit_cycle_master_id"`
	// 契約情報\
	// \
	// fincodeに登録するショップ運営事業者の契約情報の詳細.
	ContractDetail OptExaminationInfoUpdatingRequestContractDetail `json:"contract_detail"`
	// ショップ 取扱商材情報\
	// \
	// fincodeに登録するショップの取扱商材情報.
	ShopItemDetail      []ContentInfo              `json:"shop_item_detail"`
	ContractBankAccount OptContractBankAccountInfo `json:"contract_bank_account"`
}

// GetUpdateContractDetail returns the value of UpdateContractDetail.
func (s *ExaminationInfoUpdatingRequest) GetUpdateContractDetail() OptNilUpdateContractDetail {
	return s.UpdateContractDetail
}

// GetUpdateShop returns the value of UpdateShop.
func (s *ExaminationInfoUpdatingRequest) GetUpdateShop() OptNilUpdateShop {
	return s.UpdateShop
}

// GetUpdateBankAccount returns the value of UpdateBankAccount.
func (s *ExaminationInfoUpdatingRequest) GetUpdateBankAccount() OptNilUpdateBankAccount {
	return s.UpdateBankAccount
}

// GetUpdateDepositCycle returns the value of UpdateDepositCycle.
func (s *ExaminationInfoUpdatingRequest) GetUpdateDepositCycle() OptNilUpdateDepositCycle {
	return s.UpdateDepositCycle
}

// GetDepositCycleMasterID returns the value of DepositCycleMasterID.
func (s *ExaminationInfoUpdatingRequest) GetDepositCycleMasterID() OptDepositCycleMasterId {
	return s.DepositCycleMasterID
}

// GetContractDetail returns the value of ContractDetail.
func (s *ExaminationInfoUpdatingRequest) GetContractDetail() OptExaminationInfoUpdatingRequestContractDetail {
	return s.ContractDetail
}

// GetShopItemDetail returns the value of ShopItemDetail.
func (s *ExaminationInfoUpdatingRequest) GetShopItemDetail() []ContentInfo {
	return s.ShopItemDetail
}

// GetContractBankAccount returns the value of ContractBankAccount.
func (s *ExaminationInfoUpdatingRequest) GetContractBankAccount() OptContractBankAccountInfo {
	return s.ContractBankAccount
}

// SetUpdateContractDetail sets the value of UpdateContractDetail.
func (s *ExaminationInfoUpdatingRequest) SetUpdateContractDetail(val OptNilUpdateContractDetail) {
	s.UpdateContractDetail = val
}

// SetUpdateShop sets the value of UpdateShop.
func (s *ExaminationInfoUpdatingRequest) SetUpdateShop(val OptNilUpdateShop) {
	s.UpdateShop = val
}

// SetUpdateBankAccount sets the value of UpdateBankAccount.
func (s *ExaminationInfoUpdatingRequest) SetUpdateBankAccount(val OptNilUpdateBankAccount) {
	s.UpdateBankAccount = val
}

// SetUpdateDepositCycle sets the value of UpdateDepositCycle.
func (s *ExaminationInfoUpdatingRequest) SetUpdateDepositCycle(val OptNilUpdateDepositCycle) {
	s.UpdateDepositCycle = val
}

// SetDepositCycleMasterID sets the value of DepositCycleMasterID.
func (s *ExaminationInfoUpdatingRequest) SetDepositCycleMasterID(val OptDepositCycleMasterId) {
	s.DepositCycleMasterID = val
}

// SetContractDetail sets the value of ContractDetail.
func (s *ExaminationInfoUpdatingRequest) SetContractDetail(val OptExaminationInfoUpdatingRequestContractDetail) {
	s.ContractDetail = val
}

// SetShopItemDetail sets the value of ShopItemDetail.
func (s *ExaminationInfoUpdatingRequest) SetShopItemDetail(val []ContentInfo) {
	s.ShopItemDetail = val
}

// SetContractBankAccount sets the value of ContractBankAccount.
func (s *ExaminationInfoUpdatingRequest) SetContractBankAccount(val OptContractBankAccountInfo) {
	s.ContractBankAccount = val
}

// Merged schema.
type ExaminationInfoUpdatingRequestContractDetail struct {
	// 事業形態
	// - `true`: 法人
	// - `false`: 個人事業主.
	Corporate                             OptNilBool                                  `json:"corporate"`
	CorporateNumber                       OptNilCorporateNumber                       `json:"corporate_number"`
	CorporateName                         OptCorporateName                            `json:"corporate_name"`
	CorporateNameKana                     OptCorporateNameKana                        `json:"corporate_name_kana"`
	Hp                                    OptNilHp                                    `json:"hp"`
	Capital                               OptNilCapital                               `json:"capital"`
	EstablishedAt                         OptNilEstablishedAt                         `json:"established_at"`
	YearlySales                           OptNilYearlySales                           `json:"yearly_sales"`
	BusinessDetails                       OptNilBusinessDetails                       `json:"business_details"`
	CompanyPostalCode                     OptNilCompanyPostalCode                     `json:"company_postal_code"`
	CompanyPrefecture                     OptNilCompanyPrefecture                     `json:"company_prefecture"`
	CompanyPrefectureKana                 OptNilCompanyPrefectureKana                 `json:"company_prefecture_kana"`
	CompanyAddressMunicipality            OptNilCompanyAddressMunicipality            `json:"company_address_municipality"`
	CompanyAddressMunicipalityKana        OptNilCompanyAddressMunicipalityKana        `json:"company_address_municipality_kana"`
	CompanyAddressSection                 OptNilCompanyAddressSection                 `json:"company_address_section"`
	CompanyAddressSectionKana             OptNilCompanyAddressSectionKana             `json:"company_address_section_kana"`
	CompanyAddressChrome                  OptNilCompanyAddressChrome                  `json:"company_address_chrome"`
	CompanyAddressChromeKana              OptNilCompanyAddressChromeKana              `json:"company_address_chrome_kana"`
	CompanyAddressBuildingName            OptNilCompanyAddressBuildingName            `json:"company_address_building_name"`
	CompanyAddressBuildingNameKana        OptNilCompanyAddressBuildingNameKana        `json:"company_address_building_name_kana"`
	CompanyTel                            OptNilCompanyTel                            `json:"company_tel"`
	RepresentativeLastName                OptNilRepresentativeLastName                `json:"representative_last_name"`
	RepresentativeLastNameKana            OptNilRepresentativeLastNameKana            `json:"representative_last_name_kana"`
	RepresentativeFirstName               OptNilRepresentativeFirstName               `json:"representative_first_name"`
	RepresentativeFirstNameKana           OptNilRepresentativeFirstNameKana           `json:"representative_first_name_kana"`
	RepresentativeBirthday                OptNilRepresentativeBirthday                `json:"representative_birthday"`
	RepresentativeGender                  OptNilRepresentativeGender                  `json:"representative_gender"`
	RepresentativePostalCode              OptNilRepresentativePostalCode              `json:"representative_postal_code"`
	RepresentativePrefecture              OptNilRepresentativePrefecture              `json:"representative_prefecture"`
	RepresentativePrefectureKana          OptNilRepresentativePrefectureKana          `json:"representative_prefecture_kana"`
	RepresentativeAddressMunicipality     OptNilRepresentativeAddressMunicipality     `json:"representative_address_municipality"`
	RepresentativeAddressMunicipalityKana OptNilRepresentativeAddressMunicipalityKana `json:"representative_address_municipality_kana"`
	RepresentativeAddressSection          OptNilRepresentativeAddressSection          `json:"representative_address_section"`
	RepresentativeAddressSectionKana      OptNilRepresentativeAddressSectionKana      `json:"representative_address_section_kana"`
	RepresentativeAddressChrome           OptNilRepresentativeAddressChrome           `json:"representative_address_chrome"`
	RepresentativeAddressChromeKana       OptNilRepresentativeAddressChromeKana       `json:"representative_address_chrome_kana"`
	RepresentativeTel                     OptNilRepresentativeTel                     `json:"representative_tel"`
	Staff1LastName                        OptNilStaff1LastName                        `json:"staff1_last_name"`
	Staff1LastNameKana                    OptNilStaff1LastNameKana                    `json:"staff1_last_name_kana"`
	Staff1FirstName                       OptNilStaff1FirstName                       `json:"staff1_first_name"`
	Staff1FirstNameKana                   OptNilStaff1FirstNameKana                   `json:"staff1_first_name_kana"`
	Staff1Tel                             OptNilStaff1Tel                             `json:"staff1_tel"`
	Staff1Mail                            OptNilStaff1Mail                            `json:"staff1_mail"`
	Staff2LastName                        OptNilStaff2LastName                        `json:"staff2_last_name"`
	Staff2LastNameKana                    OptNilStaff2LastNameKana                    `json:"staff2_last_name_kana"`
	Staff2FirstName                       OptNilStaff2FirstName                       `json:"staff2_first_name"`
	Staff2FirstNameKana                   OptNilStaff2FirstNameKana                   `json:"staff2_first_name_kana"`
	Staff2Tel                             OptNilStaff2Tel                             `json:"staff2_tel"`
	Staff2Mail                            OptNilStaff2Mail                            `json:"staff2_mail"`
	UsedOnApp                             OptNilUsedOnApp                             `json:"used_on_app"`
	UsedOnWeb                             OptNilUsedOnWeb                             `json:"used_on_web"`
	// その他の箇所での利用有無\
	// \
	// Webアプリケーションやネイティブアプリ上でない箇所で利用があるかどうか
	// - `true`: Webアプリ／ネイティブアプリでない箇所でfincodeを使用する.
	UsedOnOther OptNilBool `json:"used_on_other"`
	// Webサイトの公開状況\
	// \
	// fincode審査時点で決済機能を提供するWebサイトが閲覧可能かどうかを示します。
	// - `0`: fincode審査チームがサイトを閲覧可能
	// - `1`: fincode審査チームがサイトを閲覧不可能（ただし準備中）
	// - `2`: fincode審査チームがサイトを閲覧不可能.
	SiteExisting   OptExaminationInfoUpdatingRequestContractDetailSiteExisting `json:"site_existing"`
	URL            OptNilURL                                                   `json:"url"`
	SiteCredential OptNilCredential                                            `json:"site_credential"`
	ShopName       OptPropertiesShopName                                       `json:"shop_name"`
	ShopNameKana   OptPropertiesShopNameKana                                   `json:"shop_name_kana"`
	ShopNameEn     OptShopNameEn                                               `json:"shop_name_en"`
	// プラットフォーム名.
	PlatformName           OptNilString         `json:"platform_name"`
	SupportTel             OptNilSupportTel     `json:"support_tel"`
	SupportMail            OptNilSupportMail    `json:"support_mail"`
	ProvidesProduct        OptNilProduct        `json:"provides_product"`
	ProvidesService        OptNilService        `json:"provides_service"`
	ProvidesDigitalContent OptNilDigitalContent `json:"provides_digital_content"`
	Prepaid                OptNilPrepaidPoint   `json:"prepaid"`
	UnitPrice              OptNilUnitPrice      `json:"unit_price"`
	// 取扱商材カテゴリID.
	ContentCategoryMasterID OptNilFloat64               `json:"content_category_master_id"`
	ContentDescription      OptNilContentDescription    `json:"content_description"`
	ExpiretionDateOfPoint   OptNilAboutExpiration       `json:"expiretion_date_of_point"`
	UsageOfPoint            OptNilHowToUse              `json:"usage_of_point"`
	LostTrial               OptNilLostTrial             `json:"lost_trial"`
	DealsInsecureContent    OptNilDealsInsecureContent  `json:"deals_insecure_content"`
	DealsLongApplyContent   OptNilDealsLongApplyContent `json:"deals_long_apply_content"`
	PayBy                   OptShopPaymentMethod        `json:"pay_by"`
}

// GetCorporate returns the value of Corporate.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCorporate() OptNilBool {
	return s.Corporate
}

// GetCorporateNumber returns the value of CorporateNumber.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCorporateNumber() OptNilCorporateNumber {
	return s.CorporateNumber
}

// GetCorporateName returns the value of CorporateName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCorporateName() OptCorporateName {
	return s.CorporateName
}

// GetCorporateNameKana returns the value of CorporateNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCorporateNameKana() OptCorporateNameKana {
	return s.CorporateNameKana
}

// GetHp returns the value of Hp.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetHp() OptNilHp {
	return s.Hp
}

// GetCapital returns the value of Capital.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCapital() OptNilCapital {
	return s.Capital
}

// GetEstablishedAt returns the value of EstablishedAt.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetEstablishedAt() OptNilEstablishedAt {
	return s.EstablishedAt
}

// GetYearlySales returns the value of YearlySales.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetYearlySales() OptNilYearlySales {
	return s.YearlySales
}

// GetBusinessDetails returns the value of BusinessDetails.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetBusinessDetails() OptNilBusinessDetails {
	return s.BusinessDetails
}

// GetCompanyPostalCode returns the value of CompanyPostalCode.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyPostalCode() OptNilCompanyPostalCode {
	return s.CompanyPostalCode
}

// GetCompanyPrefecture returns the value of CompanyPrefecture.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyPrefecture() OptNilCompanyPrefecture {
	return s.CompanyPrefecture
}

// GetCompanyPrefectureKana returns the value of CompanyPrefectureKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyPrefectureKana() OptNilCompanyPrefectureKana {
	return s.CompanyPrefectureKana
}

// GetCompanyAddressMunicipality returns the value of CompanyAddressMunicipality.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyAddressMunicipality() OptNilCompanyAddressMunicipality {
	return s.CompanyAddressMunicipality
}

// GetCompanyAddressMunicipalityKana returns the value of CompanyAddressMunicipalityKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyAddressMunicipalityKana() OptNilCompanyAddressMunicipalityKana {
	return s.CompanyAddressMunicipalityKana
}

// GetCompanyAddressSection returns the value of CompanyAddressSection.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyAddressSection() OptNilCompanyAddressSection {
	return s.CompanyAddressSection
}

// GetCompanyAddressSectionKana returns the value of CompanyAddressSectionKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyAddressSectionKana() OptNilCompanyAddressSectionKana {
	return s.CompanyAddressSectionKana
}

// GetCompanyAddressChrome returns the value of CompanyAddressChrome.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyAddressChrome() OptNilCompanyAddressChrome {
	return s.CompanyAddressChrome
}

// GetCompanyAddressChromeKana returns the value of CompanyAddressChromeKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyAddressChromeKana() OptNilCompanyAddressChromeKana {
	return s.CompanyAddressChromeKana
}

// GetCompanyAddressBuildingName returns the value of CompanyAddressBuildingName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyAddressBuildingName() OptNilCompanyAddressBuildingName {
	return s.CompanyAddressBuildingName
}

// GetCompanyAddressBuildingNameKana returns the value of CompanyAddressBuildingNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyAddressBuildingNameKana() OptNilCompanyAddressBuildingNameKana {
	return s.CompanyAddressBuildingNameKana
}

// GetCompanyTel returns the value of CompanyTel.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetCompanyTel() OptNilCompanyTel {
	return s.CompanyTel
}

// GetRepresentativeLastName returns the value of RepresentativeLastName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeLastName() OptNilRepresentativeLastName {
	return s.RepresentativeLastName
}

// GetRepresentativeLastNameKana returns the value of RepresentativeLastNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeLastNameKana() OptNilRepresentativeLastNameKana {
	return s.RepresentativeLastNameKana
}

// GetRepresentativeFirstName returns the value of RepresentativeFirstName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeFirstName() OptNilRepresentativeFirstName {
	return s.RepresentativeFirstName
}

// GetRepresentativeFirstNameKana returns the value of RepresentativeFirstNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeFirstNameKana() OptNilRepresentativeFirstNameKana {
	return s.RepresentativeFirstNameKana
}

// GetRepresentativeBirthday returns the value of RepresentativeBirthday.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeBirthday() OptNilRepresentativeBirthday {
	return s.RepresentativeBirthday
}

// GetRepresentativeGender returns the value of RepresentativeGender.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeGender() OptNilRepresentativeGender {
	return s.RepresentativeGender
}

// GetRepresentativePostalCode returns the value of RepresentativePostalCode.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativePostalCode() OptNilRepresentativePostalCode {
	return s.RepresentativePostalCode
}

// GetRepresentativePrefecture returns the value of RepresentativePrefecture.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativePrefecture() OptNilRepresentativePrefecture {
	return s.RepresentativePrefecture
}

// GetRepresentativePrefectureKana returns the value of RepresentativePrefectureKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativePrefectureKana() OptNilRepresentativePrefectureKana {
	return s.RepresentativePrefectureKana
}

// GetRepresentativeAddressMunicipality returns the value of RepresentativeAddressMunicipality.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeAddressMunicipality() OptNilRepresentativeAddressMunicipality {
	return s.RepresentativeAddressMunicipality
}

// GetRepresentativeAddressMunicipalityKana returns the value of RepresentativeAddressMunicipalityKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeAddressMunicipalityKana() OptNilRepresentativeAddressMunicipalityKana {
	return s.RepresentativeAddressMunicipalityKana
}

// GetRepresentativeAddressSection returns the value of RepresentativeAddressSection.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeAddressSection() OptNilRepresentativeAddressSection {
	return s.RepresentativeAddressSection
}

// GetRepresentativeAddressSectionKana returns the value of RepresentativeAddressSectionKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeAddressSectionKana() OptNilRepresentativeAddressSectionKana {
	return s.RepresentativeAddressSectionKana
}

// GetRepresentativeAddressChrome returns the value of RepresentativeAddressChrome.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeAddressChrome() OptNilRepresentativeAddressChrome {
	return s.RepresentativeAddressChrome
}

// GetRepresentativeAddressChromeKana returns the value of RepresentativeAddressChromeKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeAddressChromeKana() OptNilRepresentativeAddressChromeKana {
	return s.RepresentativeAddressChromeKana
}

// GetRepresentativeTel returns the value of RepresentativeTel.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetRepresentativeTel() OptNilRepresentativeTel {
	return s.RepresentativeTel
}

// GetStaff1LastName returns the value of Staff1LastName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff1LastName() OptNilStaff1LastName {
	return s.Staff1LastName
}

// GetStaff1LastNameKana returns the value of Staff1LastNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff1LastNameKana() OptNilStaff1LastNameKana {
	return s.Staff1LastNameKana
}

// GetStaff1FirstName returns the value of Staff1FirstName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff1FirstName() OptNilStaff1FirstName {
	return s.Staff1FirstName
}

// GetStaff1FirstNameKana returns the value of Staff1FirstNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff1FirstNameKana() OptNilStaff1FirstNameKana {
	return s.Staff1FirstNameKana
}

// GetStaff1Tel returns the value of Staff1Tel.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff1Tel() OptNilStaff1Tel {
	return s.Staff1Tel
}

// GetStaff1Mail returns the value of Staff1Mail.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff1Mail() OptNilStaff1Mail {
	return s.Staff1Mail
}

// GetStaff2LastName returns the value of Staff2LastName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff2LastName() OptNilStaff2LastName {
	return s.Staff2LastName
}

// GetStaff2LastNameKana returns the value of Staff2LastNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff2LastNameKana() OptNilStaff2LastNameKana {
	return s.Staff2LastNameKana
}

// GetStaff2FirstName returns the value of Staff2FirstName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff2FirstName() OptNilStaff2FirstName {
	return s.Staff2FirstName
}

// GetStaff2FirstNameKana returns the value of Staff2FirstNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff2FirstNameKana() OptNilStaff2FirstNameKana {
	return s.Staff2FirstNameKana
}

// GetStaff2Tel returns the value of Staff2Tel.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff2Tel() OptNilStaff2Tel {
	return s.Staff2Tel
}

// GetStaff2Mail returns the value of Staff2Mail.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetStaff2Mail() OptNilStaff2Mail {
	return s.Staff2Mail
}

// GetUsedOnApp returns the value of UsedOnApp.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetUsedOnApp() OptNilUsedOnApp {
	return s.UsedOnApp
}

// GetUsedOnWeb returns the value of UsedOnWeb.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetUsedOnWeb() OptNilUsedOnWeb {
	return s.UsedOnWeb
}

// GetUsedOnOther returns the value of UsedOnOther.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetUsedOnOther() OptNilBool {
	return s.UsedOnOther
}

// GetSiteExisting returns the value of SiteExisting.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetSiteExisting() OptExaminationInfoUpdatingRequestContractDetailSiteExisting {
	return s.SiteExisting
}

// GetURL returns the value of URL.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetURL() OptNilURL {
	return s.URL
}

// GetSiteCredential returns the value of SiteCredential.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetSiteCredential() OptNilCredential {
	return s.SiteCredential
}

// GetShopName returns the value of ShopName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetShopName() OptPropertiesShopName {
	return s.ShopName
}

// GetShopNameKana returns the value of ShopNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetShopNameKana() OptPropertiesShopNameKana {
	return s.ShopNameKana
}

// GetShopNameEn returns the value of ShopNameEn.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetShopNameEn() OptShopNameEn {
	return s.ShopNameEn
}

// GetPlatformName returns the value of PlatformName.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetPlatformName() OptNilString {
	return s.PlatformName
}

// GetSupportTel returns the value of SupportTel.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetSupportTel() OptNilSupportTel {
	return s.SupportTel
}

// GetSupportMail returns the value of SupportMail.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetSupportMail() OptNilSupportMail {
	return s.SupportMail
}

// GetProvidesProduct returns the value of ProvidesProduct.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetProvidesProduct() OptNilProduct {
	return s.ProvidesProduct
}

// GetProvidesService returns the value of ProvidesService.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetProvidesService() OptNilService {
	return s.ProvidesService
}

// GetProvidesDigitalContent returns the value of ProvidesDigitalContent.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetProvidesDigitalContent() OptNilDigitalContent {
	return s.ProvidesDigitalContent
}

// GetPrepaid returns the value of Prepaid.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetPrepaid() OptNilPrepaidPoint {
	return s.Prepaid
}

// GetUnitPrice returns the value of UnitPrice.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetUnitPrice() OptNilUnitPrice {
	return s.UnitPrice
}

// GetContentCategoryMasterID returns the value of ContentCategoryMasterID.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetContentCategoryMasterID() OptNilFloat64 {
	return s.ContentCategoryMasterID
}

// GetContentDescription returns the value of ContentDescription.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetContentDescription() OptNilContentDescription {
	return s.ContentDescription
}

// GetExpiretionDateOfPoint returns the value of ExpiretionDateOfPoint.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetExpiretionDateOfPoint() OptNilAboutExpiration {
	return s.ExpiretionDateOfPoint
}

// GetUsageOfPoint returns the value of UsageOfPoint.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetUsageOfPoint() OptNilHowToUse {
	return s.UsageOfPoint
}

// GetLostTrial returns the value of LostTrial.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetLostTrial() OptNilLostTrial {
	return s.LostTrial
}

// GetDealsInsecureContent returns the value of DealsInsecureContent.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetDealsInsecureContent() OptNilDealsInsecureContent {
	return s.DealsInsecureContent
}

// GetDealsLongApplyContent returns the value of DealsLongApplyContent.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetDealsLongApplyContent() OptNilDealsLongApplyContent {
	return s.DealsLongApplyContent
}

// GetPayBy returns the value of PayBy.
func (s *ExaminationInfoUpdatingRequestContractDetail) GetPayBy() OptShopPaymentMethod {
	return s.PayBy
}

// SetCorporate sets the value of Corporate.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCorporate(val OptNilBool) {
	s.Corporate = val
}

// SetCorporateNumber sets the value of CorporateNumber.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCorporateNumber(val OptNilCorporateNumber) {
	s.CorporateNumber = val
}

// SetCorporateName sets the value of CorporateName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCorporateName(val OptCorporateName) {
	s.CorporateName = val
}

// SetCorporateNameKana sets the value of CorporateNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCorporateNameKana(val OptCorporateNameKana) {
	s.CorporateNameKana = val
}

// SetHp sets the value of Hp.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetHp(val OptNilHp) {
	s.Hp = val
}

// SetCapital sets the value of Capital.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCapital(val OptNilCapital) {
	s.Capital = val
}

// SetEstablishedAt sets the value of EstablishedAt.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetEstablishedAt(val OptNilEstablishedAt) {
	s.EstablishedAt = val
}

// SetYearlySales sets the value of YearlySales.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetYearlySales(val OptNilYearlySales) {
	s.YearlySales = val
}

// SetBusinessDetails sets the value of BusinessDetails.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetBusinessDetails(val OptNilBusinessDetails) {
	s.BusinessDetails = val
}

// SetCompanyPostalCode sets the value of CompanyPostalCode.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyPostalCode(val OptNilCompanyPostalCode) {
	s.CompanyPostalCode = val
}

// SetCompanyPrefecture sets the value of CompanyPrefecture.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyPrefecture(val OptNilCompanyPrefecture) {
	s.CompanyPrefecture = val
}

// SetCompanyPrefectureKana sets the value of CompanyPrefectureKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyPrefectureKana(val OptNilCompanyPrefectureKana) {
	s.CompanyPrefectureKana = val
}

// SetCompanyAddressMunicipality sets the value of CompanyAddressMunicipality.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyAddressMunicipality(val OptNilCompanyAddressMunicipality) {
	s.CompanyAddressMunicipality = val
}

// SetCompanyAddressMunicipalityKana sets the value of CompanyAddressMunicipalityKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyAddressMunicipalityKana(val OptNilCompanyAddressMunicipalityKana) {
	s.CompanyAddressMunicipalityKana = val
}

// SetCompanyAddressSection sets the value of CompanyAddressSection.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyAddressSection(val OptNilCompanyAddressSection) {
	s.CompanyAddressSection = val
}

// SetCompanyAddressSectionKana sets the value of CompanyAddressSectionKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyAddressSectionKana(val OptNilCompanyAddressSectionKana) {
	s.CompanyAddressSectionKana = val
}

// SetCompanyAddressChrome sets the value of CompanyAddressChrome.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyAddressChrome(val OptNilCompanyAddressChrome) {
	s.CompanyAddressChrome = val
}

// SetCompanyAddressChromeKana sets the value of CompanyAddressChromeKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyAddressChromeKana(val OptNilCompanyAddressChromeKana) {
	s.CompanyAddressChromeKana = val
}

// SetCompanyAddressBuildingName sets the value of CompanyAddressBuildingName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyAddressBuildingName(val OptNilCompanyAddressBuildingName) {
	s.CompanyAddressBuildingName = val
}

// SetCompanyAddressBuildingNameKana sets the value of CompanyAddressBuildingNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyAddressBuildingNameKana(val OptNilCompanyAddressBuildingNameKana) {
	s.CompanyAddressBuildingNameKana = val
}

// SetCompanyTel sets the value of CompanyTel.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetCompanyTel(val OptNilCompanyTel) {
	s.CompanyTel = val
}

// SetRepresentativeLastName sets the value of RepresentativeLastName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeLastName(val OptNilRepresentativeLastName) {
	s.RepresentativeLastName = val
}

// SetRepresentativeLastNameKana sets the value of RepresentativeLastNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeLastNameKana(val OptNilRepresentativeLastNameKana) {
	s.RepresentativeLastNameKana = val
}

// SetRepresentativeFirstName sets the value of RepresentativeFirstName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeFirstName(val OptNilRepresentativeFirstName) {
	s.RepresentativeFirstName = val
}

// SetRepresentativeFirstNameKana sets the value of RepresentativeFirstNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeFirstNameKana(val OptNilRepresentativeFirstNameKana) {
	s.RepresentativeFirstNameKana = val
}

// SetRepresentativeBirthday sets the value of RepresentativeBirthday.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeBirthday(val OptNilRepresentativeBirthday) {
	s.RepresentativeBirthday = val
}

// SetRepresentativeGender sets the value of RepresentativeGender.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeGender(val OptNilRepresentativeGender) {
	s.RepresentativeGender = val
}

// SetRepresentativePostalCode sets the value of RepresentativePostalCode.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativePostalCode(val OptNilRepresentativePostalCode) {
	s.RepresentativePostalCode = val
}

// SetRepresentativePrefecture sets the value of RepresentativePrefecture.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativePrefecture(val OptNilRepresentativePrefecture) {
	s.RepresentativePrefecture = val
}

// SetRepresentativePrefectureKana sets the value of RepresentativePrefectureKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativePrefectureKana(val OptNilRepresentativePrefectureKana) {
	s.RepresentativePrefectureKana = val
}

// SetRepresentativeAddressMunicipality sets the value of RepresentativeAddressMunicipality.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeAddressMunicipality(val OptNilRepresentativeAddressMunicipality) {
	s.RepresentativeAddressMunicipality = val
}

// SetRepresentativeAddressMunicipalityKana sets the value of RepresentativeAddressMunicipalityKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeAddressMunicipalityKana(val OptNilRepresentativeAddressMunicipalityKana) {
	s.RepresentativeAddressMunicipalityKana = val
}

// SetRepresentativeAddressSection sets the value of RepresentativeAddressSection.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeAddressSection(val OptNilRepresentativeAddressSection) {
	s.RepresentativeAddressSection = val
}

// SetRepresentativeAddressSectionKana sets the value of RepresentativeAddressSectionKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeAddressSectionKana(val OptNilRepresentativeAddressSectionKana) {
	s.RepresentativeAddressSectionKana = val
}

// SetRepresentativeAddressChrome sets the value of RepresentativeAddressChrome.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeAddressChrome(val OptNilRepresentativeAddressChrome) {
	s.RepresentativeAddressChrome = val
}

// SetRepresentativeAddressChromeKana sets the value of RepresentativeAddressChromeKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeAddressChromeKana(val OptNilRepresentativeAddressChromeKana) {
	s.RepresentativeAddressChromeKana = val
}

// SetRepresentativeTel sets the value of RepresentativeTel.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetRepresentativeTel(val OptNilRepresentativeTel) {
	s.RepresentativeTel = val
}

// SetStaff1LastName sets the value of Staff1LastName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff1LastName(val OptNilStaff1LastName) {
	s.Staff1LastName = val
}

// SetStaff1LastNameKana sets the value of Staff1LastNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff1LastNameKana(val OptNilStaff1LastNameKana) {
	s.Staff1LastNameKana = val
}

// SetStaff1FirstName sets the value of Staff1FirstName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff1FirstName(val OptNilStaff1FirstName) {
	s.Staff1FirstName = val
}

// SetStaff1FirstNameKana sets the value of Staff1FirstNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff1FirstNameKana(val OptNilStaff1FirstNameKana) {
	s.Staff1FirstNameKana = val
}

// SetStaff1Tel sets the value of Staff1Tel.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff1Tel(val OptNilStaff1Tel) {
	s.Staff1Tel = val
}

// SetStaff1Mail sets the value of Staff1Mail.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff1Mail(val OptNilStaff1Mail) {
	s.Staff1Mail = val
}

// SetStaff2LastName sets the value of Staff2LastName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff2LastName(val OptNilStaff2LastName) {
	s.Staff2LastName = val
}

// SetStaff2LastNameKana sets the value of Staff2LastNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff2LastNameKana(val OptNilStaff2LastNameKana) {
	s.Staff2LastNameKana = val
}

// SetStaff2FirstName sets the value of Staff2FirstName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff2FirstName(val OptNilStaff2FirstName) {
	s.Staff2FirstName = val
}

// SetStaff2FirstNameKana sets the value of Staff2FirstNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff2FirstNameKana(val OptNilStaff2FirstNameKana) {
	s.Staff2FirstNameKana = val
}

// SetStaff2Tel sets the value of Staff2Tel.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff2Tel(val OptNilStaff2Tel) {
	s.Staff2Tel = val
}

// SetStaff2Mail sets the value of Staff2Mail.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetStaff2Mail(val OptNilStaff2Mail) {
	s.Staff2Mail = val
}

// SetUsedOnApp sets the value of UsedOnApp.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetUsedOnApp(val OptNilUsedOnApp) {
	s.UsedOnApp = val
}

// SetUsedOnWeb sets the value of UsedOnWeb.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetUsedOnWeb(val OptNilUsedOnWeb) {
	s.UsedOnWeb = val
}

// SetUsedOnOther sets the value of UsedOnOther.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetUsedOnOther(val OptNilBool) {
	s.UsedOnOther = val
}

// SetSiteExisting sets the value of SiteExisting.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetSiteExisting(val OptExaminationInfoUpdatingRequestContractDetailSiteExisting) {
	s.SiteExisting = val
}

// SetURL sets the value of URL.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetURL(val OptNilURL) {
	s.URL = val
}

// SetSiteCredential sets the value of SiteCredential.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetSiteCredential(val OptNilCredential) {
	s.SiteCredential = val
}

// SetShopName sets the value of ShopName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetShopName(val OptPropertiesShopName) {
	s.ShopName = val
}

// SetShopNameKana sets the value of ShopNameKana.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetShopNameKana(val OptPropertiesShopNameKana) {
	s.ShopNameKana = val
}

// SetShopNameEn sets the value of ShopNameEn.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetShopNameEn(val OptShopNameEn) {
	s.ShopNameEn = val
}

// SetPlatformName sets the value of PlatformName.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetPlatformName(val OptNilString) {
	s.PlatformName = val
}

// SetSupportTel sets the value of SupportTel.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetSupportTel(val OptNilSupportTel) {
	s.SupportTel = val
}

// SetSupportMail sets the value of SupportMail.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetSupportMail(val OptNilSupportMail) {
	s.SupportMail = val
}

// SetProvidesProduct sets the value of ProvidesProduct.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetProvidesProduct(val OptNilProduct) {
	s.ProvidesProduct = val
}

// SetProvidesService sets the value of ProvidesService.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetProvidesService(val OptNilService) {
	s.ProvidesService = val
}

// SetProvidesDigitalContent sets the value of ProvidesDigitalContent.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetProvidesDigitalContent(val OptNilDigitalContent) {
	s.ProvidesDigitalContent = val
}

// SetPrepaid sets the value of Prepaid.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetPrepaid(val OptNilPrepaidPoint) {
	s.Prepaid = val
}

// SetUnitPrice sets the value of UnitPrice.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetUnitPrice(val OptNilUnitPrice) {
	s.UnitPrice = val
}

// SetContentCategoryMasterID sets the value of ContentCategoryMasterID.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetContentCategoryMasterID(val OptNilFloat64) {
	s.ContentCategoryMasterID = val
}

// SetContentDescription sets the value of ContentDescription.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetContentDescription(val OptNilContentDescription) {
	s.ContentDescription = val
}

// SetExpiretionDateOfPoint sets the value of ExpiretionDateOfPoint.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetExpiretionDateOfPoint(val OptNilAboutExpiration) {
	s.ExpiretionDateOfPoint = val
}

// SetUsageOfPoint sets the value of UsageOfPoint.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetUsageOfPoint(val OptNilHowToUse) {
	s.UsageOfPoint = val
}

// SetLostTrial sets the value of LostTrial.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetLostTrial(val OptNilLostTrial) {
	s.LostTrial = val
}

// SetDealsInsecureContent sets the value of DealsInsecureContent.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetDealsInsecureContent(val OptNilDealsInsecureContent) {
	s.DealsInsecureContent = val
}

// SetDealsLongApplyContent sets the value of DealsLongApplyContent.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetDealsLongApplyContent(val OptNilDealsLongApplyContent) {
	s.DealsLongApplyContent = val
}

// SetPayBy sets the value of PayBy.
func (s *ExaminationInfoUpdatingRequestContractDetail) SetPayBy(val OptShopPaymentMethod) {
	s.PayBy = val
}

// Webサイトの公開状況\
// \
// fincode審査時点で決済機能を提供するWebサイトが閲覧可能かどうかを示します。
// - `0`: fincode審査チームがサイトを閲覧可能
// - `1`: fincode審査チームがサイトを閲覧不可能（ただし準備中）
// - `2`: fincode審査チームがサイトを閲覧不可能.
type ExaminationInfoUpdatingRequestContractDetailSiteExisting float64

const (
	ExaminationInfoUpdatingRequestContractDetailSiteExisting0 ExaminationInfoUpdatingRequestContractDetailSiteExisting = 0
	ExaminationInfoUpdatingRequestContractDetailSiteExisting1 ExaminationInfoUpdatingRequestContractDetailSiteExisting = 1
	ExaminationInfoUpdatingRequestContractDetailSiteExisting2 ExaminationInfoUpdatingRequestContractDetailSiteExisting = 2
)

// AllValues returns all ExaminationInfoUpdatingRequestContractDetailSiteExisting values.
func (ExaminationInfoUpdatingRequestContractDetailSiteExisting) AllValues() []ExaminationInfoUpdatingRequestContractDetailSiteExisting {
	return []ExaminationInfoUpdatingRequestContractDetailSiteExisting{
		ExaminationInfoUpdatingRequestContractDetailSiteExisting0,
		ExaminationInfoUpdatingRequestContractDetailSiteExisting1,
		ExaminationInfoUpdatingRequestContractDetailSiteExisting2,
	}
}

// Ref: #/components/schemas/ExaminationInfo.V2
type ExaminationInfoV2 struct {
	StatusCode       OptContractStatus     `json:"status_code"`
	ContractInfo     OptContractInfoV2     `json:"contract_info"`
	ShopInfo         OptShopInfoV2         `json:"shop_info"`
	BankAccountInfo  OptBankAccountInfoV2  `json:"bank_account_info"`
	DepositCycleInfo OptDepositCycleInfoV2 `json:"deposit_cycle_info"`
}

// GetStatusCode returns the value of StatusCode.
func (s *ExaminationInfoV2) GetStatusCode() OptContractStatus {
	return s.StatusCode
}

// GetContractInfo returns the value of ContractInfo.
func (s *ExaminationInfoV2) GetContractInfo() OptContractInfoV2 {
	return s.ContractInfo
}

// GetShopInfo returns the value of ShopInfo.
func (s *ExaminationInfoV2) GetShopInfo() OptShopInfoV2 {
	return s.ShopInfo
}

// GetBankAccountInfo returns the value of BankAccountInfo.
func (s *ExaminationInfoV2) GetBankAccountInfo() OptBankAccountInfoV2 {
	return s.BankAccountInfo
}

// GetDepositCycleInfo returns the value of DepositCycleInfo.
func (s *ExaminationInfoV2) GetDepositCycleInfo() OptDepositCycleInfoV2 {
	return s.DepositCycleInfo
}

// SetStatusCode sets the value of StatusCode.
func (s *ExaminationInfoV2) SetStatusCode(val OptContractStatus) {
	s.StatusCode = val
}

// SetContractInfo sets the value of ContractInfo.
func (s *ExaminationInfoV2) SetContractInfo(val OptContractInfoV2) {
	s.ContractInfo = val
}

// SetShopInfo sets the value of ShopInfo.
func (s *ExaminationInfoV2) SetShopInfo(val OptShopInfoV2) {
	s.ShopInfo = val
}

// SetBankAccountInfo sets the value of BankAccountInfo.
func (s *ExaminationInfoV2) SetBankAccountInfo(val OptBankAccountInfoV2) {
	s.BankAccountInfo = val
}

// SetDepositCycleInfo sets the value of DepositCycleInfo.
func (s *ExaminationInfoV2) SetDepositCycleInfo(val OptDepositCycleInfoV2) {
	s.DepositCycleInfo = val
}

func (*ExaminationInfoV2) retrieveTenantExaminationInfoV2Res() {}
func (*ExaminationInfoV2) updateTenantExaminationInfoV2Res()   {}

// Ref: #/components/schemas/ExaminationInfo.V2.Updating.Request
type ExaminationInfoV2UpdatingRequest struct {
	ContractInfo     OptContractInfoV2     `json:"contract_info"`
	ShopInfo         OptShopInfoV2         `json:"shop_info"`
	BankAccountInfo  OptBankAccountInfoV2  `json:"bank_account_info"`
	DepositCycleInfo OptDepositCycleInfoV2 `json:"deposit_cycle_info"`
	// 業種コード\
	// \
	// fincodeから指定するよう要求されている場合にのみ指定します。.
	MerchantCategoryCode OptNilString `json:"merchant_category_code"`
}

// GetContractInfo returns the value of ContractInfo.
func (s *ExaminationInfoV2UpdatingRequest) GetContractInfo() OptContractInfoV2 {
	return s.ContractInfo
}

// GetShopInfo returns the value of ShopInfo.
func (s *ExaminationInfoV2UpdatingRequest) GetShopInfo() OptShopInfoV2 {
	return s.ShopInfo
}

// GetBankAccountInfo returns the value of BankAccountInfo.
func (s *ExaminationInfoV2UpdatingRequest) GetBankAccountInfo() OptBankAccountInfoV2 {
	return s.BankAccountInfo
}

// GetDepositCycleInfo returns the value of DepositCycleInfo.
func (s *ExaminationInfoV2UpdatingRequest) GetDepositCycleInfo() OptDepositCycleInfoV2 {
	return s.DepositCycleInfo
}

// GetMerchantCategoryCode returns the value of MerchantCategoryCode.
func (s *ExaminationInfoV2UpdatingRequest) GetMerchantCategoryCode() OptNilString {
	return s.MerchantCategoryCode
}

// SetContractInfo sets the value of ContractInfo.
func (s *ExaminationInfoV2UpdatingRequest) SetContractInfo(val OptContractInfoV2) {
	s.ContractInfo = val
}

// SetShopInfo sets the value of ShopInfo.
func (s *ExaminationInfoV2UpdatingRequest) SetShopInfo(val OptShopInfoV2) {
	s.ShopInfo = val
}

// SetBankAccountInfo sets the value of BankAccountInfo.
func (s *ExaminationInfoV2UpdatingRequest) SetBankAccountInfo(val OptBankAccountInfoV2) {
	s.BankAccountInfo = val
}

// SetDepositCycleInfo sets the value of DepositCycleInfo.
func (s *ExaminationInfoV2UpdatingRequest) SetDepositCycleInfo(val OptDepositCycleInfoV2) {
	s.DepositCycleInfo = val
}

// SetMerchantCategoryCode sets the value of MerchantCategoryCode.
func (s *ExaminationInfoV2UpdatingRequest) SetMerchantCategoryCode(val OptNilString) {
	s.MerchantCategoryCode = val
}

// 審査種別マスタID。\
// プラットフォーム料率の適用対象とする決済手段の種別を表します。
// - `vm`: カード決済（VISA / Mastercard）
// - `jad`: カード決済（JCB / American Express / Diners Club / Discover）
// - `applepay_vm`: Apple Pay（VISA / Mastercard）
// - `applepay_jad`: Apple Pay（JCB / American Express / Diners Club / Discover）
// - `konbini`: コンビニ決済
// - `paypay`: PayPay
// - `directdebit`: 口座振替.
// Ref: #/components/schemas/ExaminationMasterId
type ExaminationMasterId string

const (
	ExaminationMasterIdVM          ExaminationMasterId = "vm"
	ExaminationMasterIdJad         ExaminationMasterId = "jad"
	ExaminationMasterIdApplepayVM  ExaminationMasterId = "applepay_vm"
	ExaminationMasterIdApplepayJad ExaminationMasterId = "applepay_jad"
	ExaminationMasterIdKonbini     ExaminationMasterId = "konbini"
	ExaminationMasterIdPaypay      ExaminationMasterId = "paypay"
	ExaminationMasterIdDirectdebit ExaminationMasterId = "directdebit"
)

// AllValues returns all ExaminationMasterId values.
func (ExaminationMasterId) AllValues() []ExaminationMasterId {
	return []ExaminationMasterId{
		ExaminationMasterIdVM,
		ExaminationMasterIdJad,
		ExaminationMasterIdApplepayVM,
		ExaminationMasterIdApplepayJad,
		ExaminationMasterIdKonbini,
		ExaminationMasterIdPaypay,
		ExaminationMasterIdDirectdebit,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ExaminationMasterId) MarshalText() ([]byte, error) {
	switch s {
	case ExaminationMasterIdVM:
		return []byte(s), nil
	case ExaminationMasterIdJad:
		return []byte(s), nil
	case ExaminationMasterIdApplepayVM:
		return []byte(s), nil
	case ExaminationMasterIdApplepayJad:
		return []byte(s), nil
	case ExaminationMasterIdKonbini:
		return []byte(s), nil
	case ExaminationMasterIdPaypay:
		return []byte(s), nil
	case ExaminationMasterIdDirectdebit:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ExaminationMasterId) UnmarshalText(data []byte) error {
	switch ExaminationMasterId(data) {
	case ExaminationMasterIdVM:
		*s = ExaminationMasterIdVM
		return nil
	case ExaminationMasterIdJad:
		*s = ExaminationMasterIdJad
		return nil
	case ExaminationMasterIdApplepayVM:
		*s = ExaminationMasterIdApplepayVM
		return nil
	case ExaminationMasterIdApplepayJad:
		*s = ExaminationMasterIdApplepayJad
		return nil
	case ExaminationMasterIdKonbini:
		*s = ExaminationMasterIdKonbini
		return nil
	case ExaminationMasterIdPaypay:
		*s = ExaminationMasterIdPaypay
		return nil
	case ExaminationMasterIdDirectdebit:
		*s = ExaminationMasterIdDirectdebit
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 審査ステータス
// - `1`: 審査中<br /><span
// class="smallText">まだこの決済手段による決済を受け付けることはできません。</span>
// - `2`: 審査OK<br /><span
// class="smallText">この決済手段による決済を受け付けることができます。</span>
// - `3`: 審査NG<br /><span
// class="smallText">この決済手段による決済を受け付けることはできません。</span>.
// Ref: #/components/schemas/ExaminationStatus
type ExaminationStatus string

const (
	ExaminationStatus1 ExaminationStatus = "1"
	ExaminationStatus2 ExaminationStatus = "2"
	ExaminationStatus3 ExaminationStatus = "3"
)

// AllValues returns all ExaminationStatus values.
func (ExaminationStatus) AllValues() []ExaminationStatus {
	return []ExaminationStatus{
		ExaminationStatus1,
		ExaminationStatus2,
		ExaminationStatus3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ExaminationStatus) MarshalText() ([]byte, error) {
	switch s {
	case ExaminationStatus1:
		return []byte(s), nil
	case ExaminationStatus2:
		return []byte(s), nil
	case ExaminationStatus3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ExaminationStatus) UnmarshalText(data []byte) error {
	switch ExaminationStatus(data) {
	case ExaminationStatus1:
		*s = ExaminationStatus1
		return nil
	case ExaminationStatus2:
		*s = ExaminationStatus2
		return nil
	case ExaminationStatus3:
		*s = ExaminationStatus3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ExecutePaymentOK represents sum type.
type ExecutePaymentOK struct {
	Type                                ExecutePaymentOKType // switch on this field
	PaymentCardExecutingResponse        PaymentCardExecutingResponse
	PaymentApplePayExecutingResponse    PaymentApplePayExecutingResponse
	PaymentKonbiniExecutingResponse     PaymentKonbiniExecutingResponse
	PaymentPayPayExecutingResponse      PaymentPayPayExecutingResponse
	PaymentDirectDebitExecutingResponse PaymentDirectDebitExecutingResponse
}

// ExecutePaymentOKType is oneOf type of ExecutePaymentOK.
type ExecutePaymentOKType string

// Possible values for ExecutePaymentOKType.
const (
	PaymentCardExecutingResponseExecutePaymentOK        ExecutePaymentOKType = "PaymentCardExecutingResponse"
	PaymentApplePayExecutingResponseExecutePaymentOK    ExecutePaymentOKType = "PaymentApplePayExecutingResponse"
	PaymentKonbiniExecutingResponseExecutePaymentOK     ExecutePaymentOKType = "PaymentKonbiniExecutingResponse"
	PaymentPayPayExecutingResponseExecutePaymentOK      ExecutePaymentOKType = "PaymentPayPayExecutingResponse"
	PaymentDirectDebitExecutingResponseExecutePaymentOK ExecutePaymentOKType = "PaymentDirectDebitExecutingResponse"
)

// IsPaymentCardExecutingResponse reports whether ExecutePaymentOK is PaymentCardExecutingResponse.
func (s ExecutePaymentOK) IsPaymentCardExecutingResponse() bool {
	return s.Type == PaymentCardExecutingResponseExecutePaymentOK
}

// IsPaymentApplePayExecutingResponse reports whether ExecutePaymentOK is PaymentApplePayExecutingResponse.
func (s ExecutePaymentOK) IsPaymentApplePayExecutingResponse() bool {
	return s.Type == PaymentApplePayExecutingResponseExecutePaymentOK
}

// IsPaymentKonbiniExecutingResponse reports whether ExecutePaymentOK is PaymentKonbiniExecutingResponse.
func (s ExecutePaymentOK) IsPaymentKonbiniExecutingResponse() bool {
	return s.Type == PaymentKonbiniExecutingResponseExecutePaymentOK
}

// IsPaymentPayPayExecutingResponse reports whether ExecutePaymentOK is PaymentPayPayExecutingResponse.
func (s ExecutePaymentOK) IsPaymentPayPayExecutingResponse() bool {
	return s.Type == PaymentPayPayExecutingResponseExecutePaymentOK
}

// IsPaymentDirectDebitExecutingResponse reports whether ExecutePaymentOK is PaymentDirectDebitExecutingResponse.
func (s ExecutePaymentOK) IsPaymentDirectDebitExecutingResponse() bool {
	return s.Type == PaymentDirectDebitExecutingResponseExecutePaymentOK
}

// SetPaymentCardExecutingResponse sets ExecutePaymentOK to PaymentCardExecutingResponse.
func (s *ExecutePaymentOK) SetPaymentCardExecutingResponse(v PaymentCardExecutingResponse) {
	s.Type = PaymentCardExecutingResponseExecutePaymentOK
	s.PaymentCardExecutingResponse = v
}

// GetPaymentCardExecutingResponse returns PaymentCardExecutingResponse and true boolean if ExecutePaymentOK is PaymentCardExecutingResponse.
func (s ExecutePaymentOK) GetPaymentCardExecutingResponse() (v PaymentCardExecutingResponse, ok bool) {
	if !s.IsPaymentCardExecutingResponse() {
		return v, false
	}
	return s.PaymentCardExecutingResponse, true
}

// NewPaymentCardExecutingResponseExecutePaymentOK returns new ExecutePaymentOK from PaymentCardExecutingResponse.
func NewPaymentCardExecutingResponseExecutePaymentOK(v PaymentCardExecutingResponse) ExecutePaymentOK {
	var s ExecutePaymentOK
	s.SetPaymentCardExecutingResponse(v)
	return s
}

// SetPaymentApplePayExecutingResponse sets ExecutePaymentOK to PaymentApplePayExecutingResponse.
func (s *ExecutePaymentOK) SetPaymentApplePayExecutingResponse(v PaymentApplePayExecutingResponse) {
	s.Type = PaymentApplePayExecutingResponseExecutePaymentOK
	s.PaymentApplePayExecutingResponse = v
}

// GetPaymentApplePayExecutingResponse returns PaymentApplePayExecutingResponse and true boolean if ExecutePaymentOK is PaymentApplePayExecutingResponse.
func (s ExecutePaymentOK) GetPaymentApplePayExecutingResponse() (v PaymentApplePayExecutingResponse, ok bool) {
	if !s.IsPaymentApplePayExecutingResponse() {
		return v, false
	}
	return s.PaymentApplePayExecutingResponse, true
}

// NewPaymentApplePayExecutingResponseExecutePaymentOK returns new ExecutePaymentOK from PaymentApplePayExecutingResponse.
func NewPaymentApplePayExecutingResponseExecutePaymentOK(v PaymentApplePayExecutingResponse) ExecutePaymentOK {
	var s ExecutePaymentOK
	s.SetPaymentApplePayExecutingResponse(v)
	return s
}

// SetPaymentKonbiniExecutingResponse sets ExecutePaymentOK to PaymentKonbiniExecutingResponse.
func (s *ExecutePaymentOK) SetPaymentKonbiniExecutingResponse(v PaymentKonbiniExecutingResponse) {
	s.Type = PaymentKonbiniExecutingResponseExecutePaymentOK
	s.PaymentKonbiniExecutingResponse = v
}

// GetPaymentKonbiniExecutingResponse returns PaymentKonbiniExecutingResponse and true boolean if ExecutePaymentOK is PaymentKonbiniExecutingResponse.
func (s ExecutePaymentOK) GetPaymentKonbiniExecutingResponse() (v PaymentKonbiniExecutingResponse, ok bool) {
	if !s.IsPaymentKonbiniExecutingResponse() {
		return v, false
	}
	return s.PaymentKonbiniExecutingResponse, true
}

// NewPaymentKonbiniExecutingResponseExecutePaymentOK returns new ExecutePaymentOK from PaymentKonbiniExecutingResponse.
func NewPaymentKonbiniExecutingResponseExecutePaymentOK(v PaymentKonbiniExecutingResponse) ExecutePaymentOK {
	var s ExecutePaymentOK
	s.SetPaymentKonbiniExecutingResponse(v)
	return s
}

// SetPaymentPayPayExecutingResponse sets ExecutePaymentOK to PaymentPayPayExecutingResponse.
func (s *ExecutePaymentOK) SetPaymentPayPayExecutingResponse(v PaymentPayPayExecutingResponse) {
	s.Type = PaymentPayPayExecutingResponseExecutePaymentOK
	s.PaymentPayPayExecutingResponse = v
}

// GetPaymentPayPayExecutingResponse returns PaymentPayPayExecutingResponse and true boolean if ExecutePaymentOK is PaymentPayPayExecutingResponse.
func (s ExecutePaymentOK) GetPaymentPayPayExecutingResponse() (v PaymentPayPayExecutingResponse, ok bool) {
	if !s.IsPaymentPayPayExecutingResponse() {
		return v, false
	}
	return s.PaymentPayPayExecutingResponse, true
}

// NewPaymentPayPayExecutingResponseExecutePaymentOK returns new ExecutePaymentOK from PaymentPayPayExecutingResponse.
func NewPaymentPayPayExecutingResponseExecutePaymentOK(v PaymentPayPayExecutingResponse) ExecutePaymentOK {
	var s ExecutePaymentOK
	s.SetPaymentPayPayExecutingResponse(v)
	return s
}

// SetPaymentDirectDebitExecutingResponse sets ExecutePaymentOK to PaymentDirectDebitExecutingResponse.
func (s *ExecutePaymentOK) SetPaymentDirectDebitExecutingResponse(v PaymentDirectDebitExecutingResponse) {
	s.Type = PaymentDirectDebitExecutingResponseExecutePaymentOK
	s.PaymentDirectDebitExecutingResponse = v
}

// GetPaymentDirectDebitExecutingResponse returns PaymentDirectDebitExecutingResponse and true boolean if ExecutePaymentOK is PaymentDirectDebitExecutingResponse.
func (s ExecutePaymentOK) GetPaymentDirectDebitExecutingResponse() (v PaymentDirectDebitExecutingResponse, ok bool) {
	if !s.IsPaymentDirectDebitExecutingResponse() {
		return v, false
	}
	return s.PaymentDirectDebitExecutingResponse, true
}

// NewPaymentDirectDebitExecutingResponseExecutePaymentOK returns new ExecutePaymentOK from PaymentDirectDebitExecutingResponse.
func NewPaymentDirectDebitExecutingResponseExecutePaymentOK(v PaymentDirectDebitExecutingResponse) ExecutePaymentOK {
	var s ExecutePaymentOK
	s.SetPaymentDirectDebitExecutingResponse(v)
	return s
}

func (*ExecutePaymentOK) executePaymentRes() {}

// ExecutePaymentReq represents sum type.
type ExecutePaymentReq struct {
	Type                               ExecutePaymentReqType // switch on this field
	PaymentCardExecutingRequest        PaymentCardExecutingRequest
	PaymentApplePayExecutingRequest    PaymentApplePayExecutingRequest
	PaymentKonbiniExecutingRequest     PaymentKonbiniExecutingRequest
	PaymentPayPayExecutingRequest      PaymentPayPayExecutingRequest
	PaymentDirectDebitExecutingRequest PaymentDirectDebitExecutingRequest
}

// ExecutePaymentReqType is oneOf type of ExecutePaymentReq.
type ExecutePaymentReqType string

// Possible values for ExecutePaymentReqType.
const (
	PaymentCardExecutingRequestExecutePaymentReq        ExecutePaymentReqType = "PaymentCardExecutingRequest"
	PaymentApplePayExecutingRequestExecutePaymentReq    ExecutePaymentReqType = "PaymentApplePayExecutingRequest"
	PaymentKonbiniExecutingRequestExecutePaymentReq     ExecutePaymentReqType = "PaymentKonbiniExecutingRequest"
	PaymentPayPayExecutingRequestExecutePaymentReq      ExecutePaymentReqType = "PaymentPayPayExecutingRequest"
	PaymentDirectDebitExecutingRequestExecutePaymentReq ExecutePaymentReqType = "PaymentDirectDebitExecutingRequest"
)

// IsPaymentCardExecutingRequest reports whether ExecutePaymentReq is PaymentCardExecutingRequest.
func (s ExecutePaymentReq) IsPaymentCardExecutingRequest() bool {
	return s.Type == PaymentCardExecutingRequestExecutePaymentReq
}

// IsPaymentApplePayExecutingRequest reports whether ExecutePaymentReq is PaymentApplePayExecutingRequest.
func (s ExecutePaymentReq) IsPaymentApplePayExecutingRequest() bool {
	return s.Type == PaymentApplePayExecutingRequestExecutePaymentReq
}

// IsPaymentKonbiniExecutingRequest reports whether ExecutePaymentReq is PaymentKonbiniExecutingRequest.
func (s ExecutePaymentReq) IsPaymentKonbiniExecutingRequest() bool {
	return s.Type == PaymentKonbiniExecutingRequestExecutePaymentReq
}

// IsPaymentPayPayExecutingRequest reports whether ExecutePaymentReq is PaymentPayPayExecutingRequest.
func (s ExecutePaymentReq) IsPaymentPayPayExecutingRequest() bool {
	return s.Type == PaymentPayPayExecutingRequestExecutePaymentReq
}

// IsPaymentDirectDebitExecutingRequest reports whether ExecutePaymentReq is PaymentDirectDebitExecutingRequest.
func (s ExecutePaymentReq) IsPaymentDirectDebitExecutingRequest() bool {
	return s.Type == PaymentDirectDebitExecutingRequestExecutePaymentReq
}

// SetPaymentCardExecutingRequest sets ExecutePaymentReq to PaymentCardExecutingRequest.
func (s *ExecutePaymentReq) SetPaymentCardExecutingRequest(v PaymentCardExecutingRequest) {
	s.Type = PaymentCardExecutingRequestExecutePaymentReq
	s.PaymentCardExecutingRequest = v
}

// GetPaymentCardExecutingRequest returns PaymentCardExecutingRequest and true boolean if ExecutePaymentReq is PaymentCardExecutingRequest.
func (s ExecutePaymentReq) GetPaymentCardExecutingRequest() (v PaymentCardExecutingRequest, ok bool) {
	if !s.IsPaymentCardExecutingRequest() {
		return v, false
	}
	return s.PaymentCardExecutingRequest, true
}

// NewPaymentCardExecutingRequestExecutePaymentReq returns new ExecutePaymentReq from PaymentCardExecutingRequest.
func NewPaymentCardExecutingRequestExecutePaymentReq(v PaymentCardExecutingRequest) ExecutePaymentReq {
	var s ExecutePaymentReq
	s.SetPaymentCardExecutingRequest(v)
	return s
}

// SetPaymentApplePayExecutingRequest sets ExecutePaymentReq to PaymentApplePayExecutingRequest.
func (s *ExecutePaymentReq) SetPaymentApplePayExecutingRequest(v PaymentApplePayExecutingRequest) {
	s.Type = PaymentApplePayExecutingRequestExecutePaymentReq
	s.PaymentApplePayExecutingRequest = v
}

// GetPaymentApplePayExecutingRequest returns PaymentApplePayExecutingRequest and true boolean if ExecutePaymentReq is PaymentApplePayExecutingRequest.
func (s ExecutePaymentReq) GetPaymentApplePayExecutingRequest() (v PaymentApplePayExecutingRequest, ok bool) {
	if !s.IsPaymentApplePayExecutingRequest() {
		return v, false
	}
	return s.PaymentApplePayExecutingRequest, true
}

// NewPaymentApplePayExecutingRequestExecutePaymentReq returns new ExecutePaymentReq from PaymentApplePayExecutingRequest.
func NewPaymentApplePayExecutingRequestExecutePaymentReq(v PaymentApplePayExecutingRequest) ExecutePaymentReq {
	var s ExecutePaymentReq
	s.SetPaymentApplePayExecutingRequest(v)
	return s
}

// SetPaymentKonbiniExecutingRequest sets ExecutePaymentReq to PaymentKonbiniExecutingRequest.
func (s *ExecutePaymentReq) SetPaymentKonbiniExecutingRequest(v PaymentKonbiniExecutingRequest) {
	s.Type = PaymentKonbiniExecutingRequestExecutePaymentReq
	s.PaymentKonbiniExecutingRequest = v
}

// GetPaymentKonbiniExecutingRequest returns PaymentKonbiniExecutingRequest and true boolean if ExecutePaymentReq is PaymentKonbiniExecutingRequest.
func (s ExecutePaymentReq) GetPaymentKonbiniExecutingRequest() (v PaymentKonbiniExecutingRequest, ok bool) {
	if !s.IsPaymentKonbiniExecutingRequest() {
		return v, false
	}
	return s.PaymentKonbiniExecutingRequest, true
}

// NewPaymentKonbiniExecutingRequestExecutePaymentReq returns new ExecutePaymentReq from PaymentKonbiniExecutingRequest.
func NewPaymentKonbiniExecutingRequestExecutePaymentReq(v PaymentKonbiniExecutingRequest) ExecutePaymentReq {
	var s ExecutePaymentReq
	s.SetPaymentKonbiniExecutingRequest(v)
	return s
}

// SetPaymentPayPayExecutingRequest sets ExecutePaymentReq to PaymentPayPayExecutingRequest.
func (s *ExecutePaymentReq) SetPaymentPayPayExecutingRequest(v PaymentPayPayExecutingRequest) {
	s.Type = PaymentPayPayExecutingRequestExecutePaymentReq
	s.PaymentPayPayExecutingRequest = v
}

// GetPaymentPayPayExecutingRequest returns PaymentPayPayExecutingRequest and true boolean if ExecutePaymentReq is PaymentPayPayExecutingRequest.
func (s ExecutePaymentReq) GetPaymentPayPayExecutingRequest() (v PaymentPayPayExecutingRequest, ok bool) {
	if !s.IsPaymentPayPayExecutingRequest() {
		return v, false
	}
	return s.PaymentPayPayExecutingRequest, true
}

// NewPaymentPayPayExecutingRequestExecutePaymentReq returns new ExecutePaymentReq from PaymentPayPayExecutingRequest.
func NewPaymentPayPayExecutingRequestExecutePaymentReq(v PaymentPayPayExecutingRequest) ExecutePaymentReq {
	var s ExecutePaymentReq
	s.SetPaymentPayPayExecutingRequest(v)
	return s
}

// SetPaymentDirectDebitExecutingRequest sets ExecutePaymentReq to PaymentDirectDebitExecutingRequest.
func (s *ExecutePaymentReq) SetPaymentDirectDebitExecutingRequest(v PaymentDirectDebitExecutingRequest) {
	s.Type = PaymentDirectDebitExecutingRequestExecutePaymentReq
	s.PaymentDirectDebitExecutingRequest = v
}

// GetPaymentDirectDebitExecutingRequest returns PaymentDirectDebitExecutingRequest and true boolean if ExecutePaymentReq is PaymentDirectDebitExecutingRequest.
func (s ExecutePaymentReq) GetPaymentDirectDebitExecutingRequest() (v PaymentDirectDebitExecutingRequest, ok bool) {
	if !s.IsPaymentDirectDebitExecutingRequest() {
		return v, false
	}
	return s.PaymentDirectDebitExecutingRequest, true
}

// NewPaymentDirectDebitExecutingRequestExecutePaymentReq returns new ExecutePaymentReq from PaymentDirectDebitExecutingRequest.
func NewPaymentDirectDebitExecutingRequestExecutePaymentReq(v PaymentDirectDebitExecutingRequest) ExecutePaymentReq {
	var s ExecutePaymentReq
	s.SetPaymentDirectDebitExecutingRequest(v)
	return s
}

type Expire string

type FeeAmount int

type File string

type FileName string

// 1つのエラーを表現するオブジェクト。.
// Ref: #/components/schemas/FincodeAPIError
type FincodeAPIError struct {
	// エラー内容を判定する場合はこの`error_code`の使用が推奨されます。\
	// [各エラーコードの定義はこちらを参照](https://docs.fincode.
	// jp/develop_support/error)して確認できます。.
	ErrorCode OptString `json:"error_code"`
	// エラーの内容を表現するメッセージです。\
	// このエラーメッセージは予告なく変更されるため、エラー内容を判定する場合はこの値ではなく`error_code`の使用が推奨されます。.
	ErrorMessage OptString `json:"error_message"`
}

// GetErrorCode returns the value of ErrorCode.
func (s *FincodeAPIError) GetErrorCode() OptString {
	return s.ErrorCode
}

// GetErrorMessage returns the value of ErrorMessage.
func (s *FincodeAPIError) GetErrorMessage() OptString {
	return s.ErrorMessage
}

// SetErrorCode sets the value of ErrorCode.
func (s *FincodeAPIError) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

// SetErrorMessage sets the value of ErrorMessage.
func (s *FincodeAPIError) SetErrorMessage(val OptString) {
	s.ErrorMessage = val
}

// Ref: #/components/schemas/FincodeAPIError.Response
type FincodeAPIErrorResponse struct {
	Errors []FincodeAPIError `json:"errors"`
}

// GetErrors returns the value of Errors.
func (s *FincodeAPIErrorResponse) GetErrors() []FincodeAPIError {
	return s.Errors
}

// SetErrors sets the value of Errors.
func (s *FincodeAPIErrorResponse) SetErrors(val []FincodeAPIError) {
	s.Errors = val
}

func (*FincodeAPIErrorResponse) authorizePaymentRes()                   {}
func (*FincodeAPIErrorResponse) cancelPaymentRes()                      {}
func (*FincodeAPIErrorResponse) capturePaymentRes()                     {}
func (*FincodeAPIErrorResponse) changeAmountOfPaymentRes()              {}
func (*FincodeAPIErrorResponse) confirm3DSecureAuthenticationRes()      {}
func (*FincodeAPIErrorResponse) createCardRegistrationSessionRes()      {}
func (*FincodeAPIErrorResponse) createCustomerCardRes()                 {}
func (*FincodeAPIErrorResponse) createCustomerPaymentMethodRes()        {}
func (*FincodeAPIErrorResponse) createCustomerRes()                     {}
func (*FincodeAPIErrorResponse) createPaymentBulkRes()                  {}
func (*FincodeAPIErrorResponse) createPaymentRes()                      {}
func (*FincodeAPIErrorResponse) createPaymentSessionRes()               {}
func (*FincodeAPIErrorResponse) createPlanRes()                         {}
func (*FincodeAPIErrorResponse) createSubscriptionRes()                 {}
func (*FincodeAPIErrorResponse) createTenantWithExistingUserRes()       {}
func (*FincodeAPIErrorResponse) createTenantWithNewUserRes()            {}
func (*FincodeAPIErrorResponse) createWebhookSettingRes()               {}
func (*FincodeAPIErrorResponse) deleteCustomerCardRes()                 {}
func (*FincodeAPIErrorResponse) deleteCustomerPaymentMethodRes()        {}
func (*FincodeAPIErrorResponse) deleteCustomerRes()                     {}
func (*FincodeAPIErrorResponse) deletePaymentBulkRes()                  {}
func (*FincodeAPIErrorResponse) deletePlanRes()                         {}
func (*FincodeAPIErrorResponse) deleteSubscriptionRes()                 {}
func (*FincodeAPIErrorResponse) deleteWebhookSettingRes()               {}
func (*FincodeAPIErrorResponse) execute3DSecureAuthenticationRes()      {}
func (*FincodeAPIErrorResponse) executePaymentAfter3DSecureRes()        {}
func (*FincodeAPIErrorResponse) executePaymentRes()                     {}
func (*FincodeAPIErrorResponse) generateBarcodeOfPaymentRes()           {}
func (*FincodeAPIErrorResponse) requestProductionEnvironmentRes()       {}
func (*FincodeAPIErrorResponse) reserveProviderRes()                    {}
func (*FincodeAPIErrorResponse) retrieveAccountDetailListRes()          {}
func (*FincodeAPIErrorResponse) retrieveAccountListRes()                {}
func (*FincodeAPIErrorResponse) retrieveAccountRes()                    {}
func (*FincodeAPIErrorResponse) retrieveCustomerCardListRes()           {}
func (*FincodeAPIErrorResponse) retrieveCustomerCardRes()               {}
func (*FincodeAPIErrorResponse) retrieveCustomerListRes()               {}
func (*FincodeAPIErrorResponse) retrieveCustomerPaymentMethodListRes()  {}
func (*FincodeAPIErrorResponse) retrieveCustomerPaymentMethodRes()      {}
func (*FincodeAPIErrorResponse) retrieveCustomerRes()                   {}
func (*FincodeAPIErrorResponse) retrievePaymentBulkDetailListRes()      {}
func (*FincodeAPIErrorResponse) retrievePaymentBulkListRes()            {}
func (*FincodeAPIErrorResponse) retrievePaymentListRes()                {}
func (*FincodeAPIErrorResponse) retrievePaymentRes()                    {}
func (*FincodeAPIErrorResponse) retrievePlanListRes()                   {}
func (*FincodeAPIErrorResponse) retrievePlanRes()                       {}
func (*FincodeAPIErrorResponse) retrievePlatformAccountListRes()        {}
func (*FincodeAPIErrorResponse) retrievePlatformAccountRes()            {}
func (*FincodeAPIErrorResponse) retrievePlatformAccountSummaryListRes() {}
func (*FincodeAPIErrorResponse) retrievePlatformShopListRes()           {}
func (*FincodeAPIErrorResponse) retrievePlatformShopRes()               {}
func (*FincodeAPIErrorResponse) retrieveSubscriptionListRes()           {}
func (*FincodeAPIErrorResponse) retrieveSubscriptionRes()               {}
func (*FincodeAPIErrorResponse) retrieveSubscriptionResultListRes()     {}
func (*FincodeAPIErrorResponse) retrieveTenantContractRes()             {}
func (*FincodeAPIErrorResponse) retrieveTenantExaminationInfoRes()      {}
func (*FincodeAPIErrorResponse) retrieveTenantExaminationInfoV2Res()    {}
func (*FincodeAPIErrorResponse) retrieveTenantShopListRes()             {}
func (*FincodeAPIErrorResponse) retrieveTenantShopRes()                 {}
func (*FincodeAPIErrorResponse) retrieveWebhookSettingListRes()         {}
func (*FincodeAPIErrorResponse) retrieveWebhookSettingRes()             {}
func (*FincodeAPIErrorResponse) updateCustomerCardRes()                 {}
func (*FincodeAPIErrorResponse) updateCustomerRes()                     {}
func (*FincodeAPIErrorResponse) updatePlanRes()                         {}
func (*FincodeAPIErrorResponse) updatePlatformShopRes()                 {}
func (*FincodeAPIErrorResponse) updateSubscriptionRes()                 {}
func (*FincodeAPIErrorResponse) updateTenantExaminationInfoRes()        {}
func (*FincodeAPIErrorResponse) updateTenantExaminationInfoV2Res()      {}
func (*FincodeAPIErrorResponse) updateTenantShopRes()                   {}
func (*FincodeAPIErrorResponse) updateWebhookSettingRes()               {}
func (*FincodeAPIErrorResponse) uploadExaminationFileRes()              {}

// Webhook通知 トリガーイベント.
// Ref: #/components/schemas/FincodeEvent
type FincodeEvent string

const (
	FincodeEventPaymentsCardRegist                FincodeEvent = "payments.card.regist"
	FincodeEventPaymentsCardExec                  FincodeEvent = "payments.card.exec"
	FincodeEventPaymentsCardCapture               FincodeEvent = "payments.card.capture"
	FincodeEventPaymentsCardCancel                FincodeEvent = "payments.card.cancel"
	FincodeEventPaymentsCardAuth                  FincodeEvent = "payments.card.auth"
	FincodeEventPaymentsCardChange                FincodeEvent = "payments.card.change"
	FincodeEventPaymentsCardSecure2Authenticate   FincodeEvent = "payments.card.secure2.authenticate"
	FincodeEventPaymentsCardSecure2Result         FincodeEvent = "payments.card.secure2.result"
	FincodeEventPaymentsCardSecure                FincodeEvent = "payments.card.secure"
	FincodeEventPaymentsApplepayRegist            FincodeEvent = "payments.applepay.regist"
	FincodeEventPaymentsApplepayExec              FincodeEvent = "payments.applepay.exec"
	FincodeEventPaymentsApplepayCapture           FincodeEvent = "payments.applepay.capture"
	FincodeEventPaymentsApplepayCancel            FincodeEvent = "payments.applepay.cancel"
	FincodeEventPaymentsKonbiniRegist             FincodeEvent = "payments.konbini.regist"
	FincodeEventPaymentsKonbiniExec               FincodeEvent = "payments.konbini.exec"
	FincodeEventPaymentsKonbiniCancel             FincodeEvent = "payments.konbini.cancel"
	FincodeEventPaymentsKonbiniComplete           FincodeEvent = "payments.konbini.complete"
	FincodeEventPaymentsKonbiniCompleteStub       FincodeEvent = "payments.konbini.complete.stub"
	FincodeEventPaymentsKonbiniExpiredUpdateBatch FincodeEvent = "payments.konbini.expired.update.batch"
	FincodeEventPaymentsPaypayRegist              FincodeEvent = "payments.paypay.regist"
	FincodeEventPaymentsPaypayExec                FincodeEvent = "payments.paypay.exec"
	FincodeEventPaymentsPaypayCapture             FincodeEvent = "payments.paypay.capture"
	FincodeEventPaymentsPaypayCancel              FincodeEvent = "payments.paypay.cancel"
	FincodeEventPaymentsPaypayChange              FincodeEvent = "payments.paypay.change"
	FincodeEventPaymentsPaypayComplete            FincodeEvent = "payments.paypay.complete"
	FincodeEventPaymentsDirectdebitRegist         FincodeEvent = "payments.directdebit.regist"
	FincodeEventPaymentsDirectdebitExec           FincodeEvent = "payments.directdebit.exec"
	FincodeEventPaymentsDirectdebitCancel         FincodeEvent = "payments.directdebit.cancel"
	FincodeEventPaymentsDirectdebitChange         FincodeEvent = "payments.directdebit.change"
	FincodeEventPaymentsDirectdebitComplete       FincodeEvent = "payments.directdebit.complete"
	FincodeEventPaymentsDirectdebitCompleteStub   FincodeEvent = "payments.directdebit.complete.stub"
	FincodeEventCustomersPaymentMethodsUpdated    FincodeEvent = "customers.payment_methods.updated"
	FincodeEventCardRegist                        FincodeEvent = "card.regist"
	FincodeEventCardUpdate                        FincodeEvent = "card.update"
	FincodeEventSubscriptionCardRegist            FincodeEvent = "subscription.card.regist"
	FincodeEventSubscriptionCardDelete            FincodeEvent = "subscription.card.delete"
	FincodeEventSubscriptionCardUpdate            FincodeEvent = "subscription.card.update"
	FincodeEventRecurringCardBatch                FincodeEvent = "recurring.card.batch"
	FincodeEventSubscriptionDirectdebitRegist     FincodeEvent = "subscription.directdebit.regist"
	FincodeEventSubscriptionDirectdebitDelete     FincodeEvent = "subscription.directdebit.delete"
	FincodeEventSubscriptionDirectdebitUpdate     FincodeEvent = "subscription.directdebit.update"
	FincodeEventRecurringDirectdebitBatch         FincodeEvent = "recurring.directdebit.batch"
	FincodeEventPaymentsBulkCardRegist            FincodeEvent = "payments.bulk.card.regist"
	FincodeEventPaymentsBulkCardBatch             FincodeEvent = "payments.bulk.card.batch"
	FincodeEventContractsStatusCodeUpdated        FincodeEvent = "contracts.status_code.updated"
)

// AllValues returns all FincodeEvent values.
func (FincodeEvent) AllValues() []FincodeEvent {
	return []FincodeEvent{
		FincodeEventPaymentsCardRegist,
		FincodeEventPaymentsCardExec,
		FincodeEventPaymentsCardCapture,
		FincodeEventPaymentsCardCancel,
		FincodeEventPaymentsCardAuth,
		FincodeEventPaymentsCardChange,
		FincodeEventPaymentsCardSecure2Authenticate,
		FincodeEventPaymentsCardSecure2Result,
		FincodeEventPaymentsCardSecure,
		FincodeEventPaymentsApplepayRegist,
		FincodeEventPaymentsApplepayExec,
		FincodeEventPaymentsApplepayCapture,
		FincodeEventPaymentsApplepayCancel,
		FincodeEventPaymentsKonbiniRegist,
		FincodeEventPaymentsKonbiniExec,
		FincodeEventPaymentsKonbiniCancel,
		FincodeEventPaymentsKonbiniComplete,
		FincodeEventPaymentsKonbiniCompleteStub,
		FincodeEventPaymentsKonbiniExpiredUpdateBatch,
		FincodeEventPaymentsPaypayRegist,
		FincodeEventPaymentsPaypayExec,
		FincodeEventPaymentsPaypayCapture,
		FincodeEventPaymentsPaypayCancel,
		FincodeEventPaymentsPaypayChange,
		FincodeEventPaymentsPaypayComplete,
		FincodeEventPaymentsDirectdebitRegist,
		FincodeEventPaymentsDirectdebitExec,
		FincodeEventPaymentsDirectdebitCancel,
		FincodeEventPaymentsDirectdebitChange,
		FincodeEventPaymentsDirectdebitComplete,
		FincodeEventPaymentsDirectdebitCompleteStub,
		FincodeEventCustomersPaymentMethodsUpdated,
		FincodeEventCardRegist,
		FincodeEventCardUpdate,
		FincodeEventSubscriptionCardRegist,
		FincodeEventSubscriptionCardDelete,
		FincodeEventSubscriptionCardUpdate,
		FincodeEventRecurringCardBatch,
		FincodeEventSubscriptionDirectdebitRegist,
		FincodeEventSubscriptionDirectdebitDelete,
		FincodeEventSubscriptionDirectdebitUpdate,
		FincodeEventRecurringDirectdebitBatch,
		FincodeEventPaymentsBulkCardRegist,
		FincodeEventPaymentsBulkCardBatch,
		FincodeEventContractsStatusCodeUpdated,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s FincodeEvent) MarshalText() ([]byte, error) {
	switch s {
	case FincodeEventPaymentsCardRegist:
		return []byte(s), nil
	case FincodeEventPaymentsCardExec:
		return []byte(s), nil
	case FincodeEventPaymentsCardCapture:
		return []byte(s), nil
	case FincodeEventPaymentsCardCancel:
		return []byte(s), nil
	case FincodeEventPaymentsCardAuth:
		return []byte(s), nil
	case FincodeEventPaymentsCardChange:
		return []byte(s), nil
	case FincodeEventPaymentsCardSecure2Authenticate:
		return []byte(s), nil
	case FincodeEventPaymentsCardSecure2Result:
		return []byte(s), nil
	case FincodeEventPaymentsCardSecure:
		return []byte(s), nil
	case FincodeEventPaymentsApplepayRegist:
		return []byte(s), nil
	case FincodeEventPaymentsApplepayExec:
		return []byte(s), nil
	case FincodeEventPaymentsApplepayCapture:
		return []byte(s), nil
	case FincodeEventPaymentsApplepayCancel:
		return []byte(s), nil
	case FincodeEventPaymentsKonbiniRegist:
		return []byte(s), nil
	case FincodeEventPaymentsKonbiniExec:
		return []byte(s), nil
	case FincodeEventPaymentsKonbiniCancel:
		return []byte(s), nil
	case FincodeEventPaymentsKonbiniComplete:
		return []byte(s), nil
	case FincodeEventPaymentsKonbiniCompleteStub:
		return []byte(s), nil
	case FincodeEventPaymentsKonbiniExpiredUpdateBatch:
		return []byte(s), nil
	case FincodeEventPaymentsPaypayRegist:
		return []byte(s), nil
	case FincodeEventPaymentsPaypayExec:
		return []byte(s), nil
	case FincodeEventPaymentsPaypayCapture:
		return []byte(s), nil
	case FincodeEventPaymentsPaypayCancel:
		return []byte(s), nil
	case FincodeEventPaymentsPaypayChange:
		return []byte(s), nil
	case FincodeEventPaymentsPaypayComplete:
		return []byte(s), nil
	case FincodeEventPaymentsDirectdebitRegist:
		return []byte(s), nil
	case FincodeEventPaymentsDirectdebitExec:
		return []byte(s), nil
	case FincodeEventPaymentsDirectdebitCancel:
		return []byte(s), nil
	case FincodeEventPaymentsDirectdebitChange:
		return []byte(s), nil
	case FincodeEventPaymentsDirectdebitComplete:
		return []byte(s), nil
	case FincodeEventPaymentsDirectdebitCompleteStub:
		return []byte(s), nil
	case FincodeEventCustomersPaymentMethodsUpdated:
		return []byte(s), nil
	case FincodeEventCardRegist:
		return []byte(s), nil
	case FincodeEventCardUpdate:
		return []byte(s), nil
	case FincodeEventSubscriptionCardRegist:
		return []byte(s), nil
	case FincodeEventSubscriptionCardDelete:
		return []byte(s), nil
	case FincodeEventSubscriptionCardUpdate:
		return []byte(s), nil
	case FincodeEventRecurringCardBatch:
		return []byte(s), nil
	case FincodeEventSubscriptionDirectdebitRegist:
		return []byte(s), nil
	case FincodeEventSubscriptionDirectdebitDelete:
		return []byte(s), nil
	case FincodeEventSubscriptionDirectdebitUpdate:
		return []byte(s), nil
	case FincodeEventRecurringDirectdebitBatch:
		return []byte(s), nil
	case FincodeEventPaymentsBulkCardRegist:
		return []byte(s), nil
	case FincodeEventPaymentsBulkCardBatch:
		return []byte(s), nil
	case FincodeEventContractsStatusCodeUpdated:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *FincodeEvent) UnmarshalText(data []byte) error {
	switch FincodeEvent(data) {
	case FincodeEventPaymentsCardRegist:
		*s = FincodeEventPaymentsCardRegist
		return nil
	case FincodeEventPaymentsCardExec:
		*s = FincodeEventPaymentsCardExec
		return nil
	case FincodeEventPaymentsCardCapture:
		*s = FincodeEventPaymentsCardCapture
		return nil
	case FincodeEventPaymentsCardCancel:
		*s = FincodeEventPaymentsCardCancel
		return nil
	case FincodeEventPaymentsCardAuth:
		*s = FincodeEventPaymentsCardAuth
		return nil
	case FincodeEventPaymentsCardChange:
		*s = FincodeEventPaymentsCardChange
		return nil
	case FincodeEventPaymentsCardSecure2Authenticate:
		*s = FincodeEventPaymentsCardSecure2Authenticate
		return nil
	case FincodeEventPaymentsCardSecure2Result:
		*s = FincodeEventPaymentsCardSecure2Result
		return nil
	case FincodeEventPaymentsCardSecure:
		*s = FincodeEventPaymentsCardSecure
		return nil
	case FincodeEventPaymentsApplepayRegist:
		*s = FincodeEventPaymentsApplepayRegist
		return nil
	case FincodeEventPaymentsApplepayExec:
		*s = FincodeEventPaymentsApplepayExec
		return nil
	case FincodeEventPaymentsApplepayCapture:
		*s = FincodeEventPaymentsApplepayCapture
		return nil
	case FincodeEventPaymentsApplepayCancel:
		*s = FincodeEventPaymentsApplepayCancel
		return nil
	case FincodeEventPaymentsKonbiniRegist:
		*s = FincodeEventPaymentsKonbiniRegist
		return nil
	case FincodeEventPaymentsKonbiniExec:
		*s = FincodeEventPaymentsKonbiniExec
		return nil
	case FincodeEventPaymentsKonbiniCancel:
		*s = FincodeEventPaymentsKonbiniCancel
		return nil
	case FincodeEventPaymentsKonbiniComplete:
		*s = FincodeEventPaymentsKonbiniComplete
		return nil
	case FincodeEventPaymentsKonbiniCompleteStub:
		*s = FincodeEventPaymentsKonbiniCompleteStub
		return nil
	case FincodeEventPaymentsKonbiniExpiredUpdateBatch:
		*s = FincodeEventPaymentsKonbiniExpiredUpdateBatch
		return nil
	case FincodeEventPaymentsPaypayRegist:
		*s = FincodeEventPaymentsPaypayRegist
		return nil
	case FincodeEventPaymentsPaypayExec:
		*s = FincodeEventPaymentsPaypayExec
		return nil
	case FincodeEventPaymentsPaypayCapture:
		*s = FincodeEventPaymentsPaypayCapture
		return nil
	case FincodeEventPaymentsPaypayCancel:
		*s = FincodeEventPaymentsPaypayCancel
		return nil
	case FincodeEventPaymentsPaypayChange:
		*s = FincodeEventPaymentsPaypayChange
		return nil
	case FincodeEventPaymentsPaypayComplete:
		*s = FincodeEventPaymentsPaypayComplete
		return nil
	case FincodeEventPaymentsDirectdebitRegist:
		*s = FincodeEventPaymentsDirectdebitRegist
		return nil
	case FincodeEventPaymentsDirectdebitExec:
		*s = FincodeEventPaymentsDirectdebitExec
		return nil
	case FincodeEventPaymentsDirectdebitCancel:
		*s = FincodeEventPaymentsDirectdebitCancel
		return nil
	case FincodeEventPaymentsDirectdebitChange:
		*s = FincodeEventPaymentsDirectdebitChange
		return nil
	case FincodeEventPaymentsDirectdebitComplete:
		*s = FincodeEventPaymentsDirectdebitComplete
		return nil
	case FincodeEventPaymentsDirectdebitCompleteStub:
		*s = FincodeEventPaymentsDirectdebitCompleteStub
		return nil
	case FincodeEventCustomersPaymentMethodsUpdated:
		*s = FincodeEventCustomersPaymentMethodsUpdated
		return nil
	case FincodeEventCardRegist:
		*s = FincodeEventCardRegist
		return nil
	case FincodeEventCardUpdate:
		*s = FincodeEventCardUpdate
		return nil
	case FincodeEventSubscriptionCardRegist:
		*s = FincodeEventSubscriptionCardRegist
		return nil
	case FincodeEventSubscriptionCardDelete:
		*s = FincodeEventSubscriptionCardDelete
		return nil
	case FincodeEventSubscriptionCardUpdate:
		*s = FincodeEventSubscriptionCardUpdate
		return nil
	case FincodeEventRecurringCardBatch:
		*s = FincodeEventRecurringCardBatch
		return nil
	case FincodeEventSubscriptionDirectdebitRegist:
		*s = FincodeEventSubscriptionDirectdebitRegist
		return nil
	case FincodeEventSubscriptionDirectdebitDelete:
		*s = FincodeEventSubscriptionDirectdebitDelete
		return nil
	case FincodeEventSubscriptionDirectdebitUpdate:
		*s = FincodeEventSubscriptionDirectdebitUpdate
		return nil
	case FincodeEventRecurringDirectdebitBatch:
		*s = FincodeEventRecurringDirectdebitBatch
		return nil
	case FincodeEventPaymentsBulkCardRegist:
		*s = FincodeEventPaymentsBulkCardRegist
		return nil
	case FincodeEventPaymentsBulkCardBatch:
		*s = FincodeEventPaymentsBulkCardBatch
		return nil
	case FincodeEventContractsStatusCodeUpdated:
		*s = FincodeEventContractsStatusCodeUpdated
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type FixedFee string

type Forward string

// 購入メール 送信フラグ\
// リダイレクト型決済URLをfincodeからのメール送信機能で送信したかどうかを示します。
// - `0`：送信しなかった（デフォルト）
// - `1`：送信した.
// Ref: #/components/schemas/guide_mail_send_flag
type GuideMailSendFlag string

const (
	GuideMailSendFlag0 GuideMailSendFlag = "0"
	GuideMailSendFlag1 GuideMailSendFlag = "1"
)

// AllValues returns all GuideMailSendFlag values.
func (GuideMailSendFlag) AllValues() []GuideMailSendFlag {
	return []GuideMailSendFlag{
		GuideMailSendFlag0,
		GuideMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GuideMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case GuideMailSendFlag0:
		return []byte(s), nil
	case GuideMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GuideMailSendFlag) UnmarshalText(data []byte) error {
	switch GuideMailSendFlag(data) {
	case GuideMailSendFlag0:
		*s = GuideMailSendFlag0
		return nil
	case GuideMailSendFlag1:
		*s = GuideMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type HolderName string

type HowToUse string

type Hp string

type ID string

type InitialAmount string

type InitialTax string

// 課金間隔数\
// 課金間隔（`interval_pattern`）を指定した場合必須です。
// 省略した場合、`1`が設定されます。
// - `1`：月次／年次の課金
// - `2`：2ヶ月に1回の課金
// - `3`：3ヶ月に1回の課金
// - `6`：6ヶ月に1回の課金.
// Ref: #/components/schemas/interval_count
type IntervalCount string

const (
	IntervalCount1 IntervalCount = "1"
	IntervalCount2 IntervalCount = "2"
	IntervalCount3 IntervalCount = "3"
	IntervalCount6 IntervalCount = "6"
)

// AllValues returns all IntervalCount values.
func (IntervalCount) AllValues() []IntervalCount {
	return []IntervalCount{
		IntervalCount1,
		IntervalCount2,
		IntervalCount3,
		IntervalCount6,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s IntervalCount) MarshalText() ([]byte, error) {
	switch s {
	case IntervalCount1:
		return []byte(s), nil
	case IntervalCount2:
		return []byte(s), nil
	case IntervalCount3:
		return []byte(s), nil
	case IntervalCount6:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *IntervalCount) UnmarshalText(data []byte) error {
	switch IntervalCount(data) {
	case IntervalCount1:
		*s = IntervalCount1
		return nil
	case IntervalCount2:
		*s = IntervalCount2
		return nil
	case IntervalCount3:
		*s = IntervalCount3
		return nil
	case IntervalCount6:
		*s = IntervalCount6
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 課金間隔\
// 課金間隔数（`interval_count`）を指定した場合必須です。
// 省略した場合、`month`が設定されます。
// - `month`：月
// - `year`：年.
// Ref: #/components/schemas/interval_pattern
type IntervalPattern string

const (
	IntervalPatternMonth IntervalPattern = "month"
	IntervalPatternYear  IntervalPattern = "year"
)

// AllValues returns all IntervalPattern values.
func (IntervalPattern) AllValues() []IntervalPattern {
	return []IntervalPattern{
		IntervalPatternMonth,
		IntervalPatternYear,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s IntervalPattern) MarshalText() ([]byte, error) {
	switch s {
	case IntervalPatternMonth:
		return []byte(s), nil
	case IntervalPatternYear:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *IntervalPattern) UnmarshalText(data []byte) error {
	switch IntervalPattern(data) {
	case IntervalPatternMonth:
		*s = IntervalPatternMonth
		return nil
	case IntervalPatternYear:
		*s = IntervalPatternYear
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type InvoiceID string

type ItemCode string

// コンビニ事業者コード\
// 購入者が払い込みを行ったコンビニ事業者をあらわすコード。
// - `00010`: セブン-イレブン
// - `00020`: ローソン
// - `00030`: ファミリーマート
// - `00080`: ミニストップ
// - `00760`: セイコーマート.
// Ref: #/components/schemas/KonbiniCode
type KonbiniCode string

const (
	KonbiniCode00010 KonbiniCode = "00010"
	KonbiniCode00020 KonbiniCode = "00020"
	KonbiniCode00030 KonbiniCode = "00030"
	KonbiniCode00080 KonbiniCode = "00080"
	KonbiniCode00760 KonbiniCode = "00760"
)

// AllValues returns all KonbiniCode values.
func (KonbiniCode) AllValues() []KonbiniCode {
	return []KonbiniCode{
		KonbiniCode00010,
		KonbiniCode00020,
		KonbiniCode00030,
		KonbiniCode00080,
		KonbiniCode00760,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s KonbiniCode) MarshalText() ([]byte, error) {
	switch s {
	case KonbiniCode00010:
		return []byte(s), nil
	case KonbiniCode00020:
		return []byte(s), nil
	case KonbiniCode00030:
		return []byte(s), nil
	case KonbiniCode00080:
		return []byte(s), nil
	case KonbiniCode00760:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *KonbiniCode) UnmarshalText(data []byte) error {
	switch KonbiniCode(data) {
	case KonbiniCode00010:
		*s = KonbiniCode00010
		return nil
	case KonbiniCode00020:
		*s = KonbiniCode00020
		return nil
	case KonbiniCode00030:
		*s = KonbiniCode00030
		return nil
	case KonbiniCode00080:
		*s = KonbiniCode00080
		return nil
	case KonbiniCode00760:
		*s = KonbiniCode00760
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// コンビニ事業者の決済処理結果コード
// - `000`: 正常終了
// - `001`: 認証失敗
// - `002`:
// 注文登録には成功したものの端末情報が確認できなかったためバーコード画像の発行なし
// - `003`: 必須項目の不備によるエラー
// - `004`: バーコードデータ内の識別子が不正
// - `005`: バーコードデータ内のメーカーコードが不正
// - `006`: バーコードデータ内の企業識別コードが不正
// - `007`: 支払い期限日時を超過している、または形式が不正
// - `008`: 支払い金額が上限もしくは下限を超えている
// - `009`: 全体チェックデジットが不正
// - `010`: その他の理由によりバーコード画像の発行に失敗
// - `011`: 印紙フラグ（内部データ）不正
// - `012`: 端末情報の指定値の桁数不正
// - `013`: 既に同一のバーコードが登録済み
// - `900`: 予期せぬエラー.
// Ref: #/components/schemas/KonbiniPaymentProcessResult
type KonbiniPaymentProcessResult string

const (
	KonbiniPaymentProcessResult000 KonbiniPaymentProcessResult = "000"
	KonbiniPaymentProcessResult001 KonbiniPaymentProcessResult = "001"
	KonbiniPaymentProcessResult002 KonbiniPaymentProcessResult = "002"
	KonbiniPaymentProcessResult003 KonbiniPaymentProcessResult = "003"
	KonbiniPaymentProcessResult004 KonbiniPaymentProcessResult = "004"
	KonbiniPaymentProcessResult005 KonbiniPaymentProcessResult = "005"
	KonbiniPaymentProcessResult006 KonbiniPaymentProcessResult = "006"
	KonbiniPaymentProcessResult007 KonbiniPaymentProcessResult = "007"
	KonbiniPaymentProcessResult008 KonbiniPaymentProcessResult = "008"
	KonbiniPaymentProcessResult009 KonbiniPaymentProcessResult = "009"
	KonbiniPaymentProcessResult010 KonbiniPaymentProcessResult = "010"
	KonbiniPaymentProcessResult011 KonbiniPaymentProcessResult = "011"
	KonbiniPaymentProcessResult012 KonbiniPaymentProcessResult = "012"
	KonbiniPaymentProcessResult013 KonbiniPaymentProcessResult = "013"
	KonbiniPaymentProcessResult900 KonbiniPaymentProcessResult = "900"
)

// AllValues returns all KonbiniPaymentProcessResult values.
func (KonbiniPaymentProcessResult) AllValues() []KonbiniPaymentProcessResult {
	return []KonbiniPaymentProcessResult{
		KonbiniPaymentProcessResult000,
		KonbiniPaymentProcessResult001,
		KonbiniPaymentProcessResult002,
		KonbiniPaymentProcessResult003,
		KonbiniPaymentProcessResult004,
		KonbiniPaymentProcessResult005,
		KonbiniPaymentProcessResult006,
		KonbiniPaymentProcessResult007,
		KonbiniPaymentProcessResult008,
		KonbiniPaymentProcessResult009,
		KonbiniPaymentProcessResult010,
		KonbiniPaymentProcessResult011,
		KonbiniPaymentProcessResult012,
		KonbiniPaymentProcessResult013,
		KonbiniPaymentProcessResult900,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s KonbiniPaymentProcessResult) MarshalText() ([]byte, error) {
	switch s {
	case KonbiniPaymentProcessResult000:
		return []byte(s), nil
	case KonbiniPaymentProcessResult001:
		return []byte(s), nil
	case KonbiniPaymentProcessResult002:
		return []byte(s), nil
	case KonbiniPaymentProcessResult003:
		return []byte(s), nil
	case KonbiniPaymentProcessResult004:
		return []byte(s), nil
	case KonbiniPaymentProcessResult005:
		return []byte(s), nil
	case KonbiniPaymentProcessResult006:
		return []byte(s), nil
	case KonbiniPaymentProcessResult007:
		return []byte(s), nil
	case KonbiniPaymentProcessResult008:
		return []byte(s), nil
	case KonbiniPaymentProcessResult009:
		return []byte(s), nil
	case KonbiniPaymentProcessResult010:
		return []byte(s), nil
	case KonbiniPaymentProcessResult011:
		return []byte(s), nil
	case KonbiniPaymentProcessResult012:
		return []byte(s), nil
	case KonbiniPaymentProcessResult013:
		return []byte(s), nil
	case KonbiniPaymentProcessResult900:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *KonbiniPaymentProcessResult) UnmarshalText(data []byte) error {
	switch KonbiniPaymentProcessResult(data) {
	case KonbiniPaymentProcessResult000:
		*s = KonbiniPaymentProcessResult000
		return nil
	case KonbiniPaymentProcessResult001:
		*s = KonbiniPaymentProcessResult001
		return nil
	case KonbiniPaymentProcessResult002:
		*s = KonbiniPaymentProcessResult002
		return nil
	case KonbiniPaymentProcessResult003:
		*s = KonbiniPaymentProcessResult003
		return nil
	case KonbiniPaymentProcessResult004:
		*s = KonbiniPaymentProcessResult004
		return nil
	case KonbiniPaymentProcessResult005:
		*s = KonbiniPaymentProcessResult005
		return nil
	case KonbiniPaymentProcessResult006:
		*s = KonbiniPaymentProcessResult006
		return nil
	case KonbiniPaymentProcessResult007:
		*s = KonbiniPaymentProcessResult007
		return nil
	case KonbiniPaymentProcessResult008:
		*s = KonbiniPaymentProcessResult008
		return nil
	case KonbiniPaymentProcessResult009:
		*s = KonbiniPaymentProcessResult009
		return nil
	case KonbiniPaymentProcessResult010:
		*s = KonbiniPaymentProcessResult010
		return nil
	case KonbiniPaymentProcessResult011:
		*s = KonbiniPaymentProcessResult011
		return nil
	case KonbiniPaymentProcessResult012:
		*s = KonbiniPaymentProcessResult012
		return nil
	case KonbiniPaymentProcessResult013:
		*s = KonbiniPaymentProcessResult013
		return nil
	case KonbiniPaymentProcessResult900:
		*s = KonbiniPaymentProcessResult900
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// コンビニ決済 支払い画面案内メール送信フラグ\
// コンビニ決済の支払い画面案内メールを送信するかどうかを設定します。
// - `0`：送信しない
// - `1`：送信する.
// Ref: #/components/schemas/konbini_reception_mail_send_flag
type KonbiniReceptionMailSendFlag string

const (
	KonbiniReceptionMailSendFlag0 KonbiniReceptionMailSendFlag = "0"
	KonbiniReceptionMailSendFlag1 KonbiniReceptionMailSendFlag = "1"
)

// AllValues returns all KonbiniReceptionMailSendFlag values.
func (KonbiniReceptionMailSendFlag) AllValues() []KonbiniReceptionMailSendFlag {
	return []KonbiniReceptionMailSendFlag{
		KonbiniReceptionMailSendFlag0,
		KonbiniReceptionMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s KonbiniReceptionMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case KonbiniReceptionMailSendFlag0:
		return []byte(s), nil
	case KonbiniReceptionMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *KonbiniReceptionMailSendFlag) UnmarshalText(data []byte) error {
	switch KonbiniReceptionMailSendFlag(data) {
	case KonbiniReceptionMailSendFlag0:
		*s = KonbiniReceptionMailSendFlag0
		return nil
	case KonbiniReceptionMailSendFlag1:
		*s = KonbiniReceptionMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type KonbiniStoreCode jx.Raw

type LogKeepDays string

type LostTrial bool

type MailCustomerName string

type MerchantPaymentID string

type MerchantRefundID string

type MerchantRevertID string

type MerchantUpdateID string

type Name string

type NextChargeDate string

// NewNilAccountNameKana returns new NilAccountNameKana with value set to v.
func NewNilAccountNameKana(v AccountNameKana) NilAccountNameKana {
	return NilAccountNameKana{
		Value: v,
	}
}

// NilAccountNameKana is nullable AccountNameKana.
type NilAccountNameKana struct {
	Value AccountNameKana
	Null  bool
}

// SetTo sets value to v.
func (o *NilAccountNameKana) SetTo(v AccountNameKana) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilAccountNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilAccountNameKana) SetToNull() {
	o.Null = true
	var v AccountNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilAccountNameKana) Get() (v AccountNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilAccountNameKana) Or(d AccountNameKana) AccountNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilBankCode returns new NilBankCode with value set to v.
func NewNilBankCode(v BankCode) NilBankCode {
	return NilBankCode{
		Value: v,
	}
}

// NilBankCode is nullable BankCode.
type NilBankCode struct {
	Value BankCode
	Null  bool
}

// SetTo sets value to v.
func (o *NilBankCode) SetTo(v BankCode) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilBankCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilBankCode) SetToNull() {
	o.Null = true
	var v BankCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilBankCode) Get() (v BankCode, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilBankCode) Or(d BankCode) BankCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilBool returns new NilBool with value set to v.
func NewNilBool(v bool) NilBool {
	return NilBool{
		Value: v,
	}
}

// NilBool is nullable bool.
type NilBool struct {
	Value bool
	Null  bool
}

// SetTo sets value to v.
func (o *NilBool) SetTo(v bool) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilBool) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilBool) SetToNull() {
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilContractInfoV2RepresentativeGender returns new NilContractInfoV2RepresentativeGender with value set to v.
func NewNilContractInfoV2RepresentativeGender(v ContractInfoV2RepresentativeGender) NilContractInfoV2RepresentativeGender {
	return NilContractInfoV2RepresentativeGender{
		Value: v,
	}
}

// NilContractInfoV2RepresentativeGender is nullable ContractInfoV2RepresentativeGender.
type NilContractInfoV2RepresentativeGender struct {
	Value ContractInfoV2RepresentativeGender
	Null  bool
}

// SetTo sets value to v.
func (o *NilContractInfoV2RepresentativeGender) SetTo(v ContractInfoV2RepresentativeGender) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilContractInfoV2RepresentativeGender) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilContractInfoV2RepresentativeGender) SetToNull() {
	o.Null = true
	var v ContractInfoV2RepresentativeGender
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilContractInfoV2RepresentativeGender) Get() (v ContractInfoV2RepresentativeGender, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilContractInfoV2RepresentativeGender) Or(d ContractInfoV2RepresentativeGender) ContractInfoV2RepresentativeGender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDirectDebitApplicationType returns new NilDirectDebitApplicationType with value set to v.
func NewNilDirectDebitApplicationType(v DirectDebitApplicationType) NilDirectDebitApplicationType {
	return NilDirectDebitApplicationType{
		Value: v,
	}
}

// NilDirectDebitApplicationType is nullable DirectDebitApplicationType.
type NilDirectDebitApplicationType struct {
	Value DirectDebitApplicationType
	Null  bool
}

// SetTo sets value to v.
func (o *NilDirectDebitApplicationType) SetTo(v DirectDebitApplicationType) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilDirectDebitApplicationType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilDirectDebitApplicationType) SetToNull() {
	o.Null = true
	var v DirectDebitApplicationType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDirectDebitApplicationType) Get() (v DirectDebitApplicationType, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDirectDebitApplicationType) Or(d DirectDebitApplicationType) DirectDebitApplicationType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilFloat64 returns new NilFloat64 with value set to v.
func NewNilFloat64(v float64) NilFloat64 {
	return NilFloat64{
		Value: v,
	}
}

// NilFloat64 is nullable float64.
type NilFloat64 struct {
	Value float64
	Null  bool
}

// SetTo sets value to v.
func (o *NilFloat64) SetTo(v float64) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilFloat64) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilFloat64) SetToNull() {
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilTargetDate returns new NilTargetDate with value set to v.
func NewNilTargetDate(v TargetDate) NilTargetDate {
	return NilTargetDate{
		Value: v,
	}
}

// NilTargetDate is nullable TargetDate.
type NilTargetDate struct {
	Value TargetDate
	Null  bool
}

// SetTo sets value to v.
func (o *NilTargetDate) SetTo(v TargetDate) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilTargetDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilTargetDate) SetToNull() {
	o.Null = true
	var v TargetDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilTargetDate) Get() (v TargetDate, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilTargetDate) Or(d TargetDate) TargetDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type NontaxableFeeAmount int

// NewOptAccessID returns new OptAccessID with value set to v.
func NewOptAccessID(v AccessID) OptAccessID {
	return OptAccessID{
		Value: v,
		Set:   true,
	}
}

// OptAccessID is optional AccessID.
type OptAccessID struct {
	Value AccessID
	Set   bool
}

// IsSet returns true if OptAccessID was set.
func (o OptAccessID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccessID) Reset() {
	var v AccessID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccessID) SetTo(v AccessID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccessID) Get() (v AccessID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccessID) Or(d AccessID) AccessID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccountDetailTradeType returns new OptAccountDetailTradeType with value set to v.
func NewOptAccountDetailTradeType(v AccountDetailTradeType) OptAccountDetailTradeType {
	return OptAccountDetailTradeType{
		Value: v,
		Set:   true,
	}
}

// OptAccountDetailTradeType is optional AccountDetailTradeType.
type OptAccountDetailTradeType struct {
	Value AccountDetailTradeType
	Set   bool
}

// IsSet returns true if OptAccountDetailTradeType was set.
func (o OptAccountDetailTradeType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccountDetailTradeType) Reset() {
	var v AccountDetailTradeType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccountDetailTradeType) SetTo(v AccountDetailTradeType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccountDetailTradeType) Get() (v AccountDetailTradeType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccountDetailTradeType) Or(d AccountDetailTradeType) AccountDetailTradeType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccountID returns new OptAccountID with value set to v.
func NewOptAccountID(v AccountID) OptAccountID {
	return OptAccountID{
		Value: v,
		Set:   true,
	}
}

// OptAccountID is optional AccountID.
type OptAccountID struct {
	Value AccountID
	Set   bool
}

// IsSet returns true if OptAccountID was set.
func (o OptAccountID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccountID) Reset() {
	var v AccountID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccountID) SetTo(v AccountID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccountID) Get() (v AccountID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccountID) Or(d AccountID) AccountID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccountPaymentMethod returns new OptAccountPaymentMethod with value set to v.
func NewOptAccountPaymentMethod(v AccountPaymentMethod) OptAccountPaymentMethod {
	return OptAccountPaymentMethod{
		Value: v,
		Set:   true,
	}
}

// OptAccountPaymentMethod is optional AccountPaymentMethod.
type OptAccountPaymentMethod struct {
	Value AccountPaymentMethod
	Set   bool
}

// IsSet returns true if OptAccountPaymentMethod was set.
func (o OptAccountPaymentMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccountPaymentMethod) Reset() {
	var v AccountPaymentMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccountPaymentMethod) SetTo(v AccountPaymentMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccountPaymentMethod) Get() (v AccountPaymentMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccountPaymentMethod) Or(d AccountPaymentMethod) AccountPaymentMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccountPropertiesID returns new OptAccountPropertiesID with value set to v.
func NewOptAccountPropertiesID(v AccountPropertiesID) OptAccountPropertiesID {
	return OptAccountPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptAccountPropertiesID is optional AccountPropertiesID.
type OptAccountPropertiesID struct {
	Value AccountPropertiesID
	Set   bool
}

// IsSet returns true if OptAccountPropertiesID was set.
func (o OptAccountPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccountPropertiesID) Reset() {
	var v AccountPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccountPropertiesID) SetTo(v AccountPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccountPropertiesID) Get() (v AccountPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccountPropertiesID) Or(d AccountPropertiesID) AccountPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAcquirer returns new OptAcquirer with value set to v.
func NewOptAcquirer(v Acquirer) OptAcquirer {
	return OptAcquirer{
		Value: v,
		Set:   true,
	}
}

// OptAcquirer is optional Acquirer.
type OptAcquirer struct {
	Value Acquirer
	Set   bool
}

// IsSet returns true if OptAcquirer was set.
func (o OptAcquirer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAcquirer) Reset() {
	var v Acquirer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAcquirer) SetTo(v Acquirer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAcquirer) Get() (v Acquirer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAcquirer) Or(d Acquirer) Acquirer {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAcquirerContractStatus returns new OptAcquirerContractStatus with value set to v.
func NewOptAcquirerContractStatus(v AcquirerContractStatus) OptAcquirerContractStatus {
	return OptAcquirerContractStatus{
		Value: v,
		Set:   true,
	}
}

// OptAcquirerContractStatus is optional AcquirerContractStatus.
type OptAcquirerContractStatus struct {
	Value AcquirerContractStatus
	Set   bool
}

// IsSet returns true if OptAcquirerContractStatus was set.
func (o OptAcquirerContractStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAcquirerContractStatus) Reset() {
	var v AcquirerContractStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAcquirerContractStatus) SetTo(v AcquirerContractStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAcquirerContractStatus) Get() (v AcquirerContractStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAcquirerContractStatus) Or(d AcquirerContractStatus) AcquirerContractStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAmount returns new OptAmount with value set to v.
func NewOptAmount(v Amount) OptAmount {
	return OptAmount{
		Value: v,
		Set:   true,
	}
}

// OptAmount is optional Amount.
type OptAmount struct {
	Value Amount
	Set   bool
}

// IsSet returns true if OptAmount was set.
func (o OptAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAmount) Reset() {
	var v Amount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAmount) SetTo(v Amount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAmount) Get() (v Amount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAmount) Or(d Amount) Amount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptApplePayPaymentJobCode returns new OptApplePayPaymentJobCode with value set to v.
func NewOptApplePayPaymentJobCode(v ApplePayPaymentJobCode) OptApplePayPaymentJobCode {
	return OptApplePayPaymentJobCode{
		Value: v,
		Set:   true,
	}
}

// OptApplePayPaymentJobCode is optional ApplePayPaymentJobCode.
type OptApplePayPaymentJobCode struct {
	Value ApplePayPaymentJobCode
	Set   bool
}

// IsSet returns true if OptApplePayPaymentJobCode was set.
func (o OptApplePayPaymentJobCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptApplePayPaymentJobCode) Reset() {
	var v ApplePayPaymentJobCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptApplePayPaymentJobCode) SetTo(v ApplePayPaymentJobCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptApplePayPaymentJobCode) Get() (v ApplePayPaymentJobCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptApplePayPaymentJobCode) Or(d ApplePayPaymentJobCode) ApplePayPaymentJobCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBankAccountInfoV2 returns new OptBankAccountInfoV2 with value set to v.
func NewOptBankAccountInfoV2(v BankAccountInfoV2) OptBankAccountInfoV2 {
	return OptBankAccountInfoV2{
		Value: v,
		Set:   true,
	}
}

// OptBankAccountInfoV2 is optional BankAccountInfoV2.
type OptBankAccountInfoV2 struct {
	Value BankAccountInfoV2
	Set   bool
}

// IsSet returns true if OptBankAccountInfoV2 was set.
func (o OptBankAccountInfoV2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBankAccountInfoV2) Reset() {
	var v BankAccountInfoV2
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBankAccountInfoV2) SetTo(v BankAccountInfoV2) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBankAccountInfoV2) Get() (v BankAccountInfoV2, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBankAccountInfoV2) Or(d BankAccountInfoV2) BankAccountInfoV2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCancelOverpaymentFlag returns new OptCancelOverpaymentFlag with value set to v.
func NewOptCancelOverpaymentFlag(v CancelOverpaymentFlag) OptCancelOverpaymentFlag {
	return OptCancelOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptCancelOverpaymentFlag is optional CancelOverpaymentFlag.
type OptCancelOverpaymentFlag struct {
	Value CancelOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptCancelOverpaymentFlag was set.
func (o OptCancelOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCancelOverpaymentFlag) Reset() {
	var v CancelOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCancelOverpaymentFlag) SetTo(v CancelOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCancelOverpaymentFlag) Get() (v CancelOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCancelOverpaymentFlag) Or(d CancelOverpaymentFlag) CancelOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardBrand returns new OptCardBrand with value set to v.
func NewOptCardBrand(v CardBrand) OptCardBrand {
	return OptCardBrand{
		Value: v,
		Set:   true,
	}
}

// OptCardBrand is optional CardBrand.
type OptCardBrand struct {
	Value CardBrand
	Set   bool
}

// IsSet returns true if OptCardBrand was set.
func (o OptCardBrand) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardBrand) Reset() {
	var v CardBrand
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardBrand) SetTo(v CardBrand) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardBrand) Get() (v CardBrand, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardBrand) Or(d CardBrand) CardBrand {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardDefaultFlag returns new OptCardDefaultFlag with value set to v.
func NewOptCardDefaultFlag(v CardDefaultFlag) OptCardDefaultFlag {
	return OptCardDefaultFlag{
		Value: v,
		Set:   true,
	}
}

// OptCardDefaultFlag is optional CardDefaultFlag.
type OptCardDefaultFlag struct {
	Value CardDefaultFlag
	Set   bool
}

// IsSet returns true if OptCardDefaultFlag was set.
func (o OptCardDefaultFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardDefaultFlag) Reset() {
	var v CardDefaultFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardDefaultFlag) SetTo(v CardDefaultFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardDefaultFlag) Get() (v CardDefaultFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardDefaultFlag) Or(d CardDefaultFlag) CardDefaultFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardNo returns new OptCardNo with value set to v.
func NewOptCardNo(v CardNo) OptCardNo {
	return OptCardNo{
		Value: v,
		Set:   true,
	}
}

// OptCardNo is optional CardNo.
type OptCardNo struct {
	Value CardNo
	Set   bool
}

// IsSet returns true if OptCardNo was set.
func (o OptCardNo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardNo) Reset() {
	var v CardNo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardNo) SetTo(v CardNo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardNo) Get() (v CardNo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardNo) Or(d CardNo) CardNo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardNoHash returns new OptCardNoHash with value set to v.
func NewOptCardNoHash(v CardNoHash) OptCardNoHash {
	return OptCardNoHash{
		Value: v,
		Set:   true,
	}
}

// OptCardNoHash is optional CardNoHash.
type OptCardNoHash struct {
	Value CardNoHash
	Set   bool
}

// IsSet returns true if OptCardNoHash was set.
func (o OptCardNoHash) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardNoHash) Reset() {
	var v CardNoHash
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardNoHash) SetTo(v CardNoHash) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardNoHash) Get() (v CardNoHash, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardNoHash) Or(d CardNoHash) CardNoHash {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardPayMethod returns new OptCardPayMethod with value set to v.
func NewOptCardPayMethod(v CardPayMethod) OptCardPayMethod {
	return OptCardPayMethod{
		Value: v,
		Set:   true,
	}
}

// OptCardPayMethod is optional CardPayMethod.
type OptCardPayMethod struct {
	Value CardPayMethod
	Set   bool
}

// IsSet returns true if OptCardPayMethod was set.
func (o OptCardPayMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardPayMethod) Reset() {
	var v CardPayMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardPayMethod) SetTo(v CardPayMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardPayMethod) Get() (v CardPayMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardPayMethod) Or(d CardPayMethod) CardPayMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardPayTimes returns new OptCardPayTimes with value set to v.
func NewOptCardPayTimes(v CardPayTimes) OptCardPayTimes {
	return OptCardPayTimes{
		Value: v,
		Set:   true,
	}
}

// OptCardPayTimes is optional CardPayTimes.
type OptCardPayTimes struct {
	Value CardPayTimes
	Set   bool
}

// IsSet returns true if OptCardPayTimes was set.
func (o OptCardPayTimes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardPayTimes) Reset() {
	var v CardPayTimes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardPayTimes) SetTo(v CardPayTimes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardPayTimes) Get() (v CardPayTimes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardPayTimes) Or(d CardPayTimes) CardPayTimes {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardPaymentJobCode returns new OptCardPaymentJobCode with value set to v.
func NewOptCardPaymentJobCode(v CardPaymentJobCode) OptCardPaymentJobCode {
	return OptCardPaymentJobCode{
		Value: v,
		Set:   true,
	}
}

// OptCardPaymentJobCode is optional CardPaymentJobCode.
type OptCardPaymentJobCode struct {
	Value CardPaymentJobCode
	Set   bool
}

// IsSet returns true if OptCardPaymentJobCode was set.
func (o OptCardPaymentJobCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardPaymentJobCode) Reset() {
	var v CardPaymentJobCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardPaymentJobCode) SetTo(v CardPaymentJobCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardPaymentJobCode) Get() (v CardPaymentJobCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardPaymentJobCode) Or(d CardPaymentJobCode) CardPaymentJobCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardPaymentSessionJobCode returns new OptCardPaymentSessionJobCode with value set to v.
func NewOptCardPaymentSessionJobCode(v CardPaymentSessionJobCode) OptCardPaymentSessionJobCode {
	return OptCardPaymentSessionJobCode{
		Value: v,
		Set:   true,
	}
}

// OptCardPaymentSessionJobCode is optional CardPaymentSessionJobCode.
type OptCardPaymentSessionJobCode struct {
	Value CardPaymentSessionJobCode
	Set   bool
}

// IsSet returns true if OptCardPaymentSessionJobCode was set.
func (o OptCardPaymentSessionJobCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardPaymentSessionJobCode) Reset() {
	var v CardPaymentSessionJobCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardPaymentSessionJobCode) SetTo(v CardPaymentSessionJobCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardPaymentSessionJobCode) Get() (v CardPaymentSessionJobCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardPaymentSessionJobCode) Or(d CardPaymentSessionJobCode) CardPaymentSessionJobCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardPaymentSetting returns new OptCardPaymentSetting with value set to v.
func NewOptCardPaymentSetting(v CardPaymentSetting) OptCardPaymentSetting {
	return OptCardPaymentSetting{
		Value: v,
		Set:   true,
	}
}

// OptCardPaymentSetting is optional CardPaymentSetting.
type OptCardPaymentSetting struct {
	Value CardPaymentSetting
	Set   bool
}

// IsSet returns true if OptCardPaymentSetting was set.
func (o OptCardPaymentSetting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardPaymentSetting) Reset() {
	var v CardPaymentSetting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardPaymentSetting) SetTo(v CardPaymentSetting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardPaymentSetting) Get() (v CardPaymentSetting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardPaymentSetting) Or(d CardPaymentSetting) CardPaymentSetting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardRegistrationSessionCompletionMailSendFlag returns new OptCardRegistrationSessionCompletionMailSendFlag with value set to v.
func NewOptCardRegistrationSessionCompletionMailSendFlag(v CardRegistrationSessionCompletionMailSendFlag) OptCardRegistrationSessionCompletionMailSendFlag {
	return OptCardRegistrationSessionCompletionMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptCardRegistrationSessionCompletionMailSendFlag is optional CardRegistrationSessionCompletionMailSendFlag.
type OptCardRegistrationSessionCompletionMailSendFlag struct {
	Value CardRegistrationSessionCompletionMailSendFlag
	Set   bool
}

// IsSet returns true if OptCardRegistrationSessionCompletionMailSendFlag was set.
func (o OptCardRegistrationSessionCompletionMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardRegistrationSessionCompletionMailSendFlag) Reset() {
	var v CardRegistrationSessionCompletionMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardRegistrationSessionCompletionMailSendFlag) SetTo(v CardRegistrationSessionCompletionMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardRegistrationSessionCompletionMailSendFlag) Get() (v CardRegistrationSessionCompletionMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardRegistrationSessionCompletionMailSendFlag) Or(d CardRegistrationSessionCompletionMailSendFlag) CardRegistrationSessionCompletionMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardRegistrationSessionGuideMailSendFlag returns new OptCardRegistrationSessionGuideMailSendFlag with value set to v.
func NewOptCardRegistrationSessionGuideMailSendFlag(v CardRegistrationSessionGuideMailSendFlag) OptCardRegistrationSessionGuideMailSendFlag {
	return OptCardRegistrationSessionGuideMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptCardRegistrationSessionGuideMailSendFlag is optional CardRegistrationSessionGuideMailSendFlag.
type OptCardRegistrationSessionGuideMailSendFlag struct {
	Value CardRegistrationSessionGuideMailSendFlag
	Set   bool
}

// IsSet returns true if OptCardRegistrationSessionGuideMailSendFlag was set.
func (o OptCardRegistrationSessionGuideMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardRegistrationSessionGuideMailSendFlag) Reset() {
	var v CardRegistrationSessionGuideMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardRegistrationSessionGuideMailSendFlag) SetTo(v CardRegistrationSessionGuideMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardRegistrationSessionGuideMailSendFlag) Get() (v CardRegistrationSessionGuideMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardRegistrationSessionGuideMailSendFlag) Or(d CardRegistrationSessionGuideMailSendFlag) CardRegistrationSessionGuideMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardRegistrationSessionPropertiesExpire returns new OptCardRegistrationSessionPropertiesExpire with value set to v.
func NewOptCardRegistrationSessionPropertiesExpire(v CardRegistrationSessionPropertiesExpire) OptCardRegistrationSessionPropertiesExpire {
	return OptCardRegistrationSessionPropertiesExpire{
		Value: v,
		Set:   true,
	}
}

// OptCardRegistrationSessionPropertiesExpire is optional CardRegistrationSessionPropertiesExpire.
type OptCardRegistrationSessionPropertiesExpire struct {
	Value CardRegistrationSessionPropertiesExpire
	Set   bool
}

// IsSet returns true if OptCardRegistrationSessionPropertiesExpire was set.
func (o OptCardRegistrationSessionPropertiesExpire) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardRegistrationSessionPropertiesExpire) Reset() {
	var v CardRegistrationSessionPropertiesExpire
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardRegistrationSessionPropertiesExpire) SetTo(v CardRegistrationSessionPropertiesExpire) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardRegistrationSessionPropertiesExpire) Get() (v CardRegistrationSessionPropertiesExpire, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardRegistrationSessionPropertiesExpire) Or(d CardRegistrationSessionPropertiesExpire) CardRegistrationSessionPropertiesExpire {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardRegistrationSessionStatus returns new OptCardRegistrationSessionStatus with value set to v.
func NewOptCardRegistrationSessionStatus(v CardRegistrationSessionStatus) OptCardRegistrationSessionStatus {
	return OptCardRegistrationSessionStatus{
		Value: v,
		Set:   true,
	}
}

// OptCardRegistrationSessionStatus is optional CardRegistrationSessionStatus.
type OptCardRegistrationSessionStatus struct {
	Value CardRegistrationSessionStatus
	Set   bool
}

// IsSet returns true if OptCardRegistrationSessionStatus was set.
func (o OptCardRegistrationSessionStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardRegistrationSessionStatus) Reset() {
	var v CardRegistrationSessionStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardRegistrationSessionStatus) SetTo(v CardRegistrationSessionStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardRegistrationSessionStatus) Get() (v CardRegistrationSessionStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardRegistrationSessionStatus) Or(d CardRegistrationSessionStatus) CardRegistrationSessionStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCardType returns new OptCardType with value set to v.
func NewOptCardType(v CardType) OptCardType {
	return OptCardType{
		Value: v,
		Set:   true,
	}
}

// OptCardType is optional CardType.
type OptCardType struct {
	Value CardType
	Set   bool
}

// IsSet returns true if OptCardType was set.
func (o OptCardType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCardType) Reset() {
	var v CardType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCardType) SetTo(v CardType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCardType) Get() (v CardType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCardType) Or(d CardType) CardType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCompletionMailSendFlag returns new OptCompletionMailSendFlag with value set to v.
func NewOptCompletionMailSendFlag(v CompletionMailSendFlag) OptCompletionMailSendFlag {
	return OptCompletionMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptCompletionMailSendFlag is optional CompletionMailSendFlag.
type OptCompletionMailSendFlag struct {
	Value CompletionMailSendFlag
	Set   bool
}

// IsSet returns true if OptCompletionMailSendFlag was set.
func (o OptCompletionMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCompletionMailSendFlag) Reset() {
	var v CompletionMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCompletionMailSendFlag) SetTo(v CompletionMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCompletionMailSendFlag) Get() (v CompletionMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCompletionMailSendFlag) Or(d CompletionMailSendFlag) CompletionMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContentInfoType returns new OptContentInfoType with value set to v.
func NewOptContentInfoType(v ContentInfoType) OptContentInfoType {
	return OptContentInfoType{
		Value: v,
		Set:   true,
	}
}

// OptContentInfoType is optional ContentInfoType.
type OptContentInfoType struct {
	Value ContentInfoType
	Set   bool
}

// IsSet returns true if OptContentInfoType was set.
func (o OptContentInfoType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContentInfoType) Reset() {
	var v ContentInfoType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContentInfoType) SetTo(v ContentInfoType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContentInfoType) Get() (v ContentInfoType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContentInfoType) Or(d ContentInfoType) ContentInfoType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContentInfoV2 returns new OptContentInfoV2 with value set to v.
func NewOptContentInfoV2(v ContentInfoV2) OptContentInfoV2 {
	return OptContentInfoV2{
		Value: v,
		Set:   true,
	}
}

// OptContentInfoV2 is optional ContentInfoV2.
type OptContentInfoV2 struct {
	Value ContentInfoV2
	Set   bool
}

// IsSet returns true if OptContentInfoV2 was set.
func (o OptContentInfoV2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContentInfoV2) Reset() {
	var v ContentInfoV2
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContentInfoV2) SetTo(v ContentInfoV2) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContentInfoV2) Get() (v ContentInfoV2, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContentInfoV2) Or(d ContentInfoV2) ContentInfoV2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractAvailableStatusCode returns new OptContractAvailableStatusCode with value set to v.
func NewOptContractAvailableStatusCode(v ContractAvailableStatusCode) OptContractAvailableStatusCode {
	return OptContractAvailableStatusCode{
		Value: v,
		Set:   true,
	}
}

// OptContractAvailableStatusCode is optional ContractAvailableStatusCode.
type OptContractAvailableStatusCode struct {
	Value ContractAvailableStatusCode
	Set   bool
}

// IsSet returns true if OptContractAvailableStatusCode was set.
func (o OptContractAvailableStatusCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractAvailableStatusCode) Reset() {
	var v ContractAvailableStatusCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractAvailableStatusCode) SetTo(v ContractAvailableStatusCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractAvailableStatusCode) Get() (v ContractAvailableStatusCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractAvailableStatusCode) Or(d ContractAvailableStatusCode) ContractAvailableStatusCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractBankAccountInfo returns new OptContractBankAccountInfo with value set to v.
func NewOptContractBankAccountInfo(v ContractBankAccountInfo) OptContractBankAccountInfo {
	return OptContractBankAccountInfo{
		Value: v,
		Set:   true,
	}
}

// OptContractBankAccountInfo is optional ContractBankAccountInfo.
type OptContractBankAccountInfo struct {
	Value ContractBankAccountInfo
	Set   bool
}

// IsSet returns true if OptContractBankAccountInfo was set.
func (o OptContractBankAccountInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractBankAccountInfo) Reset() {
	var v ContractBankAccountInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractBankAccountInfo) SetTo(v ContractBankAccountInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractBankAccountInfo) Get() (v ContractBankAccountInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractBankAccountInfo) Or(d ContractBankAccountInfo) ContractBankAccountInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractBankAccountInfoAccountKind returns new OptContractBankAccountInfoAccountKind with value set to v.
func NewOptContractBankAccountInfoAccountKind(v ContractBankAccountInfoAccountKind) OptContractBankAccountInfoAccountKind {
	return OptContractBankAccountInfoAccountKind{
		Value: v,
		Set:   true,
	}
}

// OptContractBankAccountInfoAccountKind is optional ContractBankAccountInfoAccountKind.
type OptContractBankAccountInfoAccountKind struct {
	Value ContractBankAccountInfoAccountKind
	Set   bool
}

// IsSet returns true if OptContractBankAccountInfoAccountKind was set.
func (o OptContractBankAccountInfoAccountKind) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractBankAccountInfoAccountKind) Reset() {
	var v ContractBankAccountInfoAccountKind
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractBankAccountInfoAccountKind) SetTo(v ContractBankAccountInfoAccountKind) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractBankAccountInfoAccountKind) Get() (v ContractBankAccountInfoAccountKind, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractBankAccountInfoAccountKind) Or(d ContractBankAccountInfoAccountKind) ContractBankAccountInfoAccountKind {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractContractDetail returns new OptContractContractDetail with value set to v.
func NewOptContractContractDetail(v ContractContractDetail) OptContractContractDetail {
	return OptContractContractDetail{
		Value: v,
		Set:   true,
	}
}

// OptContractContractDetail is optional ContractContractDetail.
type OptContractContractDetail struct {
	Value ContractContractDetail
	Set   bool
}

// IsSet returns true if OptContractContractDetail was set.
func (o OptContractContractDetail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractContractDetail) Reset() {
	var v ContractContractDetail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractContractDetail) SetTo(v ContractContractDetail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractContractDetail) Get() (v ContractContractDetail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractContractDetail) Or(d ContractContractDetail) ContractContractDetail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractContractDetailSiteExisting returns new OptContractContractDetailSiteExisting with value set to v.
func NewOptContractContractDetailSiteExisting(v ContractContractDetailSiteExisting) OptContractContractDetailSiteExisting {
	return OptContractContractDetailSiteExisting{
		Value: v,
		Set:   true,
	}
}

// OptContractContractDetailSiteExisting is optional ContractContractDetailSiteExisting.
type OptContractContractDetailSiteExisting struct {
	Value ContractContractDetailSiteExisting
	Set   bool
}

// IsSet returns true if OptContractContractDetailSiteExisting was set.
func (o OptContractContractDetailSiteExisting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractContractDetailSiteExisting) Reset() {
	var v ContractContractDetailSiteExisting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractContractDetailSiteExisting) SetTo(v ContractContractDetailSiteExisting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractContractDetailSiteExisting) Get() (v ContractContractDetailSiteExisting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractContractDetailSiteExisting) Or(d ContractContractDetailSiteExisting) ContractContractDetailSiteExisting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractInfoV2 returns new OptContractInfoV2 with value set to v.
func NewOptContractInfoV2(v ContractInfoV2) OptContractInfoV2 {
	return OptContractInfoV2{
		Value: v,
		Set:   true,
	}
}

// OptContractInfoV2 is optional ContractInfoV2.
type OptContractInfoV2 struct {
	Value ContractInfoV2
	Set   bool
}

// IsSet returns true if OptContractInfoV2 was set.
func (o OptContractInfoV2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractInfoV2) Reset() {
	var v ContractInfoV2
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractInfoV2) SetTo(v ContractInfoV2) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractInfoV2) Get() (v ContractInfoV2, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractInfoV2) Or(d ContractInfoV2) ContractInfoV2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractInputStatus returns new OptContractInputStatus with value set to v.
func NewOptContractInputStatus(v ContractInputStatus) OptContractInputStatus {
	return OptContractInputStatus{
		Value: v,
		Set:   true,
	}
}

// OptContractInputStatus is optional ContractInputStatus.
type OptContractInputStatus struct {
	Value ContractInputStatus
	Set   bool
}

// IsSet returns true if OptContractInputStatus was set.
func (o OptContractInputStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractInputStatus) Reset() {
	var v ContractInputStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractInputStatus) SetTo(v ContractInputStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractInputStatus) Get() (v ContractInputStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractInputStatus) Or(d ContractInputStatus) ContractInputStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractStatus returns new OptContractStatus with value set to v.
func NewOptContractStatus(v ContractStatus) OptContractStatus {
	return OptContractStatus{
		Value: v,
		Set:   true,
	}
}

// OptContractStatus is optional ContractStatus.
type OptContractStatus struct {
	Value ContractStatus
	Set   bool
}

// IsSet returns true if OptContractStatus was set.
func (o OptContractStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractStatus) Reset() {
	var v ContractStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractStatus) SetTo(v ContractStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractStatus) Get() (v ContractStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractStatus) Or(d ContractStatus) ContractStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCorporateInfoV2 returns new OptCorporateInfoV2 with value set to v.
func NewOptCorporateInfoV2(v CorporateInfoV2) OptCorporateInfoV2 {
	return OptCorporateInfoV2{
		Value: v,
		Set:   true,
	}
}

// OptCorporateInfoV2 is optional CorporateInfoV2.
type OptCorporateInfoV2 struct {
	Value CorporateInfoV2
	Set   bool
}

// IsSet returns true if OptCorporateInfoV2 was set.
func (o OptCorporateInfoV2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCorporateInfoV2) Reset() {
	var v CorporateInfoV2
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCorporateInfoV2) SetTo(v CorporateInfoV2) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCorporateInfoV2) Get() (v CorporateInfoV2, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCorporateInfoV2) Or(d CorporateInfoV2) CorporateInfoV2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCorporateName returns new OptCorporateName with value set to v.
func NewOptCorporateName(v CorporateName) OptCorporateName {
	return OptCorporateName{
		Value: v,
		Set:   true,
	}
}

// OptCorporateName is optional CorporateName.
type OptCorporateName struct {
	Value CorporateName
	Set   bool
}

// IsSet returns true if OptCorporateName was set.
func (o OptCorporateName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCorporateName) Reset() {
	var v CorporateName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCorporateName) SetTo(v CorporateName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCorporateName) Get() (v CorporateName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCorporateName) Or(d CorporateName) CorporateName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCorporateNameKana returns new OptCorporateNameKana with value set to v.
func NewOptCorporateNameKana(v CorporateNameKana) OptCorporateNameKana {
	return OptCorporateNameKana{
		Value: v,
		Set:   true,
	}
}

// OptCorporateNameKana is optional CorporateNameKana.
type OptCorporateNameKana struct {
	Value CorporateNameKana
	Set   bool
}

// IsSet returns true if OptCorporateNameKana was set.
func (o OptCorporateNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCorporateNameKana) Reset() {
	var v CorporateNameKana
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCorporateNameKana) SetTo(v CorporateNameKana) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCorporateNameKana) Get() (v CorporateNameKana, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCorporateNameKana) Or(d CorporateNameKana) CorporateNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreated returns new OptCreated with value set to v.
func NewOptCreated(v Created) OptCreated {
	return OptCreated{
		Value: v,
		Set:   true,
	}
}

// OptCreated is optional Created.
type OptCreated struct {
	Value Created
	Set   bool
}

// IsSet returns true if OptCreated was set.
func (o OptCreated) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreated) Reset() {
	var v Created
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreated) SetTo(v Created) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreated) Get() (v Created, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreated) Or(d Created) Created {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCurrencyCode returns new OptCurrencyCode with value set to v.
func NewOptCurrencyCode(v CurrencyCode) OptCurrencyCode {
	return OptCurrencyCode{
		Value: v,
		Set:   true,
	}
}

// OptCurrencyCode is optional CurrencyCode.
type OptCurrencyCode struct {
	Value CurrencyCode
	Set   bool
}

// IsSet returns true if OptCurrencyCode was set.
func (o OptCurrencyCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCurrencyCode) Reset() {
	var v CurrencyCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCurrencyCode) SetTo(v CurrencyCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCurrencyCode) Get() (v CurrencyCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCurrencyCode) Or(d CurrencyCode) CurrencyCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDefaultFlag returns new OptDefaultFlag with value set to v.
func NewOptDefaultFlag(v DefaultFlag) OptDefaultFlag {
	return OptDefaultFlag{
		Value: v,
		Set:   true,
	}
}

// OptDefaultFlag is optional DefaultFlag.
type OptDefaultFlag struct {
	Value DefaultFlag
	Set   bool
}

// IsSet returns true if OptDefaultFlag was set.
func (o OptDefaultFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDefaultFlag) Reset() {
	var v DefaultFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDefaultFlag) SetTo(v DefaultFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDefaultFlag) Get() (v DefaultFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDefaultFlag) Or(d DefaultFlag) DefaultFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDeleteFlag returns new OptDeleteFlag with value set to v.
func NewOptDeleteFlag(v DeleteFlag) OptDeleteFlag {
	return OptDeleteFlag{
		Value: v,
		Set:   true,
	}
}

// OptDeleteFlag is optional DeleteFlag.
type OptDeleteFlag struct {
	Value DeleteFlag
	Set   bool
}

// IsSet returns true if OptDeleteFlag was set.
func (o OptDeleteFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeleteFlag) Reset() {
	var v DeleteFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeleteFlag) SetTo(v DeleteFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeleteFlag) Get() (v DeleteFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDeleteFlag) Or(d DeleteFlag) DeleteFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDepositCycleInfoV2 returns new OptDepositCycleInfoV2 with value set to v.
func NewOptDepositCycleInfoV2(v DepositCycleInfoV2) OptDepositCycleInfoV2 {
	return OptDepositCycleInfoV2{
		Value: v,
		Set:   true,
	}
}

// OptDepositCycleInfoV2 is optional DepositCycleInfoV2.
type OptDepositCycleInfoV2 struct {
	Value DepositCycleInfoV2
	Set   bool
}

// IsSet returns true if OptDepositCycleInfoV2 was set.
func (o OptDepositCycleInfoV2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDepositCycleInfoV2) Reset() {
	var v DepositCycleInfoV2
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDepositCycleInfoV2) SetTo(v DepositCycleInfoV2) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDepositCycleInfoV2) Get() (v DepositCycleInfoV2, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDepositCycleInfoV2) Or(d DepositCycleInfoV2) DepositCycleInfoV2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDepositCycleMasterId returns new OptDepositCycleMasterId with value set to v.
func NewOptDepositCycleMasterId(v DepositCycleMasterId) OptDepositCycleMasterId {
	return OptDepositCycleMasterId{
		Value: v,
		Set:   true,
	}
}

// OptDepositCycleMasterId is optional DepositCycleMasterId.
type OptDepositCycleMasterId struct {
	Value DepositCycleMasterId
	Set   bool
}

// IsSet returns true if OptDepositCycleMasterId was set.
func (o OptDepositCycleMasterId) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDepositCycleMasterId) Reset() {
	var v DepositCycleMasterId
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDepositCycleMasterId) SetTo(v DepositCycleMasterId) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDepositCycleMasterId) Get() (v DepositCycleMasterId, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDepositCycleMasterId) Or(d DepositCycleMasterId) DepositCycleMasterId {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDepositStatusCode returns new OptDepositStatusCode with value set to v.
func NewOptDepositStatusCode(v DepositStatusCode) OptDepositStatusCode {
	return OptDepositStatusCode{
		Value: v,
		Set:   true,
	}
}

// OptDepositStatusCode is optional DepositStatusCode.
type OptDepositStatusCode struct {
	Value DepositStatusCode
	Set   bool
}

// IsSet returns true if OptDepositStatusCode was set.
func (o OptDepositStatusCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDepositStatusCode) Reset() {
	var v DepositStatusCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDepositStatusCode) SetTo(v DepositStatusCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDepositStatusCode) Get() (v DepositStatusCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDepositStatusCode) Or(d DepositStatusCode) DepositStatusCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDepositTargetBankAccountInfo returns new OptDepositTargetBankAccountInfo with value set to v.
func NewOptDepositTargetBankAccountInfo(v DepositTargetBankAccountInfo) OptDepositTargetBankAccountInfo {
	return OptDepositTargetBankAccountInfo{
		Value: v,
		Set:   true,
	}
}

// OptDepositTargetBankAccountInfo is optional DepositTargetBankAccountInfo.
type OptDepositTargetBankAccountInfo struct {
	Value DepositTargetBankAccountInfo
	Set   bool
}

// IsSet returns true if OptDepositTargetBankAccountInfo was set.
func (o OptDepositTargetBankAccountInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDepositTargetBankAccountInfo) Reset() {
	var v DepositTargetBankAccountInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDepositTargetBankAccountInfo) SetTo(v DepositTargetBankAccountInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDepositTargetBankAccountInfo) Get() (v DepositTargetBankAccountInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDepositTargetBankAccountInfo) Or(d DepositTargetBankAccountInfo) DepositTargetBankAccountInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDepositTargetBankAccountInfoAccountKind returns new OptDepositTargetBankAccountInfoAccountKind with value set to v.
func NewOptDepositTargetBankAccountInfoAccountKind(v DepositTargetBankAccountInfoAccountKind) OptDepositTargetBankAccountInfoAccountKind {
	return OptDepositTargetBankAccountInfoAccountKind{
		Value: v,
		Set:   true,
	}
}

// OptDepositTargetBankAccountInfoAccountKind is optional DepositTargetBankAccountInfoAccountKind.
type OptDepositTargetBankAccountInfoAccountKind struct {
	Value DepositTargetBankAccountInfoAccountKind
	Set   bool
}

// IsSet returns true if OptDepositTargetBankAccountInfoAccountKind was set.
func (o OptDepositTargetBankAccountInfoAccountKind) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDepositTargetBankAccountInfoAccountKind) Reset() {
	var v DepositTargetBankAccountInfoAccountKind
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDepositTargetBankAccountInfoAccountKind) SetTo(v DepositTargetBankAccountInfoAccountKind) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDepositTargetBankAccountInfoAccountKind) Get() (v DepositTargetBankAccountInfoAccountKind, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDepositTargetBankAccountInfoAccountKind) Or(d DepositTargetBankAccountInfoAccountKind) DepositTargetBankAccountInfoAccountKind {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDeviceName returns new OptDeviceName with value set to v.
func NewOptDeviceName(v DeviceName) OptDeviceName {
	return OptDeviceName{
		Value: v,
		Set:   true,
	}
}

// OptDeviceName is optional DeviceName.
type OptDeviceName struct {
	Value DeviceName
	Set   bool
}

// IsSet returns true if OptDeviceName was set.
func (o OptDeviceName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeviceName) Reset() {
	var v DeviceName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeviceName) SetTo(v DeviceName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeviceName) Get() (v DeviceName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDeviceName) Or(d DeviceName) DeviceName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDirectDebitResultCode returns new OptDirectDebitResultCode with value set to v.
func NewOptDirectDebitResultCode(v DirectDebitResultCode) OptDirectDebitResultCode {
	return OptDirectDebitResultCode{
		Value: v,
		Set:   true,
	}
}

// OptDirectDebitResultCode is optional DirectDebitResultCode.
type OptDirectDebitResultCode struct {
	Value DirectDebitResultCode
	Set   bool
}

// IsSet returns true if OptDirectDebitResultCode was set.
func (o OptDirectDebitResultCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDirectDebitResultCode) Reset() {
	var v DirectDebitResultCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDirectDebitResultCode) SetTo(v DirectDebitResultCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDirectDebitResultCode) Get() (v DirectDebitResultCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDirectDebitResultCode) Or(d DirectDebitResultCode) DirectDebitResultCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEnableImmediateUse returns new OptEnableImmediateUse with value set to v.
func NewOptEnableImmediateUse(v EnableImmediateUse) OptEnableImmediateUse {
	return OptEnableImmediateUse{
		Value: v,
		Set:   true,
	}
}

// OptEnableImmediateUse is optional EnableImmediateUse.
type OptEnableImmediateUse struct {
	Value EnableImmediateUse
	Set   bool
}

// IsSet returns true if OptEnableImmediateUse was set.
func (o OptEnableImmediateUse) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEnableImmediateUse) Reset() {
	var v EnableImmediateUse
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnableImmediateUse) SetTo(v EnableImmediateUse) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnableImmediateUse) Get() (v EnableImmediateUse, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEnableImmediateUse) Or(d EnableImmediateUse) EnableImmediateUse {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEndMonthFlag returns new OptEndMonthFlag with value set to v.
func NewOptEndMonthFlag(v EndMonthFlag) OptEndMonthFlag {
	return OptEndMonthFlag{
		Value: v,
		Set:   true,
	}
}

// OptEndMonthFlag is optional EndMonthFlag.
type OptEndMonthFlag struct {
	Value EndMonthFlag
	Set   bool
}

// IsSet returns true if OptEndMonthFlag was set.
func (o OptEndMonthFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEndMonthFlag) Reset() {
	var v EndMonthFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEndMonthFlag) SetTo(v EndMonthFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEndMonthFlag) Get() (v EndMonthFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEndMonthFlag) Or(d EndMonthFlag) EndMonthFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptErrorCode returns new OptErrorCode with value set to v.
func NewOptErrorCode(v ErrorCode) OptErrorCode {
	return OptErrorCode{
		Value: v,
		Set:   true,
	}
}

// OptErrorCode is optional ErrorCode.
type OptErrorCode struct {
	Value ErrorCode
	Set   bool
}

// IsSet returns true if OptErrorCode was set.
func (o OptErrorCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptErrorCode) Reset() {
	var v ErrorCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptErrorCode) SetTo(v ErrorCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptErrorCode) Get() (v ErrorCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptErrorCode) Or(d ErrorCode) ErrorCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExaminationFileType returns new OptExaminationFileType with value set to v.
func NewOptExaminationFileType(v ExaminationFileType) OptExaminationFileType {
	return OptExaminationFileType{
		Value: v,
		Set:   true,
	}
}

// OptExaminationFileType is optional ExaminationFileType.
type OptExaminationFileType struct {
	Value ExaminationFileType
	Set   bool
}

// IsSet returns true if OptExaminationFileType was set.
func (o OptExaminationFileType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExaminationFileType) Reset() {
	var v ExaminationFileType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExaminationFileType) SetTo(v ExaminationFileType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExaminationFileType) Get() (v ExaminationFileType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExaminationFileType) Or(d ExaminationFileType) ExaminationFileType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExaminationInfoContractDetail returns new OptExaminationInfoContractDetail with value set to v.
func NewOptExaminationInfoContractDetail(v ExaminationInfoContractDetail) OptExaminationInfoContractDetail {
	return OptExaminationInfoContractDetail{
		Value: v,
		Set:   true,
	}
}

// OptExaminationInfoContractDetail is optional ExaminationInfoContractDetail.
type OptExaminationInfoContractDetail struct {
	Value ExaminationInfoContractDetail
	Set   bool
}

// IsSet returns true if OptExaminationInfoContractDetail was set.
func (o OptExaminationInfoContractDetail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExaminationInfoContractDetail) Reset() {
	var v ExaminationInfoContractDetail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExaminationInfoContractDetail) SetTo(v ExaminationInfoContractDetail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExaminationInfoContractDetail) Get() (v ExaminationInfoContractDetail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExaminationInfoContractDetail) Or(d ExaminationInfoContractDetail) ExaminationInfoContractDetail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExaminationInfoContractDetailSiteExisting returns new OptExaminationInfoContractDetailSiteExisting with value set to v.
func NewOptExaminationInfoContractDetailSiteExisting(v ExaminationInfoContractDetailSiteExisting) OptExaminationInfoContractDetailSiteExisting {
	return OptExaminationInfoContractDetailSiteExisting{
		Value: v,
		Set:   true,
	}
}

// OptExaminationInfoContractDetailSiteExisting is optional ExaminationInfoContractDetailSiteExisting.
type OptExaminationInfoContractDetailSiteExisting struct {
	Value ExaminationInfoContractDetailSiteExisting
	Set   bool
}

// IsSet returns true if OptExaminationInfoContractDetailSiteExisting was set.
func (o OptExaminationInfoContractDetailSiteExisting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExaminationInfoContractDetailSiteExisting) Reset() {
	var v ExaminationInfoContractDetailSiteExisting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExaminationInfoContractDetailSiteExisting) SetTo(v ExaminationInfoContractDetailSiteExisting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExaminationInfoContractDetailSiteExisting) Get() (v ExaminationInfoContractDetailSiteExisting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExaminationInfoContractDetailSiteExisting) Or(d ExaminationInfoContractDetailSiteExisting) ExaminationInfoContractDetailSiteExisting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExaminationInfoContractInputStatus returns new OptExaminationInfoContractInputStatus with value set to v.
func NewOptExaminationInfoContractInputStatus(v ExaminationInfoContractInputStatus) OptExaminationInfoContractInputStatus {
	return OptExaminationInfoContractInputStatus{
		Value: v,
		Set:   true,
	}
}

// OptExaminationInfoContractInputStatus is optional ExaminationInfoContractInputStatus.
type OptExaminationInfoContractInputStatus struct {
	Value ExaminationInfoContractInputStatus
	Set   bool
}

// IsSet returns true if OptExaminationInfoContractInputStatus was set.
func (o OptExaminationInfoContractInputStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExaminationInfoContractInputStatus) Reset() {
	var v ExaminationInfoContractInputStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExaminationInfoContractInputStatus) SetTo(v ExaminationInfoContractInputStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExaminationInfoContractInputStatus) Get() (v ExaminationInfoContractInputStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExaminationInfoContractInputStatus) Or(d ExaminationInfoContractInputStatus) ExaminationInfoContractInputStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExaminationInfoUpdatingRequestContractDetail returns new OptExaminationInfoUpdatingRequestContractDetail with value set to v.
func NewOptExaminationInfoUpdatingRequestContractDetail(v ExaminationInfoUpdatingRequestContractDetail) OptExaminationInfoUpdatingRequestContractDetail {
	return OptExaminationInfoUpdatingRequestContractDetail{
		Value: v,
		Set:   true,
	}
}

// OptExaminationInfoUpdatingRequestContractDetail is optional ExaminationInfoUpdatingRequestContractDetail.
type OptExaminationInfoUpdatingRequestContractDetail struct {
	Value ExaminationInfoUpdatingRequestContractDetail
	Set   bool
}

// IsSet returns true if OptExaminationInfoUpdatingRequestContractDetail was set.
func (o OptExaminationInfoUpdatingRequestContractDetail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExaminationInfoUpdatingRequestContractDetail) Reset() {
	var v ExaminationInfoUpdatingRequestContractDetail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExaminationInfoUpdatingRequestContractDetail) SetTo(v ExaminationInfoUpdatingRequestContractDetail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExaminationInfoUpdatingRequestContractDetail) Get() (v ExaminationInfoUpdatingRequestContractDetail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExaminationInfoUpdatingRequestContractDetail) Or(d ExaminationInfoUpdatingRequestContractDetail) ExaminationInfoUpdatingRequestContractDetail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExaminationInfoUpdatingRequestContractDetailSiteExisting returns new OptExaminationInfoUpdatingRequestContractDetailSiteExisting with value set to v.
func NewOptExaminationInfoUpdatingRequestContractDetailSiteExisting(v ExaminationInfoUpdatingRequestContractDetailSiteExisting) OptExaminationInfoUpdatingRequestContractDetailSiteExisting {
	return OptExaminationInfoUpdatingRequestContractDetailSiteExisting{
		Value: v,
		Set:   true,
	}
}

// OptExaminationInfoUpdatingRequestContractDetailSiteExisting is optional ExaminationInfoUpdatingRequestContractDetailSiteExisting.
type OptExaminationInfoUpdatingRequestContractDetailSiteExisting struct {
	Value ExaminationInfoUpdatingRequestContractDetailSiteExisting
	Set   bool
}

// IsSet returns true if OptExaminationInfoUpdatingRequestContractDetailSiteExisting was set.
func (o OptExaminationInfoUpdatingRequestContractDetailSiteExisting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExaminationInfoUpdatingRequestContractDetailSiteExisting) Reset() {
	var v ExaminationInfoUpdatingRequestContractDetailSiteExisting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExaminationInfoUpdatingRequestContractDetailSiteExisting) SetTo(v ExaminationInfoUpdatingRequestContractDetailSiteExisting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExaminationInfoUpdatingRequestContractDetailSiteExisting) Get() (v ExaminationInfoUpdatingRequestContractDetailSiteExisting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExaminationInfoUpdatingRequestContractDetailSiteExisting) Or(d ExaminationInfoUpdatingRequestContractDetailSiteExisting) ExaminationInfoUpdatingRequestContractDetailSiteExisting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExaminationMasterId returns new OptExaminationMasterId with value set to v.
func NewOptExaminationMasterId(v ExaminationMasterId) OptExaminationMasterId {
	return OptExaminationMasterId{
		Value: v,
		Set:   true,
	}
}

// OptExaminationMasterId is optional ExaminationMasterId.
type OptExaminationMasterId struct {
	Value ExaminationMasterId
	Set   bool
}

// IsSet returns true if OptExaminationMasterId was set.
func (o OptExaminationMasterId) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExaminationMasterId) Reset() {
	var v ExaminationMasterId
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExaminationMasterId) SetTo(v ExaminationMasterId) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExaminationMasterId) Get() (v ExaminationMasterId, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExaminationMasterId) Or(d ExaminationMasterId) ExaminationMasterId {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExaminationStatus returns new OptExaminationStatus with value set to v.
func NewOptExaminationStatus(v ExaminationStatus) OptExaminationStatus {
	return OptExaminationStatus{
		Value: v,
		Set:   true,
	}
}

// OptExaminationStatus is optional ExaminationStatus.
type OptExaminationStatus struct {
	Value ExaminationStatus
	Set   bool
}

// IsSet returns true if OptExaminationStatus was set.
func (o OptExaminationStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExaminationStatus) Reset() {
	var v ExaminationStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExaminationStatus) SetTo(v ExaminationStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExaminationStatus) Get() (v ExaminationStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExaminationStatus) Or(d ExaminationStatus) ExaminationStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFile returns new OptFile with value set to v.
func NewOptFile(v File) OptFile {
	return OptFile{
		Value: v,
		Set:   true,
	}
}

// OptFile is optional File.
type OptFile struct {
	Value File
	Set   bool
}

// IsSet returns true if OptFile was set.
func (o OptFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFile) Reset() {
	var v File
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFile) SetTo(v File) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFile) Get() (v File, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFile) Or(d File) File {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFileName returns new OptFileName with value set to v.
func NewOptFileName(v FileName) OptFileName {
	return OptFileName{
		Value: v,
		Set:   true,
	}
}

// OptFileName is optional FileName.
type OptFileName struct {
	Value FileName
	Set   bool
}

// IsSet returns true if OptFileName was set.
func (o OptFileName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileName) Reset() {
	var v FileName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileName) SetTo(v FileName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileName) Get() (v FileName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFileName) Or(d FileName) FileName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFincodeEvent returns new OptFincodeEvent with value set to v.
func NewOptFincodeEvent(v FincodeEvent) OptFincodeEvent {
	return OptFincodeEvent{
		Value: v,
		Set:   true,
	}
}

// OptFincodeEvent is optional FincodeEvent.
type OptFincodeEvent struct {
	Value FincodeEvent
	Set   bool
}

// IsSet returns true if OptFincodeEvent was set.
func (o OptFincodeEvent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFincodeEvent) Reset() {
	var v FincodeEvent
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFincodeEvent) SetTo(v FincodeEvent) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFincodeEvent) Get() (v FincodeEvent, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFincodeEvent) Or(d FincodeEvent) FincodeEvent {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGuideMailSendFlag returns new OptGuideMailSendFlag with value set to v.
func NewOptGuideMailSendFlag(v GuideMailSendFlag) OptGuideMailSendFlag {
	return OptGuideMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptGuideMailSendFlag is optional GuideMailSendFlag.
type OptGuideMailSendFlag struct {
	Value GuideMailSendFlag
	Set   bool
}

// IsSet returns true if OptGuideMailSendFlag was set.
func (o OptGuideMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGuideMailSendFlag) Reset() {
	var v GuideMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGuideMailSendFlag) SetTo(v GuideMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGuideMailSendFlag) Get() (v GuideMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGuideMailSendFlag) Or(d GuideMailSendFlag) GuideMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptID returns new OptID with value set to v.
func NewOptID(v ID) OptID {
	return OptID{
		Value: v,
		Set:   true,
	}
}

// OptID is optional ID.
type OptID struct {
	Value ID
	Set   bool
}

// IsSet returns true if OptID was set.
func (o OptID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptID) Reset() {
	var v ID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptID) SetTo(v ID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptID) Get() (v ID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptID) Or(d ID) ID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInitialAmount returns new OptInitialAmount with value set to v.
func NewOptInitialAmount(v InitialAmount) OptInitialAmount {
	return OptInitialAmount{
		Value: v,
		Set:   true,
	}
}

// OptInitialAmount is optional InitialAmount.
type OptInitialAmount struct {
	Value InitialAmount
	Set   bool
}

// IsSet returns true if OptInitialAmount was set.
func (o OptInitialAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInitialAmount) Reset() {
	var v InitialAmount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInitialAmount) SetTo(v InitialAmount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInitialAmount) Get() (v InitialAmount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInitialAmount) Or(d InitialAmount) InitialAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInitialTax returns new OptInitialTax with value set to v.
func NewOptInitialTax(v InitialTax) OptInitialTax {
	return OptInitialTax{
		Value: v,
		Set:   true,
	}
}

// OptInitialTax is optional InitialTax.
type OptInitialTax struct {
	Value InitialTax
	Set   bool
}

// IsSet returns true if OptInitialTax was set.
func (o OptInitialTax) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInitialTax) Reset() {
	var v InitialTax
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInitialTax) SetTo(v InitialTax) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInitialTax) Get() (v InitialTax, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInitialTax) Or(d InitialTax) InitialTax {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIntervalCount returns new OptIntervalCount with value set to v.
func NewOptIntervalCount(v IntervalCount) OptIntervalCount {
	return OptIntervalCount{
		Value: v,
		Set:   true,
	}
}

// OptIntervalCount is optional IntervalCount.
type OptIntervalCount struct {
	Value IntervalCount
	Set   bool
}

// IsSet returns true if OptIntervalCount was set.
func (o OptIntervalCount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIntervalCount) Reset() {
	var v IntervalCount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIntervalCount) SetTo(v IntervalCount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIntervalCount) Get() (v IntervalCount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIntervalCount) Or(d IntervalCount) IntervalCount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptIntervalPattern returns new OptIntervalPattern with value set to v.
func NewOptIntervalPattern(v IntervalPattern) OptIntervalPattern {
	return OptIntervalPattern{
		Value: v,
		Set:   true,
	}
}

// OptIntervalPattern is optional IntervalPattern.
type OptIntervalPattern struct {
	Value IntervalPattern
	Set   bool
}

// IsSet returns true if OptIntervalPattern was set.
func (o OptIntervalPattern) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIntervalPattern) Reset() {
	var v IntervalPattern
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIntervalPattern) SetTo(v IntervalPattern) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIntervalPattern) Get() (v IntervalPattern, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptIntervalPattern) Or(d IntervalPattern) IntervalPattern {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptKonbiniCode returns new OptKonbiniCode with value set to v.
func NewOptKonbiniCode(v KonbiniCode) OptKonbiniCode {
	return OptKonbiniCode{
		Value: v,
		Set:   true,
	}
}

// OptKonbiniCode is optional KonbiniCode.
type OptKonbiniCode struct {
	Value KonbiniCode
	Set   bool
}

// IsSet returns true if OptKonbiniCode was set.
func (o OptKonbiniCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptKonbiniCode) Reset() {
	var v KonbiniCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptKonbiniCode) SetTo(v KonbiniCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptKonbiniCode) Get() (v KonbiniCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptKonbiniCode) Or(d KonbiniCode) KonbiniCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptKonbiniPaymentProcessResult returns new OptKonbiniPaymentProcessResult with value set to v.
func NewOptKonbiniPaymentProcessResult(v KonbiniPaymentProcessResult) OptKonbiniPaymentProcessResult {
	return OptKonbiniPaymentProcessResult{
		Value: v,
		Set:   true,
	}
}

// OptKonbiniPaymentProcessResult is optional KonbiniPaymentProcessResult.
type OptKonbiniPaymentProcessResult struct {
	Value KonbiniPaymentProcessResult
	Set   bool
}

// IsSet returns true if OptKonbiniPaymentProcessResult was set.
func (o OptKonbiniPaymentProcessResult) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptKonbiniPaymentProcessResult) Reset() {
	var v KonbiniPaymentProcessResult
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptKonbiniPaymentProcessResult) SetTo(v KonbiniPaymentProcessResult) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptKonbiniPaymentProcessResult) Get() (v KonbiniPaymentProcessResult, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptKonbiniPaymentProcessResult) Or(d KonbiniPaymentProcessResult) KonbiniPaymentProcessResult {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNextChargeDate returns new OptNextChargeDate with value set to v.
func NewOptNextChargeDate(v NextChargeDate) OptNextChargeDate {
	return OptNextChargeDate{
		Value: v,
		Set:   true,
	}
}

// OptNextChargeDate is optional NextChargeDate.
type OptNextChargeDate struct {
	Value NextChargeDate
	Set   bool
}

// IsSet returns true if OptNextChargeDate was set.
func (o OptNextChargeDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNextChargeDate) Reset() {
	var v NextChargeDate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNextChargeDate) SetTo(v NextChargeDate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNextChargeDate) Get() (v NextChargeDate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNextChargeDate) Or(d NextChargeDate) NextChargeDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAPIKeyDisplayFlag returns new OptNilAPIKeyDisplayFlag with value set to v.
func NewOptNilAPIKeyDisplayFlag(v APIKeyDisplayFlag) OptNilAPIKeyDisplayFlag {
	return OptNilAPIKeyDisplayFlag{
		Value: v,
		Set:   true,
	}
}

// OptNilAPIKeyDisplayFlag is optional nullable APIKeyDisplayFlag.
type OptNilAPIKeyDisplayFlag struct {
	Value APIKeyDisplayFlag
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAPIKeyDisplayFlag was set.
func (o OptNilAPIKeyDisplayFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAPIKeyDisplayFlag) Reset() {
	var v APIKeyDisplayFlag
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAPIKeyDisplayFlag) SetTo(v APIKeyDisplayFlag) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAPIKeyDisplayFlag) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAPIKeyDisplayFlag) SetToNull() {
	o.Set = true
	o.Null = true
	var v APIKeyDisplayFlag
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAPIKeyDisplayFlag) Get() (v APIKeyDisplayFlag, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAPIKeyDisplayFlag) Or(d APIKeyDisplayFlag) APIKeyDisplayFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAPIVersion returns new OptNilAPIVersion with value set to v.
func NewOptNilAPIVersion(v APIVersion) OptNilAPIVersion {
	return OptNilAPIVersion{
		Value: v,
		Set:   true,
	}
}

// OptNilAPIVersion is optional nullable APIVersion.
type OptNilAPIVersion struct {
	Value APIVersion
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAPIVersion was set.
func (o OptNilAPIVersion) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAPIVersion) Reset() {
	var v APIVersion
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAPIVersion) SetTo(v APIVersion) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAPIVersion) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAPIVersion) SetToNull() {
	o.Set = true
	o.Null = true
	var v APIVersion
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAPIVersion) Get() (v APIVersion, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAPIVersion) Or(d APIVersion) APIVersion {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAboutExpiration returns new OptNilAboutExpiration with value set to v.
func NewOptNilAboutExpiration(v AboutExpiration) OptNilAboutExpiration {
	return OptNilAboutExpiration{
		Value: v,
		Set:   true,
	}
}

// OptNilAboutExpiration is optional nullable AboutExpiration.
type OptNilAboutExpiration struct {
	Value AboutExpiration
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAboutExpiration was set.
func (o OptNilAboutExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAboutExpiration) Reset() {
	var v AboutExpiration
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAboutExpiration) SetTo(v AboutExpiration) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAboutExpiration) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAboutExpiration) SetToNull() {
	o.Set = true
	o.Null = true
	var v AboutExpiration
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAboutExpiration) Get() (v AboutExpiration, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAboutExpiration) Or(d AboutExpiration) AboutExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccountDetailApplyType returns new OptNilAccountDetailApplyType with value set to v.
func NewOptNilAccountDetailApplyType(v AccountDetailApplyType) OptNilAccountDetailApplyType {
	return OptNilAccountDetailApplyType{
		Value: v,
		Set:   true,
	}
}

// OptNilAccountDetailApplyType is optional nullable AccountDetailApplyType.
type OptNilAccountDetailApplyType struct {
	Value AccountDetailApplyType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccountDetailApplyType was set.
func (o OptNilAccountDetailApplyType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccountDetailApplyType) Reset() {
	var v AccountDetailApplyType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccountDetailApplyType) SetTo(v AccountDetailApplyType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAccountDetailApplyType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAccountDetailApplyType) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccountDetailApplyType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccountDetailApplyType) Get() (v AccountDetailApplyType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccountDetailApplyType) Or(d AccountDetailApplyType) AccountDetailApplyType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccountDetailApplyTypeForPlatformFee returns new OptNilAccountDetailApplyTypeForPlatformFee with value set to v.
func NewOptNilAccountDetailApplyTypeForPlatformFee(v AccountDetailApplyTypeForPlatformFee) OptNilAccountDetailApplyTypeForPlatformFee {
	return OptNilAccountDetailApplyTypeForPlatformFee{
		Value: v,
		Set:   true,
	}
}

// OptNilAccountDetailApplyTypeForPlatformFee is optional nullable AccountDetailApplyTypeForPlatformFee.
type OptNilAccountDetailApplyTypeForPlatformFee struct {
	Value AccountDetailApplyTypeForPlatformFee
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccountDetailApplyTypeForPlatformFee was set.
func (o OptNilAccountDetailApplyTypeForPlatformFee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccountDetailApplyTypeForPlatformFee) Reset() {
	var v AccountDetailApplyTypeForPlatformFee
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccountDetailApplyTypeForPlatformFee) SetTo(v AccountDetailApplyTypeForPlatformFee) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAccountDetailApplyTypeForPlatformFee) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAccountDetailApplyTypeForPlatformFee) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccountDetailApplyTypeForPlatformFee
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccountDetailApplyTypeForPlatformFee) Get() (v AccountDetailApplyTypeForPlatformFee, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccountDetailApplyTypeForPlatformFee) Or(d AccountDetailApplyTypeForPlatformFee) AccountDetailApplyTypeForPlatformFee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccountName returns new OptNilAccountName with value set to v.
func NewOptNilAccountName(v AccountName) OptNilAccountName {
	return OptNilAccountName{
		Value: v,
		Set:   true,
	}
}

// OptNilAccountName is optional nullable AccountName.
type OptNilAccountName struct {
	Value AccountName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccountName was set.
func (o OptNilAccountName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccountName) Reset() {
	var v AccountName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccountName) SetTo(v AccountName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAccountName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAccountName) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccountName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccountName) Get() (v AccountName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccountName) Or(d AccountName) AccountName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccountNumber returns new OptNilAccountNumber with value set to v.
func NewOptNilAccountNumber(v AccountNumber) OptNilAccountNumber {
	return OptNilAccountNumber{
		Value: v,
		Set:   true,
	}
}

// OptNilAccountNumber is optional nullable AccountNumber.
type OptNilAccountNumber struct {
	Value AccountNumber
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccountNumber was set.
func (o OptNilAccountNumber) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccountNumber) Reset() {
	var v AccountNumber
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccountNumber) SetTo(v AccountNumber) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAccountNumber) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAccountNumber) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccountNumber
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccountNumber) Get() (v AccountNumber, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccountNumber) Or(d AccountNumber) AccountNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccountPropertiesTotalAmount returns new OptNilAccountPropertiesTotalAmount with value set to v.
func NewOptNilAccountPropertiesTotalAmount(v AccountPropertiesTotalAmount) OptNilAccountPropertiesTotalAmount {
	return OptNilAccountPropertiesTotalAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilAccountPropertiesTotalAmount is optional nullable AccountPropertiesTotalAmount.
type OptNilAccountPropertiesTotalAmount struct {
	Value AccountPropertiesTotalAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccountPropertiesTotalAmount was set.
func (o OptNilAccountPropertiesTotalAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccountPropertiesTotalAmount) Reset() {
	var v AccountPropertiesTotalAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccountPropertiesTotalAmount) SetTo(v AccountPropertiesTotalAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAccountPropertiesTotalAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAccountPropertiesTotalAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccountPropertiesTotalAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccountPropertiesTotalAmount) Get() (v AccountPropertiesTotalAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccountPropertiesTotalAmount) Or(d AccountPropertiesTotalAmount) AccountPropertiesTotalAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccountType returns new OptNilAccountType with value set to v.
func NewOptNilAccountType(v AccountType) OptNilAccountType {
	return OptNilAccountType{
		Value: v,
		Set:   true,
	}
}

// OptNilAccountType is optional nullable AccountType.
type OptNilAccountType struct {
	Value AccountType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccountType was set.
func (o OptNilAccountType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccountType) Reset() {
	var v AccountType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccountType) SetTo(v AccountType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAccountType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAccountType) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccountType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccountType) Get() (v AccountType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccountType) Or(d AccountType) AccountType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAddrCity returns new OptNilAddrCity with value set to v.
func NewOptNilAddrCity(v AddrCity) OptNilAddrCity {
	return OptNilAddrCity{
		Value: v,
		Set:   true,
	}
}

// OptNilAddrCity is optional nullable AddrCity.
type OptNilAddrCity struct {
	Value AddrCity
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAddrCity was set.
func (o OptNilAddrCity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAddrCity) Reset() {
	var v AddrCity
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAddrCity) SetTo(v AddrCity) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAddrCity) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAddrCity) SetToNull() {
	o.Set = true
	o.Null = true
	var v AddrCity
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAddrCity) Get() (v AddrCity, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAddrCity) Or(d AddrCity) AddrCity {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAddrCountry returns new OptNilAddrCountry with value set to v.
func NewOptNilAddrCountry(v AddrCountry) OptNilAddrCountry {
	return OptNilAddrCountry{
		Value: v,
		Set:   true,
	}
}

// OptNilAddrCountry is optional nullable AddrCountry.
type OptNilAddrCountry struct {
	Value AddrCountry
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAddrCountry was set.
func (o OptNilAddrCountry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAddrCountry) Reset() {
	var v AddrCountry
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAddrCountry) SetTo(v AddrCountry) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAddrCountry) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAddrCountry) SetToNull() {
	o.Set = true
	o.Null = true
	var v AddrCountry
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAddrCountry) Get() (v AddrCountry, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAddrCountry) Or(d AddrCountry) AddrCountry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAddrLine1 returns new OptNilAddrLine1 with value set to v.
func NewOptNilAddrLine1(v AddrLine1) OptNilAddrLine1 {
	return OptNilAddrLine1{
		Value: v,
		Set:   true,
	}
}

// OptNilAddrLine1 is optional nullable AddrLine1.
type OptNilAddrLine1 struct {
	Value AddrLine1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAddrLine1 was set.
func (o OptNilAddrLine1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAddrLine1) Reset() {
	var v AddrLine1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAddrLine1) SetTo(v AddrLine1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAddrLine1) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAddrLine1) SetToNull() {
	o.Set = true
	o.Null = true
	var v AddrLine1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAddrLine1) Get() (v AddrLine1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAddrLine1) Or(d AddrLine1) AddrLine1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAddrLine2 returns new OptNilAddrLine2 with value set to v.
func NewOptNilAddrLine2(v AddrLine2) OptNilAddrLine2 {
	return OptNilAddrLine2{
		Value: v,
		Set:   true,
	}
}

// OptNilAddrLine2 is optional nullable AddrLine2.
type OptNilAddrLine2 struct {
	Value AddrLine2
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAddrLine2 was set.
func (o OptNilAddrLine2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAddrLine2) Reset() {
	var v AddrLine2
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAddrLine2) SetTo(v AddrLine2) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAddrLine2) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAddrLine2) SetToNull() {
	o.Set = true
	o.Null = true
	var v AddrLine2
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAddrLine2) Get() (v AddrLine2, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAddrLine2) Or(d AddrLine2) AddrLine2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAddrLine3 returns new OptNilAddrLine3 with value set to v.
func NewOptNilAddrLine3(v AddrLine3) OptNilAddrLine3 {
	return OptNilAddrLine3{
		Value: v,
		Set:   true,
	}
}

// OptNilAddrLine3 is optional nullable AddrLine3.
type OptNilAddrLine3 struct {
	Value AddrLine3
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAddrLine3 was set.
func (o OptNilAddrLine3) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAddrLine3) Reset() {
	var v AddrLine3
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAddrLine3) SetTo(v AddrLine3) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAddrLine3) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAddrLine3) SetToNull() {
	o.Set = true
	o.Null = true
	var v AddrLine3
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAddrLine3) Get() (v AddrLine3, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAddrLine3) Or(d AddrLine3) AddrLine3 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAddrPostCode returns new OptNilAddrPostCode with value set to v.
func NewOptNilAddrPostCode(v AddrPostCode) OptNilAddrPostCode {
	return OptNilAddrPostCode{
		Value: v,
		Set:   true,
	}
}

// OptNilAddrPostCode is optional nullable AddrPostCode.
type OptNilAddrPostCode struct {
	Value AddrPostCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAddrPostCode was set.
func (o OptNilAddrPostCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAddrPostCode) Reset() {
	var v AddrPostCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAddrPostCode) SetTo(v AddrPostCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAddrPostCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAddrPostCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v AddrPostCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAddrPostCode) Get() (v AddrPostCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAddrPostCode) Or(d AddrPostCode) AddrPostCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAddrState returns new OptNilAddrState with value set to v.
func NewOptNilAddrState(v AddrState) OptNilAddrState {
	return OptNilAddrState{
		Value: v,
		Set:   true,
	}
}

// OptNilAddrState is optional nullable AddrState.
type OptNilAddrState struct {
	Value AddrState
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAddrState was set.
func (o OptNilAddrState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAddrState) Reset() {
	var v AddrState
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAddrState) SetTo(v AddrState) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAddrState) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAddrState) SetToNull() {
	o.Set = true
	o.Null = true
	var v AddrState
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAddrState) Get() (v AddrState, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAddrState) Or(d AddrState) AddrState {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAggregateTermEnd returns new OptNilAggregateTermEnd with value set to v.
func NewOptNilAggregateTermEnd(v AggregateTermEnd) OptNilAggregateTermEnd {
	return OptNilAggregateTermEnd{
		Value: v,
		Set:   true,
	}
}

// OptNilAggregateTermEnd is optional nullable AggregateTermEnd.
type OptNilAggregateTermEnd struct {
	Value AggregateTermEnd
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAggregateTermEnd was set.
func (o OptNilAggregateTermEnd) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAggregateTermEnd) Reset() {
	var v AggregateTermEnd
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAggregateTermEnd) SetTo(v AggregateTermEnd) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAggregateTermEnd) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAggregateTermEnd) SetToNull() {
	o.Set = true
	o.Null = true
	var v AggregateTermEnd
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAggregateTermEnd) Get() (v AggregateTermEnd, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAggregateTermEnd) Or(d AggregateTermEnd) AggregateTermEnd {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAggregateTermStart returns new OptNilAggregateTermStart with value set to v.
func NewOptNilAggregateTermStart(v AggregateTermStart) OptNilAggregateTermStart {
	return OptNilAggregateTermStart{
		Value: v,
		Set:   true,
	}
}

// OptNilAggregateTermStart is optional nullable AggregateTermStart.
type OptNilAggregateTermStart struct {
	Value AggregateTermStart
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAggregateTermStart was set.
func (o OptNilAggregateTermStart) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAggregateTermStart) Reset() {
	var v AggregateTermStart
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAggregateTermStart) SetTo(v AggregateTermStart) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAggregateTermStart) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAggregateTermStart) SetToNull() {
	o.Set = true
	o.Null = true
	var v AggregateTermStart
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAggregateTermStart) Get() (v AggregateTermStart, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAggregateTermStart) Or(d AggregateTermStart) AggregateTermStart {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilApprove returns new OptNilApprove with value set to v.
func NewOptNilApprove(v Approve) OptNilApprove {
	return OptNilApprove{
		Value: v,
		Set:   true,
	}
}

// OptNilApprove is optional nullable Approve.
type OptNilApprove struct {
	Value Approve
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilApprove was set.
func (o OptNilApprove) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilApprove) Reset() {
	var v Approve
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilApprove) SetTo(v Approve) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilApprove) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilApprove) SetToNull() {
	o.Set = true
	o.Null = true
	var v Approve
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilApprove) Get() (v Approve, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilApprove) Or(d Approve) Approve {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAuthMaxDate returns new OptNilAuthMaxDate with value set to v.
func NewOptNilAuthMaxDate(v AuthMaxDate) OptNilAuthMaxDate {
	return OptNilAuthMaxDate{
		Value: v,
		Set:   true,
	}
}

// OptNilAuthMaxDate is optional nullable AuthMaxDate.
type OptNilAuthMaxDate struct {
	Value AuthMaxDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAuthMaxDate was set.
func (o OptNilAuthMaxDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAuthMaxDate) Reset() {
	var v AuthMaxDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAuthMaxDate) SetTo(v AuthMaxDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilAuthMaxDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilAuthMaxDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v AuthMaxDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAuthMaxDate) Get() (v AuthMaxDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAuthMaxDate) Or(d AuthMaxDate) AuthMaxDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBankTransferFee returns new OptNilBankTransferFee with value set to v.
func NewOptNilBankTransferFee(v BankTransferFee) OptNilBankTransferFee {
	return OptNilBankTransferFee{
		Value: v,
		Set:   true,
	}
}

// OptNilBankTransferFee is optional nullable BankTransferFee.
type OptNilBankTransferFee struct {
	Value BankTransferFee
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBankTransferFee was set.
func (o OptNilBankTransferFee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBankTransferFee) Reset() {
	var v BankTransferFee
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBankTransferFee) SetTo(v BankTransferFee) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBankTransferFee) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBankTransferFee) SetToNull() {
	o.Set = true
	o.Null = true
	var v BankTransferFee
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBankTransferFee) Get() (v BankTransferFee, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBankTransferFee) Or(d BankTransferFee) BankTransferFee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBranchCode returns new OptNilBranchCode with value set to v.
func NewOptNilBranchCode(v BranchCode) OptNilBranchCode {
	return OptNilBranchCode{
		Value: v,
		Set:   true,
	}
}

// OptNilBranchCode is optional nullable BranchCode.
type OptNilBranchCode struct {
	Value BranchCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBranchCode was set.
func (o OptNilBranchCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBranchCode) Reset() {
	var v BranchCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBranchCode) SetTo(v BranchCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBranchCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBranchCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v BranchCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBranchCode) Get() (v BranchCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBranchCode) Or(d BranchCode) BranchCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBusinessDetails returns new OptNilBusinessDetails with value set to v.
func NewOptNilBusinessDetails(v BusinessDetails) OptNilBusinessDetails {
	return OptNilBusinessDetails{
		Value: v,
		Set:   true,
	}
}

// OptNilBusinessDetails is optional nullable BusinessDetails.
type OptNilBusinessDetails struct {
	Value BusinessDetails
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBusinessDetails was set.
func (o OptNilBusinessDetails) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBusinessDetails) Reset() {
	var v BusinessDetails
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBusinessDetails) SetTo(v BusinessDetails) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBusinessDetails) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilBusinessDetails) SetToNull() {
	o.Set = true
	o.Null = true
	var v BusinessDetails
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBusinessDetails) Get() (v BusinessDetails, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBusinessDetails) Or(d BusinessDetails) BusinessDetails {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCancelDescription returns new OptNilCancelDescription with value set to v.
func NewOptNilCancelDescription(v CancelDescription) OptNilCancelDescription {
	return OptNilCancelDescription{
		Value: v,
		Set:   true,
	}
}

// OptNilCancelDescription is optional nullable CancelDescription.
type OptNilCancelDescription struct {
	Value CancelDescription
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCancelDescription was set.
func (o OptNilCancelDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCancelDescription) Reset() {
	var v CancelDescription
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCancelDescription) SetTo(v CancelDescription) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCancelDescription) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCancelDescription) SetToNull() {
	o.Set = true
	o.Null = true
	var v CancelDescription
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCancelDescription) Get() (v CancelDescription, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCancelDescription) Or(d CancelDescription) CancelDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCancelURL returns new OptNilCancelURL with value set to v.
func NewOptNilCancelURL(v CancelURL) OptNilCancelURL {
	return OptNilCancelURL{
		Value: v,
		Set:   true,
	}
}

// OptNilCancelURL is optional nullable CancelURL.
type OptNilCancelURL struct {
	Value CancelURL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCancelURL was set.
func (o OptNilCancelURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCancelURL) Reset() {
	var v CancelURL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCancelURL) SetTo(v CancelURL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCancelURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCancelURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v CancelURL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCancelURL) Get() (v CancelURL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCancelURL) Or(d CancelURL) CancelURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCapital returns new OptNilCapital with value set to v.
func NewOptNilCapital(v Capital) OptNilCapital {
	return OptNilCapital{
		Value: v,
		Set:   true,
	}
}

// OptNilCapital is optional nullable Capital.
type OptNilCapital struct {
	Value Capital
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCapital was set.
func (o OptNilCapital) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCapital) Reset() {
	var v Capital
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCapital) SetTo(v Capital) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCapital) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCapital) SetToNull() {
	o.Set = true
	o.Null = true
	var v Capital
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCapital) Get() (v Capital, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCapital) Or(d Capital) Capital {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCaptureDescription returns new OptNilCaptureDescription with value set to v.
func NewOptNilCaptureDescription(v CaptureDescription) OptNilCaptureDescription {
	return OptNilCaptureDescription{
		Value: v,
		Set:   true,
	}
}

// OptNilCaptureDescription is optional nullable CaptureDescription.
type OptNilCaptureDescription struct {
	Value CaptureDescription
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCaptureDescription was set.
func (o OptNilCaptureDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCaptureDescription) Reset() {
	var v CaptureDescription
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCaptureDescription) SetTo(v CaptureDescription) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCaptureDescription) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCaptureDescription) SetToNull() {
	o.Set = true
	o.Null = true
	var v CaptureDescription
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCaptureDescription) Get() (v CaptureDescription, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCaptureDescription) Or(d CaptureDescription) CaptureDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilClientFieldN returns new OptNilClientFieldN with value set to v.
func NewOptNilClientFieldN(v ClientFieldN) OptNilClientFieldN {
	return OptNilClientFieldN{
		Value: v,
		Set:   true,
	}
}

// OptNilClientFieldN is optional nullable ClientFieldN.
type OptNilClientFieldN struct {
	Value ClientFieldN
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilClientFieldN was set.
func (o OptNilClientFieldN) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilClientFieldN) Reset() {
	var v ClientFieldN
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilClientFieldN) SetTo(v ClientFieldN) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilClientFieldN) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilClientFieldN) SetToNull() {
	o.Set = true
	o.Null = true
	var v ClientFieldN
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilClientFieldN) Get() (v ClientFieldN, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilClientFieldN) Or(d ClientFieldN) ClientFieldN {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCodeExpiryDate returns new OptNilCodeExpiryDate with value set to v.
func NewOptNilCodeExpiryDate(v CodeExpiryDate) OptNilCodeExpiryDate {
	return OptNilCodeExpiryDate{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeExpiryDate is optional nullable CodeExpiryDate.
type OptNilCodeExpiryDate struct {
	Value CodeExpiryDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeExpiryDate was set.
func (o OptNilCodeExpiryDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeExpiryDate) Reset() {
	var v CodeExpiryDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeExpiryDate) SetTo(v CodeExpiryDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeExpiryDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCodeExpiryDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v CodeExpiryDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeExpiryDate) Get() (v CodeExpiryDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCodeExpiryDate) Or(d CodeExpiryDate) CodeExpiryDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCodeID returns new OptNilCodeID with value set to v.
func NewOptNilCodeID(v CodeID) OptNilCodeID {
	return OptNilCodeID{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeID is optional nullable CodeID.
type OptNilCodeID struct {
	Value CodeID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeID was set.
func (o OptNilCodeID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeID) Reset() {
	var v CodeID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeID) SetTo(v CodeID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCodeID) SetToNull() {
	o.Set = true
	o.Null = true
	var v CodeID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeID) Get() (v CodeID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCodeID) Or(d CodeID) CodeID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyAddressBuildingName returns new OptNilCompanyAddressBuildingName with value set to v.
func NewOptNilCompanyAddressBuildingName(v CompanyAddressBuildingName) OptNilCompanyAddressBuildingName {
	return OptNilCompanyAddressBuildingName{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyAddressBuildingName is optional nullable CompanyAddressBuildingName.
type OptNilCompanyAddressBuildingName struct {
	Value CompanyAddressBuildingName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyAddressBuildingName was set.
func (o OptNilCompanyAddressBuildingName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyAddressBuildingName) Reset() {
	var v CompanyAddressBuildingName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyAddressBuildingName) SetTo(v CompanyAddressBuildingName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyAddressBuildingName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyAddressBuildingName) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyAddressBuildingName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyAddressBuildingName) Get() (v CompanyAddressBuildingName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyAddressBuildingName) Or(d CompanyAddressBuildingName) CompanyAddressBuildingName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyAddressBuildingNameKana returns new OptNilCompanyAddressBuildingNameKana with value set to v.
func NewOptNilCompanyAddressBuildingNameKana(v CompanyAddressBuildingNameKana) OptNilCompanyAddressBuildingNameKana {
	return OptNilCompanyAddressBuildingNameKana{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyAddressBuildingNameKana is optional nullable CompanyAddressBuildingNameKana.
type OptNilCompanyAddressBuildingNameKana struct {
	Value CompanyAddressBuildingNameKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyAddressBuildingNameKana was set.
func (o OptNilCompanyAddressBuildingNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyAddressBuildingNameKana) Reset() {
	var v CompanyAddressBuildingNameKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyAddressBuildingNameKana) SetTo(v CompanyAddressBuildingNameKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyAddressBuildingNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyAddressBuildingNameKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyAddressBuildingNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyAddressBuildingNameKana) Get() (v CompanyAddressBuildingNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyAddressBuildingNameKana) Or(d CompanyAddressBuildingNameKana) CompanyAddressBuildingNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyAddressChrome returns new OptNilCompanyAddressChrome with value set to v.
func NewOptNilCompanyAddressChrome(v CompanyAddressChrome) OptNilCompanyAddressChrome {
	return OptNilCompanyAddressChrome{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyAddressChrome is optional nullable CompanyAddressChrome.
type OptNilCompanyAddressChrome struct {
	Value CompanyAddressChrome
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyAddressChrome was set.
func (o OptNilCompanyAddressChrome) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyAddressChrome) Reset() {
	var v CompanyAddressChrome
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyAddressChrome) SetTo(v CompanyAddressChrome) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyAddressChrome) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyAddressChrome) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyAddressChrome
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyAddressChrome) Get() (v CompanyAddressChrome, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyAddressChrome) Or(d CompanyAddressChrome) CompanyAddressChrome {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyAddressChromeKana returns new OptNilCompanyAddressChromeKana with value set to v.
func NewOptNilCompanyAddressChromeKana(v CompanyAddressChromeKana) OptNilCompanyAddressChromeKana {
	return OptNilCompanyAddressChromeKana{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyAddressChromeKana is optional nullable CompanyAddressChromeKana.
type OptNilCompanyAddressChromeKana struct {
	Value CompanyAddressChromeKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyAddressChromeKana was set.
func (o OptNilCompanyAddressChromeKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyAddressChromeKana) Reset() {
	var v CompanyAddressChromeKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyAddressChromeKana) SetTo(v CompanyAddressChromeKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyAddressChromeKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyAddressChromeKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyAddressChromeKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyAddressChromeKana) Get() (v CompanyAddressChromeKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyAddressChromeKana) Or(d CompanyAddressChromeKana) CompanyAddressChromeKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyAddressMunicipality returns new OptNilCompanyAddressMunicipality with value set to v.
func NewOptNilCompanyAddressMunicipality(v CompanyAddressMunicipality) OptNilCompanyAddressMunicipality {
	return OptNilCompanyAddressMunicipality{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyAddressMunicipality is optional nullable CompanyAddressMunicipality.
type OptNilCompanyAddressMunicipality struct {
	Value CompanyAddressMunicipality
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyAddressMunicipality was set.
func (o OptNilCompanyAddressMunicipality) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyAddressMunicipality) Reset() {
	var v CompanyAddressMunicipality
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyAddressMunicipality) SetTo(v CompanyAddressMunicipality) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyAddressMunicipality) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyAddressMunicipality) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyAddressMunicipality
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyAddressMunicipality) Get() (v CompanyAddressMunicipality, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyAddressMunicipality) Or(d CompanyAddressMunicipality) CompanyAddressMunicipality {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyAddressMunicipalityKana returns new OptNilCompanyAddressMunicipalityKana with value set to v.
func NewOptNilCompanyAddressMunicipalityKana(v CompanyAddressMunicipalityKana) OptNilCompanyAddressMunicipalityKana {
	return OptNilCompanyAddressMunicipalityKana{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyAddressMunicipalityKana is optional nullable CompanyAddressMunicipalityKana.
type OptNilCompanyAddressMunicipalityKana struct {
	Value CompanyAddressMunicipalityKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyAddressMunicipalityKana was set.
func (o OptNilCompanyAddressMunicipalityKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyAddressMunicipalityKana) Reset() {
	var v CompanyAddressMunicipalityKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyAddressMunicipalityKana) SetTo(v CompanyAddressMunicipalityKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyAddressMunicipalityKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyAddressMunicipalityKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyAddressMunicipalityKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyAddressMunicipalityKana) Get() (v CompanyAddressMunicipalityKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyAddressMunicipalityKana) Or(d CompanyAddressMunicipalityKana) CompanyAddressMunicipalityKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyAddressSection returns new OptNilCompanyAddressSection with value set to v.
func NewOptNilCompanyAddressSection(v CompanyAddressSection) OptNilCompanyAddressSection {
	return OptNilCompanyAddressSection{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyAddressSection is optional nullable CompanyAddressSection.
type OptNilCompanyAddressSection struct {
	Value CompanyAddressSection
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyAddressSection was set.
func (o OptNilCompanyAddressSection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyAddressSection) Reset() {
	var v CompanyAddressSection
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyAddressSection) SetTo(v CompanyAddressSection) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyAddressSection) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyAddressSection) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyAddressSection
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyAddressSection) Get() (v CompanyAddressSection, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyAddressSection) Or(d CompanyAddressSection) CompanyAddressSection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyAddressSectionKana returns new OptNilCompanyAddressSectionKana with value set to v.
func NewOptNilCompanyAddressSectionKana(v CompanyAddressSectionKana) OptNilCompanyAddressSectionKana {
	return OptNilCompanyAddressSectionKana{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyAddressSectionKana is optional nullable CompanyAddressSectionKana.
type OptNilCompanyAddressSectionKana struct {
	Value CompanyAddressSectionKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyAddressSectionKana was set.
func (o OptNilCompanyAddressSectionKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyAddressSectionKana) Reset() {
	var v CompanyAddressSectionKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyAddressSectionKana) SetTo(v CompanyAddressSectionKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyAddressSectionKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyAddressSectionKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyAddressSectionKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyAddressSectionKana) Get() (v CompanyAddressSectionKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyAddressSectionKana) Or(d CompanyAddressSectionKana) CompanyAddressSectionKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyPostalCode returns new OptNilCompanyPostalCode with value set to v.
func NewOptNilCompanyPostalCode(v CompanyPostalCode) OptNilCompanyPostalCode {
	return OptNilCompanyPostalCode{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyPostalCode is optional nullable CompanyPostalCode.
type OptNilCompanyPostalCode struct {
	Value CompanyPostalCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyPostalCode was set.
func (o OptNilCompanyPostalCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyPostalCode) Reset() {
	var v CompanyPostalCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyPostalCode) SetTo(v CompanyPostalCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyPostalCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyPostalCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyPostalCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyPostalCode) Get() (v CompanyPostalCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyPostalCode) Or(d CompanyPostalCode) CompanyPostalCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyPrefecture returns new OptNilCompanyPrefecture with value set to v.
func NewOptNilCompanyPrefecture(v CompanyPrefecture) OptNilCompanyPrefecture {
	return OptNilCompanyPrefecture{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyPrefecture is optional nullable CompanyPrefecture.
type OptNilCompanyPrefecture struct {
	Value CompanyPrefecture
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyPrefecture was set.
func (o OptNilCompanyPrefecture) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyPrefecture) Reset() {
	var v CompanyPrefecture
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyPrefecture) SetTo(v CompanyPrefecture) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyPrefecture) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyPrefecture) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyPrefecture
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyPrefecture) Get() (v CompanyPrefecture, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyPrefecture) Or(d CompanyPrefecture) CompanyPrefecture {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyPrefectureKana returns new OptNilCompanyPrefectureKana with value set to v.
func NewOptNilCompanyPrefectureKana(v CompanyPrefectureKana) OptNilCompanyPrefectureKana {
	return OptNilCompanyPrefectureKana{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyPrefectureKana is optional nullable CompanyPrefectureKana.
type OptNilCompanyPrefectureKana struct {
	Value CompanyPrefectureKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyPrefectureKana was set.
func (o OptNilCompanyPrefectureKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyPrefectureKana) Reset() {
	var v CompanyPrefectureKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyPrefectureKana) SetTo(v CompanyPrefectureKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyPrefectureKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyPrefectureKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyPrefectureKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyPrefectureKana) Get() (v CompanyPrefectureKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyPrefectureKana) Or(d CompanyPrefectureKana) CompanyPrefectureKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCompanyTel returns new OptNilCompanyTel with value set to v.
func NewOptNilCompanyTel(v CompanyTel) OptNilCompanyTel {
	return OptNilCompanyTel{
		Value: v,
		Set:   true,
	}
}

// OptNilCompanyTel is optional nullable CompanyTel.
type OptNilCompanyTel struct {
	Value CompanyTel
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCompanyTel was set.
func (o OptNilCompanyTel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCompanyTel) Reset() {
	var v CompanyTel
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCompanyTel) SetTo(v CompanyTel) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCompanyTel) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCompanyTel) SetToNull() {
	o.Set = true
	o.Null = true
	var v CompanyTel
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCompanyTel) Get() (v CompanyTel, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCompanyTel) Or(d CompanyTel) CompanyTel {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilContentDescription returns new OptNilContentDescription with value set to v.
func NewOptNilContentDescription(v ContentDescription) OptNilContentDescription {
	return OptNilContentDescription{
		Value: v,
		Set:   true,
	}
}

// OptNilContentDescription is optional nullable ContentDescription.
type OptNilContentDescription struct {
	Value ContentDescription
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilContentDescription was set.
func (o OptNilContentDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilContentDescription) Reset() {
	var v ContentDescription
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilContentDescription) SetTo(v ContentDescription) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilContentDescription) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilContentDescription) SetToNull() {
	o.Set = true
	o.Null = true
	var v ContentDescription
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilContentDescription) Get() (v ContentDescription, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilContentDescription) Or(d ContentDescription) ContentDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilContractSalesDepositStatusCode returns new OptNilContractSalesDepositStatusCode with value set to v.
func NewOptNilContractSalesDepositStatusCode(v ContractSalesDepositStatusCode) OptNilContractSalesDepositStatusCode {
	return OptNilContractSalesDepositStatusCode{
		Value: v,
		Set:   true,
	}
}

// OptNilContractSalesDepositStatusCode is optional nullable ContractSalesDepositStatusCode.
type OptNilContractSalesDepositStatusCode struct {
	Value ContractSalesDepositStatusCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilContractSalesDepositStatusCode was set.
func (o OptNilContractSalesDepositStatusCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilContractSalesDepositStatusCode) Reset() {
	var v ContractSalesDepositStatusCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilContractSalesDepositStatusCode) SetTo(v ContractSalesDepositStatusCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilContractSalesDepositStatusCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilContractSalesDepositStatusCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v ContractSalesDepositStatusCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilContractSalesDepositStatusCode) Get() (v ContractSalesDepositStatusCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilContractSalesDepositStatusCode) Or(d ContractSalesDepositStatusCode) ContractSalesDepositStatusCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCorporateNumber returns new OptNilCorporateNumber with value set to v.
func NewOptNilCorporateNumber(v CorporateNumber) OptNilCorporateNumber {
	return OptNilCorporateNumber{
		Value: v,
		Set:   true,
	}
}

// OptNilCorporateNumber is optional nullable CorporateNumber.
type OptNilCorporateNumber struct {
	Value CorporateNumber
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCorporateNumber was set.
func (o OptNilCorporateNumber) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCorporateNumber) Reset() {
	var v CorporateNumber
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCorporateNumber) SetTo(v CorporateNumber) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCorporateNumber) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCorporateNumber) SetToNull() {
	o.Set = true
	o.Null = true
	var v CorporateNumber
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCorporateNumber) Get() (v CorporateNumber, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCorporateNumber) Or(d CorporateNumber) CorporateNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCount returns new OptNilCount with value set to v.
func NewOptNilCount(v Count) OptNilCount {
	return OptNilCount{
		Value: v,
		Set:   true,
	}
}

// OptNilCount is optional nullable Count.
type OptNilCount struct {
	Value Count
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCount was set.
func (o OptNilCount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCount) Reset() {
	var v Count
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCount) SetTo(v Count) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCount) SetToNull() {
	o.Set = true
	o.Null = true
	var v Count
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCount) Get() (v Count, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCount) Or(d Count) Count {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCredential returns new OptNilCredential with value set to v.
func NewOptNilCredential(v Credential) OptNilCredential {
	return OptNilCredential{
		Value: v,
		Set:   true,
	}
}

// OptNilCredential is optional nullable Credential.
type OptNilCredential struct {
	Value Credential
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCredential was set.
func (o OptNilCredential) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCredential) Reset() {
	var v Credential
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCredential) SetTo(v Credential) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCredential) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCredential) SetToNull() {
	o.Set = true
	o.Null = true
	var v Credential
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCredential) Get() (v Credential, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCredential) Or(d Credential) Credential {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCustomerCardRegistration returns new OptNilCustomerCardRegistration with value set to v.
func NewOptNilCustomerCardRegistration(v CustomerCardRegistration) OptNilCustomerCardRegistration {
	return OptNilCustomerCardRegistration{
		Value: v,
		Set:   true,
	}
}

// OptNilCustomerCardRegistration is optional nullable CustomerCardRegistration.
type OptNilCustomerCardRegistration struct {
	Value CustomerCardRegistration
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCustomerCardRegistration was set.
func (o OptNilCustomerCardRegistration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCustomerCardRegistration) Reset() {
	var v CustomerCardRegistration
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCustomerCardRegistration) SetTo(v CustomerCardRegistration) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCustomerCardRegistration) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCustomerCardRegistration) SetToNull() {
	o.Set = true
	o.Null = true
	var v CustomerCardRegistration
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCustomerCardRegistration) Get() (v CustomerCardRegistration, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCustomerCardRegistration) Or(d CustomerCardRegistration) CustomerCardRegistration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCustomerDirectdebitRegistration returns new OptNilCustomerDirectdebitRegistration with value set to v.
func NewOptNilCustomerDirectdebitRegistration(v CustomerDirectdebitRegistration) OptNilCustomerDirectdebitRegistration {
	return OptNilCustomerDirectdebitRegistration{
		Value: v,
		Set:   true,
	}
}

// OptNilCustomerDirectdebitRegistration is optional nullable CustomerDirectdebitRegistration.
type OptNilCustomerDirectdebitRegistration struct {
	Value CustomerDirectdebitRegistration
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCustomerDirectdebitRegistration was set.
func (o OptNilCustomerDirectdebitRegistration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCustomerDirectdebitRegistration) Reset() {
	var v CustomerDirectdebitRegistration
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCustomerDirectdebitRegistration) SetTo(v CustomerDirectdebitRegistration) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCustomerDirectdebitRegistration) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCustomerDirectdebitRegistration) SetToNull() {
	o.Set = true
	o.Null = true
	var v CustomerDirectdebitRegistration
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCustomerDirectdebitRegistration) Get() (v CustomerDirectdebitRegistration, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCustomerDirectdebitRegistration) Or(d CustomerDirectdebitRegistration) CustomerDirectdebitRegistration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCustomerGroupID returns new OptNilCustomerGroupID with value set to v.
func NewOptNilCustomerGroupID(v CustomerGroupID) OptNilCustomerGroupID {
	return OptNilCustomerGroupID{
		Value: v,
		Set:   true,
	}
}

// OptNilCustomerGroupID is optional nullable CustomerGroupID.
type OptNilCustomerGroupID struct {
	Value CustomerGroupID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCustomerGroupID was set.
func (o OptNilCustomerGroupID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCustomerGroupID) Reset() {
	var v CustomerGroupID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCustomerGroupID) SetTo(v CustomerGroupID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCustomerGroupID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCustomerGroupID) SetToNull() {
	o.Set = true
	o.Null = true
	var v CustomerGroupID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCustomerGroupID) Get() (v CustomerGroupID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCustomerGroupID) Or(d CustomerGroupID) CustomerGroupID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCustomerName returns new OptNilCustomerName with value set to v.
func NewOptNilCustomerName(v CustomerName) OptNilCustomerName {
	return OptNilCustomerName{
		Value: v,
		Set:   true,
	}
}

// OptNilCustomerName is optional nullable CustomerName.
type OptNilCustomerName struct {
	Value CustomerName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCustomerName was set.
func (o OptNilCustomerName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCustomerName) Reset() {
	var v CustomerName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCustomerName) SetTo(v CustomerName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCustomerName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCustomerName) SetToNull() {
	o.Set = true
	o.Null = true
	var v CustomerName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCustomerName) Get() (v CustomerName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCustomerName) Or(d CustomerName) CustomerName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCustomerPaymentMethodCreatingRequestCard returns new OptNilCustomerPaymentMethodCreatingRequestCard with value set to v.
func NewOptNilCustomerPaymentMethodCreatingRequestCard(v CustomerPaymentMethodCreatingRequestCard) OptNilCustomerPaymentMethodCreatingRequestCard {
	return OptNilCustomerPaymentMethodCreatingRequestCard{
		Value: v,
		Set:   true,
	}
}

// OptNilCustomerPaymentMethodCreatingRequestCard is optional nullable CustomerPaymentMethodCreatingRequestCard.
type OptNilCustomerPaymentMethodCreatingRequestCard struct {
	Value CustomerPaymentMethodCreatingRequestCard
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCustomerPaymentMethodCreatingRequestCard was set.
func (o OptNilCustomerPaymentMethodCreatingRequestCard) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCustomerPaymentMethodCreatingRequestCard) Reset() {
	var v CustomerPaymentMethodCreatingRequestCard
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCustomerPaymentMethodCreatingRequestCard) SetTo(v CustomerPaymentMethodCreatingRequestCard) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCustomerPaymentMethodCreatingRequestCard) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCustomerPaymentMethodCreatingRequestCard) SetToNull() {
	o.Set = true
	o.Null = true
	var v CustomerPaymentMethodCreatingRequestCard
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCustomerPaymentMethodCreatingRequestCard) Get() (v CustomerPaymentMethodCreatingRequestCard, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCustomerPaymentMethodCreatingRequestCard) Or(d CustomerPaymentMethodCreatingRequestCard) CustomerPaymentMethodCreatingRequestCard {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCustomerPaymentMethodCreatingRequestDirectdebit returns new OptNilCustomerPaymentMethodCreatingRequestDirectdebit with value set to v.
func NewOptNilCustomerPaymentMethodCreatingRequestDirectdebit(v CustomerPaymentMethodCreatingRequestDirectdebit) OptNilCustomerPaymentMethodCreatingRequestDirectdebit {
	return OptNilCustomerPaymentMethodCreatingRequestDirectdebit{
		Value: v,
		Set:   true,
	}
}

// OptNilCustomerPaymentMethodCreatingRequestDirectdebit is optional nullable CustomerPaymentMethodCreatingRequestDirectdebit.
type OptNilCustomerPaymentMethodCreatingRequestDirectdebit struct {
	Value CustomerPaymentMethodCreatingRequestDirectdebit
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCustomerPaymentMethodCreatingRequestDirectdebit was set.
func (o OptNilCustomerPaymentMethodCreatingRequestDirectdebit) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCustomerPaymentMethodCreatingRequestDirectdebit) Reset() {
	var v CustomerPaymentMethodCreatingRequestDirectdebit
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCustomerPaymentMethodCreatingRequestDirectdebit) SetTo(v CustomerPaymentMethodCreatingRequestDirectdebit) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCustomerPaymentMethodCreatingRequestDirectdebit) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilCustomerPaymentMethodCreatingRequestDirectdebit) SetToNull() {
	o.Set = true
	o.Null = true
	var v CustomerPaymentMethodCreatingRequestDirectdebit
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCustomerPaymentMethodCreatingRequestDirectdebit) Get() (v CustomerPaymentMethodCreatingRequestDirectdebit, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCustomerPaymentMethodCreatingRequestDirectdebit) Or(d CustomerPaymentMethodCreatingRequestDirectdebit) CustomerPaymentMethodCreatingRequestDirectdebit {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDate returns new OptNilDate with value set to v.
func NewOptNilDate(v time.Time) OptNilDate {
	return OptNilDate{
		Value: v,
		Set:   true,
	}
}

// OptNilDate is optional nullable time.Time.
type OptNilDate struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDate was set.
func (o OptNilDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDate) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDate) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDate) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDealsInsecureContent returns new OptNilDealsInsecureContent with value set to v.
func NewOptNilDealsInsecureContent(v DealsInsecureContent) OptNilDealsInsecureContent {
	return OptNilDealsInsecureContent{
		Value: v,
		Set:   true,
	}
}

// OptNilDealsInsecureContent is optional nullable DealsInsecureContent.
type OptNilDealsInsecureContent struct {
	Value DealsInsecureContent
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDealsInsecureContent was set.
func (o OptNilDealsInsecureContent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDealsInsecureContent) Reset() {
	var v DealsInsecureContent
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDealsInsecureContent) SetTo(v DealsInsecureContent) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDealsInsecureContent) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDealsInsecureContent) SetToNull() {
	o.Set = true
	o.Null = true
	var v DealsInsecureContent
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDealsInsecureContent) Get() (v DealsInsecureContent, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDealsInsecureContent) Or(d DealsInsecureContent) DealsInsecureContent {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDealsLongApplyContent returns new OptNilDealsLongApplyContent with value set to v.
func NewOptNilDealsLongApplyContent(v DealsLongApplyContent) OptNilDealsLongApplyContent {
	return OptNilDealsLongApplyContent{
		Value: v,
		Set:   true,
	}
}

// OptNilDealsLongApplyContent is optional nullable DealsLongApplyContent.
type OptNilDealsLongApplyContent struct {
	Value DealsLongApplyContent
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDealsLongApplyContent was set.
func (o OptNilDealsLongApplyContent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDealsLongApplyContent) Reset() {
	var v DealsLongApplyContent
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDealsLongApplyContent) SetTo(v DealsLongApplyContent) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDealsLongApplyContent) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDealsLongApplyContent) SetToNull() {
	o.Set = true
	o.Null = true
	var v DealsLongApplyContent
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDealsLongApplyContent) Get() (v DealsLongApplyContent, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDealsLongApplyContent) Or(d DealsLongApplyContent) DealsLongApplyContent {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDepositAmount returns new OptNilDepositAmount with value set to v.
func NewOptNilDepositAmount(v DepositAmount) OptNilDepositAmount {
	return OptNilDepositAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilDepositAmount is optional nullable DepositAmount.
type OptNilDepositAmount struct {
	Value DepositAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDepositAmount was set.
func (o OptNilDepositAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDepositAmount) Reset() {
	var v DepositAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDepositAmount) SetTo(v DepositAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDepositAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDepositAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v DepositAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDepositAmount) Get() (v DepositAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDepositAmount) Or(d DepositAmount) DepositAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDepositDate returns new OptNilDepositDate with value set to v.
func NewOptNilDepositDate(v DepositDate) OptNilDepositDate {
	return OptNilDepositDate{
		Value: v,
		Set:   true,
	}
}

// OptNilDepositDate is optional nullable DepositDate.
type OptNilDepositDate struct {
	Value DepositDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDepositDate was set.
func (o OptNilDepositDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDepositDate) Reset() {
	var v DepositDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDepositDate) SetTo(v DepositDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDepositDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDepositDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v DepositDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDepositDate) Get() (v DepositDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDepositDate) Or(d DepositDate) DepositDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDescription returns new OptNilDescription with value set to v.
func NewOptNilDescription(v Description) OptNilDescription {
	return OptNilDescription{
		Value: v,
		Set:   true,
	}
}

// OptNilDescription is optional nullable Description.
type OptNilDescription struct {
	Value Description
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDescription was set.
func (o OptNilDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDescription) Reset() {
	var v Description
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDescription) SetTo(v Description) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDescription) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDescription) SetToNull() {
	o.Set = true
	o.Null = true
	var v Description
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDescription) Get() (v Description, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDescription) Or(d Description) Description {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDigitalContent returns new OptNilDigitalContent with value set to v.
func NewOptNilDigitalContent(v DigitalContent) OptNilDigitalContent {
	return OptNilDigitalContent{
		Value: v,
		Set:   true,
	}
}

// OptNilDigitalContent is optional nullable DigitalContent.
type OptNilDigitalContent struct {
	Value DigitalContent
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDigitalContent was set.
func (o OptNilDigitalContent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDigitalContent) Reset() {
	var v DigitalContent
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDigitalContent) SetTo(v DigitalContent) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDigitalContent) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDigitalContent) SetToNull() {
	o.Set = true
	o.Null = true
	var v DigitalContent
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDigitalContent) Get() (v DigitalContent, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDigitalContent) Or(d DigitalContent) DigitalContent {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDirectDebitApplicationType returns new OptNilDirectDebitApplicationType with value set to v.
func NewOptNilDirectDebitApplicationType(v DirectDebitApplicationType) OptNilDirectDebitApplicationType {
	return OptNilDirectDebitApplicationType{
		Value: v,
		Set:   true,
	}
}

// OptNilDirectDebitApplicationType is optional nullable DirectDebitApplicationType.
type OptNilDirectDebitApplicationType struct {
	Value DirectDebitApplicationType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDirectDebitApplicationType was set.
func (o OptNilDirectDebitApplicationType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDirectDebitApplicationType) Reset() {
	var v DirectDebitApplicationType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDirectDebitApplicationType) SetTo(v DirectDebitApplicationType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDirectDebitApplicationType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDirectDebitApplicationType) SetToNull() {
	o.Set = true
	o.Null = true
	var v DirectDebitApplicationType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDirectDebitApplicationType) Get() (v DirectDebitApplicationType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDirectDebitApplicationType) Or(d DirectDebitApplicationType) DirectDebitApplicationType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDirectDebitLastResultCode returns new OptNilDirectDebitLastResultCode with value set to v.
func NewOptNilDirectDebitLastResultCode(v DirectDebitLastResultCode) OptNilDirectDebitLastResultCode {
	return OptNilDirectDebitLastResultCode{
		Value: v,
		Set:   true,
	}
}

// OptNilDirectDebitLastResultCode is optional nullable DirectDebitLastResultCode.
type OptNilDirectDebitLastResultCode struct {
	Value DirectDebitLastResultCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDirectDebitLastResultCode was set.
func (o OptNilDirectDebitLastResultCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDirectDebitLastResultCode) Reset() {
	var v DirectDebitLastResultCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDirectDebitLastResultCode) SetTo(v DirectDebitLastResultCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDirectDebitLastResultCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDirectDebitLastResultCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v DirectDebitLastResultCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDirectDebitLastResultCode) Get() (v DirectDebitLastResultCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDirectDebitLastResultCode) Or(d DirectDebitLastResultCode) DirectDebitLastResultCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilEmail returns new OptNilEmail with value set to v.
func NewOptNilEmail(v Email) OptNilEmail {
	return OptNilEmail{
		Value: v,
		Set:   true,
	}
}

// OptNilEmail is optional nullable Email.
type OptNilEmail struct {
	Value Email
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilEmail was set.
func (o OptNilEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilEmail) Reset() {
	var v Email
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilEmail) SetTo(v Email) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilEmail) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilEmail) SetToNull() {
	o.Set = true
	o.Null = true
	var v Email
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilEmail) Get() (v Email, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilEmail) Or(d Email) Email {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilEstablishedAt returns new OptNilEstablishedAt with value set to v.
func NewOptNilEstablishedAt(v EstablishedAt) OptNilEstablishedAt {
	return OptNilEstablishedAt{
		Value: v,
		Set:   true,
	}
}

// OptNilEstablishedAt is optional nullable EstablishedAt.
type OptNilEstablishedAt struct {
	Value EstablishedAt
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilEstablishedAt was set.
func (o OptNilEstablishedAt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilEstablishedAt) Reset() {
	var v EstablishedAt
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilEstablishedAt) SetTo(v EstablishedAt) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilEstablishedAt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilEstablishedAt) SetToNull() {
	o.Set = true
	o.Null = true
	var v EstablishedAt
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilEstablishedAt) Get() (v EstablishedAt, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilEstablishedAt) Or(d EstablishedAt) EstablishedAt {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilExpire returns new OptNilExpire with value set to v.
func NewOptNilExpire(v Expire) OptNilExpire {
	return OptNilExpire{
		Value: v,
		Set:   true,
	}
}

// OptNilExpire is optional nullable Expire.
type OptNilExpire struct {
	Value Expire
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilExpire was set.
func (o OptNilExpire) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilExpire) Reset() {
	var v Expire
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilExpire) SetTo(v Expire) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilExpire) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilExpire) SetToNull() {
	o.Set = true
	o.Null = true
	var v Expire
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilExpire) Get() (v Expire, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilExpire) Or(d Expire) Expire {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFeeAmount returns new OptNilFeeAmount with value set to v.
func NewOptNilFeeAmount(v FeeAmount) OptNilFeeAmount {
	return OptNilFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilFeeAmount is optional nullable FeeAmount.
type OptNilFeeAmount struct {
	Value FeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFeeAmount was set.
func (o OptNilFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFeeAmount) Reset() {
	var v FeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFeeAmount) SetTo(v FeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v FeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFeeAmount) Get() (v FeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFeeAmount) Or(d FeeAmount) FeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFixedFee returns new OptNilFixedFee with value set to v.
func NewOptNilFixedFee(v FixedFee) OptNilFixedFee {
	return OptNilFixedFee{
		Value: v,
		Set:   true,
	}
}

// OptNilFixedFee is optional nullable FixedFee.
type OptNilFixedFee struct {
	Value FixedFee
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFixedFee was set.
func (o OptNilFixedFee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFixedFee) Reset() {
	var v FixedFee
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFixedFee) SetTo(v FixedFee) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFixedFee) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilFixedFee) SetToNull() {
	o.Set = true
	o.Null = true
	var v FixedFee
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFixedFee) Get() (v FixedFee, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFixedFee) Or(d FixedFee) FixedFee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilForward returns new OptNilForward with value set to v.
func NewOptNilForward(v Forward) OptNilForward {
	return OptNilForward{
		Value: v,
		Set:   true,
	}
}

// OptNilForward is optional nullable Forward.
type OptNilForward struct {
	Value Forward
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilForward was set.
func (o OptNilForward) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilForward) Reset() {
	var v Forward
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilForward) SetTo(v Forward) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilForward) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilForward) SetToNull() {
	o.Set = true
	o.Null = true
	var v Forward
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilForward) Get() (v Forward, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilForward) Or(d Forward) Forward {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilHolderName returns new OptNilHolderName with value set to v.
func NewOptNilHolderName(v HolderName) OptNilHolderName {
	return OptNilHolderName{
		Value: v,
		Set:   true,
	}
}

// OptNilHolderName is optional nullable HolderName.
type OptNilHolderName struct {
	Value HolderName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilHolderName was set.
func (o OptNilHolderName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilHolderName) Reset() {
	var v HolderName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilHolderName) SetTo(v HolderName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilHolderName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilHolderName) SetToNull() {
	o.Set = true
	o.Null = true
	var v HolderName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilHolderName) Get() (v HolderName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilHolderName) Or(d HolderName) HolderName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilHowToUse returns new OptNilHowToUse with value set to v.
func NewOptNilHowToUse(v HowToUse) OptNilHowToUse {
	return OptNilHowToUse{
		Value: v,
		Set:   true,
	}
}

// OptNilHowToUse is optional nullable HowToUse.
type OptNilHowToUse struct {
	Value HowToUse
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilHowToUse was set.
func (o OptNilHowToUse) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilHowToUse) Reset() {
	var v HowToUse
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilHowToUse) SetTo(v HowToUse) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilHowToUse) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilHowToUse) SetToNull() {
	o.Set = true
	o.Null = true
	var v HowToUse
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilHowToUse) Get() (v HowToUse, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilHowToUse) Or(d HowToUse) HowToUse {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilHp returns new OptNilHp with value set to v.
func NewOptNilHp(v Hp) OptNilHp {
	return OptNilHp{
		Value: v,
		Set:   true,
	}
}

// OptNilHp is optional nullable Hp.
type OptNilHp struct {
	Value Hp
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilHp was set.
func (o OptNilHp) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilHp) Reset() {
	var v Hp
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilHp) SetTo(v Hp) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilHp) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilHp) SetToNull() {
	o.Set = true
	o.Null = true
	var v Hp
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilHp) Get() (v Hp, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilHp) Or(d Hp) Hp {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt32 returns new OptNilInt32 with value set to v.
func NewOptNilInt32(v int32) OptNilInt32 {
	return OptNilInt32{
		Value: v,
		Set:   true,
	}
}

// OptNilInt32 is optional nullable int32.
type OptNilInt32 struct {
	Value int32
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt32 was set.
func (o OptNilInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt32) SetTo(v int32) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt32) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInt32) SetToNull() {
	o.Set = true
	o.Null = true
	var v int32
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInvoiceID returns new OptNilInvoiceID with value set to v.
func NewOptNilInvoiceID(v InvoiceID) OptNilInvoiceID {
	return OptNilInvoiceID{
		Value: v,
		Set:   true,
	}
}

// OptNilInvoiceID is optional nullable InvoiceID.
type OptNilInvoiceID struct {
	Value InvoiceID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInvoiceID was set.
func (o OptNilInvoiceID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInvoiceID) Reset() {
	var v InvoiceID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInvoiceID) SetTo(v InvoiceID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInvoiceID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilInvoiceID) SetToNull() {
	o.Set = true
	o.Null = true
	var v InvoiceID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInvoiceID) Get() (v InvoiceID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInvoiceID) Or(d InvoiceID) InvoiceID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilItemCode returns new OptNilItemCode with value set to v.
func NewOptNilItemCode(v ItemCode) OptNilItemCode {
	return OptNilItemCode{
		Value: v,
		Set:   true,
	}
}

// OptNilItemCode is optional nullable ItemCode.
type OptNilItemCode struct {
	Value ItemCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilItemCode was set.
func (o OptNilItemCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilItemCode) Reset() {
	var v ItemCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilItemCode) SetTo(v ItemCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilItemCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilItemCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v ItemCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilItemCode) Get() (v ItemCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilItemCode) Or(d ItemCode) ItemCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilLogKeepDays returns new OptNilLogKeepDays with value set to v.
func NewOptNilLogKeepDays(v LogKeepDays) OptNilLogKeepDays {
	return OptNilLogKeepDays{
		Value: v,
		Set:   true,
	}
}

// OptNilLogKeepDays is optional nullable LogKeepDays.
type OptNilLogKeepDays struct {
	Value LogKeepDays
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilLogKeepDays was set.
func (o OptNilLogKeepDays) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilLogKeepDays) Reset() {
	var v LogKeepDays
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilLogKeepDays) SetTo(v LogKeepDays) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilLogKeepDays) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilLogKeepDays) SetToNull() {
	o.Set = true
	o.Null = true
	var v LogKeepDays
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilLogKeepDays) Get() (v LogKeepDays, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilLogKeepDays) Or(d LogKeepDays) LogKeepDays {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilLostTrial returns new OptNilLostTrial with value set to v.
func NewOptNilLostTrial(v LostTrial) OptNilLostTrial {
	return OptNilLostTrial{
		Value: v,
		Set:   true,
	}
}

// OptNilLostTrial is optional nullable LostTrial.
type OptNilLostTrial struct {
	Value LostTrial
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilLostTrial was set.
func (o OptNilLostTrial) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilLostTrial) Reset() {
	var v LostTrial
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilLostTrial) SetTo(v LostTrial) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilLostTrial) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilLostTrial) SetToNull() {
	o.Set = true
	o.Null = true
	var v LostTrial
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilLostTrial) Get() (v LostTrial, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilLostTrial) Or(d LostTrial) LostTrial {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilMailCustomerName returns new OptNilMailCustomerName with value set to v.
func NewOptNilMailCustomerName(v MailCustomerName) OptNilMailCustomerName {
	return OptNilMailCustomerName{
		Value: v,
		Set:   true,
	}
}

// OptNilMailCustomerName is optional nullable MailCustomerName.
type OptNilMailCustomerName struct {
	Value MailCustomerName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMailCustomerName was set.
func (o OptNilMailCustomerName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMailCustomerName) Reset() {
	var v MailCustomerName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMailCustomerName) SetTo(v MailCustomerName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMailCustomerName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilMailCustomerName) SetToNull() {
	o.Set = true
	o.Null = true
	var v MailCustomerName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMailCustomerName) Get() (v MailCustomerName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilMailCustomerName) Or(d MailCustomerName) MailCustomerName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilMerchantPaymentID returns new OptNilMerchantPaymentID with value set to v.
func NewOptNilMerchantPaymentID(v MerchantPaymentID) OptNilMerchantPaymentID {
	return OptNilMerchantPaymentID{
		Value: v,
		Set:   true,
	}
}

// OptNilMerchantPaymentID is optional nullable MerchantPaymentID.
type OptNilMerchantPaymentID struct {
	Value MerchantPaymentID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMerchantPaymentID was set.
func (o OptNilMerchantPaymentID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMerchantPaymentID) Reset() {
	var v MerchantPaymentID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMerchantPaymentID) SetTo(v MerchantPaymentID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMerchantPaymentID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilMerchantPaymentID) SetToNull() {
	o.Set = true
	o.Null = true
	var v MerchantPaymentID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMerchantPaymentID) Get() (v MerchantPaymentID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilMerchantPaymentID) Or(d MerchantPaymentID) MerchantPaymentID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilMerchantRefundID returns new OptNilMerchantRefundID with value set to v.
func NewOptNilMerchantRefundID(v MerchantRefundID) OptNilMerchantRefundID {
	return OptNilMerchantRefundID{
		Value: v,
		Set:   true,
	}
}

// OptNilMerchantRefundID is optional nullable MerchantRefundID.
type OptNilMerchantRefundID struct {
	Value MerchantRefundID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMerchantRefundID was set.
func (o OptNilMerchantRefundID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMerchantRefundID) Reset() {
	var v MerchantRefundID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMerchantRefundID) SetTo(v MerchantRefundID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMerchantRefundID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilMerchantRefundID) SetToNull() {
	o.Set = true
	o.Null = true
	var v MerchantRefundID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMerchantRefundID) Get() (v MerchantRefundID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilMerchantRefundID) Or(d MerchantRefundID) MerchantRefundID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilMerchantRevertID returns new OptNilMerchantRevertID with value set to v.
func NewOptNilMerchantRevertID(v MerchantRevertID) OptNilMerchantRevertID {
	return OptNilMerchantRevertID{
		Value: v,
		Set:   true,
	}
}

// OptNilMerchantRevertID is optional nullable MerchantRevertID.
type OptNilMerchantRevertID struct {
	Value MerchantRevertID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMerchantRevertID was set.
func (o OptNilMerchantRevertID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMerchantRevertID) Reset() {
	var v MerchantRevertID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMerchantRevertID) SetTo(v MerchantRevertID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMerchantRevertID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilMerchantRevertID) SetToNull() {
	o.Set = true
	o.Null = true
	var v MerchantRevertID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMerchantRevertID) Get() (v MerchantRevertID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilMerchantRevertID) Or(d MerchantRevertID) MerchantRevertID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilMerchantUpdateID returns new OptNilMerchantUpdateID with value set to v.
func NewOptNilMerchantUpdateID(v MerchantUpdateID) OptNilMerchantUpdateID {
	return OptNilMerchantUpdateID{
		Value: v,
		Set:   true,
	}
}

// OptNilMerchantUpdateID is optional nullable MerchantUpdateID.
type OptNilMerchantUpdateID struct {
	Value MerchantUpdateID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMerchantUpdateID was set.
func (o OptNilMerchantUpdateID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMerchantUpdateID) Reset() {
	var v MerchantUpdateID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMerchantUpdateID) SetTo(v MerchantUpdateID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMerchantUpdateID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilMerchantUpdateID) SetToNull() {
	o.Set = true
	o.Null = true
	var v MerchantUpdateID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMerchantUpdateID) Get() (v MerchantUpdateID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilMerchantUpdateID) Or(d MerchantUpdateID) MerchantUpdateID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilName returns new OptNilName with value set to v.
func NewOptNilName(v Name) OptNilName {
	return OptNilName{
		Value: v,
		Set:   true,
	}
}

// OptNilName is optional nullable Name.
type OptNilName struct {
	Value Name
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilName was set.
func (o OptNilName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilName) Reset() {
	var v Name
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilName) SetTo(v Name) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilName) SetToNull() {
	o.Set = true
	o.Null = true
	var v Name
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilName) Get() (v Name, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilName) Or(d Name) Name {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilNontaxableFeeAmount returns new OptNilNontaxableFeeAmount with value set to v.
func NewOptNilNontaxableFeeAmount(v NontaxableFeeAmount) OptNilNontaxableFeeAmount {
	return OptNilNontaxableFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilNontaxableFeeAmount is optional nullable NontaxableFeeAmount.
type OptNilNontaxableFeeAmount struct {
	Value NontaxableFeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNontaxableFeeAmount was set.
func (o OptNilNontaxableFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNontaxableFeeAmount) Reset() {
	var v NontaxableFeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNontaxableFeeAmount) SetTo(v NontaxableFeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNontaxableFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilNontaxableFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v NontaxableFeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNontaxableFeeAmount) Get() (v NontaxableFeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilNontaxableFeeAmount) Or(d NontaxableFeeAmount) NontaxableFeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilOrderDescription returns new OptNilOrderDescription with value set to v.
func NewOptNilOrderDescription(v OrderDescription) OptNilOrderDescription {
	return OptNilOrderDescription{
		Value: v,
		Set:   true,
	}
}

// OptNilOrderDescription is optional nullable OrderDescription.
type OptNilOrderDescription struct {
	Value OrderDescription
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilOrderDescription was set.
func (o OptNilOrderDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilOrderDescription) Reset() {
	var v OrderDescription
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilOrderDescription) SetTo(v OrderDescription) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilOrderDescription) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilOrderDescription) SetToNull() {
	o.Set = true
	o.Null = true
	var v OrderDescription
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilOrderDescription) Get() (v OrderDescription, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilOrderDescription) Or(d OrderDescription) OrderDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilOrderSerial returns new OptNilOrderSerial with value set to v.
func NewOptNilOrderSerial(v OrderSerial) OptNilOrderSerial {
	return OptNilOrderSerial{
		Value: v,
		Set:   true,
	}
}

// OptNilOrderSerial is optional nullable OrderSerial.
type OptNilOrderSerial struct {
	Value OrderSerial
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilOrderSerial was set.
func (o OptNilOrderSerial) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilOrderSerial) Reset() {
	var v OrderSerial
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilOrderSerial) SetTo(v OrderSerial) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilOrderSerial) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilOrderSerial) SetToNull() {
	o.Set = true
	o.Null = true
	var v OrderSerial
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilOrderSerial) Get() (v OrderSerial, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilOrderSerial) Or(d OrderSerial) OrderSerial {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentCompletionDate returns new OptNilPaymentCompletionDate with value set to v.
func NewOptNilPaymentCompletionDate(v PaymentCompletionDate) OptNilPaymentCompletionDate {
	return OptNilPaymentCompletionDate{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentCompletionDate is optional nullable PaymentCompletionDate.
type OptNilPaymentCompletionDate struct {
	Value PaymentCompletionDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentCompletionDate was set.
func (o OptNilPaymentCompletionDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentCompletionDate) Reset() {
	var v PaymentCompletionDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentCompletionDate) SetTo(v PaymentCompletionDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentCompletionDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentCompletionDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentCompletionDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentCompletionDate) Get() (v PaymentCompletionDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentCompletionDate) Or(d PaymentCompletionDate) PaymentCompletionDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentDate returns new OptNilPaymentDate with value set to v.
func NewOptNilPaymentDate(v PaymentDate) OptNilPaymentDate {
	return OptNilPaymentDate{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentDate is optional nullable PaymentDate.
type OptNilPaymentDate struct {
	Value PaymentDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentDate was set.
func (o OptNilPaymentDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentDate) Reset() {
	var v PaymentDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentDate) SetTo(v PaymentDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentDate) Get() (v PaymentDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentDate) Or(d PaymentDate) PaymentDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentDeadline returns new OptNilPaymentDeadline with value set to v.
func NewOptNilPaymentDeadline(v PaymentDeadline) OptNilPaymentDeadline {
	return OptNilPaymentDeadline{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentDeadline is optional nullable PaymentDeadline.
type OptNilPaymentDeadline struct {
	Value PaymentDeadline
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentDeadline was set.
func (o OptNilPaymentDeadline) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentDeadline) Reset() {
	var v PaymentDeadline
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentDeadline) SetTo(v PaymentDeadline) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentDeadline) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentDeadline) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentDeadline
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentDeadline) Get() (v PaymentDeadline, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentDeadline) Or(d PaymentDeadline) PaymentDeadline {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentID returns new OptNilPaymentID with value set to v.
func NewOptNilPaymentID(v PaymentID) OptNilPaymentID {
	return OptNilPaymentID{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentID is optional nullable PaymentID.
type OptNilPaymentID struct {
	Value PaymentID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentID was set.
func (o OptNilPaymentID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentID) Reset() {
	var v PaymentID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentID) SetTo(v PaymentID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentID) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentID) Get() (v PaymentID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentID) Or(d PaymentID) PaymentID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentKonbiniCancelingResponseBarcodeFormat returns new OptNilPaymentKonbiniCancelingResponseBarcodeFormat with value set to v.
func NewOptNilPaymentKonbiniCancelingResponseBarcodeFormat(v PaymentKonbiniCancelingResponseBarcodeFormat) OptNilPaymentKonbiniCancelingResponseBarcodeFormat {
	return OptNilPaymentKonbiniCancelingResponseBarcodeFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentKonbiniCancelingResponseBarcodeFormat is optional nullable PaymentKonbiniCancelingResponseBarcodeFormat.
type OptNilPaymentKonbiniCancelingResponseBarcodeFormat struct {
	Value PaymentKonbiniCancelingResponseBarcodeFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentKonbiniCancelingResponseBarcodeFormat was set.
func (o OptNilPaymentKonbiniCancelingResponseBarcodeFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentKonbiniCancelingResponseBarcodeFormat) Reset() {
	var v PaymentKonbiniCancelingResponseBarcodeFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentKonbiniCancelingResponseBarcodeFormat) SetTo(v PaymentKonbiniCancelingResponseBarcodeFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentKonbiniCancelingResponseBarcodeFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentKonbiniCancelingResponseBarcodeFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentKonbiniCancelingResponseBarcodeFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentKonbiniCancelingResponseBarcodeFormat) Get() (v PaymentKonbiniCancelingResponseBarcodeFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentKonbiniCancelingResponseBarcodeFormat) Or(d PaymentKonbiniCancelingResponseBarcodeFormat) PaymentKonbiniCancelingResponseBarcodeFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentKonbiniCreatingResponseBarcodeFormat returns new OptNilPaymentKonbiniCreatingResponseBarcodeFormat with value set to v.
func NewOptNilPaymentKonbiniCreatingResponseBarcodeFormat(v PaymentKonbiniCreatingResponseBarcodeFormat) OptNilPaymentKonbiniCreatingResponseBarcodeFormat {
	return OptNilPaymentKonbiniCreatingResponseBarcodeFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentKonbiniCreatingResponseBarcodeFormat is optional nullable PaymentKonbiniCreatingResponseBarcodeFormat.
type OptNilPaymentKonbiniCreatingResponseBarcodeFormat struct {
	Value PaymentKonbiniCreatingResponseBarcodeFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentKonbiniCreatingResponseBarcodeFormat was set.
func (o OptNilPaymentKonbiniCreatingResponseBarcodeFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentKonbiniCreatingResponseBarcodeFormat) Reset() {
	var v PaymentKonbiniCreatingResponseBarcodeFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentKonbiniCreatingResponseBarcodeFormat) SetTo(v PaymentKonbiniCreatingResponseBarcodeFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentKonbiniCreatingResponseBarcodeFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentKonbiniCreatingResponseBarcodeFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentKonbiniCreatingResponseBarcodeFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentKonbiniCreatingResponseBarcodeFormat) Get() (v PaymentKonbiniCreatingResponseBarcodeFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentKonbiniCreatingResponseBarcodeFormat) Or(d PaymentKonbiniCreatingResponseBarcodeFormat) PaymentKonbiniCreatingResponseBarcodeFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentKonbiniExecutingResponseBarcodeFormat returns new OptNilPaymentKonbiniExecutingResponseBarcodeFormat with value set to v.
func NewOptNilPaymentKonbiniExecutingResponseBarcodeFormat(v PaymentKonbiniExecutingResponseBarcodeFormat) OptNilPaymentKonbiniExecutingResponseBarcodeFormat {
	return OptNilPaymentKonbiniExecutingResponseBarcodeFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentKonbiniExecutingResponseBarcodeFormat is optional nullable PaymentKonbiniExecutingResponseBarcodeFormat.
type OptNilPaymentKonbiniExecutingResponseBarcodeFormat struct {
	Value PaymentKonbiniExecutingResponseBarcodeFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentKonbiniExecutingResponseBarcodeFormat was set.
func (o OptNilPaymentKonbiniExecutingResponseBarcodeFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentKonbiniExecutingResponseBarcodeFormat) Reset() {
	var v PaymentKonbiniExecutingResponseBarcodeFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentKonbiniExecutingResponseBarcodeFormat) SetTo(v PaymentKonbiniExecutingResponseBarcodeFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentKonbiniExecutingResponseBarcodeFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentKonbiniExecutingResponseBarcodeFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentKonbiniExecutingResponseBarcodeFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentKonbiniExecutingResponseBarcodeFormat) Get() (v PaymentKonbiniExecutingResponseBarcodeFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentKonbiniExecutingResponseBarcodeFormat) Or(d PaymentKonbiniExecutingResponseBarcodeFormat) PaymentKonbiniExecutingResponseBarcodeFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat returns new OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat with value set to v.
func NewOptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat(v PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat {
	return OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat is optional nullable PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat.
type OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat struct {
	Value PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat was set.
func (o OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) Reset() {
	var v PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) SetTo(v PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) Get() (v PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) Or(d PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat returns new OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat with value set to v.
func NewOptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat(v PaymentKonbiniListRetrievingResponseListItemBarcodeFormat) OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat {
	return OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat is optional nullable PaymentKonbiniListRetrievingResponseListItemBarcodeFormat.
type OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat struct {
	Value PaymentKonbiniListRetrievingResponseListItemBarcodeFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat was set.
func (o OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat) Reset() {
	var v PaymentKonbiniListRetrievingResponseListItemBarcodeFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat) SetTo(v PaymentKonbiniListRetrievingResponseListItemBarcodeFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentKonbiniListRetrievingResponseListItemBarcodeFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat) Get() (v PaymentKonbiniListRetrievingResponseListItemBarcodeFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat) Or(d PaymentKonbiniListRetrievingResponseListItemBarcodeFormat) PaymentKonbiniListRetrievingResponseListItemBarcodeFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentKonbiniRetrievingResponseBarcodeFormat returns new OptNilPaymentKonbiniRetrievingResponseBarcodeFormat with value set to v.
func NewOptNilPaymentKonbiniRetrievingResponseBarcodeFormat(v PaymentKonbiniRetrievingResponseBarcodeFormat) OptNilPaymentKonbiniRetrievingResponseBarcodeFormat {
	return OptNilPaymentKonbiniRetrievingResponseBarcodeFormat{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentKonbiniRetrievingResponseBarcodeFormat is optional nullable PaymentKonbiniRetrievingResponseBarcodeFormat.
type OptNilPaymentKonbiniRetrievingResponseBarcodeFormat struct {
	Value PaymentKonbiniRetrievingResponseBarcodeFormat
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentKonbiniRetrievingResponseBarcodeFormat was set.
func (o OptNilPaymentKonbiniRetrievingResponseBarcodeFormat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentKonbiniRetrievingResponseBarcodeFormat) Reset() {
	var v PaymentKonbiniRetrievingResponseBarcodeFormat
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentKonbiniRetrievingResponseBarcodeFormat) SetTo(v PaymentKonbiniRetrievingResponseBarcodeFormat) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentKonbiniRetrievingResponseBarcodeFormat) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentKonbiniRetrievingResponseBarcodeFormat) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentKonbiniRetrievingResponseBarcodeFormat
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentKonbiniRetrievingResponseBarcodeFormat) Get() (v PaymentKonbiniRetrievingResponseBarcodeFormat, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentKonbiniRetrievingResponseBarcodeFormat) Or(d PaymentKonbiniRetrievingResponseBarcodeFormat) PaymentKonbiniRetrievingResponseBarcodeFormat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentMethodCard returns new OptNilPaymentMethodCard with value set to v.
func NewOptNilPaymentMethodCard(v PaymentMethodCard) OptNilPaymentMethodCard {
	return OptNilPaymentMethodCard{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentMethodCard is optional nullable PaymentMethodCard.
type OptNilPaymentMethodCard struct {
	Value PaymentMethodCard
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentMethodCard was set.
func (o OptNilPaymentMethodCard) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentMethodCard) Reset() {
	var v PaymentMethodCard
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentMethodCard) SetTo(v PaymentMethodCard) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentMethodCard) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentMethodCard) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentMethodCard
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentMethodCard) Get() (v PaymentMethodCard, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentMethodCard) Or(d PaymentMethodCard) PaymentMethodCard {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentMethodDirectdebit returns new OptNilPaymentMethodDirectdebit with value set to v.
func NewOptNilPaymentMethodDirectdebit(v PaymentMethodDirectdebit) OptNilPaymentMethodDirectdebit {
	return OptNilPaymentMethodDirectdebit{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentMethodDirectdebit is optional nullable PaymentMethodDirectdebit.
type OptNilPaymentMethodDirectdebit struct {
	Value PaymentMethodDirectdebit
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentMethodDirectdebit was set.
func (o OptNilPaymentMethodDirectdebit) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentMethodDirectdebit) Reset() {
	var v PaymentMethodDirectdebit
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentMethodDirectdebit) SetTo(v PaymentMethodDirectdebit) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentMethodDirectdebit) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentMethodDirectdebit) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentMethodDirectdebit
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentMethodDirectdebit) Get() (v PaymentMethodDirectdebit, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentMethodDirectdebit) Or(d PaymentMethodDirectdebit) PaymentMethodDirectdebit {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentMethodDirectdebitAccountType returns new OptNilPaymentMethodDirectdebitAccountType with value set to v.
func NewOptNilPaymentMethodDirectdebitAccountType(v PaymentMethodDirectdebitAccountType) OptNilPaymentMethodDirectdebitAccountType {
	return OptNilPaymentMethodDirectdebitAccountType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentMethodDirectdebitAccountType is optional nullable PaymentMethodDirectdebitAccountType.
type OptNilPaymentMethodDirectdebitAccountType struct {
	Value PaymentMethodDirectdebitAccountType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentMethodDirectdebitAccountType was set.
func (o OptNilPaymentMethodDirectdebitAccountType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentMethodDirectdebitAccountType) Reset() {
	var v PaymentMethodDirectdebitAccountType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentMethodDirectdebitAccountType) SetTo(v PaymentMethodDirectdebitAccountType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentMethodDirectdebitAccountType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentMethodDirectdebitAccountType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentMethodDirectdebitAccountType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentMethodDirectdebitAccountType) Get() (v PaymentMethodDirectdebitAccountType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentMethodDirectdebitAccountType) Or(d PaymentMethodDirectdebitAccountType) PaymentMethodDirectdebitAccountType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentMethodDirectdebitBankType returns new OptNilPaymentMethodDirectdebitBankType with value set to v.
func NewOptNilPaymentMethodDirectdebitBankType(v PaymentMethodDirectdebitBankType) OptNilPaymentMethodDirectdebitBankType {
	return OptNilPaymentMethodDirectdebitBankType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentMethodDirectdebitBankType is optional nullable PaymentMethodDirectdebitBankType.
type OptNilPaymentMethodDirectdebitBankType struct {
	Value PaymentMethodDirectdebitBankType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentMethodDirectdebitBankType was set.
func (o OptNilPaymentMethodDirectdebitBankType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentMethodDirectdebitBankType) Reset() {
	var v PaymentMethodDirectdebitBankType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentMethodDirectdebitBankType) SetTo(v PaymentMethodDirectdebitBankType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentMethodDirectdebitBankType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentMethodDirectdebitBankType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentMethodDirectdebitBankType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentMethodDirectdebitBankType) Get() (v PaymentMethodDirectdebitBankType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentMethodDirectdebitBankType) Or(d PaymentMethodDirectdebitBankType) PaymentMethodDirectdebitBankType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentMethodDirectdebitPaperApplication returns new OptNilPaymentMethodDirectdebitPaperApplication with value set to v.
func NewOptNilPaymentMethodDirectdebitPaperApplication(v PaymentMethodDirectdebitPaperApplication) OptNilPaymentMethodDirectdebitPaperApplication {
	return OptNilPaymentMethodDirectdebitPaperApplication{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentMethodDirectdebitPaperApplication is optional nullable PaymentMethodDirectdebitPaperApplication.
type OptNilPaymentMethodDirectdebitPaperApplication struct {
	Value PaymentMethodDirectdebitPaperApplication
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentMethodDirectdebitPaperApplication was set.
func (o OptNilPaymentMethodDirectdebitPaperApplication) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentMethodDirectdebitPaperApplication) Reset() {
	var v PaymentMethodDirectdebitPaperApplication
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentMethodDirectdebitPaperApplication) SetTo(v PaymentMethodDirectdebitPaperApplication) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentMethodDirectdebitPaperApplication) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentMethodDirectdebitPaperApplication) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentMethodDirectdebitPaperApplication
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentMethodDirectdebitPaperApplication) Get() (v PaymentMethodDirectdebitPaperApplication, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentMethodDirectdebitPaperApplication) Or(d PaymentMethodDirectdebitPaperApplication) PaymentMethodDirectdebitPaperApplication {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentMethodRedirectURLAccessedFlag returns new OptNilPaymentMethodRedirectURLAccessedFlag with value set to v.
func NewOptNilPaymentMethodRedirectURLAccessedFlag(v PaymentMethodRedirectURLAccessedFlag) OptNilPaymentMethodRedirectURLAccessedFlag {
	return OptNilPaymentMethodRedirectURLAccessedFlag{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentMethodRedirectURLAccessedFlag is optional nullable PaymentMethodRedirectURLAccessedFlag.
type OptNilPaymentMethodRedirectURLAccessedFlag struct {
	Value PaymentMethodRedirectURLAccessedFlag
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentMethodRedirectURLAccessedFlag was set.
func (o OptNilPaymentMethodRedirectURLAccessedFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentMethodRedirectURLAccessedFlag) Reset() {
	var v PaymentMethodRedirectURLAccessedFlag
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentMethodRedirectURLAccessedFlag) SetTo(v PaymentMethodRedirectURLAccessedFlag) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentMethodRedirectURLAccessedFlag) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentMethodRedirectURLAccessedFlag) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentMethodRedirectURLAccessedFlag
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentMethodRedirectURLAccessedFlag) Get() (v PaymentMethodRedirectURLAccessedFlag, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentMethodRedirectURLAccessedFlag) Or(d PaymentMethodRedirectURLAccessedFlag) PaymentMethodRedirectURLAccessedFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentPayPayCancelingResponseRedirectType returns new OptNilPaymentPayPayCancelingResponseRedirectType with value set to v.
func NewOptNilPaymentPayPayCancelingResponseRedirectType(v PaymentPayPayCancelingResponseRedirectType) OptNilPaymentPayPayCancelingResponseRedirectType {
	return OptNilPaymentPayPayCancelingResponseRedirectType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentPayPayCancelingResponseRedirectType is optional nullable PaymentPayPayCancelingResponseRedirectType.
type OptNilPaymentPayPayCancelingResponseRedirectType struct {
	Value PaymentPayPayCancelingResponseRedirectType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentPayPayCancelingResponseRedirectType was set.
func (o OptNilPaymentPayPayCancelingResponseRedirectType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentPayPayCancelingResponseRedirectType) Reset() {
	var v PaymentPayPayCancelingResponseRedirectType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentPayPayCancelingResponseRedirectType) SetTo(v PaymentPayPayCancelingResponseRedirectType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentPayPayCancelingResponseRedirectType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentPayPayCancelingResponseRedirectType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentPayPayCancelingResponseRedirectType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentPayPayCancelingResponseRedirectType) Get() (v PaymentPayPayCancelingResponseRedirectType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentPayPayCancelingResponseRedirectType) Or(d PaymentPayPayCancelingResponseRedirectType) PaymentPayPayCancelingResponseRedirectType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentPayPayCapturingResponseRedirectType returns new OptNilPaymentPayPayCapturingResponseRedirectType with value set to v.
func NewOptNilPaymentPayPayCapturingResponseRedirectType(v PaymentPayPayCapturingResponseRedirectType) OptNilPaymentPayPayCapturingResponseRedirectType {
	return OptNilPaymentPayPayCapturingResponseRedirectType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentPayPayCapturingResponseRedirectType is optional nullable PaymentPayPayCapturingResponseRedirectType.
type OptNilPaymentPayPayCapturingResponseRedirectType struct {
	Value PaymentPayPayCapturingResponseRedirectType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentPayPayCapturingResponseRedirectType was set.
func (o OptNilPaymentPayPayCapturingResponseRedirectType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentPayPayCapturingResponseRedirectType) Reset() {
	var v PaymentPayPayCapturingResponseRedirectType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentPayPayCapturingResponseRedirectType) SetTo(v PaymentPayPayCapturingResponseRedirectType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentPayPayCapturingResponseRedirectType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentPayPayCapturingResponseRedirectType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentPayPayCapturingResponseRedirectType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentPayPayCapturingResponseRedirectType) Get() (v PaymentPayPayCapturingResponseRedirectType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentPayPayCapturingResponseRedirectType) Or(d PaymentPayPayCapturingResponseRedirectType) PaymentPayPayCapturingResponseRedirectType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentPayPayChangingAmountResponseRedirectType returns new OptNilPaymentPayPayChangingAmountResponseRedirectType with value set to v.
func NewOptNilPaymentPayPayChangingAmountResponseRedirectType(v PaymentPayPayChangingAmountResponseRedirectType) OptNilPaymentPayPayChangingAmountResponseRedirectType {
	return OptNilPaymentPayPayChangingAmountResponseRedirectType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentPayPayChangingAmountResponseRedirectType is optional nullable PaymentPayPayChangingAmountResponseRedirectType.
type OptNilPaymentPayPayChangingAmountResponseRedirectType struct {
	Value PaymentPayPayChangingAmountResponseRedirectType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentPayPayChangingAmountResponseRedirectType was set.
func (o OptNilPaymentPayPayChangingAmountResponseRedirectType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentPayPayChangingAmountResponseRedirectType) Reset() {
	var v PaymentPayPayChangingAmountResponseRedirectType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentPayPayChangingAmountResponseRedirectType) SetTo(v PaymentPayPayChangingAmountResponseRedirectType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentPayPayChangingAmountResponseRedirectType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentPayPayChangingAmountResponseRedirectType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentPayPayChangingAmountResponseRedirectType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentPayPayChangingAmountResponseRedirectType) Get() (v PaymentPayPayChangingAmountResponseRedirectType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentPayPayChangingAmountResponseRedirectType) Or(d PaymentPayPayChangingAmountResponseRedirectType) PaymentPayPayChangingAmountResponseRedirectType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentPayPayCreatingResponseRedirectType returns new OptNilPaymentPayPayCreatingResponseRedirectType with value set to v.
func NewOptNilPaymentPayPayCreatingResponseRedirectType(v PaymentPayPayCreatingResponseRedirectType) OptNilPaymentPayPayCreatingResponseRedirectType {
	return OptNilPaymentPayPayCreatingResponseRedirectType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentPayPayCreatingResponseRedirectType is optional nullable PaymentPayPayCreatingResponseRedirectType.
type OptNilPaymentPayPayCreatingResponseRedirectType struct {
	Value PaymentPayPayCreatingResponseRedirectType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentPayPayCreatingResponseRedirectType was set.
func (o OptNilPaymentPayPayCreatingResponseRedirectType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentPayPayCreatingResponseRedirectType) Reset() {
	var v PaymentPayPayCreatingResponseRedirectType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentPayPayCreatingResponseRedirectType) SetTo(v PaymentPayPayCreatingResponseRedirectType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentPayPayCreatingResponseRedirectType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentPayPayCreatingResponseRedirectType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentPayPayCreatingResponseRedirectType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentPayPayCreatingResponseRedirectType) Get() (v PaymentPayPayCreatingResponseRedirectType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentPayPayCreatingResponseRedirectType) Or(d PaymentPayPayCreatingResponseRedirectType) PaymentPayPayCreatingResponseRedirectType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentPayPayExecutingResponseRedirectType returns new OptNilPaymentPayPayExecutingResponseRedirectType with value set to v.
func NewOptNilPaymentPayPayExecutingResponseRedirectType(v PaymentPayPayExecutingResponseRedirectType) OptNilPaymentPayPayExecutingResponseRedirectType {
	return OptNilPaymentPayPayExecutingResponseRedirectType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentPayPayExecutingResponseRedirectType is optional nullable PaymentPayPayExecutingResponseRedirectType.
type OptNilPaymentPayPayExecutingResponseRedirectType struct {
	Value PaymentPayPayExecutingResponseRedirectType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentPayPayExecutingResponseRedirectType was set.
func (o OptNilPaymentPayPayExecutingResponseRedirectType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentPayPayExecutingResponseRedirectType) Reset() {
	var v PaymentPayPayExecutingResponseRedirectType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentPayPayExecutingResponseRedirectType) SetTo(v PaymentPayPayExecutingResponseRedirectType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentPayPayExecutingResponseRedirectType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentPayPayExecutingResponseRedirectType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentPayPayExecutingResponseRedirectType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentPayPayExecutingResponseRedirectType) Get() (v PaymentPayPayExecutingResponseRedirectType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentPayPayExecutingResponseRedirectType) Or(d PaymentPayPayExecutingResponseRedirectType) PaymentPayPayExecutingResponseRedirectType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentPayPayListRetrievingResponseListItemRedirectType returns new OptNilPaymentPayPayListRetrievingResponseListItemRedirectType with value set to v.
func NewOptNilPaymentPayPayListRetrievingResponseListItemRedirectType(v PaymentPayPayListRetrievingResponseListItemRedirectType) OptNilPaymentPayPayListRetrievingResponseListItemRedirectType {
	return OptNilPaymentPayPayListRetrievingResponseListItemRedirectType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentPayPayListRetrievingResponseListItemRedirectType is optional nullable PaymentPayPayListRetrievingResponseListItemRedirectType.
type OptNilPaymentPayPayListRetrievingResponseListItemRedirectType struct {
	Value PaymentPayPayListRetrievingResponseListItemRedirectType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentPayPayListRetrievingResponseListItemRedirectType was set.
func (o OptNilPaymentPayPayListRetrievingResponseListItemRedirectType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentPayPayListRetrievingResponseListItemRedirectType) Reset() {
	var v PaymentPayPayListRetrievingResponseListItemRedirectType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentPayPayListRetrievingResponseListItemRedirectType) SetTo(v PaymentPayPayListRetrievingResponseListItemRedirectType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentPayPayListRetrievingResponseListItemRedirectType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentPayPayListRetrievingResponseListItemRedirectType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentPayPayListRetrievingResponseListItemRedirectType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentPayPayListRetrievingResponseListItemRedirectType) Get() (v PaymentPayPayListRetrievingResponseListItemRedirectType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentPayPayListRetrievingResponseListItemRedirectType) Or(d PaymentPayPayListRetrievingResponseListItemRedirectType) PaymentPayPayListRetrievingResponseListItemRedirectType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentPayPayRetrievingResponseRedirectType returns new OptNilPaymentPayPayRetrievingResponseRedirectType with value set to v.
func NewOptNilPaymentPayPayRetrievingResponseRedirectType(v PaymentPayPayRetrievingResponseRedirectType) OptNilPaymentPayPayRetrievingResponseRedirectType {
	return OptNilPaymentPayPayRetrievingResponseRedirectType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentPayPayRetrievingResponseRedirectType is optional nullable PaymentPayPayRetrievingResponseRedirectType.
type OptNilPaymentPayPayRetrievingResponseRedirectType struct {
	Value PaymentPayPayRetrievingResponseRedirectType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentPayPayRetrievingResponseRedirectType was set.
func (o OptNilPaymentPayPayRetrievingResponseRedirectType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentPayPayRetrievingResponseRedirectType) Reset() {
	var v PaymentPayPayRetrievingResponseRedirectType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentPayPayRetrievingResponseRedirectType) SetTo(v PaymentPayPayRetrievingResponseRedirectType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentPayPayRetrievingResponseRedirectType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentPayPayRetrievingResponseRedirectType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentPayPayRetrievingResponseRedirectType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentPayPayRetrievingResponseRedirectType) Get() (v PaymentPayPayRetrievingResponseRedirectType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentPayPayRetrievingResponseRedirectType) Or(d PaymentPayPayRetrievingResponseRedirectType) PaymentPayPayRetrievingResponseRedirectType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentSessionCreatingRequestCard returns new OptNilPaymentSessionCreatingRequestCard with value set to v.
func NewOptNilPaymentSessionCreatingRequestCard(v PaymentSessionCreatingRequestCard) OptNilPaymentSessionCreatingRequestCard {
	return OptNilPaymentSessionCreatingRequestCard{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentSessionCreatingRequestCard is optional nullable PaymentSessionCreatingRequestCard.
type OptNilPaymentSessionCreatingRequestCard struct {
	Value PaymentSessionCreatingRequestCard
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentSessionCreatingRequestCard was set.
func (o OptNilPaymentSessionCreatingRequestCard) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentSessionCreatingRequestCard) Reset() {
	var v PaymentSessionCreatingRequestCard
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentSessionCreatingRequestCard) SetTo(v PaymentSessionCreatingRequestCard) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentSessionCreatingRequestCard) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentSessionCreatingRequestCard) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentSessionCreatingRequestCard
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentSessionCreatingRequestCard) Get() (v PaymentSessionCreatingRequestCard, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentSessionCreatingRequestCard) Or(d PaymentSessionCreatingRequestCard) PaymentSessionCreatingRequestCard {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentSessionCreatingRequestKonbini returns new OptNilPaymentSessionCreatingRequestKonbini with value set to v.
func NewOptNilPaymentSessionCreatingRequestKonbini(v PaymentSessionCreatingRequestKonbini) OptNilPaymentSessionCreatingRequestKonbini {
	return OptNilPaymentSessionCreatingRequestKonbini{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentSessionCreatingRequestKonbini is optional nullable PaymentSessionCreatingRequestKonbini.
type OptNilPaymentSessionCreatingRequestKonbini struct {
	Value PaymentSessionCreatingRequestKonbini
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentSessionCreatingRequestKonbini was set.
func (o OptNilPaymentSessionCreatingRequestKonbini) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentSessionCreatingRequestKonbini) Reset() {
	var v PaymentSessionCreatingRequestKonbini
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentSessionCreatingRequestKonbini) SetTo(v PaymentSessionCreatingRequestKonbini) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentSessionCreatingRequestKonbini) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentSessionCreatingRequestKonbini) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentSessionCreatingRequestKonbini
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentSessionCreatingRequestKonbini) Get() (v PaymentSessionCreatingRequestKonbini, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentSessionCreatingRequestKonbini) Or(d PaymentSessionCreatingRequestKonbini) PaymentSessionCreatingRequestKonbini {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentSessionCreatingRequestPaypay returns new OptNilPaymentSessionCreatingRequestPaypay with value set to v.
func NewOptNilPaymentSessionCreatingRequestPaypay(v PaymentSessionCreatingRequestPaypay) OptNilPaymentSessionCreatingRequestPaypay {
	return OptNilPaymentSessionCreatingRequestPaypay{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentSessionCreatingRequestPaypay is optional nullable PaymentSessionCreatingRequestPaypay.
type OptNilPaymentSessionCreatingRequestPaypay struct {
	Value PaymentSessionCreatingRequestPaypay
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentSessionCreatingRequestPaypay was set.
func (o OptNilPaymentSessionCreatingRequestPaypay) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentSessionCreatingRequestPaypay) Reset() {
	var v PaymentSessionCreatingRequestPaypay
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentSessionCreatingRequestPaypay) SetTo(v PaymentSessionCreatingRequestPaypay) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentSessionCreatingRequestPaypay) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentSessionCreatingRequestPaypay) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentSessionCreatingRequestPaypay
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentSessionCreatingRequestPaypay) Get() (v PaymentSessionCreatingRequestPaypay, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentSessionCreatingRequestPaypay) Or(d PaymentSessionCreatingRequestPaypay) PaymentSessionCreatingRequestPaypay {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentTerm returns new OptNilPaymentTerm with value set to v.
func NewOptNilPaymentTerm(v PaymentTerm) OptNilPaymentTerm {
	return OptNilPaymentTerm{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentTerm is optional nullable PaymentTerm.
type OptNilPaymentTerm struct {
	Value PaymentTerm
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentTerm was set.
func (o OptNilPaymentTerm) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentTerm) Reset() {
	var v PaymentTerm
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentTerm) SetTo(v PaymentTerm) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentTerm) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentTerm) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentTerm
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentTerm) Get() (v PaymentTerm, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentTerm) Or(d PaymentTerm) PaymentTerm {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaymentTermDay returns new OptNilPaymentTermDay with value set to v.
func NewOptNilPaymentTermDay(v PaymentTermDay) OptNilPaymentTermDay {
	return OptNilPaymentTermDay{
		Value: v,
		Set:   true,
	}
}

// OptNilPaymentTermDay is optional nullable PaymentTermDay.
type OptNilPaymentTermDay struct {
	Value PaymentTermDay
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaymentTermDay was set.
func (o OptNilPaymentTermDay) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaymentTermDay) Reset() {
	var v PaymentTermDay
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaymentTermDay) SetTo(v PaymentTermDay) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaymentTermDay) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaymentTermDay) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaymentTermDay
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaymentTermDay) Get() (v PaymentTermDay, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaymentTermDay) Or(d PaymentTermDay) PaymentTermDay {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPaypayContentCategoryType returns new OptNilPaypayContentCategoryType with value set to v.
func NewOptNilPaypayContentCategoryType(v PaypayContentCategoryType) OptNilPaypayContentCategoryType {
	return OptNilPaypayContentCategoryType{
		Value: v,
		Set:   true,
	}
}

// OptNilPaypayContentCategoryType is optional nullable PaypayContentCategoryType.
type OptNilPaypayContentCategoryType struct {
	Value PaypayContentCategoryType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPaypayContentCategoryType was set.
func (o OptNilPaypayContentCategoryType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPaypayContentCategoryType) Reset() {
	var v PaypayContentCategoryType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPaypayContentCategoryType) SetTo(v PaypayContentCategoryType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPaypayContentCategoryType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPaypayContentCategoryType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PaypayContentCategoryType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPaypayContentCategoryType) Get() (v PaypayContentCategoryType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPaypayContentCategoryType) Or(d PaypayContentCategoryType) PaypayContentCategoryType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPhoneCc returns new OptNilPhoneCc with value set to v.
func NewOptNilPhoneCc(v PhoneCc) OptNilPhoneCc {
	return OptNilPhoneCc{
		Value: v,
		Set:   true,
	}
}

// OptNilPhoneCc is optional nullable PhoneCc.
type OptNilPhoneCc struct {
	Value PhoneCc
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPhoneCc was set.
func (o OptNilPhoneCc) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPhoneCc) Reset() {
	var v PhoneCc
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPhoneCc) SetTo(v PhoneCc) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPhoneCc) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPhoneCc) SetToNull() {
	o.Set = true
	o.Null = true
	var v PhoneCc
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPhoneCc) Get() (v PhoneCc, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPhoneCc) Or(d PhoneCc) PhoneCc {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPhoneNo returns new OptNilPhoneNo with value set to v.
func NewOptNilPhoneNo(v PhoneNo) OptNilPhoneNo {
	return OptNilPhoneNo{
		Value: v,
		Set:   true,
	}
}

// OptNilPhoneNo is optional nullable PhoneNo.
type OptNilPhoneNo struct {
	Value PhoneNo
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPhoneNo was set.
func (o OptNilPhoneNo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPhoneNo) Reset() {
	var v PhoneNo
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPhoneNo) SetTo(v PhoneNo) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPhoneNo) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPhoneNo) SetToNull() {
	o.Set = true
	o.Null = true
	var v PhoneNo
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPhoneNo) Get() (v PhoneNo, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPhoneNo) Or(d PhoneNo) PhoneNo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPlatformAccountPropertiesTotalAmount returns new OptNilPlatformAccountPropertiesTotalAmount with value set to v.
func NewOptNilPlatformAccountPropertiesTotalAmount(v PlatformAccountPropertiesTotalAmount) OptNilPlatformAccountPropertiesTotalAmount {
	return OptNilPlatformAccountPropertiesTotalAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPlatformAccountPropertiesTotalAmount is optional nullable PlatformAccountPropertiesTotalAmount.
type OptNilPlatformAccountPropertiesTotalAmount struct {
	Value PlatformAccountPropertiesTotalAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPlatformAccountPropertiesTotalAmount was set.
func (o OptNilPlatformAccountPropertiesTotalAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPlatformAccountPropertiesTotalAmount) Reset() {
	var v PlatformAccountPropertiesTotalAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPlatformAccountPropertiesTotalAmount) SetTo(v PlatformAccountPropertiesTotalAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPlatformAccountPropertiesTotalAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPlatformAccountPropertiesTotalAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PlatformAccountPropertiesTotalAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPlatformAccountPropertiesTotalAmount) Get() (v PlatformAccountPropertiesTotalAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPlatformAccountPropertiesTotalAmount) Or(d PlatformAccountPropertiesTotalAmount) PlatformAccountPropertiesTotalAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPlatformFeeAmount returns new OptNilPlatformFeeAmount with value set to v.
func NewOptNilPlatformFeeAmount(v PlatformFeeAmount) OptNilPlatformFeeAmount {
	return OptNilPlatformFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPlatformFeeAmount is optional nullable PlatformFeeAmount.
type OptNilPlatformFeeAmount struct {
	Value PlatformFeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPlatformFeeAmount was set.
func (o OptNilPlatformFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPlatformFeeAmount) Reset() {
	var v PlatformFeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPlatformFeeAmount) SetTo(v PlatformFeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPlatformFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPlatformFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PlatformFeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPlatformFeeAmount) Get() (v PlatformFeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPlatformFeeAmount) Or(d PlatformFeeAmount) PlatformFeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPlatformFeeTaxAmount returns new OptNilPlatformFeeTaxAmount with value set to v.
func NewOptNilPlatformFeeTaxAmount(v PlatformFeeTaxAmount) OptNilPlatformFeeTaxAmount {
	return OptNilPlatformFeeTaxAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPlatformFeeTaxAmount is optional nullable PlatformFeeTaxAmount.
type OptNilPlatformFeeTaxAmount struct {
	Value PlatformFeeTaxAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPlatformFeeTaxAmount was set.
func (o OptNilPlatformFeeTaxAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPlatformFeeTaxAmount) Reset() {
	var v PlatformFeeTaxAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPlatformFeeTaxAmount) SetTo(v PlatformFeeTaxAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPlatformFeeTaxAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPlatformFeeTaxAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PlatformFeeTaxAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPlatformFeeTaxAmount) Get() (v PlatformFeeTaxAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPlatformFeeTaxAmount) Or(d PlatformFeeTaxAmount) PlatformFeeTaxAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPlatformName returns new OptNilPlatformName with value set to v.
func NewOptNilPlatformName(v PlatformName) OptNilPlatformName {
	return OptNilPlatformName{
		Value: v,
		Set:   true,
	}
}

// OptNilPlatformName is optional nullable PlatformName.
type OptNilPlatformName struct {
	Value PlatformName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPlatformName was set.
func (o OptNilPlatformName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPlatformName) Reset() {
	var v PlatformName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPlatformName) SetTo(v PlatformName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPlatformName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPlatformName) SetToNull() {
	o.Set = true
	o.Null = true
	var v PlatformName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPlatformName) Get() (v PlatformName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPlatformName) Or(d PlatformName) PlatformName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPlatformRate returns new OptNilPlatformRate with value set to v.
func NewOptNilPlatformRate(v PlatformRate) OptNilPlatformRate {
	return OptNilPlatformRate{
		Value: v,
		Set:   true,
	}
}

// OptNilPlatformRate is optional nullable PlatformRate.
type OptNilPlatformRate struct {
	Value PlatformRate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPlatformRate was set.
func (o OptNilPlatformRate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPlatformRate) Reset() {
	var v PlatformRate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPlatformRate) SetTo(v PlatformRate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPlatformRate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPlatformRate) SetToNull() {
	o.Set = true
	o.Null = true
	var v PlatformRate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPlatformRate) Get() (v PlatformRate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPlatformRate) Or(d PlatformRate) PlatformRate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPlatformRateConfigPaypayContentCategoryType returns new OptNilPlatformRateConfigPaypayContentCategoryType with value set to v.
func NewOptNilPlatformRateConfigPaypayContentCategoryType(v PlatformRateConfigPaypayContentCategoryType) OptNilPlatformRateConfigPaypayContentCategoryType {
	return OptNilPlatformRateConfigPaypayContentCategoryType{
		Value: v,
		Set:   true,
	}
}

// OptNilPlatformRateConfigPaypayContentCategoryType is optional nullable PlatformRateConfigPaypayContentCategoryType.
type OptNilPlatformRateConfigPaypayContentCategoryType struct {
	Value PlatformRateConfigPaypayContentCategoryType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPlatformRateConfigPaypayContentCategoryType was set.
func (o OptNilPlatformRateConfigPaypayContentCategoryType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPlatformRateConfigPaypayContentCategoryType) Reset() {
	var v PlatformRateConfigPaypayContentCategoryType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPlatformRateConfigPaypayContentCategoryType) SetTo(v PlatformRateConfigPaypayContentCategoryType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPlatformRateConfigPaypayContentCategoryType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPlatformRateConfigPaypayContentCategoryType) SetToNull() {
	o.Set = true
	o.Null = true
	var v PlatformRateConfigPaypayContentCategoryType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPlatformRateConfigPaypayContentCategoryType) Get() (v PlatformRateConfigPaypayContentCategoryType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPlatformRateConfigPaypayContentCategoryType) Or(d PlatformRateConfigPaypayContentCategoryType) PlatformRateConfigPaypayContentCategoryType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPlatformWebRegistrationFeeAmount returns new OptNilPlatformWebRegistrationFeeAmount with value set to v.
func NewOptNilPlatformWebRegistrationFeeAmount(v PlatformWebRegistrationFeeAmount) OptNilPlatformWebRegistrationFeeAmount {
	return OptNilPlatformWebRegistrationFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPlatformWebRegistrationFeeAmount is optional nullable PlatformWebRegistrationFeeAmount.
type OptNilPlatformWebRegistrationFeeAmount struct {
	Value PlatformWebRegistrationFeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPlatformWebRegistrationFeeAmount was set.
func (o OptNilPlatformWebRegistrationFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPlatformWebRegistrationFeeAmount) Reset() {
	var v PlatformWebRegistrationFeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPlatformWebRegistrationFeeAmount) SetTo(v PlatformWebRegistrationFeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPlatformWebRegistrationFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPlatformWebRegistrationFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PlatformWebRegistrationFeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPlatformWebRegistrationFeeAmount) Get() (v PlatformWebRegistrationFeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPlatformWebRegistrationFeeAmount) Or(d PlatformWebRegistrationFeeAmount) PlatformWebRegistrationFeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPrepaidPoint returns new OptNilPrepaidPoint with value set to v.
func NewOptNilPrepaidPoint(v PrepaidPoint) OptNilPrepaidPoint {
	return OptNilPrepaidPoint{
		Value: v,
		Set:   true,
	}
}

// OptNilPrepaidPoint is optional nullable PrepaidPoint.
type OptNilPrepaidPoint struct {
	Value PrepaidPoint
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPrepaidPoint was set.
func (o OptNilPrepaidPoint) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPrepaidPoint) Reset() {
	var v PrepaidPoint
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPrepaidPoint) SetTo(v PrepaidPoint) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPrepaidPoint) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPrepaidPoint) SetToNull() {
	o.Set = true
	o.Null = true
	var v PrepaidPoint
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPrepaidPoint) Get() (v PrepaidPoint, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPrepaidPoint) Or(d PrepaidPoint) PrepaidPoint {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilProcessDate returns new OptNilProcessDate with value set to v.
func NewOptNilProcessDate(v ProcessDate) OptNilProcessDate {
	return OptNilProcessDate{
		Value: v,
		Set:   true,
	}
}

// OptNilProcessDate is optional nullable ProcessDate.
type OptNilProcessDate struct {
	Value ProcessDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilProcessDate was set.
func (o OptNilProcessDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilProcessDate) Reset() {
	var v ProcessDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilProcessDate) SetTo(v ProcessDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilProcessDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilProcessDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v ProcessDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilProcessDate) Get() (v ProcessDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilProcessDate) Or(d ProcessDate) ProcessDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilProduct returns new OptNilProduct with value set to v.
func NewOptNilProduct(v Product) OptNilProduct {
	return OptNilProduct{
		Value: v,
		Set:   true,
	}
}

// OptNilProduct is optional nullable Product.
type OptNilProduct struct {
	Value Product
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilProduct was set.
func (o OptNilProduct) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilProduct) Reset() {
	var v Product
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilProduct) SetTo(v Product) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilProduct) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilProduct) SetToNull() {
	o.Set = true
	o.Null = true
	var v Product
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilProduct) Get() (v Product, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilProduct) Or(d Product) Product {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesAggregateTermEnd returns new OptNilPropertiesAggregateTermEnd with value set to v.
func NewOptNilPropertiesAggregateTermEnd(v PropertiesAggregateTermEnd) OptNilPropertiesAggregateTermEnd {
	return OptNilPropertiesAggregateTermEnd{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesAggregateTermEnd is optional nullable PropertiesAggregateTermEnd.
type OptNilPropertiesAggregateTermEnd struct {
	Value PropertiesAggregateTermEnd
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesAggregateTermEnd was set.
func (o OptNilPropertiesAggregateTermEnd) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesAggregateTermEnd) Reset() {
	var v PropertiesAggregateTermEnd
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesAggregateTermEnd) SetTo(v PropertiesAggregateTermEnd) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesAggregateTermEnd) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesAggregateTermEnd) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesAggregateTermEnd
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesAggregateTermEnd) Get() (v PropertiesAggregateTermEnd, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesAggregateTermEnd) Or(d PropertiesAggregateTermEnd) PropertiesAggregateTermEnd {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesAggregateTermStart returns new OptNilPropertiesAggregateTermStart with value set to v.
func NewOptNilPropertiesAggregateTermStart(v PropertiesAggregateTermStart) OptNilPropertiesAggregateTermStart {
	return OptNilPropertiesAggregateTermStart{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesAggregateTermStart is optional nullable PropertiesAggregateTermStart.
type OptNilPropertiesAggregateTermStart struct {
	Value PropertiesAggregateTermStart
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesAggregateTermStart was set.
func (o OptNilPropertiesAggregateTermStart) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesAggregateTermStart) Reset() {
	var v PropertiesAggregateTermStart
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesAggregateTermStart) SetTo(v PropertiesAggregateTermStart) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesAggregateTermStart) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesAggregateTermStart) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesAggregateTermStart
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesAggregateTermStart) Get() (v PropertiesAggregateTermStart, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesAggregateTermStart) Or(d PropertiesAggregateTermStart) PropertiesAggregateTermStart {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesCancelURL returns new OptNilPropertiesCancelURL with value set to v.
func NewOptNilPropertiesCancelURL(v PropertiesCancelURL) OptNilPropertiesCancelURL {
	return OptNilPropertiesCancelURL{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesCancelURL is optional nullable PropertiesCancelURL.
type OptNilPropertiesCancelURL struct {
	Value PropertiesCancelURL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesCancelURL was set.
func (o OptNilPropertiesCancelURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesCancelURL) Reset() {
	var v PropertiesCancelURL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesCancelURL) SetTo(v PropertiesCancelURL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesCancelURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesCancelURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesCancelURL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesCancelURL) Get() (v PropertiesCancelURL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesCancelURL) Or(d PropertiesCancelURL) PropertiesCancelURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesCount returns new OptNilPropertiesCount with value set to v.
func NewOptNilPropertiesCount(v PropertiesCount) OptNilPropertiesCount {
	return OptNilPropertiesCount{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesCount is optional nullable PropertiesCount.
type OptNilPropertiesCount struct {
	Value PropertiesCount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesCount was set.
func (o OptNilPropertiesCount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesCount) Reset() {
	var v PropertiesCount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesCount) SetTo(v PropertiesCount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesCount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesCount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesCount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesCount) Get() (v PropertiesCount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesCount) Or(d PropertiesCount) PropertiesCount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesCustomerGroupID returns new OptNilPropertiesCustomerGroupID with value set to v.
func NewOptNilPropertiesCustomerGroupID(v PropertiesCustomerGroupID) OptNilPropertiesCustomerGroupID {
	return OptNilPropertiesCustomerGroupID{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesCustomerGroupID is optional nullable PropertiesCustomerGroupID.
type OptNilPropertiesCustomerGroupID struct {
	Value PropertiesCustomerGroupID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesCustomerGroupID was set.
func (o OptNilPropertiesCustomerGroupID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesCustomerGroupID) Reset() {
	var v PropertiesCustomerGroupID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesCustomerGroupID) SetTo(v PropertiesCustomerGroupID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesCustomerGroupID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesCustomerGroupID) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesCustomerGroupID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesCustomerGroupID) Get() (v PropertiesCustomerGroupID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesCustomerGroupID) Or(d PropertiesCustomerGroupID) PropertiesCustomerGroupID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesDepositAmount returns new OptNilPropertiesDepositAmount with value set to v.
func NewOptNilPropertiesDepositAmount(v PropertiesDepositAmount) OptNilPropertiesDepositAmount {
	return OptNilPropertiesDepositAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesDepositAmount is optional nullable PropertiesDepositAmount.
type OptNilPropertiesDepositAmount struct {
	Value PropertiesDepositAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesDepositAmount was set.
func (o OptNilPropertiesDepositAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesDepositAmount) Reset() {
	var v PropertiesDepositAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesDepositAmount) SetTo(v PropertiesDepositAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesDepositAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesDepositAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesDepositAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesDepositAmount) Get() (v PropertiesDepositAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesDepositAmount) Or(d PropertiesDepositAmount) PropertiesDepositAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesDepositDate returns new OptNilPropertiesDepositDate with value set to v.
func NewOptNilPropertiesDepositDate(v PropertiesDepositDate) OptNilPropertiesDepositDate {
	return OptNilPropertiesDepositDate{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesDepositDate is optional nullable PropertiesDepositDate.
type OptNilPropertiesDepositDate struct {
	Value PropertiesDepositDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesDepositDate was set.
func (o OptNilPropertiesDepositDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesDepositDate) Reset() {
	var v PropertiesDepositDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesDepositDate) SetTo(v PropertiesDepositDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesDepositDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesDepositDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesDepositDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesDepositDate) Get() (v PropertiesDepositDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesDepositDate) Or(d PropertiesDepositDate) PropertiesDepositDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesFeeAmount returns new OptNilPropertiesFeeAmount with value set to v.
func NewOptNilPropertiesFeeAmount(v PropertiesFeeAmount) OptNilPropertiesFeeAmount {
	return OptNilPropertiesFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesFeeAmount is optional nullable PropertiesFeeAmount.
type OptNilPropertiesFeeAmount struct {
	Value PropertiesFeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesFeeAmount was set.
func (o OptNilPropertiesFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesFeeAmount) Reset() {
	var v PropertiesFeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesFeeAmount) SetTo(v PropertiesFeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesFeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesFeeAmount) Get() (v PropertiesFeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesFeeAmount) Or(d PropertiesFeeAmount) PropertiesFeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesMailCustomerName returns new OptNilPropertiesMailCustomerName with value set to v.
func NewOptNilPropertiesMailCustomerName(v PropertiesMailCustomerName) OptNilPropertiesMailCustomerName {
	return OptNilPropertiesMailCustomerName{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesMailCustomerName is optional nullable PropertiesMailCustomerName.
type OptNilPropertiesMailCustomerName struct {
	Value PropertiesMailCustomerName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesMailCustomerName was set.
func (o OptNilPropertiesMailCustomerName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesMailCustomerName) Reset() {
	var v PropertiesMailCustomerName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesMailCustomerName) SetTo(v PropertiesMailCustomerName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesMailCustomerName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesMailCustomerName) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesMailCustomerName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesMailCustomerName) Get() (v PropertiesMailCustomerName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesMailCustomerName) Or(d PropertiesMailCustomerName) PropertiesMailCustomerName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesOrderDescription returns new OptNilPropertiesOrderDescription with value set to v.
func NewOptNilPropertiesOrderDescription(v PropertiesOrderDescription) OptNilPropertiesOrderDescription {
	return OptNilPropertiesOrderDescription{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesOrderDescription is optional nullable PropertiesOrderDescription.
type OptNilPropertiesOrderDescription struct {
	Value PropertiesOrderDescription
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesOrderDescription was set.
func (o OptNilPropertiesOrderDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesOrderDescription) Reset() {
	var v PropertiesOrderDescription
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesOrderDescription) SetTo(v PropertiesOrderDescription) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesOrderDescription) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesOrderDescription) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesOrderDescription
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesOrderDescription) Get() (v PropertiesOrderDescription, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesOrderDescription) Or(d PropertiesOrderDescription) PropertiesOrderDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesPaymentDate returns new OptNilPropertiesPaymentDate with value set to v.
func NewOptNilPropertiesPaymentDate(v PropertiesPaymentDate) OptNilPropertiesPaymentDate {
	return OptNilPropertiesPaymentDate{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesPaymentDate is optional nullable PropertiesPaymentDate.
type OptNilPropertiesPaymentDate struct {
	Value PropertiesPaymentDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesPaymentDate was set.
func (o OptNilPropertiesPaymentDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesPaymentDate) Reset() {
	var v PropertiesPaymentDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesPaymentDate) SetTo(v PropertiesPaymentDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesPaymentDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesPaymentDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesPaymentDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesPaymentDate) Get() (v PropertiesPaymentDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesPaymentDate) Or(d PropertiesPaymentDate) PropertiesPaymentDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesPaymentTermDay returns new OptNilPropertiesPaymentTermDay with value set to v.
func NewOptNilPropertiesPaymentTermDay(v PropertiesPaymentTermDay) OptNilPropertiesPaymentTermDay {
	return OptNilPropertiesPaymentTermDay{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesPaymentTermDay is optional nullable PropertiesPaymentTermDay.
type OptNilPropertiesPaymentTermDay struct {
	Value PropertiesPaymentTermDay
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesPaymentTermDay was set.
func (o OptNilPropertiesPaymentTermDay) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesPaymentTermDay) Reset() {
	var v PropertiesPaymentTermDay
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesPaymentTermDay) SetTo(v PropertiesPaymentTermDay) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesPaymentTermDay) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesPaymentTermDay) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesPaymentTermDay
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesPaymentTermDay) Get() (v PropertiesPaymentTermDay, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesPaymentTermDay) Or(d PropertiesPaymentTermDay) PropertiesPaymentTermDay {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesPlatformFeeAmount returns new OptNilPropertiesPlatformFeeAmount with value set to v.
func NewOptNilPropertiesPlatformFeeAmount(v PropertiesPlatformFeeAmount) OptNilPropertiesPlatformFeeAmount {
	return OptNilPropertiesPlatformFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesPlatformFeeAmount is optional nullable PropertiesPlatformFeeAmount.
type OptNilPropertiesPlatformFeeAmount struct {
	Value PropertiesPlatformFeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesPlatformFeeAmount was set.
func (o OptNilPropertiesPlatformFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesPlatformFeeAmount) Reset() {
	var v PropertiesPlatformFeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesPlatformFeeAmount) SetTo(v PropertiesPlatformFeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesPlatformFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesPlatformFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesPlatformFeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesPlatformFeeAmount) Get() (v PropertiesPlatformFeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesPlatformFeeAmount) Or(d PropertiesPlatformFeeAmount) PropertiesPlatformFeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesPlatformFeeTaxAmount returns new OptNilPropertiesPlatformFeeTaxAmount with value set to v.
func NewOptNilPropertiesPlatformFeeTaxAmount(v PropertiesPlatformFeeTaxAmount) OptNilPropertiesPlatformFeeTaxAmount {
	return OptNilPropertiesPlatformFeeTaxAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesPlatformFeeTaxAmount is optional nullable PropertiesPlatformFeeTaxAmount.
type OptNilPropertiesPlatformFeeTaxAmount struct {
	Value PropertiesPlatformFeeTaxAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesPlatformFeeTaxAmount was set.
func (o OptNilPropertiesPlatformFeeTaxAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesPlatformFeeTaxAmount) Reset() {
	var v PropertiesPlatformFeeTaxAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesPlatformFeeTaxAmount) SetTo(v PropertiesPlatformFeeTaxAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesPlatformFeeTaxAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesPlatformFeeTaxAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesPlatformFeeTaxAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesPlatformFeeTaxAmount) Get() (v PropertiesPlatformFeeTaxAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesPlatformFeeTaxAmount) Or(d PropertiesPlatformFeeTaxAmount) PropertiesPlatformFeeTaxAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesReceiverMail returns new OptNilPropertiesReceiverMail with value set to v.
func NewOptNilPropertiesReceiverMail(v PropertiesReceiverMail) OptNilPropertiesReceiverMail {
	return OptNilPropertiesReceiverMail{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesReceiverMail is optional nullable PropertiesReceiverMail.
type OptNilPropertiesReceiverMail struct {
	Value PropertiesReceiverMail
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesReceiverMail was set.
func (o OptNilPropertiesReceiverMail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesReceiverMail) Reset() {
	var v PropertiesReceiverMail
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesReceiverMail) SetTo(v PropertiesReceiverMail) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesReceiverMail) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesReceiverMail) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesReceiverMail
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesReceiverMail) Get() (v PropertiesReceiverMail, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesReceiverMail) Or(d PropertiesReceiverMail) PropertiesReceiverMail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesScheduledDepositDate returns new OptNilPropertiesScheduledDepositDate with value set to v.
func NewOptNilPropertiesScheduledDepositDate(v PropertiesScheduledDepositDate) OptNilPropertiesScheduledDepositDate {
	return OptNilPropertiesScheduledDepositDate{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesScheduledDepositDate is optional nullable PropertiesScheduledDepositDate.
type OptNilPropertiesScheduledDepositDate struct {
	Value PropertiesScheduledDepositDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesScheduledDepositDate was set.
func (o OptNilPropertiesScheduledDepositDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesScheduledDepositDate) Reset() {
	var v PropertiesScheduledDepositDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesScheduledDepositDate) SetTo(v PropertiesScheduledDepositDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesScheduledDepositDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesScheduledDepositDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesScheduledDepositDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesScheduledDepositDate) Get() (v PropertiesScheduledDepositDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesScheduledDepositDate) Or(d PropertiesScheduledDepositDate) PropertiesScheduledDepositDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesShopMailTemplateID returns new OptNilPropertiesShopMailTemplateID with value set to v.
func NewOptNilPropertiesShopMailTemplateID(v PropertiesShopMailTemplateID) OptNilPropertiesShopMailTemplateID {
	return OptNilPropertiesShopMailTemplateID{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesShopMailTemplateID is optional nullable PropertiesShopMailTemplateID.
type OptNilPropertiesShopMailTemplateID struct {
	Value PropertiesShopMailTemplateID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesShopMailTemplateID was set.
func (o OptNilPropertiesShopMailTemplateID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesShopMailTemplateID) Reset() {
	var v PropertiesShopMailTemplateID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesShopMailTemplateID) SetTo(v PropertiesShopMailTemplateID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesShopMailTemplateID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesShopMailTemplateID) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesShopMailTemplateID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesShopMailTemplateID) Get() (v PropertiesShopMailTemplateID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesShopMailTemplateID) Or(d PropertiesShopMailTemplateID) PropertiesShopMailTemplateID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesShopServiceName returns new OptNilPropertiesShopServiceName with value set to v.
func NewOptNilPropertiesShopServiceName(v PropertiesShopServiceName) OptNilPropertiesShopServiceName {
	return OptNilPropertiesShopServiceName{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesShopServiceName is optional nullable PropertiesShopServiceName.
type OptNilPropertiesShopServiceName struct {
	Value PropertiesShopServiceName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesShopServiceName was set.
func (o OptNilPropertiesShopServiceName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesShopServiceName) Reset() {
	var v PropertiesShopServiceName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesShopServiceName) SetTo(v PropertiesShopServiceName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesShopServiceName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesShopServiceName) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesShopServiceName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesShopServiceName) Get() (v PropertiesShopServiceName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesShopServiceName) Or(d PropertiesShopServiceName) PropertiesShopServiceName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesSuccessURL returns new OptNilPropertiesSuccessURL with value set to v.
func NewOptNilPropertiesSuccessURL(v PropertiesSuccessURL) OptNilPropertiesSuccessURL {
	return OptNilPropertiesSuccessURL{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesSuccessURL is optional nullable PropertiesSuccessURL.
type OptNilPropertiesSuccessURL struct {
	Value PropertiesSuccessURL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesSuccessURL was set.
func (o OptNilPropertiesSuccessURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesSuccessURL) Reset() {
	var v PropertiesSuccessURL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesSuccessURL) SetTo(v PropertiesSuccessURL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesSuccessURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesSuccessURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesSuccessURL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesSuccessURL) Get() (v PropertiesSuccessURL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesSuccessURL) Or(d PropertiesSuccessURL) PropertiesSuccessURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilPropertiesWebRegistrationFeeAmount returns new OptNilPropertiesWebRegistrationFeeAmount with value set to v.
func NewOptNilPropertiesWebRegistrationFeeAmount(v PropertiesWebRegistrationFeeAmount) OptNilPropertiesWebRegistrationFeeAmount {
	return OptNilPropertiesWebRegistrationFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilPropertiesWebRegistrationFeeAmount is optional nullable PropertiesWebRegistrationFeeAmount.
type OptNilPropertiesWebRegistrationFeeAmount struct {
	Value PropertiesWebRegistrationFeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPropertiesWebRegistrationFeeAmount was set.
func (o OptNilPropertiesWebRegistrationFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPropertiesWebRegistrationFeeAmount) Reset() {
	var v PropertiesWebRegistrationFeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPropertiesWebRegistrationFeeAmount) SetTo(v PropertiesWebRegistrationFeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPropertiesWebRegistrationFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilPropertiesWebRegistrationFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v PropertiesWebRegistrationFeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPropertiesWebRegistrationFeeAmount) Get() (v PropertiesWebRegistrationFeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilPropertiesWebRegistrationFeeAmount) Or(d PropertiesWebRegistrationFeeAmount) PropertiesWebRegistrationFeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilReceiverMail returns new OptNilReceiverMail with value set to v.
func NewOptNilReceiverMail(v ReceiverMail) OptNilReceiverMail {
	return OptNilReceiverMail{
		Value: v,
		Set:   true,
	}
}

// OptNilReceiverMail is optional nullable ReceiverMail.
type OptNilReceiverMail struct {
	Value ReceiverMail
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReceiverMail was set.
func (o OptNilReceiverMail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReceiverMail) Reset() {
	var v ReceiverMail
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReceiverMail) SetTo(v ReceiverMail) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReceiverMail) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilReceiverMail) SetToNull() {
	o.Set = true
	o.Null = true
	var v ReceiverMail
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReceiverMail) Get() (v ReceiverMail, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilReceiverMail) Or(d ReceiverMail) ReceiverMail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRedirectType returns new OptNilRedirectType with value set to v.
func NewOptNilRedirectType(v RedirectType) OptNilRedirectType {
	return OptNilRedirectType{
		Value: v,
		Set:   true,
	}
}

// OptNilRedirectType is optional nullable RedirectType.
type OptNilRedirectType struct {
	Value RedirectType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRedirectType was set.
func (o OptNilRedirectType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRedirectType) Reset() {
	var v RedirectType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRedirectType) SetTo(v RedirectType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRedirectType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRedirectType) SetToNull() {
	o.Set = true
	o.Null = true
	var v RedirectType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRedirectType) Get() (v RedirectType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRedirectType) Or(d RedirectType) RedirectType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRedirectURL returns new OptNilRedirectURL with value set to v.
func NewOptNilRedirectURL(v RedirectURL) OptNilRedirectURL {
	return OptNilRedirectURL{
		Value: v,
		Set:   true,
	}
}

// OptNilRedirectURL is optional nullable RedirectURL.
type OptNilRedirectURL struct {
	Value RedirectURL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRedirectURL was set.
func (o OptNilRedirectURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRedirectURL) Reset() {
	var v RedirectURL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRedirectURL) SetTo(v RedirectURL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRedirectURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRedirectURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v RedirectURL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRedirectURL) Get() (v RedirectURL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRedirectURL) Or(d RedirectURL) RedirectURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRemarks returns new OptNilRemarks with value set to v.
func NewOptNilRemarks(v Remarks) OptNilRemarks {
	return OptNilRemarks{
		Value: v,
		Set:   true,
	}
}

// OptNilRemarks is optional nullable Remarks.
type OptNilRemarks struct {
	Value Remarks
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRemarks was set.
func (o OptNilRemarks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRemarks) Reset() {
	var v Remarks
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRemarks) SetTo(v Remarks) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRemarks) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRemarks) SetToNull() {
	o.Set = true
	o.Null = true
	var v Remarks
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRemarks) Get() (v Remarks, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRemarks) Or(d Remarks) Remarks {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeAddressChrome returns new OptNilRepresentativeAddressChrome with value set to v.
func NewOptNilRepresentativeAddressChrome(v RepresentativeAddressChrome) OptNilRepresentativeAddressChrome {
	return OptNilRepresentativeAddressChrome{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeAddressChrome is optional nullable RepresentativeAddressChrome.
type OptNilRepresentativeAddressChrome struct {
	Value RepresentativeAddressChrome
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeAddressChrome was set.
func (o OptNilRepresentativeAddressChrome) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeAddressChrome) Reset() {
	var v RepresentativeAddressChrome
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeAddressChrome) SetTo(v RepresentativeAddressChrome) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeAddressChrome) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeAddressChrome) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeAddressChrome
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeAddressChrome) Get() (v RepresentativeAddressChrome, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeAddressChrome) Or(d RepresentativeAddressChrome) RepresentativeAddressChrome {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeAddressChromeKana returns new OptNilRepresentativeAddressChromeKana with value set to v.
func NewOptNilRepresentativeAddressChromeKana(v RepresentativeAddressChromeKana) OptNilRepresentativeAddressChromeKana {
	return OptNilRepresentativeAddressChromeKana{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeAddressChromeKana is optional nullable RepresentativeAddressChromeKana.
type OptNilRepresentativeAddressChromeKana struct {
	Value RepresentativeAddressChromeKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeAddressChromeKana was set.
func (o OptNilRepresentativeAddressChromeKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeAddressChromeKana) Reset() {
	var v RepresentativeAddressChromeKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeAddressChromeKana) SetTo(v RepresentativeAddressChromeKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeAddressChromeKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeAddressChromeKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeAddressChromeKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeAddressChromeKana) Get() (v RepresentativeAddressChromeKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeAddressChromeKana) Or(d RepresentativeAddressChromeKana) RepresentativeAddressChromeKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeAddressMunicipality returns new OptNilRepresentativeAddressMunicipality with value set to v.
func NewOptNilRepresentativeAddressMunicipality(v RepresentativeAddressMunicipality) OptNilRepresentativeAddressMunicipality {
	return OptNilRepresentativeAddressMunicipality{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeAddressMunicipality is optional nullable RepresentativeAddressMunicipality.
type OptNilRepresentativeAddressMunicipality struct {
	Value RepresentativeAddressMunicipality
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeAddressMunicipality was set.
func (o OptNilRepresentativeAddressMunicipality) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeAddressMunicipality) Reset() {
	var v RepresentativeAddressMunicipality
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeAddressMunicipality) SetTo(v RepresentativeAddressMunicipality) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeAddressMunicipality) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeAddressMunicipality) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeAddressMunicipality
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeAddressMunicipality) Get() (v RepresentativeAddressMunicipality, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeAddressMunicipality) Or(d RepresentativeAddressMunicipality) RepresentativeAddressMunicipality {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeAddressMunicipalityKana returns new OptNilRepresentativeAddressMunicipalityKana with value set to v.
func NewOptNilRepresentativeAddressMunicipalityKana(v RepresentativeAddressMunicipalityKana) OptNilRepresentativeAddressMunicipalityKana {
	return OptNilRepresentativeAddressMunicipalityKana{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeAddressMunicipalityKana is optional nullable RepresentativeAddressMunicipalityKana.
type OptNilRepresentativeAddressMunicipalityKana struct {
	Value RepresentativeAddressMunicipalityKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeAddressMunicipalityKana was set.
func (o OptNilRepresentativeAddressMunicipalityKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeAddressMunicipalityKana) Reset() {
	var v RepresentativeAddressMunicipalityKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeAddressMunicipalityKana) SetTo(v RepresentativeAddressMunicipalityKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeAddressMunicipalityKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeAddressMunicipalityKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeAddressMunicipalityKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeAddressMunicipalityKana) Get() (v RepresentativeAddressMunicipalityKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeAddressMunicipalityKana) Or(d RepresentativeAddressMunicipalityKana) RepresentativeAddressMunicipalityKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeAddressSection returns new OptNilRepresentativeAddressSection with value set to v.
func NewOptNilRepresentativeAddressSection(v RepresentativeAddressSection) OptNilRepresentativeAddressSection {
	return OptNilRepresentativeAddressSection{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeAddressSection is optional nullable RepresentativeAddressSection.
type OptNilRepresentativeAddressSection struct {
	Value RepresentativeAddressSection
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeAddressSection was set.
func (o OptNilRepresentativeAddressSection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeAddressSection) Reset() {
	var v RepresentativeAddressSection
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeAddressSection) SetTo(v RepresentativeAddressSection) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeAddressSection) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeAddressSection) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeAddressSection
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeAddressSection) Get() (v RepresentativeAddressSection, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeAddressSection) Or(d RepresentativeAddressSection) RepresentativeAddressSection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeAddressSectionKana returns new OptNilRepresentativeAddressSectionKana with value set to v.
func NewOptNilRepresentativeAddressSectionKana(v RepresentativeAddressSectionKana) OptNilRepresentativeAddressSectionKana {
	return OptNilRepresentativeAddressSectionKana{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeAddressSectionKana is optional nullable RepresentativeAddressSectionKana.
type OptNilRepresentativeAddressSectionKana struct {
	Value RepresentativeAddressSectionKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeAddressSectionKana was set.
func (o OptNilRepresentativeAddressSectionKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeAddressSectionKana) Reset() {
	var v RepresentativeAddressSectionKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeAddressSectionKana) SetTo(v RepresentativeAddressSectionKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeAddressSectionKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeAddressSectionKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeAddressSectionKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeAddressSectionKana) Get() (v RepresentativeAddressSectionKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeAddressSectionKana) Or(d RepresentativeAddressSectionKana) RepresentativeAddressSectionKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeBirthday returns new OptNilRepresentativeBirthday with value set to v.
func NewOptNilRepresentativeBirthday(v RepresentativeBirthday) OptNilRepresentativeBirthday {
	return OptNilRepresentativeBirthday{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeBirthday is optional nullable RepresentativeBirthday.
type OptNilRepresentativeBirthday struct {
	Value RepresentativeBirthday
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeBirthday was set.
func (o OptNilRepresentativeBirthday) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeBirthday) Reset() {
	var v RepresentativeBirthday
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeBirthday) SetTo(v RepresentativeBirthday) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeBirthday) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeBirthday) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeBirthday
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeBirthday) Get() (v RepresentativeBirthday, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeBirthday) Or(d RepresentativeBirthday) RepresentativeBirthday {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeFirstName returns new OptNilRepresentativeFirstName with value set to v.
func NewOptNilRepresentativeFirstName(v RepresentativeFirstName) OptNilRepresentativeFirstName {
	return OptNilRepresentativeFirstName{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeFirstName is optional nullable RepresentativeFirstName.
type OptNilRepresentativeFirstName struct {
	Value RepresentativeFirstName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeFirstName was set.
func (o OptNilRepresentativeFirstName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeFirstName) Reset() {
	var v RepresentativeFirstName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeFirstName) SetTo(v RepresentativeFirstName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeFirstName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeFirstName) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeFirstName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeFirstName) Get() (v RepresentativeFirstName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeFirstName) Or(d RepresentativeFirstName) RepresentativeFirstName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeFirstNameKana returns new OptNilRepresentativeFirstNameKana with value set to v.
func NewOptNilRepresentativeFirstNameKana(v RepresentativeFirstNameKana) OptNilRepresentativeFirstNameKana {
	return OptNilRepresentativeFirstNameKana{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeFirstNameKana is optional nullable RepresentativeFirstNameKana.
type OptNilRepresentativeFirstNameKana struct {
	Value RepresentativeFirstNameKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeFirstNameKana was set.
func (o OptNilRepresentativeFirstNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeFirstNameKana) Reset() {
	var v RepresentativeFirstNameKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeFirstNameKana) SetTo(v RepresentativeFirstNameKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeFirstNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeFirstNameKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeFirstNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeFirstNameKana) Get() (v RepresentativeFirstNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeFirstNameKana) Or(d RepresentativeFirstNameKana) RepresentativeFirstNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeGender returns new OptNilRepresentativeGender with value set to v.
func NewOptNilRepresentativeGender(v RepresentativeGender) OptNilRepresentativeGender {
	return OptNilRepresentativeGender{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeGender is optional nullable RepresentativeGender.
type OptNilRepresentativeGender struct {
	Value RepresentativeGender
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeGender was set.
func (o OptNilRepresentativeGender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeGender) Reset() {
	var v RepresentativeGender
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeGender) SetTo(v RepresentativeGender) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeGender) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeGender) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeGender
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeGender) Get() (v RepresentativeGender, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeGender) Or(d RepresentativeGender) RepresentativeGender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeLastName returns new OptNilRepresentativeLastName with value set to v.
func NewOptNilRepresentativeLastName(v RepresentativeLastName) OptNilRepresentativeLastName {
	return OptNilRepresentativeLastName{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeLastName is optional nullable RepresentativeLastName.
type OptNilRepresentativeLastName struct {
	Value RepresentativeLastName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeLastName was set.
func (o OptNilRepresentativeLastName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeLastName) Reset() {
	var v RepresentativeLastName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeLastName) SetTo(v RepresentativeLastName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeLastName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeLastName) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeLastName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeLastName) Get() (v RepresentativeLastName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeLastName) Or(d RepresentativeLastName) RepresentativeLastName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeLastNameKana returns new OptNilRepresentativeLastNameKana with value set to v.
func NewOptNilRepresentativeLastNameKana(v RepresentativeLastNameKana) OptNilRepresentativeLastNameKana {
	return OptNilRepresentativeLastNameKana{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeLastNameKana is optional nullable RepresentativeLastNameKana.
type OptNilRepresentativeLastNameKana struct {
	Value RepresentativeLastNameKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeLastNameKana was set.
func (o OptNilRepresentativeLastNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeLastNameKana) Reset() {
	var v RepresentativeLastNameKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeLastNameKana) SetTo(v RepresentativeLastNameKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeLastNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeLastNameKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeLastNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeLastNameKana) Get() (v RepresentativeLastNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeLastNameKana) Or(d RepresentativeLastNameKana) RepresentativeLastNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativePostalCode returns new OptNilRepresentativePostalCode with value set to v.
func NewOptNilRepresentativePostalCode(v RepresentativePostalCode) OptNilRepresentativePostalCode {
	return OptNilRepresentativePostalCode{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativePostalCode is optional nullable RepresentativePostalCode.
type OptNilRepresentativePostalCode struct {
	Value RepresentativePostalCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativePostalCode was set.
func (o OptNilRepresentativePostalCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativePostalCode) Reset() {
	var v RepresentativePostalCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativePostalCode) SetTo(v RepresentativePostalCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativePostalCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativePostalCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativePostalCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativePostalCode) Get() (v RepresentativePostalCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativePostalCode) Or(d RepresentativePostalCode) RepresentativePostalCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativePrefecture returns new OptNilRepresentativePrefecture with value set to v.
func NewOptNilRepresentativePrefecture(v RepresentativePrefecture) OptNilRepresentativePrefecture {
	return OptNilRepresentativePrefecture{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativePrefecture is optional nullable RepresentativePrefecture.
type OptNilRepresentativePrefecture struct {
	Value RepresentativePrefecture
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativePrefecture was set.
func (o OptNilRepresentativePrefecture) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativePrefecture) Reset() {
	var v RepresentativePrefecture
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativePrefecture) SetTo(v RepresentativePrefecture) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativePrefecture) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativePrefecture) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativePrefecture
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativePrefecture) Get() (v RepresentativePrefecture, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativePrefecture) Or(d RepresentativePrefecture) RepresentativePrefecture {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativePrefectureKana returns new OptNilRepresentativePrefectureKana with value set to v.
func NewOptNilRepresentativePrefectureKana(v RepresentativePrefectureKana) OptNilRepresentativePrefectureKana {
	return OptNilRepresentativePrefectureKana{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativePrefectureKana is optional nullable RepresentativePrefectureKana.
type OptNilRepresentativePrefectureKana struct {
	Value RepresentativePrefectureKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativePrefectureKana was set.
func (o OptNilRepresentativePrefectureKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativePrefectureKana) Reset() {
	var v RepresentativePrefectureKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativePrefectureKana) SetTo(v RepresentativePrefectureKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativePrefectureKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativePrefectureKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativePrefectureKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativePrefectureKana) Get() (v RepresentativePrefectureKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativePrefectureKana) Or(d RepresentativePrefectureKana) RepresentativePrefectureKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRepresentativeTel returns new OptNilRepresentativeTel with value set to v.
func NewOptNilRepresentativeTel(v RepresentativeTel) OptNilRepresentativeTel {
	return OptNilRepresentativeTel{
		Value: v,
		Set:   true,
	}
}

// OptNilRepresentativeTel is optional nullable RepresentativeTel.
type OptNilRepresentativeTel struct {
	Value RepresentativeTel
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepresentativeTel was set.
func (o OptNilRepresentativeTel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepresentativeTel) Reset() {
	var v RepresentativeTel
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepresentativeTel) SetTo(v RepresentativeTel) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepresentativeTel) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRepresentativeTel) SetToNull() {
	o.Set = true
	o.Null = true
	var v RepresentativeTel
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepresentativeTel) Get() (v RepresentativeTel, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRepresentativeTel) Or(d RepresentativeTel) RepresentativeTel {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRequestAcceptEndDate returns new OptNilRequestAcceptEndDate with value set to v.
func NewOptNilRequestAcceptEndDate(v RequestAcceptEndDate) OptNilRequestAcceptEndDate {
	return OptNilRequestAcceptEndDate{
		Value: v,
		Set:   true,
	}
}

// OptNilRequestAcceptEndDate is optional nullable RequestAcceptEndDate.
type OptNilRequestAcceptEndDate struct {
	Value RequestAcceptEndDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRequestAcceptEndDate was set.
func (o OptNilRequestAcceptEndDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRequestAcceptEndDate) Reset() {
	var v RequestAcceptEndDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRequestAcceptEndDate) SetTo(v RequestAcceptEndDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRequestAcceptEndDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRequestAcceptEndDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v RequestAcceptEndDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRequestAcceptEndDate) Get() (v RequestAcceptEndDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRequestAcceptEndDate) Or(d RequestAcceptEndDate) RequestAcceptEndDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilRetrievePlanListQueryDeleteFlag returns new OptNilRetrievePlanListQueryDeleteFlag with value set to v.
func NewOptNilRetrievePlanListQueryDeleteFlag(v RetrievePlanListQueryDeleteFlag) OptNilRetrievePlanListQueryDeleteFlag {
	return OptNilRetrievePlanListQueryDeleteFlag{
		Value: v,
		Set:   true,
	}
}

// OptNilRetrievePlanListQueryDeleteFlag is optional nullable RetrievePlanListQueryDeleteFlag.
type OptNilRetrievePlanListQueryDeleteFlag struct {
	Value RetrievePlanListQueryDeleteFlag
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRetrievePlanListQueryDeleteFlag was set.
func (o OptNilRetrievePlanListQueryDeleteFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRetrievePlanListQueryDeleteFlag) Reset() {
	var v RetrievePlanListQueryDeleteFlag
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRetrievePlanListQueryDeleteFlag) SetTo(v RetrievePlanListQueryDeleteFlag) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRetrievePlanListQueryDeleteFlag) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilRetrievePlanListQueryDeleteFlag) SetToNull() {
	o.Set = true
	o.Null = true
	var v RetrievePlanListQueryDeleteFlag
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRetrievePlanListQueryDeleteFlag) Get() (v RetrievePlanListQueryDeleteFlag, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilRetrievePlanListQueryDeleteFlag) Or(d RetrievePlanListQueryDeleteFlag) RetrievePlanListQueryDeleteFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilReturnURL returns new OptNilReturnURL with value set to v.
func NewOptNilReturnURL(v ReturnURL) OptNilReturnURL {
	return OptNilReturnURL{
		Value: v,
		Set:   true,
	}
}

// OptNilReturnURL is optional nullable ReturnURL.
type OptNilReturnURL struct {
	Value ReturnURL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReturnURL was set.
func (o OptNilReturnURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReturnURL) Reset() {
	var v ReturnURL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReturnURL) SetTo(v ReturnURL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReturnURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilReturnURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v ReturnURL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReturnURL) Get() (v ReturnURL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilReturnURL) Or(d ReturnURL) ReturnURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilReturnURLOnFailure returns new OptNilReturnURLOnFailure with value set to v.
func NewOptNilReturnURLOnFailure(v ReturnURLOnFailure) OptNilReturnURLOnFailure {
	return OptNilReturnURLOnFailure{
		Value: v,
		Set:   true,
	}
}

// OptNilReturnURLOnFailure is optional nullable ReturnURLOnFailure.
type OptNilReturnURLOnFailure struct {
	Value ReturnURLOnFailure
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReturnURLOnFailure was set.
func (o OptNilReturnURLOnFailure) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReturnURLOnFailure) Reset() {
	var v ReturnURLOnFailure
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReturnURLOnFailure) SetTo(v ReturnURLOnFailure) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReturnURLOnFailure) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilReturnURLOnFailure) SetToNull() {
	o.Set = true
	o.Null = true
	var v ReturnURLOnFailure
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReturnURLOnFailure) Get() (v ReturnURLOnFailure, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilReturnURLOnFailure) Or(d ReturnURLOnFailure) ReturnURLOnFailure {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilScheduledDepositDate returns new OptNilScheduledDepositDate with value set to v.
func NewOptNilScheduledDepositDate(v ScheduledDepositDate) OptNilScheduledDepositDate {
	return OptNilScheduledDepositDate{
		Value: v,
		Set:   true,
	}
}

// OptNilScheduledDepositDate is optional nullable ScheduledDepositDate.
type OptNilScheduledDepositDate struct {
	Value ScheduledDepositDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilScheduledDepositDate was set.
func (o OptNilScheduledDepositDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilScheduledDepositDate) Reset() {
	var v ScheduledDepositDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilScheduledDepositDate) SetTo(v ScheduledDepositDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilScheduledDepositDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilScheduledDepositDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v ScheduledDepositDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilScheduledDepositDate) Get() (v ScheduledDepositDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilScheduledDepositDate) Or(d ScheduledDepositDate) ScheduledDepositDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSendMailAddress returns new OptNilSendMailAddress with value set to v.
func NewOptNilSendMailAddress(v SendMailAddress) OptNilSendMailAddress {
	return OptNilSendMailAddress{
		Value: v,
		Set:   true,
	}
}

// OptNilSendMailAddress is optional nullable SendMailAddress.
type OptNilSendMailAddress struct {
	Value SendMailAddress
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSendMailAddress was set.
func (o OptNilSendMailAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSendMailAddress) Reset() {
	var v SendMailAddress
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSendMailAddress) SetTo(v SendMailAddress) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSendMailAddress) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSendMailAddress) SetToNull() {
	o.Set = true
	o.Null = true
	var v SendMailAddress
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSendMailAddress) Get() (v SendMailAddress, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSendMailAddress) Or(d SendMailAddress) SendMailAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSendURL returns new OptNilSendURL with value set to v.
func NewOptNilSendURL(v SendURL) OptNilSendURL {
	return OptNilSendURL{
		Value: v,
		Set:   true,
	}
}

// OptNilSendURL is optional nullable SendURL.
type OptNilSendURL struct {
	Value SendURL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSendURL was set.
func (o OptNilSendURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSendURL) Reset() {
	var v SendURL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSendURL) SetTo(v SendURL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSendURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSendURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v SendURL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSendURL) Get() (v SendURL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSendURL) Or(d SendURL) SendURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilService returns new OptNilService with value set to v.
func NewOptNilService(v Service) OptNilService {
	return OptNilService{
		Value: v,
		Set:   true,
	}
}

// OptNilService is optional nullable Service.
type OptNilService struct {
	Value Service
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilService was set.
func (o OptNilService) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilService) Reset() {
	var v Service
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilService) SetTo(v Service) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilService) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilService) SetToNull() {
	o.Set = true
	o.Null = true
	var v Service
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilService) Get() (v Service, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilService) Or(d Service) Service {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSettlementAmount returns new OptNilSettlementAmount with value set to v.
func NewOptNilSettlementAmount(v SettlementAmount) OptNilSettlementAmount {
	return OptNilSettlementAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilSettlementAmount is optional nullable SettlementAmount.
type OptNilSettlementAmount struct {
	Value SettlementAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSettlementAmount was set.
func (o OptNilSettlementAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSettlementAmount) Reset() {
	var v SettlementAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSettlementAmount) SetTo(v SettlementAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSettlementAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSettlementAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v SettlementAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSettlementAmount) Get() (v SettlementAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSettlementAmount) Or(d SettlementAmount) SettlementAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSharedCustomerFlag returns new OptNilSharedCustomerFlag with value set to v.
func NewOptNilSharedCustomerFlag(v SharedCustomerFlag) OptNilSharedCustomerFlag {
	return OptNilSharedCustomerFlag{
		Value: v,
		Set:   true,
	}
}

// OptNilSharedCustomerFlag is optional nullable SharedCustomerFlag.
type OptNilSharedCustomerFlag struct {
	Value SharedCustomerFlag
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSharedCustomerFlag was set.
func (o OptNilSharedCustomerFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSharedCustomerFlag) Reset() {
	var v SharedCustomerFlag
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSharedCustomerFlag) SetTo(v SharedCustomerFlag) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSharedCustomerFlag) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSharedCustomerFlag) SetToNull() {
	o.Set = true
	o.Null = true
	var v SharedCustomerFlag
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSharedCustomerFlag) Get() (v SharedCustomerFlag, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSharedCustomerFlag) Or(d SharedCustomerFlag) SharedCustomerFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopAPIKeyDisplayFlag returns new OptNilShopAPIKeyDisplayFlag with value set to v.
func NewOptNilShopAPIKeyDisplayFlag(v ShopAPIKeyDisplayFlag) OptNilShopAPIKeyDisplayFlag {
	return OptNilShopAPIKeyDisplayFlag{
		Value: v,
		Set:   true,
	}
}

// OptNilShopAPIKeyDisplayFlag is optional nullable ShopAPIKeyDisplayFlag.
type OptNilShopAPIKeyDisplayFlag struct {
	Value ShopAPIKeyDisplayFlag
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopAPIKeyDisplayFlag was set.
func (o OptNilShopAPIKeyDisplayFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopAPIKeyDisplayFlag) Reset() {
	var v ShopAPIKeyDisplayFlag
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopAPIKeyDisplayFlag) SetTo(v ShopAPIKeyDisplayFlag) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopAPIKeyDisplayFlag) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopAPIKeyDisplayFlag) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopAPIKeyDisplayFlag
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopAPIKeyDisplayFlag) Get() (v ShopAPIKeyDisplayFlag, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopAPIKeyDisplayFlag) Or(d ShopAPIKeyDisplayFlag) ShopAPIKeyDisplayFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopInfoV2AdditionalInfo returns new OptNilShopInfoV2AdditionalInfo with value set to v.
func NewOptNilShopInfoV2AdditionalInfo(v ShopInfoV2AdditionalInfo) OptNilShopInfoV2AdditionalInfo {
	return OptNilShopInfoV2AdditionalInfo{
		Value: v,
		Set:   true,
	}
}

// OptNilShopInfoV2AdditionalInfo is optional nullable ShopInfoV2AdditionalInfo.
type OptNilShopInfoV2AdditionalInfo struct {
	Value ShopInfoV2AdditionalInfo
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopInfoV2AdditionalInfo was set.
func (o OptNilShopInfoV2AdditionalInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopInfoV2AdditionalInfo) Reset() {
	var v ShopInfoV2AdditionalInfo
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopInfoV2AdditionalInfo) SetTo(v ShopInfoV2AdditionalInfo) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopInfoV2AdditionalInfo) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopInfoV2AdditionalInfo) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopInfoV2AdditionalInfo
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopInfoV2AdditionalInfo) Get() (v ShopInfoV2AdditionalInfo, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopInfoV2AdditionalInfo) Or(d ShopInfoV2AdditionalInfo) ShopInfoV2AdditionalInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopMailAddress returns new OptNilShopMailAddress with value set to v.
func NewOptNilShopMailAddress(v ShopMailAddress) OptNilShopMailAddress {
	return OptNilShopMailAddress{
		Value: v,
		Set:   true,
	}
}

// OptNilShopMailAddress is optional nullable ShopMailAddress.
type OptNilShopMailAddress struct {
	Value ShopMailAddress
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopMailAddress was set.
func (o OptNilShopMailAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopMailAddress) Reset() {
	var v ShopMailAddress
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopMailAddress) SetTo(v ShopMailAddress) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopMailAddress) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopMailAddress) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopMailAddress
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopMailAddress) Get() (v ShopMailAddress, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopMailAddress) Or(d ShopMailAddress) ShopMailAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopMailTemplateID returns new OptNilShopMailTemplateID with value set to v.
func NewOptNilShopMailTemplateID(v ShopMailTemplateID) OptNilShopMailTemplateID {
	return OptNilShopMailTemplateID{
		Value: v,
		Set:   true,
	}
}

// OptNilShopMailTemplateID is optional nullable ShopMailTemplateID.
type OptNilShopMailTemplateID struct {
	Value ShopMailTemplateID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopMailTemplateID was set.
func (o OptNilShopMailTemplateID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopMailTemplateID) Reset() {
	var v ShopMailTemplateID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopMailTemplateID) SetTo(v ShopMailTemplateID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopMailTemplateID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopMailTemplateID) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopMailTemplateID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopMailTemplateID) Get() (v ShopMailTemplateID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopMailTemplateID) Or(d ShopMailTemplateID) ShopMailTemplateID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopName returns new OptNilShopName with value set to v.
func NewOptNilShopName(v ShopName) OptNilShopName {
	return OptNilShopName{
		Value: v,
		Set:   true,
	}
}

// OptNilShopName is optional nullable ShopName.
type OptNilShopName struct {
	Value ShopName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopName was set.
func (o OptNilShopName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopName) Reset() {
	var v ShopName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopName) SetTo(v ShopName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopName) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopName) Get() (v ShopName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopName) Or(d ShopName) ShopName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopNameKana returns new OptNilShopNameKana with value set to v.
func NewOptNilShopNameKana(v ShopNameKana) OptNilShopNameKana {
	return OptNilShopNameKana{
		Value: v,
		Set:   true,
	}
}

// OptNilShopNameKana is optional nullable ShopNameKana.
type OptNilShopNameKana struct {
	Value ShopNameKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopNameKana was set.
func (o OptNilShopNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopNameKana) Reset() {
	var v ShopNameKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopNameKana) SetTo(v ShopNameKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopNameKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopNameKana) Get() (v ShopNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopNameKana) Or(d ShopNameKana) ShopNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopServiceName returns new OptNilShopServiceName with value set to v.
func NewOptNilShopServiceName(v ShopServiceName) OptNilShopServiceName {
	return OptNilShopServiceName{
		Value: v,
		Set:   true,
	}
}

// OptNilShopServiceName is optional nullable ShopServiceName.
type OptNilShopServiceName struct {
	Value ShopServiceName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopServiceName was set.
func (o OptNilShopServiceName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopServiceName) Reset() {
	var v ShopServiceName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopServiceName) SetTo(v ShopServiceName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopServiceName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopServiceName) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopServiceName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopServiceName) Get() (v ShopServiceName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopServiceName) Or(d ShopServiceName) ShopServiceName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopSharedCustomerFlag returns new OptNilShopSharedCustomerFlag with value set to v.
func NewOptNilShopSharedCustomerFlag(v ShopSharedCustomerFlag) OptNilShopSharedCustomerFlag {
	return OptNilShopSharedCustomerFlag{
		Value: v,
		Set:   true,
	}
}

// OptNilShopSharedCustomerFlag is optional nullable ShopSharedCustomerFlag.
type OptNilShopSharedCustomerFlag struct {
	Value ShopSharedCustomerFlag
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopSharedCustomerFlag was set.
func (o OptNilShopSharedCustomerFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopSharedCustomerFlag) Reset() {
	var v ShopSharedCustomerFlag
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopSharedCustomerFlag) SetTo(v ShopSharedCustomerFlag) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopSharedCustomerFlag) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopSharedCustomerFlag) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopSharedCustomerFlag
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopSharedCustomerFlag) Get() (v ShopSharedCustomerFlag, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopSharedCustomerFlag) Or(d ShopSharedCustomerFlag) ShopSharedCustomerFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilShopType returns new OptNilShopType with value set to v.
func NewOptNilShopType(v ShopType) OptNilShopType {
	return OptNilShopType{
		Value: v,
		Set:   true,
	}
}

// OptNilShopType is optional nullable ShopType.
type OptNilShopType struct {
	Value ShopType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilShopType was set.
func (o OptNilShopType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilShopType) Reset() {
	var v ShopType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilShopType) SetTo(v ShopType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilShopType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilShopType) SetToNull() {
	o.Set = true
	o.Null = true
	var v ShopType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilShopType) Get() (v ShopType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilShopType) Or(d ShopType) ShopType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff1FirstName returns new OptNilStaff1FirstName with value set to v.
func NewOptNilStaff1FirstName(v Staff1FirstName) OptNilStaff1FirstName {
	return OptNilStaff1FirstName{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff1FirstName is optional nullable Staff1FirstName.
type OptNilStaff1FirstName struct {
	Value Staff1FirstName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff1FirstName was set.
func (o OptNilStaff1FirstName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff1FirstName) Reset() {
	var v Staff1FirstName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff1FirstName) SetTo(v Staff1FirstName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff1FirstName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff1FirstName) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff1FirstName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff1FirstName) Get() (v Staff1FirstName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff1FirstName) Or(d Staff1FirstName) Staff1FirstName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff1FirstNameKana returns new OptNilStaff1FirstNameKana with value set to v.
func NewOptNilStaff1FirstNameKana(v Staff1FirstNameKana) OptNilStaff1FirstNameKana {
	return OptNilStaff1FirstNameKana{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff1FirstNameKana is optional nullable Staff1FirstNameKana.
type OptNilStaff1FirstNameKana struct {
	Value Staff1FirstNameKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff1FirstNameKana was set.
func (o OptNilStaff1FirstNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff1FirstNameKana) Reset() {
	var v Staff1FirstNameKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff1FirstNameKana) SetTo(v Staff1FirstNameKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff1FirstNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff1FirstNameKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff1FirstNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff1FirstNameKana) Get() (v Staff1FirstNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff1FirstNameKana) Or(d Staff1FirstNameKana) Staff1FirstNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff1LastName returns new OptNilStaff1LastName with value set to v.
func NewOptNilStaff1LastName(v Staff1LastName) OptNilStaff1LastName {
	return OptNilStaff1LastName{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff1LastName is optional nullable Staff1LastName.
type OptNilStaff1LastName struct {
	Value Staff1LastName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff1LastName was set.
func (o OptNilStaff1LastName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff1LastName) Reset() {
	var v Staff1LastName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff1LastName) SetTo(v Staff1LastName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff1LastName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff1LastName) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff1LastName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff1LastName) Get() (v Staff1LastName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff1LastName) Or(d Staff1LastName) Staff1LastName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff1LastNameKana returns new OptNilStaff1LastNameKana with value set to v.
func NewOptNilStaff1LastNameKana(v Staff1LastNameKana) OptNilStaff1LastNameKana {
	return OptNilStaff1LastNameKana{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff1LastNameKana is optional nullable Staff1LastNameKana.
type OptNilStaff1LastNameKana struct {
	Value Staff1LastNameKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff1LastNameKana was set.
func (o OptNilStaff1LastNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff1LastNameKana) Reset() {
	var v Staff1LastNameKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff1LastNameKana) SetTo(v Staff1LastNameKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff1LastNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff1LastNameKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff1LastNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff1LastNameKana) Get() (v Staff1LastNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff1LastNameKana) Or(d Staff1LastNameKana) Staff1LastNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff1Mail returns new OptNilStaff1Mail with value set to v.
func NewOptNilStaff1Mail(v Staff1Mail) OptNilStaff1Mail {
	return OptNilStaff1Mail{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff1Mail is optional nullable Staff1Mail.
type OptNilStaff1Mail struct {
	Value Staff1Mail
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff1Mail was set.
func (o OptNilStaff1Mail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff1Mail) Reset() {
	var v Staff1Mail
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff1Mail) SetTo(v Staff1Mail) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff1Mail) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff1Mail) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff1Mail
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff1Mail) Get() (v Staff1Mail, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff1Mail) Or(d Staff1Mail) Staff1Mail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff1Tel returns new OptNilStaff1Tel with value set to v.
func NewOptNilStaff1Tel(v Staff1Tel) OptNilStaff1Tel {
	return OptNilStaff1Tel{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff1Tel is optional nullable Staff1Tel.
type OptNilStaff1Tel struct {
	Value Staff1Tel
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff1Tel was set.
func (o OptNilStaff1Tel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff1Tel) Reset() {
	var v Staff1Tel
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff1Tel) SetTo(v Staff1Tel) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff1Tel) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff1Tel) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff1Tel
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff1Tel) Get() (v Staff1Tel, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff1Tel) Or(d Staff1Tel) Staff1Tel {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff2FirstName returns new OptNilStaff2FirstName with value set to v.
func NewOptNilStaff2FirstName(v Staff2FirstName) OptNilStaff2FirstName {
	return OptNilStaff2FirstName{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff2FirstName is optional nullable Staff2FirstName.
type OptNilStaff2FirstName struct {
	Value Staff2FirstName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff2FirstName was set.
func (o OptNilStaff2FirstName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff2FirstName) Reset() {
	var v Staff2FirstName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff2FirstName) SetTo(v Staff2FirstName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff2FirstName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff2FirstName) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff2FirstName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff2FirstName) Get() (v Staff2FirstName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff2FirstName) Or(d Staff2FirstName) Staff2FirstName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff2FirstNameKana returns new OptNilStaff2FirstNameKana with value set to v.
func NewOptNilStaff2FirstNameKana(v Staff2FirstNameKana) OptNilStaff2FirstNameKana {
	return OptNilStaff2FirstNameKana{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff2FirstNameKana is optional nullable Staff2FirstNameKana.
type OptNilStaff2FirstNameKana struct {
	Value Staff2FirstNameKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff2FirstNameKana was set.
func (o OptNilStaff2FirstNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff2FirstNameKana) Reset() {
	var v Staff2FirstNameKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff2FirstNameKana) SetTo(v Staff2FirstNameKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff2FirstNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff2FirstNameKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff2FirstNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff2FirstNameKana) Get() (v Staff2FirstNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff2FirstNameKana) Or(d Staff2FirstNameKana) Staff2FirstNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff2LastName returns new OptNilStaff2LastName with value set to v.
func NewOptNilStaff2LastName(v Staff2LastName) OptNilStaff2LastName {
	return OptNilStaff2LastName{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff2LastName is optional nullable Staff2LastName.
type OptNilStaff2LastName struct {
	Value Staff2LastName
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff2LastName was set.
func (o OptNilStaff2LastName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff2LastName) Reset() {
	var v Staff2LastName
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff2LastName) SetTo(v Staff2LastName) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff2LastName) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff2LastName) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff2LastName
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff2LastName) Get() (v Staff2LastName, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff2LastName) Or(d Staff2LastName) Staff2LastName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff2LastNameKana returns new OptNilStaff2LastNameKana with value set to v.
func NewOptNilStaff2LastNameKana(v Staff2LastNameKana) OptNilStaff2LastNameKana {
	return OptNilStaff2LastNameKana{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff2LastNameKana is optional nullable Staff2LastNameKana.
type OptNilStaff2LastNameKana struct {
	Value Staff2LastNameKana
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff2LastNameKana was set.
func (o OptNilStaff2LastNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff2LastNameKana) Reset() {
	var v Staff2LastNameKana
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff2LastNameKana) SetTo(v Staff2LastNameKana) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff2LastNameKana) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff2LastNameKana) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff2LastNameKana
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff2LastNameKana) Get() (v Staff2LastNameKana, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff2LastNameKana) Or(d Staff2LastNameKana) Staff2LastNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff2Mail returns new OptNilStaff2Mail with value set to v.
func NewOptNilStaff2Mail(v Staff2Mail) OptNilStaff2Mail {
	return OptNilStaff2Mail{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff2Mail is optional nullable Staff2Mail.
type OptNilStaff2Mail struct {
	Value Staff2Mail
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff2Mail was set.
func (o OptNilStaff2Mail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff2Mail) Reset() {
	var v Staff2Mail
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff2Mail) SetTo(v Staff2Mail) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff2Mail) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff2Mail) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff2Mail
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff2Mail) Get() (v Staff2Mail, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff2Mail) Or(d Staff2Mail) Staff2Mail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStaff2Tel returns new OptNilStaff2Tel with value set to v.
func NewOptNilStaff2Tel(v Staff2Tel) OptNilStaff2Tel {
	return OptNilStaff2Tel{
		Value: v,
		Set:   true,
	}
}

// OptNilStaff2Tel is optional nullable Staff2Tel.
type OptNilStaff2Tel struct {
	Value Staff2Tel
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStaff2Tel was set.
func (o OptNilStaff2Tel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStaff2Tel) Reset() {
	var v Staff2Tel
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStaff2Tel) SetTo(v Staff2Tel) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStaff2Tel) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStaff2Tel) SetToNull() {
	o.Set = true
	o.Null = true
	var v Staff2Tel
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStaff2Tel) Get() (v Staff2Tel, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStaff2Tel) Or(d Staff2Tel) Staff2Tel {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStopDate returns new OptNilStopDate with value set to v.
func NewOptNilStopDate(v StopDate) OptNilStopDate {
	return OptNilStopDate{
		Value: v,
		Set:   true,
	}
}

// OptNilStopDate is optional nullable StopDate.
type OptNilStopDate struct {
	Value StopDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStopDate was set.
func (o OptNilStopDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStopDate) Reset() {
	var v StopDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStopDate) SetTo(v StopDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStopDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilStopDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v StopDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStopDate) Get() (v StopDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStopDate) Or(d StopDate) StopDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSuccessURL returns new OptNilSuccessURL with value set to v.
func NewOptNilSuccessURL(v SuccessURL) OptNilSuccessURL {
	return OptNilSuccessURL{
		Value: v,
		Set:   true,
	}
}

// OptNilSuccessURL is optional nullable SuccessURL.
type OptNilSuccessURL struct {
	Value SuccessURL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSuccessURL was set.
func (o OptNilSuccessURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSuccessURL) Reset() {
	var v SuccessURL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSuccessURL) SetTo(v SuccessURL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSuccessURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSuccessURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v SuccessURL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSuccessURL) Get() (v SuccessURL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSuccessURL) Or(d SuccessURL) SuccessURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSupportMail returns new OptNilSupportMail with value set to v.
func NewOptNilSupportMail(v SupportMail) OptNilSupportMail {
	return OptNilSupportMail{
		Value: v,
		Set:   true,
	}
}

// OptNilSupportMail is optional nullable SupportMail.
type OptNilSupportMail struct {
	Value SupportMail
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSupportMail was set.
func (o OptNilSupportMail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSupportMail) Reset() {
	var v SupportMail
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSupportMail) SetTo(v SupportMail) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSupportMail) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSupportMail) SetToNull() {
	o.Set = true
	o.Null = true
	var v SupportMail
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSupportMail) Get() (v SupportMail, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSupportMail) Or(d SupportMail) SupportMail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSupportTel returns new OptNilSupportTel with value set to v.
func NewOptNilSupportTel(v SupportTel) OptNilSupportTel {
	return OptNilSupportTel{
		Value: v,
		Set:   true,
	}
}

// OptNilSupportTel is optional nullable SupportTel.
type OptNilSupportTel struct {
	Value SupportTel
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSupportTel was set.
func (o OptNilSupportTel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSupportTel) Reset() {
	var v SupportTel
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSupportTel) SetTo(v SupportTel) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSupportTel) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilSupportTel) SetToNull() {
	o.Set = true
	o.Null = true
	var v SupportTel
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSupportTel) Get() (v SupportTel, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSupportTel) Or(d SupportTel) SupportTel {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTargetDate returns new OptNilTargetDate with value set to v.
func NewOptNilTargetDate(v TargetDate) OptNilTargetDate {
	return OptNilTargetDate{
		Value: v,
		Set:   true,
	}
}

// OptNilTargetDate is optional nullable TargetDate.
type OptNilTargetDate struct {
	Value TargetDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTargetDate was set.
func (o OptNilTargetDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTargetDate) Reset() {
	var v TargetDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTargetDate) SetTo(v TargetDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTargetDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTargetDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v TargetDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTargetDate) Get() (v TargetDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTargetDate) Or(d TargetDate) TargetDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTaxAmount returns new OptNilTaxAmount with value set to v.
func NewOptNilTaxAmount(v TaxAmount) OptNilTaxAmount {
	return OptNilTaxAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilTaxAmount is optional nullable TaxAmount.
type OptNilTaxAmount struct {
	Value TaxAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTaxAmount was set.
func (o OptNilTaxAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTaxAmount) Reset() {
	var v TaxAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTaxAmount) SetTo(v TaxAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTaxAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTaxAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v TaxAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTaxAmount) Get() (v TaxAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTaxAmount) Or(d TaxAmount) TaxAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTaxableFeeAmount returns new OptNilTaxableFeeAmount with value set to v.
func NewOptNilTaxableFeeAmount(v TaxableFeeAmount) OptNilTaxableFeeAmount {
	return OptNilTaxableFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilTaxableFeeAmount is optional nullable TaxableFeeAmount.
type OptNilTaxableFeeAmount struct {
	Value TaxableFeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTaxableFeeAmount was set.
func (o OptNilTaxableFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTaxableFeeAmount) Reset() {
	var v TaxableFeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTaxableFeeAmount) SetTo(v TaxableFeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTaxableFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTaxableFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v TaxableFeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTaxableFeeAmount) Get() (v TaxableFeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTaxableFeeAmount) Or(d TaxableFeeAmount) TaxableFeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2AddrMatch returns new OptNilTds2AddrMatch with value set to v.
func NewOptNilTds2AddrMatch(v Tds2AddrMatch) OptNilTds2AddrMatch {
	return OptNilTds2AddrMatch{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2AddrMatch is optional nullable Tds2AddrMatch.
type OptNilTds2AddrMatch struct {
	Value Tds2AddrMatch
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2AddrMatch was set.
func (o OptNilTds2AddrMatch) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2AddrMatch) Reset() {
	var v Tds2AddrMatch
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2AddrMatch) SetTo(v Tds2AddrMatch) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2AddrMatch) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2AddrMatch) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2AddrMatch
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2AddrMatch) Get() (v Tds2AddrMatch, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2AddrMatch) Or(d Tds2AddrMatch) Tds2AddrMatch {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2BillAddrCity returns new OptNilTds2BillAddrCity with value set to v.
func NewOptNilTds2BillAddrCity(v Tds2BillAddrCity) OptNilTds2BillAddrCity {
	return OptNilTds2BillAddrCity{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2BillAddrCity is optional nullable Tds2BillAddrCity.
type OptNilTds2BillAddrCity struct {
	Value Tds2BillAddrCity
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2BillAddrCity was set.
func (o OptNilTds2BillAddrCity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2BillAddrCity) Reset() {
	var v Tds2BillAddrCity
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2BillAddrCity) SetTo(v Tds2BillAddrCity) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2BillAddrCity) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2BillAddrCity) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2BillAddrCity
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2BillAddrCity) Get() (v Tds2BillAddrCity, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2BillAddrCity) Or(d Tds2BillAddrCity) Tds2BillAddrCity {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2BillAddrCountry returns new OptNilTds2BillAddrCountry with value set to v.
func NewOptNilTds2BillAddrCountry(v Tds2BillAddrCountry) OptNilTds2BillAddrCountry {
	return OptNilTds2BillAddrCountry{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2BillAddrCountry is optional nullable Tds2BillAddrCountry.
type OptNilTds2BillAddrCountry struct {
	Value Tds2BillAddrCountry
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2BillAddrCountry was set.
func (o OptNilTds2BillAddrCountry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2BillAddrCountry) Reset() {
	var v Tds2BillAddrCountry
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2BillAddrCountry) SetTo(v Tds2BillAddrCountry) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2BillAddrCountry) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2BillAddrCountry) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2BillAddrCountry
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2BillAddrCountry) Get() (v Tds2BillAddrCountry, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2BillAddrCountry) Or(d Tds2BillAddrCountry) Tds2BillAddrCountry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2BillAddrLine1 returns new OptNilTds2BillAddrLine1 with value set to v.
func NewOptNilTds2BillAddrLine1(v Tds2BillAddrLine1) OptNilTds2BillAddrLine1 {
	return OptNilTds2BillAddrLine1{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2BillAddrLine1 is optional nullable Tds2BillAddrLine1.
type OptNilTds2BillAddrLine1 struct {
	Value Tds2BillAddrLine1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2BillAddrLine1 was set.
func (o OptNilTds2BillAddrLine1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2BillAddrLine1) Reset() {
	var v Tds2BillAddrLine1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2BillAddrLine1) SetTo(v Tds2BillAddrLine1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2BillAddrLine1) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2BillAddrLine1) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2BillAddrLine1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2BillAddrLine1) Get() (v Tds2BillAddrLine1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2BillAddrLine1) Or(d Tds2BillAddrLine1) Tds2BillAddrLine1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2BillAddrLine2 returns new OptNilTds2BillAddrLine2 with value set to v.
func NewOptNilTds2BillAddrLine2(v Tds2BillAddrLine2) OptNilTds2BillAddrLine2 {
	return OptNilTds2BillAddrLine2{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2BillAddrLine2 is optional nullable Tds2BillAddrLine2.
type OptNilTds2BillAddrLine2 struct {
	Value Tds2BillAddrLine2
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2BillAddrLine2 was set.
func (o OptNilTds2BillAddrLine2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2BillAddrLine2) Reset() {
	var v Tds2BillAddrLine2
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2BillAddrLine2) SetTo(v Tds2BillAddrLine2) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2BillAddrLine2) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2BillAddrLine2) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2BillAddrLine2
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2BillAddrLine2) Get() (v Tds2BillAddrLine2, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2BillAddrLine2) Or(d Tds2BillAddrLine2) Tds2BillAddrLine2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2BillAddrPostCode returns new OptNilTds2BillAddrPostCode with value set to v.
func NewOptNilTds2BillAddrPostCode(v Tds2BillAddrPostCode) OptNilTds2BillAddrPostCode {
	return OptNilTds2BillAddrPostCode{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2BillAddrPostCode is optional nullable Tds2BillAddrPostCode.
type OptNilTds2BillAddrPostCode struct {
	Value Tds2BillAddrPostCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2BillAddrPostCode was set.
func (o OptNilTds2BillAddrPostCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2BillAddrPostCode) Reset() {
	var v Tds2BillAddrPostCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2BillAddrPostCode) SetTo(v Tds2BillAddrPostCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2BillAddrPostCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2BillAddrPostCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2BillAddrPostCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2BillAddrPostCode) Get() (v Tds2BillAddrPostCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2BillAddrPostCode) Or(d Tds2BillAddrPostCode) Tds2BillAddrPostCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2BillAddrState returns new OptNilTds2BillAddrState with value set to v.
func NewOptNilTds2BillAddrState(v Tds2BillAddrState) OptNilTds2BillAddrState {
	return OptNilTds2BillAddrState{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2BillAddrState is optional nullable Tds2BillAddrState.
type OptNilTds2BillAddrState struct {
	Value Tds2BillAddrState
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2BillAddrState was set.
func (o OptNilTds2BillAddrState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2BillAddrState) Reset() {
	var v Tds2BillAddrState
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2BillAddrState) SetTo(v Tds2BillAddrState) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2BillAddrState) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2BillAddrState) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2BillAddrState
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2BillAddrState) Get() (v Tds2BillAddrState, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2BillAddrState) Or(d Tds2BillAddrState) Tds2BillAddrState {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ChAccChange returns new OptNilTds2ChAccChange with value set to v.
func NewOptNilTds2ChAccChange(v Tds2ChAccChange) OptNilTds2ChAccChange {
	return OptNilTds2ChAccChange{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ChAccChange is optional nullable Tds2ChAccChange.
type OptNilTds2ChAccChange struct {
	Value Tds2ChAccChange
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ChAccChange was set.
func (o OptNilTds2ChAccChange) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ChAccChange) Reset() {
	var v Tds2ChAccChange
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ChAccChange) SetTo(v Tds2ChAccChange) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ChAccChange) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ChAccChange) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ChAccChange
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ChAccChange) Get() (v Tds2ChAccChange, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ChAccChange) Or(d Tds2ChAccChange) Tds2ChAccChange {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ChAccDate returns new OptNilTds2ChAccDate with value set to v.
func NewOptNilTds2ChAccDate(v Tds2ChAccDate) OptNilTds2ChAccDate {
	return OptNilTds2ChAccDate{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ChAccDate is optional nullable Tds2ChAccDate.
type OptNilTds2ChAccDate struct {
	Value Tds2ChAccDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ChAccDate was set.
func (o OptNilTds2ChAccDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ChAccDate) Reset() {
	var v Tds2ChAccDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ChAccDate) SetTo(v Tds2ChAccDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ChAccDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ChAccDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ChAccDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ChAccDate) Get() (v Tds2ChAccDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ChAccDate) Or(d Tds2ChAccDate) Tds2ChAccDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ChAccPwChange returns new OptNilTds2ChAccPwChange with value set to v.
func NewOptNilTds2ChAccPwChange(v Tds2ChAccPwChange) OptNilTds2ChAccPwChange {
	return OptNilTds2ChAccPwChange{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ChAccPwChange is optional nullable Tds2ChAccPwChange.
type OptNilTds2ChAccPwChange struct {
	Value Tds2ChAccPwChange
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ChAccPwChange was set.
func (o OptNilTds2ChAccPwChange) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ChAccPwChange) Reset() {
	var v Tds2ChAccPwChange
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ChAccPwChange) SetTo(v Tds2ChAccPwChange) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ChAccPwChange) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ChAccPwChange) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ChAccPwChange
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ChAccPwChange) Get() (v Tds2ChAccPwChange, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ChAccPwChange) Or(d Tds2ChAccPwChange) Tds2ChAccPwChange {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2DeliveryEmailAddress returns new OptNilTds2DeliveryEmailAddress with value set to v.
func NewOptNilTds2DeliveryEmailAddress(v Tds2DeliveryEmailAddress) OptNilTds2DeliveryEmailAddress {
	return OptNilTds2DeliveryEmailAddress{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2DeliveryEmailAddress is optional nullable Tds2DeliveryEmailAddress.
type OptNilTds2DeliveryEmailAddress struct {
	Value Tds2DeliveryEmailAddress
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2DeliveryEmailAddress was set.
func (o OptNilTds2DeliveryEmailAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2DeliveryEmailAddress) Reset() {
	var v Tds2DeliveryEmailAddress
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2DeliveryEmailAddress) SetTo(v Tds2DeliveryEmailAddress) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2DeliveryEmailAddress) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2DeliveryEmailAddress) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2DeliveryEmailAddress
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2DeliveryEmailAddress) Get() (v Tds2DeliveryEmailAddress, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2DeliveryEmailAddress) Or(d Tds2DeliveryEmailAddress) Tds2DeliveryEmailAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2DeliveryTimeframe returns new OptNilTds2DeliveryTimeframe with value set to v.
func NewOptNilTds2DeliveryTimeframe(v Tds2DeliveryTimeframe) OptNilTds2DeliveryTimeframe {
	return OptNilTds2DeliveryTimeframe{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2DeliveryTimeframe is optional nullable Tds2DeliveryTimeframe.
type OptNilTds2DeliveryTimeframe struct {
	Value Tds2DeliveryTimeframe
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2DeliveryTimeframe was set.
func (o OptNilTds2DeliveryTimeframe) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2DeliveryTimeframe) Reset() {
	var v Tds2DeliveryTimeframe
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2DeliveryTimeframe) SetTo(v Tds2DeliveryTimeframe) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2DeliveryTimeframe) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2DeliveryTimeframe) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2DeliveryTimeframe
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2DeliveryTimeframe) Get() (v Tds2DeliveryTimeframe, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2DeliveryTimeframe) Or(d Tds2DeliveryTimeframe) Tds2DeliveryTimeframe {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2GiftCardAmount returns new OptNilTds2GiftCardAmount with value set to v.
func NewOptNilTds2GiftCardAmount(v Tds2GiftCardAmount) OptNilTds2GiftCardAmount {
	return OptNilTds2GiftCardAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2GiftCardAmount is optional nullable Tds2GiftCardAmount.
type OptNilTds2GiftCardAmount struct {
	Value Tds2GiftCardAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2GiftCardAmount was set.
func (o OptNilTds2GiftCardAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2GiftCardAmount) Reset() {
	var v Tds2GiftCardAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2GiftCardAmount) SetTo(v Tds2GiftCardAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2GiftCardAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2GiftCardAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2GiftCardAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2GiftCardAmount) Get() (v Tds2GiftCardAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2GiftCardAmount) Or(d Tds2GiftCardAmount) Tds2GiftCardAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2GiftCardCount returns new OptNilTds2GiftCardCount with value set to v.
func NewOptNilTds2GiftCardCount(v Tds2GiftCardCount) OptNilTds2GiftCardCount {
	return OptNilTds2GiftCardCount{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2GiftCardCount is optional nullable Tds2GiftCardCount.
type OptNilTds2GiftCardCount struct {
	Value Tds2GiftCardCount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2GiftCardCount was set.
func (o OptNilTds2GiftCardCount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2GiftCardCount) Reset() {
	var v Tds2GiftCardCount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2GiftCardCount) SetTo(v Tds2GiftCardCount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2GiftCardCount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2GiftCardCount) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2GiftCardCount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2GiftCardCount) Get() (v Tds2GiftCardCount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2GiftCardCount) Or(d Tds2GiftCardCount) Tds2GiftCardCount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2GiftCardCurr returns new OptNilTds2GiftCardCurr with value set to v.
func NewOptNilTds2GiftCardCurr(v Tds2GiftCardCurr) OptNilTds2GiftCardCurr {
	return OptNilTds2GiftCardCurr{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2GiftCardCurr is optional nullable Tds2GiftCardCurr.
type OptNilTds2GiftCardCurr struct {
	Value Tds2GiftCardCurr
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2GiftCardCurr was set.
func (o OptNilTds2GiftCardCurr) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2GiftCardCurr) Reset() {
	var v Tds2GiftCardCurr
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2GiftCardCurr) SetTo(v Tds2GiftCardCurr) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2GiftCardCurr) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2GiftCardCurr) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2GiftCardCurr
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2GiftCardCurr) Get() (v Tds2GiftCardCurr, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2GiftCardCurr) Or(d Tds2GiftCardCurr) Tds2GiftCardCurr {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2HomePhoneCc returns new OptNilTds2HomePhoneCc with value set to v.
func NewOptNilTds2HomePhoneCc(v Tds2HomePhoneCc) OptNilTds2HomePhoneCc {
	return OptNilTds2HomePhoneCc{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2HomePhoneCc is optional nullable Tds2HomePhoneCc.
type OptNilTds2HomePhoneCc struct {
	Value Tds2HomePhoneCc
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2HomePhoneCc was set.
func (o OptNilTds2HomePhoneCc) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2HomePhoneCc) Reset() {
	var v Tds2HomePhoneCc
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2HomePhoneCc) SetTo(v Tds2HomePhoneCc) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2HomePhoneCc) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2HomePhoneCc) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2HomePhoneCc
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2HomePhoneCc) Get() (v Tds2HomePhoneCc, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2HomePhoneCc) Or(d Tds2HomePhoneCc) Tds2HomePhoneCc {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2HomePhoneNo returns new OptNilTds2HomePhoneNo with value set to v.
func NewOptNilTds2HomePhoneNo(v Tds2HomePhoneNo) OptNilTds2HomePhoneNo {
	return OptNilTds2HomePhoneNo{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2HomePhoneNo is optional nullable Tds2HomePhoneNo.
type OptNilTds2HomePhoneNo struct {
	Value Tds2HomePhoneNo
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2HomePhoneNo was set.
func (o OptNilTds2HomePhoneNo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2HomePhoneNo) Reset() {
	var v Tds2HomePhoneNo
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2HomePhoneNo) SetTo(v Tds2HomePhoneNo) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2HomePhoneNo) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2HomePhoneNo) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2HomePhoneNo
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2HomePhoneNo) Get() (v Tds2HomePhoneNo, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2HomePhoneNo) Or(d Tds2HomePhoneNo) Tds2HomePhoneNo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2MobilePhoneCc returns new OptNilTds2MobilePhoneCc with value set to v.
func NewOptNilTds2MobilePhoneCc(v Tds2MobilePhoneCc) OptNilTds2MobilePhoneCc {
	return OptNilTds2MobilePhoneCc{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2MobilePhoneCc is optional nullable Tds2MobilePhoneCc.
type OptNilTds2MobilePhoneCc struct {
	Value Tds2MobilePhoneCc
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2MobilePhoneCc was set.
func (o OptNilTds2MobilePhoneCc) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2MobilePhoneCc) Reset() {
	var v Tds2MobilePhoneCc
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2MobilePhoneCc) SetTo(v Tds2MobilePhoneCc) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2MobilePhoneCc) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2MobilePhoneCc) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2MobilePhoneCc
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2MobilePhoneCc) Get() (v Tds2MobilePhoneCc, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2MobilePhoneCc) Or(d Tds2MobilePhoneCc) Tds2MobilePhoneCc {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2MobilePhoneNo returns new OptNilTds2MobilePhoneNo with value set to v.
func NewOptNilTds2MobilePhoneNo(v Tds2MobilePhoneNo) OptNilTds2MobilePhoneNo {
	return OptNilTds2MobilePhoneNo{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2MobilePhoneNo is optional nullable Tds2MobilePhoneNo.
type OptNilTds2MobilePhoneNo struct {
	Value Tds2MobilePhoneNo
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2MobilePhoneNo was set.
func (o OptNilTds2MobilePhoneNo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2MobilePhoneNo) Reset() {
	var v Tds2MobilePhoneNo
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2MobilePhoneNo) SetTo(v Tds2MobilePhoneNo) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2MobilePhoneNo) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2MobilePhoneNo) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2MobilePhoneNo
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2MobilePhoneNo) Get() (v Tds2MobilePhoneNo, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2MobilePhoneNo) Or(d Tds2MobilePhoneNo) Tds2MobilePhoneNo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2NbPurchaseAccount returns new OptNilTds2NbPurchaseAccount with value set to v.
func NewOptNilTds2NbPurchaseAccount(v Tds2NbPurchaseAccount) OptNilTds2NbPurchaseAccount {
	return OptNilTds2NbPurchaseAccount{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2NbPurchaseAccount is optional nullable Tds2NbPurchaseAccount.
type OptNilTds2NbPurchaseAccount struct {
	Value Tds2NbPurchaseAccount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2NbPurchaseAccount was set.
func (o OptNilTds2NbPurchaseAccount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2NbPurchaseAccount) Reset() {
	var v Tds2NbPurchaseAccount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2NbPurchaseAccount) SetTo(v Tds2NbPurchaseAccount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2NbPurchaseAccount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2NbPurchaseAccount) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2NbPurchaseAccount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2NbPurchaseAccount) Get() (v Tds2NbPurchaseAccount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2NbPurchaseAccount) Or(d Tds2NbPurchaseAccount) Tds2NbPurchaseAccount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2PaymentAccAge returns new OptNilTds2PaymentAccAge with value set to v.
func NewOptNilTds2PaymentAccAge(v Tds2PaymentAccAge) OptNilTds2PaymentAccAge {
	return OptNilTds2PaymentAccAge{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2PaymentAccAge is optional nullable Tds2PaymentAccAge.
type OptNilTds2PaymentAccAge struct {
	Value Tds2PaymentAccAge
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2PaymentAccAge was set.
func (o OptNilTds2PaymentAccAge) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2PaymentAccAge) Reset() {
	var v Tds2PaymentAccAge
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2PaymentAccAge) SetTo(v Tds2PaymentAccAge) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2PaymentAccAge) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2PaymentAccAge) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2PaymentAccAge
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2PaymentAccAge) Get() (v Tds2PaymentAccAge, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2PaymentAccAge) Or(d Tds2PaymentAccAge) Tds2PaymentAccAge {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2PreOrderDate returns new OptNilTds2PreOrderDate with value set to v.
func NewOptNilTds2PreOrderDate(v Tds2PreOrderDate) OptNilTds2PreOrderDate {
	return OptNilTds2PreOrderDate{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2PreOrderDate is optional nullable Tds2PreOrderDate.
type OptNilTds2PreOrderDate struct {
	Value Tds2PreOrderDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2PreOrderDate was set.
func (o OptNilTds2PreOrderDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2PreOrderDate) Reset() {
	var v Tds2PreOrderDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2PreOrderDate) SetTo(v Tds2PreOrderDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2PreOrderDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2PreOrderDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2PreOrderDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2PreOrderDate) Get() (v Tds2PreOrderDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2PreOrderDate) Or(d Tds2PreOrderDate) Tds2PreOrderDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2PreOrderPurchaseInd returns new OptNilTds2PreOrderPurchaseInd with value set to v.
func NewOptNilTds2PreOrderPurchaseInd(v Tds2PreOrderPurchaseInd) OptNilTds2PreOrderPurchaseInd {
	return OptNilTds2PreOrderPurchaseInd{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2PreOrderPurchaseInd is optional nullable Tds2PreOrderPurchaseInd.
type OptNilTds2PreOrderPurchaseInd struct {
	Value Tds2PreOrderPurchaseInd
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2PreOrderPurchaseInd was set.
func (o OptNilTds2PreOrderPurchaseInd) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2PreOrderPurchaseInd) Reset() {
	var v Tds2PreOrderPurchaseInd
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2PreOrderPurchaseInd) SetTo(v Tds2PreOrderPurchaseInd) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2PreOrderPurchaseInd) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2PreOrderPurchaseInd) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2PreOrderPurchaseInd
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2PreOrderPurchaseInd) Get() (v Tds2PreOrderPurchaseInd, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2PreOrderPurchaseInd) Or(d Tds2PreOrderPurchaseInd) Tds2PreOrderPurchaseInd {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ProvisionAttemptsDay returns new OptNilTds2ProvisionAttemptsDay with value set to v.
func NewOptNilTds2ProvisionAttemptsDay(v Tds2ProvisionAttemptsDay) OptNilTds2ProvisionAttemptsDay {
	return OptNilTds2ProvisionAttemptsDay{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ProvisionAttemptsDay is optional nullable Tds2ProvisionAttemptsDay.
type OptNilTds2ProvisionAttemptsDay struct {
	Value Tds2ProvisionAttemptsDay
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ProvisionAttemptsDay was set.
func (o OptNilTds2ProvisionAttemptsDay) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ProvisionAttemptsDay) Reset() {
	var v Tds2ProvisionAttemptsDay
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ProvisionAttemptsDay) SetTo(v Tds2ProvisionAttemptsDay) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ProvisionAttemptsDay) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ProvisionAttemptsDay) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ProvisionAttemptsDay
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ProvisionAttemptsDay) Get() (v Tds2ProvisionAttemptsDay, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ProvisionAttemptsDay) Or(d Tds2ProvisionAttemptsDay) Tds2ProvisionAttemptsDay {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2RecurringExpiry returns new OptNilTds2RecurringExpiry with value set to v.
func NewOptNilTds2RecurringExpiry(v Tds2RecurringExpiry) OptNilTds2RecurringExpiry {
	return OptNilTds2RecurringExpiry{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2RecurringExpiry is optional nullable Tds2RecurringExpiry.
type OptNilTds2RecurringExpiry struct {
	Value Tds2RecurringExpiry
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2RecurringExpiry was set.
func (o OptNilTds2RecurringExpiry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2RecurringExpiry) Reset() {
	var v Tds2RecurringExpiry
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2RecurringExpiry) SetTo(v Tds2RecurringExpiry) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2RecurringExpiry) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2RecurringExpiry) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2RecurringExpiry
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2RecurringExpiry) Get() (v Tds2RecurringExpiry, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2RecurringExpiry) Or(d Tds2RecurringExpiry) Tds2RecurringExpiry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2RecurringFrequency returns new OptNilTds2RecurringFrequency with value set to v.
func NewOptNilTds2RecurringFrequency(v Tds2RecurringFrequency) OptNilTds2RecurringFrequency {
	return OptNilTds2RecurringFrequency{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2RecurringFrequency is optional nullable Tds2RecurringFrequency.
type OptNilTds2RecurringFrequency struct {
	Value Tds2RecurringFrequency
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2RecurringFrequency was set.
func (o OptNilTds2RecurringFrequency) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2RecurringFrequency) Reset() {
	var v Tds2RecurringFrequency
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2RecurringFrequency) SetTo(v Tds2RecurringFrequency) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2RecurringFrequency) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2RecurringFrequency) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2RecurringFrequency
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2RecurringFrequency) Get() (v Tds2RecurringFrequency, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2RecurringFrequency) Or(d Tds2RecurringFrequency) Tds2RecurringFrequency {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ReorderItemsInd returns new OptNilTds2ReorderItemsInd with value set to v.
func NewOptNilTds2ReorderItemsInd(v Tds2ReorderItemsInd) OptNilTds2ReorderItemsInd {
	return OptNilTds2ReorderItemsInd{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ReorderItemsInd is optional nullable Tds2ReorderItemsInd.
type OptNilTds2ReorderItemsInd struct {
	Value Tds2ReorderItemsInd
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ReorderItemsInd was set.
func (o OptNilTds2ReorderItemsInd) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ReorderItemsInd) Reset() {
	var v Tds2ReorderItemsInd
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ReorderItemsInd) SetTo(v Tds2ReorderItemsInd) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ReorderItemsInd) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ReorderItemsInd) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ReorderItemsInd
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ReorderItemsInd) Get() (v Tds2ReorderItemsInd, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ReorderItemsInd) Or(d Tds2ReorderItemsInd) Tds2ReorderItemsInd {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2RetURL returns new OptNilTds2RetURL with value set to v.
func NewOptNilTds2RetURL(v Tds2RetURL) OptNilTds2RetURL {
	return OptNilTds2RetURL{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2RetURL is optional nullable Tds2RetURL.
type OptNilTds2RetURL struct {
	Value Tds2RetURL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2RetURL was set.
func (o OptNilTds2RetURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2RetURL) Reset() {
	var v Tds2RetURL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2RetURL) SetTo(v Tds2RetURL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2RetURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2RetURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2RetURL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2RetURL) Get() (v Tds2RetURL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2RetURL) Or(d Tds2RetURL) Tds2RetURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipAddrCity returns new OptNilTds2ShipAddrCity with value set to v.
func NewOptNilTds2ShipAddrCity(v Tds2ShipAddrCity) OptNilTds2ShipAddrCity {
	return OptNilTds2ShipAddrCity{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipAddrCity is optional nullable Tds2ShipAddrCity.
type OptNilTds2ShipAddrCity struct {
	Value Tds2ShipAddrCity
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipAddrCity was set.
func (o OptNilTds2ShipAddrCity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipAddrCity) Reset() {
	var v Tds2ShipAddrCity
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipAddrCity) SetTo(v Tds2ShipAddrCity) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipAddrCity) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipAddrCity) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipAddrCity
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipAddrCity) Get() (v Tds2ShipAddrCity, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipAddrCity) Or(d Tds2ShipAddrCity) Tds2ShipAddrCity {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipAddrCountry returns new OptNilTds2ShipAddrCountry with value set to v.
func NewOptNilTds2ShipAddrCountry(v Tds2ShipAddrCountry) OptNilTds2ShipAddrCountry {
	return OptNilTds2ShipAddrCountry{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipAddrCountry is optional nullable Tds2ShipAddrCountry.
type OptNilTds2ShipAddrCountry struct {
	Value Tds2ShipAddrCountry
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipAddrCountry was set.
func (o OptNilTds2ShipAddrCountry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipAddrCountry) Reset() {
	var v Tds2ShipAddrCountry
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipAddrCountry) SetTo(v Tds2ShipAddrCountry) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipAddrCountry) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipAddrCountry) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipAddrCountry
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipAddrCountry) Get() (v Tds2ShipAddrCountry, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipAddrCountry) Or(d Tds2ShipAddrCountry) Tds2ShipAddrCountry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipAddrLine1 returns new OptNilTds2ShipAddrLine1 with value set to v.
func NewOptNilTds2ShipAddrLine1(v Tds2ShipAddrLine1) OptNilTds2ShipAddrLine1 {
	return OptNilTds2ShipAddrLine1{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipAddrLine1 is optional nullable Tds2ShipAddrLine1.
type OptNilTds2ShipAddrLine1 struct {
	Value Tds2ShipAddrLine1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipAddrLine1 was set.
func (o OptNilTds2ShipAddrLine1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipAddrLine1) Reset() {
	var v Tds2ShipAddrLine1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipAddrLine1) SetTo(v Tds2ShipAddrLine1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipAddrLine1) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipAddrLine1) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipAddrLine1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipAddrLine1) Get() (v Tds2ShipAddrLine1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipAddrLine1) Or(d Tds2ShipAddrLine1) Tds2ShipAddrLine1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipAddrLine2 returns new OptNilTds2ShipAddrLine2 with value set to v.
func NewOptNilTds2ShipAddrLine2(v Tds2ShipAddrLine2) OptNilTds2ShipAddrLine2 {
	return OptNilTds2ShipAddrLine2{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipAddrLine2 is optional nullable Tds2ShipAddrLine2.
type OptNilTds2ShipAddrLine2 struct {
	Value Tds2ShipAddrLine2
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipAddrLine2 was set.
func (o OptNilTds2ShipAddrLine2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipAddrLine2) Reset() {
	var v Tds2ShipAddrLine2
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipAddrLine2) SetTo(v Tds2ShipAddrLine2) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipAddrLine2) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipAddrLine2) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipAddrLine2
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipAddrLine2) Get() (v Tds2ShipAddrLine2, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipAddrLine2) Or(d Tds2ShipAddrLine2) Tds2ShipAddrLine2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipAddrLine3 returns new OptNilTds2ShipAddrLine3 with value set to v.
func NewOptNilTds2ShipAddrLine3(v Tds2ShipAddrLine3) OptNilTds2ShipAddrLine3 {
	return OptNilTds2ShipAddrLine3{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipAddrLine3 is optional nullable Tds2ShipAddrLine3.
type OptNilTds2ShipAddrLine3 struct {
	Value Tds2ShipAddrLine3
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipAddrLine3 was set.
func (o OptNilTds2ShipAddrLine3) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipAddrLine3) Reset() {
	var v Tds2ShipAddrLine3
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipAddrLine3) SetTo(v Tds2ShipAddrLine3) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipAddrLine3) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipAddrLine3) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipAddrLine3
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipAddrLine3) Get() (v Tds2ShipAddrLine3, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipAddrLine3) Or(d Tds2ShipAddrLine3) Tds2ShipAddrLine3 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipAddrPostCode returns new OptNilTds2ShipAddrPostCode with value set to v.
func NewOptNilTds2ShipAddrPostCode(v Tds2ShipAddrPostCode) OptNilTds2ShipAddrPostCode {
	return OptNilTds2ShipAddrPostCode{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipAddrPostCode is optional nullable Tds2ShipAddrPostCode.
type OptNilTds2ShipAddrPostCode struct {
	Value Tds2ShipAddrPostCode
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipAddrPostCode was set.
func (o OptNilTds2ShipAddrPostCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipAddrPostCode) Reset() {
	var v Tds2ShipAddrPostCode
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipAddrPostCode) SetTo(v Tds2ShipAddrPostCode) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipAddrPostCode) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipAddrPostCode) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipAddrPostCode
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipAddrPostCode) Get() (v Tds2ShipAddrPostCode, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipAddrPostCode) Or(d Tds2ShipAddrPostCode) Tds2ShipAddrPostCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipAddrState returns new OptNilTds2ShipAddrState with value set to v.
func NewOptNilTds2ShipAddrState(v Tds2ShipAddrState) OptNilTds2ShipAddrState {
	return OptNilTds2ShipAddrState{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipAddrState is optional nullable Tds2ShipAddrState.
type OptNilTds2ShipAddrState struct {
	Value Tds2ShipAddrState
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipAddrState was set.
func (o OptNilTds2ShipAddrState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipAddrState) Reset() {
	var v Tds2ShipAddrState
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipAddrState) SetTo(v Tds2ShipAddrState) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipAddrState) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipAddrState) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipAddrState
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipAddrState) Get() (v Tds2ShipAddrState, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipAddrState) Or(d Tds2ShipAddrState) Tds2ShipAddrState {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipAddressUsage returns new OptNilTds2ShipAddressUsage with value set to v.
func NewOptNilTds2ShipAddressUsage(v Tds2ShipAddressUsage) OptNilTds2ShipAddressUsage {
	return OptNilTds2ShipAddressUsage{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipAddressUsage is optional nullable Tds2ShipAddressUsage.
type OptNilTds2ShipAddressUsage struct {
	Value Tds2ShipAddressUsage
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipAddressUsage was set.
func (o OptNilTds2ShipAddressUsage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipAddressUsage) Reset() {
	var v Tds2ShipAddressUsage
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipAddressUsage) SetTo(v Tds2ShipAddressUsage) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipAddressUsage) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipAddressUsage) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipAddressUsage
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipAddressUsage) Get() (v Tds2ShipAddressUsage, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipAddressUsage) Or(d Tds2ShipAddressUsage) Tds2ShipAddressUsage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipInd returns new OptNilTds2ShipInd with value set to v.
func NewOptNilTds2ShipInd(v Tds2ShipInd) OptNilTds2ShipInd {
	return OptNilTds2ShipInd{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipInd is optional nullable Tds2ShipInd.
type OptNilTds2ShipInd struct {
	Value Tds2ShipInd
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipInd was set.
func (o OptNilTds2ShipInd) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipInd) Reset() {
	var v Tds2ShipInd
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipInd) SetTo(v Tds2ShipInd) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipInd) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipInd) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipInd
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipInd) Get() (v Tds2ShipInd, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipInd) Or(d Tds2ShipInd) Tds2ShipInd {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ShipNameInd returns new OptNilTds2ShipNameInd with value set to v.
func NewOptNilTds2ShipNameInd(v Tds2ShipNameInd) OptNilTds2ShipNameInd {
	return OptNilTds2ShipNameInd{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ShipNameInd is optional nullable Tds2ShipNameInd.
type OptNilTds2ShipNameInd struct {
	Value Tds2ShipNameInd
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ShipNameInd was set.
func (o OptNilTds2ShipNameInd) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ShipNameInd) Reset() {
	var v Tds2ShipNameInd
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ShipNameInd) SetTo(v Tds2ShipNameInd) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ShipNameInd) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ShipNameInd) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ShipNameInd
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ShipNameInd) Get() (v Tds2ShipNameInd, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ShipNameInd) Or(d Tds2ShipNameInd) Tds2ShipNameInd {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2SuspiciousAccActivity returns new OptNilTds2SuspiciousAccActivity with value set to v.
func NewOptNilTds2SuspiciousAccActivity(v Tds2SuspiciousAccActivity) OptNilTds2SuspiciousAccActivity {
	return OptNilTds2SuspiciousAccActivity{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2SuspiciousAccActivity is optional nullable Tds2SuspiciousAccActivity.
type OptNilTds2SuspiciousAccActivity struct {
	Value Tds2SuspiciousAccActivity
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2SuspiciousAccActivity was set.
func (o OptNilTds2SuspiciousAccActivity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2SuspiciousAccActivity) Reset() {
	var v Tds2SuspiciousAccActivity
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2SuspiciousAccActivity) SetTo(v Tds2SuspiciousAccActivity) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2SuspiciousAccActivity) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2SuspiciousAccActivity) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2SuspiciousAccActivity
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2SuspiciousAccActivity) Get() (v Tds2SuspiciousAccActivity, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2SuspiciousAccActivity) Or(d Tds2SuspiciousAccActivity) Tds2SuspiciousAccActivity {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ThreeDsReqAuthData returns new OptNilTds2ThreeDsReqAuthData with value set to v.
func NewOptNilTds2ThreeDsReqAuthData(v Tds2ThreeDsReqAuthData) OptNilTds2ThreeDsReqAuthData {
	return OptNilTds2ThreeDsReqAuthData{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ThreeDsReqAuthData is optional nullable Tds2ThreeDsReqAuthData.
type OptNilTds2ThreeDsReqAuthData struct {
	Value Tds2ThreeDsReqAuthData
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ThreeDsReqAuthData was set.
func (o OptNilTds2ThreeDsReqAuthData) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ThreeDsReqAuthData) Reset() {
	var v Tds2ThreeDsReqAuthData
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ThreeDsReqAuthData) SetTo(v Tds2ThreeDsReqAuthData) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ThreeDsReqAuthData) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ThreeDsReqAuthData) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ThreeDsReqAuthData
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ThreeDsReqAuthData) Get() (v Tds2ThreeDsReqAuthData, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ThreeDsReqAuthData) Or(d Tds2ThreeDsReqAuthData) Tds2ThreeDsReqAuthData {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2ThreeDsReqAuthMethod returns new OptNilTds2ThreeDsReqAuthMethod with value set to v.
func NewOptNilTds2ThreeDsReqAuthMethod(v Tds2ThreeDsReqAuthMethod) OptNilTds2ThreeDsReqAuthMethod {
	return OptNilTds2ThreeDsReqAuthMethod{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2ThreeDsReqAuthMethod is optional nullable Tds2ThreeDsReqAuthMethod.
type OptNilTds2ThreeDsReqAuthMethod struct {
	Value Tds2ThreeDsReqAuthMethod
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2ThreeDsReqAuthMethod was set.
func (o OptNilTds2ThreeDsReqAuthMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2ThreeDsReqAuthMethod) Reset() {
	var v Tds2ThreeDsReqAuthMethod
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2ThreeDsReqAuthMethod) SetTo(v Tds2ThreeDsReqAuthMethod) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2ThreeDsReqAuthMethod) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2ThreeDsReqAuthMethod) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2ThreeDsReqAuthMethod
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2ThreeDsReqAuthMethod) Get() (v Tds2ThreeDsReqAuthMethod, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2ThreeDsReqAuthMethod) Or(d Tds2ThreeDsReqAuthMethod) Tds2ThreeDsReqAuthMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2TxnActivityDay returns new OptNilTds2TxnActivityDay with value set to v.
func NewOptNilTds2TxnActivityDay(v Tds2TxnActivityDay) OptNilTds2TxnActivityDay {
	return OptNilTds2TxnActivityDay{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2TxnActivityDay is optional nullable Tds2TxnActivityDay.
type OptNilTds2TxnActivityDay struct {
	Value Tds2TxnActivityDay
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2TxnActivityDay was set.
func (o OptNilTds2TxnActivityDay) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2TxnActivityDay) Reset() {
	var v Tds2TxnActivityDay
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2TxnActivityDay) SetTo(v Tds2TxnActivityDay) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2TxnActivityDay) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2TxnActivityDay) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2TxnActivityDay
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2TxnActivityDay) Get() (v Tds2TxnActivityDay, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2TxnActivityDay) Or(d Tds2TxnActivityDay) Tds2TxnActivityDay {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2TxnActivityYear returns new OptNilTds2TxnActivityYear with value set to v.
func NewOptNilTds2TxnActivityYear(v Tds2TxnActivityYear) OptNilTds2TxnActivityYear {
	return OptNilTds2TxnActivityYear{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2TxnActivityYear is optional nullable Tds2TxnActivityYear.
type OptNilTds2TxnActivityYear struct {
	Value Tds2TxnActivityYear
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2TxnActivityYear was set.
func (o OptNilTds2TxnActivityYear) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2TxnActivityYear) Reset() {
	var v Tds2TxnActivityYear
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2TxnActivityYear) SetTo(v Tds2TxnActivityYear) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2TxnActivityYear) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2TxnActivityYear) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2TxnActivityYear
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2TxnActivityYear) Get() (v Tds2TxnActivityYear, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2TxnActivityYear) Or(d Tds2TxnActivityYear) Tds2TxnActivityYear {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2Type returns new OptNilTds2Type with value set to v.
func NewOptNilTds2Type(v Tds2Type) OptNilTds2Type {
	return OptNilTds2Type{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2Type is optional nullable Tds2Type.
type OptNilTds2Type struct {
	Value Tds2Type
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2Type was set.
func (o OptNilTds2Type) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2Type) Reset() {
	var v Tds2Type
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2Type) SetTo(v Tds2Type) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2Type) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2Type) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2Type
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2Type) Get() (v Tds2Type, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2Type) Or(d Tds2Type) Tds2Type {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2WorkPhoneCc returns new OptNilTds2WorkPhoneCc with value set to v.
func NewOptNilTds2WorkPhoneCc(v Tds2WorkPhoneCc) OptNilTds2WorkPhoneCc {
	return OptNilTds2WorkPhoneCc{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2WorkPhoneCc is optional nullable Tds2WorkPhoneCc.
type OptNilTds2WorkPhoneCc struct {
	Value Tds2WorkPhoneCc
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2WorkPhoneCc was set.
func (o OptNilTds2WorkPhoneCc) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2WorkPhoneCc) Reset() {
	var v Tds2WorkPhoneCc
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2WorkPhoneCc) SetTo(v Tds2WorkPhoneCc) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2WorkPhoneCc) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2WorkPhoneCc) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2WorkPhoneCc
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2WorkPhoneCc) Get() (v Tds2WorkPhoneCc, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2WorkPhoneCc) Or(d Tds2WorkPhoneCc) Tds2WorkPhoneCc {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTds2WorkPhoneNo returns new OptNilTds2WorkPhoneNo with value set to v.
func NewOptNilTds2WorkPhoneNo(v Tds2WorkPhoneNo) OptNilTds2WorkPhoneNo {
	return OptNilTds2WorkPhoneNo{
		Value: v,
		Set:   true,
	}
}

// OptNilTds2WorkPhoneNo is optional nullable Tds2WorkPhoneNo.
type OptNilTds2WorkPhoneNo struct {
	Value Tds2WorkPhoneNo
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTds2WorkPhoneNo was set.
func (o OptNilTds2WorkPhoneNo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTds2WorkPhoneNo) Reset() {
	var v Tds2WorkPhoneNo
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTds2WorkPhoneNo) SetTo(v Tds2WorkPhoneNo) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTds2WorkPhoneNo) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTds2WorkPhoneNo) SetToNull() {
	o.Set = true
	o.Null = true
	var v Tds2WorkPhoneNo
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTds2WorkPhoneNo) Get() (v Tds2WorkPhoneNo, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTds2WorkPhoneNo) Or(d Tds2WorkPhoneNo) Tds2WorkPhoneNo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTdsType returns new OptNilTdsType with value set to v.
func NewOptNilTdsType(v TdsType) OptNilTdsType {
	return OptNilTdsType{
		Value: v,
		Set:   true,
	}
}

// OptNilTdsType is optional nullable TdsType.
type OptNilTdsType struct {
	Value TdsType
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTdsType was set.
func (o OptNilTdsType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTdsType) Reset() {
	var v TdsType
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTdsType) SetTo(v TdsType) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTdsType) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTdsType) SetToNull() {
	o.Set = true
	o.Null = true
	var v TdsType
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTdsType) Get() (v TdsType, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTdsType) Or(d TdsType) TdsType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTransactionID returns new OptNilTransactionID with value set to v.
func NewOptNilTransactionID(v TransactionID) OptNilTransactionID {
	return OptNilTransactionID{
		Value: v,
		Set:   true,
	}
}

// OptNilTransactionID is optional nullable TransactionID.
type OptNilTransactionID struct {
	Value TransactionID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTransactionID was set.
func (o OptNilTransactionID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTransactionID) Reset() {
	var v TransactionID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTransactionID) SetTo(v TransactionID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTransactionID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTransactionID) SetToNull() {
	o.Set = true
	o.Null = true
	var v TransactionID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTransactionID) Get() (v TransactionID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTransactionID) Or(d TransactionID) TransactionID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTransferReturnDate returns new OptNilTransferReturnDate with value set to v.
func NewOptNilTransferReturnDate(v TransferReturnDate) OptNilTransferReturnDate {
	return OptNilTransferReturnDate{
		Value: v,
		Set:   true,
	}
}

// OptNilTransferReturnDate is optional nullable TransferReturnDate.
type OptNilTransferReturnDate struct {
	Value TransferReturnDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTransferReturnDate was set.
func (o OptNilTransferReturnDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTransferReturnDate) Reset() {
	var v TransferReturnDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTransferReturnDate) SetTo(v TransferReturnDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTransferReturnDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilTransferReturnDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v TransferReturnDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTransferReturnDate) Get() (v TransferReturnDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTransferReturnDate) Or(d TransferReturnDate) TransferReturnDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilURL returns new OptNilURL with value set to v.
func NewOptNilURL(v URL) OptNilURL {
	return OptNilURL{
		Value: v,
		Set:   true,
	}
}

// OptNilURL is optional nullable URL.
type OptNilURL struct {
	Value URL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilURL was set.
func (o OptNilURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilURL) Reset() {
	var v URL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilURL) SetTo(v URL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilURL) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilURL) SetToNull() {
	o.Set = true
	o.Null = true
	var v URL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilURL) Get() (v URL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilURL) Or(d URL) URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUnitPrice returns new OptNilUnitPrice with value set to v.
func NewOptNilUnitPrice(v UnitPrice) OptNilUnitPrice {
	return OptNilUnitPrice{
		Value: v,
		Set:   true,
	}
}

// OptNilUnitPrice is optional nullable UnitPrice.
type OptNilUnitPrice struct {
	Value UnitPrice
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUnitPrice was set.
func (o OptNilUnitPrice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUnitPrice) Reset() {
	var v UnitPrice
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUnitPrice) SetTo(v UnitPrice) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUnitPrice) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUnitPrice) SetToNull() {
	o.Set = true
	o.Null = true
	var v UnitPrice
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUnitPrice) Get() (v UnitPrice, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUnitPrice) Or(d UnitPrice) UnitPrice {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateBankAccount returns new OptNilUpdateBankAccount with value set to v.
func NewOptNilUpdateBankAccount(v UpdateBankAccount) OptNilUpdateBankAccount {
	return OptNilUpdateBankAccount{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateBankAccount is optional nullable UpdateBankAccount.
type OptNilUpdateBankAccount struct {
	Value UpdateBankAccount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateBankAccount was set.
func (o OptNilUpdateBankAccount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateBankAccount) Reset() {
	var v UpdateBankAccount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateBankAccount) SetTo(v UpdateBankAccount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUpdateBankAccount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUpdateBankAccount) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateBankAccount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateBankAccount) Get() (v UpdateBankAccount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateBankAccount) Or(d UpdateBankAccount) UpdateBankAccount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateContractDetail returns new OptNilUpdateContractDetail with value set to v.
func NewOptNilUpdateContractDetail(v UpdateContractDetail) OptNilUpdateContractDetail {
	return OptNilUpdateContractDetail{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateContractDetail is optional nullable UpdateContractDetail.
type OptNilUpdateContractDetail struct {
	Value UpdateContractDetail
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateContractDetail was set.
func (o OptNilUpdateContractDetail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateContractDetail) Reset() {
	var v UpdateContractDetail
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateContractDetail) SetTo(v UpdateContractDetail) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUpdateContractDetail) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUpdateContractDetail) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateContractDetail
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateContractDetail) Get() (v UpdateContractDetail, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateContractDetail) Or(d UpdateContractDetail) UpdateContractDetail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateDepositCycle returns new OptNilUpdateDepositCycle with value set to v.
func NewOptNilUpdateDepositCycle(v UpdateDepositCycle) OptNilUpdateDepositCycle {
	return OptNilUpdateDepositCycle{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateDepositCycle is optional nullable UpdateDepositCycle.
type OptNilUpdateDepositCycle struct {
	Value UpdateDepositCycle
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateDepositCycle was set.
func (o OptNilUpdateDepositCycle) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateDepositCycle) Reset() {
	var v UpdateDepositCycle
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateDepositCycle) SetTo(v UpdateDepositCycle) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUpdateDepositCycle) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUpdateDepositCycle) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateDepositCycle
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateDepositCycle) Get() (v UpdateDepositCycle, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateDepositCycle) Or(d UpdateDepositCycle) UpdateDepositCycle {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateDescription returns new OptNilUpdateDescription with value set to v.
func NewOptNilUpdateDescription(v UpdateDescription) OptNilUpdateDescription {
	return OptNilUpdateDescription{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateDescription is optional nullable UpdateDescription.
type OptNilUpdateDescription struct {
	Value UpdateDescription
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateDescription was set.
func (o OptNilUpdateDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateDescription) Reset() {
	var v UpdateDescription
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateDescription) SetTo(v UpdateDescription) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUpdateDescription) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUpdateDescription) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateDescription
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateDescription) Get() (v UpdateDescription, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateDescription) Or(d UpdateDescription) UpdateDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdateShop returns new OptNilUpdateShop with value set to v.
func NewOptNilUpdateShop(v UpdateShop) OptNilUpdateShop {
	return OptNilUpdateShop{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdateShop is optional nullable UpdateShop.
type OptNilUpdateShop struct {
	Value UpdateShop
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdateShop was set.
func (o OptNilUpdateShop) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdateShop) Reset() {
	var v UpdateShop
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdateShop) SetTo(v UpdateShop) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUpdateShop) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUpdateShop) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpdateShop
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdateShop) Get() (v UpdateShop, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdateShop) Or(d UpdateShop) UpdateShop {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpdated returns new OptNilUpdated with value set to v.
func NewOptNilUpdated(v Updated) OptNilUpdated {
	return OptNilUpdated{
		Value: v,
		Set:   true,
	}
}

// OptNilUpdated is optional nullable Updated.
type OptNilUpdated struct {
	Value Updated
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpdated was set.
func (o OptNilUpdated) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpdated) Reset() {
	var v Updated
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpdated) SetTo(v Updated) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUpdated) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUpdated) SetToNull() {
	o.Set = true
	o.Null = true
	var v Updated
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpdated) Get() (v Updated, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpdated) Or(d Updated) Updated {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUsedOnApp returns new OptNilUsedOnApp with value set to v.
func NewOptNilUsedOnApp(v UsedOnApp) OptNilUsedOnApp {
	return OptNilUsedOnApp{
		Value: v,
		Set:   true,
	}
}

// OptNilUsedOnApp is optional nullable UsedOnApp.
type OptNilUsedOnApp struct {
	Value UsedOnApp
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUsedOnApp was set.
func (o OptNilUsedOnApp) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUsedOnApp) Reset() {
	var v UsedOnApp
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUsedOnApp) SetTo(v UsedOnApp) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUsedOnApp) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUsedOnApp) SetToNull() {
	o.Set = true
	o.Null = true
	var v UsedOnApp
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUsedOnApp) Get() (v UsedOnApp, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUsedOnApp) Or(d UsedOnApp) UsedOnApp {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUsedOnWeb returns new OptNilUsedOnWeb with value set to v.
func NewOptNilUsedOnWeb(v UsedOnWeb) OptNilUsedOnWeb {
	return OptNilUsedOnWeb{
		Value: v,
		Set:   true,
	}
}

// OptNilUsedOnWeb is optional nullable UsedOnWeb.
type OptNilUsedOnWeb struct {
	Value UsedOnWeb
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUsedOnWeb was set.
func (o OptNilUsedOnWeb) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUsedOnWeb) Reset() {
	var v UsedOnWeb
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUsedOnWeb) SetTo(v UsedOnWeb) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilUsedOnWeb) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilUsedOnWeb) SetToNull() {
	o.Set = true
	o.Null = true
	var v UsedOnWeb
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUsedOnWeb) Get() (v UsedOnWeb, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUsedOnWeb) Or(d UsedOnWeb) UsedOnWeb {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilWebRegistrationFee returns new OptNilWebRegistrationFee with value set to v.
func NewOptNilWebRegistrationFee(v WebRegistrationFee) OptNilWebRegistrationFee {
	return OptNilWebRegistrationFee{
		Value: v,
		Set:   true,
	}
}

// OptNilWebRegistrationFee is optional nullable WebRegistrationFee.
type OptNilWebRegistrationFee struct {
	Value WebRegistrationFee
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilWebRegistrationFee was set.
func (o OptNilWebRegistrationFee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilWebRegistrationFee) Reset() {
	var v WebRegistrationFee
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilWebRegistrationFee) SetTo(v WebRegistrationFee) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilWebRegistrationFee) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilWebRegistrationFee) SetToNull() {
	o.Set = true
	o.Null = true
	var v WebRegistrationFee
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilWebRegistrationFee) Get() (v WebRegistrationFee, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilWebRegistrationFee) Or(d WebRegistrationFee) WebRegistrationFee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilWebRegistrationFeeAmount returns new OptNilWebRegistrationFeeAmount with value set to v.
func NewOptNilWebRegistrationFeeAmount(v WebRegistrationFeeAmount) OptNilWebRegistrationFeeAmount {
	return OptNilWebRegistrationFeeAmount{
		Value: v,
		Set:   true,
	}
}

// OptNilWebRegistrationFeeAmount is optional nullable WebRegistrationFeeAmount.
type OptNilWebRegistrationFeeAmount struct {
	Value WebRegistrationFeeAmount
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilWebRegistrationFeeAmount was set.
func (o OptNilWebRegistrationFeeAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilWebRegistrationFeeAmount) Reset() {
	var v WebRegistrationFeeAmount
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilWebRegistrationFeeAmount) SetTo(v WebRegistrationFeeAmount) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilWebRegistrationFeeAmount) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilWebRegistrationFeeAmount) SetToNull() {
	o.Set = true
	o.Null = true
	var v WebRegistrationFeeAmount
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilWebRegistrationFeeAmount) Get() (v WebRegistrationFeeAmount, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilWebRegistrationFeeAmount) Or(d WebRegistrationFeeAmount) WebRegistrationFeeAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilWithdrawalDate returns new OptNilWithdrawalDate with value set to v.
func NewOptNilWithdrawalDate(v WithdrawalDate) OptNilWithdrawalDate {
	return OptNilWithdrawalDate{
		Value: v,
		Set:   true,
	}
}

// OptNilWithdrawalDate is optional nullable WithdrawalDate.
type OptNilWithdrawalDate struct {
	Value WithdrawalDate
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilWithdrawalDate was set.
func (o OptNilWithdrawalDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilWithdrawalDate) Reset() {
	var v WithdrawalDate
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilWithdrawalDate) SetTo(v WithdrawalDate) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilWithdrawalDate) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilWithdrawalDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v WithdrawalDate
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilWithdrawalDate) Get() (v WithdrawalDate, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilWithdrawalDate) Or(d WithdrawalDate) WithdrawalDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilXReqPropertiesToken returns new OptNilXReqPropertiesToken with value set to v.
func NewOptNilXReqPropertiesToken(v XReqPropertiesToken) OptNilXReqPropertiesToken {
	return OptNilXReqPropertiesToken{
		Value: v,
		Set:   true,
	}
}

// OptNilXReqPropertiesToken is optional nullable XReqPropertiesToken.
type OptNilXReqPropertiesToken struct {
	Value XReqPropertiesToken
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilXReqPropertiesToken was set.
func (o OptNilXReqPropertiesToken) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilXReqPropertiesToken) Reset() {
	var v XReqPropertiesToken
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilXReqPropertiesToken) SetTo(v XReqPropertiesToken) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilXReqPropertiesToken) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilXReqPropertiesToken) SetToNull() {
	o.Set = true
	o.Null = true
	var v XReqPropertiesToken
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilXReqPropertiesToken) Get() (v XReqPropertiesToken, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilXReqPropertiesToken) Or(d XReqPropertiesToken) XReqPropertiesToken {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilYearlySales returns new OptNilYearlySales with value set to v.
func NewOptNilYearlySales(v YearlySales) OptNilYearlySales {
	return OptNilYearlySales{
		Value: v,
		Set:   true,
	}
}

// OptNilYearlySales is optional nullable YearlySales.
type OptNilYearlySales struct {
	Value YearlySales
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilYearlySales was set.
func (o OptNilYearlySales) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilYearlySales) Reset() {
	var v YearlySales
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilYearlySales) SetTo(v YearlySales) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilYearlySales) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilYearlySales) SetToNull() {
	o.Set = true
	o.Null = true
	var v YearlySales
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilYearlySales) Get() (v YearlySales, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilYearlySales) Or(d YearlySales) YearlySales {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOverpaymentFlag returns new OptOverpaymentFlag with value set to v.
func NewOptOverpaymentFlag(v OverpaymentFlag) OptOverpaymentFlag {
	return OptOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptOverpaymentFlag is optional OverpaymentFlag.
type OptOverpaymentFlag struct {
	Value OverpaymentFlag
	Set   bool
}

// IsSet returns true if OptOverpaymentFlag was set.
func (o OptOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOverpaymentFlag) Reset() {
	var v OverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOverpaymentFlag) SetTo(v OverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOverpaymentFlag) Get() (v OverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOverpaymentFlag) Or(d OverpaymentFlag) OverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPOSTContractsExaminationsEnableImmediateUse returns new OptPOSTContractsExaminationsEnableImmediateUse with value set to v.
func NewOptPOSTContractsExaminationsEnableImmediateUse(v POSTContractsExaminationsEnableImmediateUse) OptPOSTContractsExaminationsEnableImmediateUse {
	return OptPOSTContractsExaminationsEnableImmediateUse{
		Value: v,
		Set:   true,
	}
}

// OptPOSTContractsExaminationsEnableImmediateUse is optional POSTContractsExaminationsEnableImmediateUse.
type OptPOSTContractsExaminationsEnableImmediateUse struct {
	Value POSTContractsExaminationsEnableImmediateUse
	Set   bool
}

// IsSet returns true if OptPOSTContractsExaminationsEnableImmediateUse was set.
func (o OptPOSTContractsExaminationsEnableImmediateUse) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPOSTContractsExaminationsEnableImmediateUse) Reset() {
	var v POSTContractsExaminationsEnableImmediateUse
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPOSTContractsExaminationsEnableImmediateUse) SetTo(v POSTContractsExaminationsEnableImmediateUse) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPOSTContractsExaminationsEnableImmediateUse) Get() (v POSTContractsExaminationsEnableImmediateUse, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPOSTContractsExaminationsEnableImmediateUse) Or(d POSTContractsExaminationsEnableImmediateUse) POSTContractsExaminationsEnableImmediateUse {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaginationQueryParams returns new OptPaginationQueryParams with value set to v.
func NewOptPaginationQueryParams(v PaginationQueryParams) OptPaginationQueryParams {
	return OptPaginationQueryParams{
		Value: v,
		Set:   true,
	}
}

// OptPaginationQueryParams is optional PaginationQueryParams.
type OptPaginationQueryParams struct {
	Value PaginationQueryParams
	Set   bool
}

// IsSet returns true if OptPaginationQueryParams was set.
func (o OptPaginationQueryParams) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaginationQueryParams) Reset() {
	var v PaginationQueryParams
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaginationQueryParams) SetTo(v PaginationQueryParams) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaginationQueryParams) Get() (v PaginationQueryParams, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaginationQueryParams) Or(d PaginationQueryParams) PaginationQueryParams {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaperApplication returns new OptPaperApplication with value set to v.
func NewOptPaperApplication(v PaperApplication) OptPaperApplication {
	return OptPaperApplication{
		Value: v,
		Set:   true,
	}
}

// OptPaperApplication is optional PaperApplication.
type OptPaperApplication struct {
	Value PaperApplication
	Set   bool
}

// IsSet returns true if OptPaperApplication was set.
func (o OptPaperApplication) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaperApplication) Reset() {
	var v PaperApplication
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaperApplication) SetTo(v PaperApplication) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaperApplication) Get() (v PaperApplication, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaperApplication) Or(d PaperApplication) PaperApplication {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptParam returns new OptParam with value set to v.
func NewOptParam(v Param) OptParam {
	return OptParam{
		Value: v,
		Set:   true,
	}
}

// OptParam is optional Param.
type OptParam struct {
	Value Param
	Set   bool
}

// IsSet returns true if OptParam was set.
func (o OptParam) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptParam) Reset() {
	var v Param
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptParam) SetTo(v Param) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptParam) Get() (v Param, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptParam) Or(d Param) Param {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPayPayPaymentJobCode returns new OptPayPayPaymentJobCode with value set to v.
func NewOptPayPayPaymentJobCode(v PayPayPaymentJobCode) OptPayPayPaymentJobCode {
	return OptPayPayPaymentJobCode{
		Value: v,
		Set:   true,
	}
}

// OptPayPayPaymentJobCode is optional PayPayPaymentJobCode.
type OptPayPayPaymentJobCode struct {
	Value PayPayPaymentJobCode
	Set   bool
}

// IsSet returns true if OptPayPayPaymentJobCode was set.
func (o OptPayPayPaymentJobCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPayPayPaymentJobCode) Reset() {
	var v PayPayPaymentJobCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPayPayPaymentJobCode) SetTo(v PayPayPaymentJobCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPayPayPaymentJobCode) Get() (v PayPayPaymentJobCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPayPayPaymentJobCode) Or(d PayPayPaymentJobCode) PayPayPaymentJobCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPayType returns new OptPayType with value set to v.
func NewOptPayType(v PayType) OptPayType {
	return OptPayType{
		Value: v,
		Set:   true,
	}
}

// OptPayType is optional PayType.
type OptPayType struct {
	Value PayType
	Set   bool
}

// IsSet returns true if OptPayType was set.
func (o OptPayType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPayType) Reset() {
	var v PayType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPayType) SetTo(v PayType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPayType) Get() (v PayType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPayType) Or(d PayType) PayType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentBulkDetailStatus returns new OptPaymentBulkDetailStatus with value set to v.
func NewOptPaymentBulkDetailStatus(v PaymentBulkDetailStatus) OptPaymentBulkDetailStatus {
	return OptPaymentBulkDetailStatus{
		Value: v,
		Set:   true,
	}
}

// OptPaymentBulkDetailStatus is optional PaymentBulkDetailStatus.
type OptPaymentBulkDetailStatus struct {
	Value PaymentBulkDetailStatus
	Set   bool
}

// IsSet returns true if OptPaymentBulkDetailStatus was set.
func (o OptPaymentBulkDetailStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentBulkDetailStatus) Reset() {
	var v PaymentBulkDetailStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentBulkDetailStatus) SetTo(v PaymentBulkDetailStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentBulkDetailStatus) Get() (v PaymentBulkDetailStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentBulkDetailStatus) Or(d PaymentBulkDetailStatus) PaymentBulkDetailStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentBulkPayType returns new OptPaymentBulkPayType with value set to v.
func NewOptPaymentBulkPayType(v PaymentBulkPayType) OptPaymentBulkPayType {
	return OptPaymentBulkPayType{
		Value: v,
		Set:   true,
	}
}

// OptPaymentBulkPayType is optional PaymentBulkPayType.
type OptPaymentBulkPayType struct {
	Value PaymentBulkPayType
	Set   bool
}

// IsSet returns true if OptPaymentBulkPayType was set.
func (o OptPaymentBulkPayType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentBulkPayType) Reset() {
	var v PaymentBulkPayType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentBulkPayType) SetTo(v PaymentBulkPayType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentBulkPayType) Get() (v PaymentBulkPayType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentBulkPayType) Or(d PaymentBulkPayType) PaymentBulkPayType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentBulkPropertiesID returns new OptPaymentBulkPropertiesID with value set to v.
func NewOptPaymentBulkPropertiesID(v PaymentBulkPropertiesID) OptPaymentBulkPropertiesID {
	return OptPaymentBulkPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptPaymentBulkPropertiesID is optional PaymentBulkPropertiesID.
type OptPaymentBulkPropertiesID struct {
	Value PaymentBulkPropertiesID
	Set   bool
}

// IsSet returns true if OptPaymentBulkPropertiesID was set.
func (o OptPaymentBulkPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentBulkPropertiesID) Reset() {
	var v PaymentBulkPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentBulkPropertiesID) SetTo(v PaymentBulkPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentBulkPropertiesID) Get() (v PaymentBulkPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentBulkPropertiesID) Or(d PaymentBulkPropertiesID) PaymentBulkPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentBulkStatus returns new OptPaymentBulkStatus with value set to v.
func NewOptPaymentBulkStatus(v PaymentBulkStatus) OptPaymentBulkStatus {
	return OptPaymentBulkStatus{
		Value: v,
		Set:   true,
	}
}

// OptPaymentBulkStatus is optional PaymentBulkStatus.
type OptPaymentBulkStatus struct {
	Value PaymentBulkStatus
	Set   bool
}

// IsSet returns true if OptPaymentBulkStatus was set.
func (o OptPaymentBulkStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentBulkStatus) Reset() {
	var v PaymentBulkStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentBulkStatus) SetTo(v PaymentBulkStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentBulkStatus) Get() (v PaymentBulkStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentBulkStatus) Or(d PaymentBulkStatus) PaymentBulkStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniCancelingResponseCancelOverpaymentFlag returns new OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniCancelingResponseCancelOverpaymentFlag(v PaymentKonbiniCancelingResponseCancelOverpaymentFlag) OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag {
	return OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag is optional PaymentKonbiniCancelingResponseCancelOverpaymentFlag.
type OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag struct {
	Value PaymentKonbiniCancelingResponseCancelOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag was set.
func (o OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag) Reset() {
	var v PaymentKonbiniCancelingResponseCancelOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag) SetTo(v PaymentKonbiniCancelingResponseCancelOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag) Get() (v PaymentKonbiniCancelingResponseCancelOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag) Or(d PaymentKonbiniCancelingResponseCancelOverpaymentFlag) PaymentKonbiniCancelingResponseCancelOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniCancelingResponseOverpaymentFlag returns new OptPaymentKonbiniCancelingResponseOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniCancelingResponseOverpaymentFlag(v PaymentKonbiniCancelingResponseOverpaymentFlag) OptPaymentKonbiniCancelingResponseOverpaymentFlag {
	return OptPaymentKonbiniCancelingResponseOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniCancelingResponseOverpaymentFlag is optional PaymentKonbiniCancelingResponseOverpaymentFlag.
type OptPaymentKonbiniCancelingResponseOverpaymentFlag struct {
	Value PaymentKonbiniCancelingResponseOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniCancelingResponseOverpaymentFlag was set.
func (o OptPaymentKonbiniCancelingResponseOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniCancelingResponseOverpaymentFlag) Reset() {
	var v PaymentKonbiniCancelingResponseOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniCancelingResponseOverpaymentFlag) SetTo(v PaymentKonbiniCancelingResponseOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniCancelingResponseOverpaymentFlag) Get() (v PaymentKonbiniCancelingResponseOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniCancelingResponseOverpaymentFlag) Or(d PaymentKonbiniCancelingResponseOverpaymentFlag) PaymentKonbiniCancelingResponseOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniCreatingResponseCancelOverpaymentFlag returns new OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniCreatingResponseCancelOverpaymentFlag(v PaymentKonbiniCreatingResponseCancelOverpaymentFlag) OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag {
	return OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag is optional PaymentKonbiniCreatingResponseCancelOverpaymentFlag.
type OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag struct {
	Value PaymentKonbiniCreatingResponseCancelOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag was set.
func (o OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag) Reset() {
	var v PaymentKonbiniCreatingResponseCancelOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag) SetTo(v PaymentKonbiniCreatingResponseCancelOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag) Get() (v PaymentKonbiniCreatingResponseCancelOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag) Or(d PaymentKonbiniCreatingResponseCancelOverpaymentFlag) PaymentKonbiniCreatingResponseCancelOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniCreatingResponseOverpaymentFlag returns new OptPaymentKonbiniCreatingResponseOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniCreatingResponseOverpaymentFlag(v PaymentKonbiniCreatingResponseOverpaymentFlag) OptPaymentKonbiniCreatingResponseOverpaymentFlag {
	return OptPaymentKonbiniCreatingResponseOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniCreatingResponseOverpaymentFlag is optional PaymentKonbiniCreatingResponseOverpaymentFlag.
type OptPaymentKonbiniCreatingResponseOverpaymentFlag struct {
	Value PaymentKonbiniCreatingResponseOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniCreatingResponseOverpaymentFlag was set.
func (o OptPaymentKonbiniCreatingResponseOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniCreatingResponseOverpaymentFlag) Reset() {
	var v PaymentKonbiniCreatingResponseOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniCreatingResponseOverpaymentFlag) SetTo(v PaymentKonbiniCreatingResponseOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniCreatingResponseOverpaymentFlag) Get() (v PaymentKonbiniCreatingResponseOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniCreatingResponseOverpaymentFlag) Or(d PaymentKonbiniCreatingResponseOverpaymentFlag) PaymentKonbiniCreatingResponseOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniExecutingResponseCancelOverpaymentFlag returns new OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniExecutingResponseCancelOverpaymentFlag(v PaymentKonbiniExecutingResponseCancelOverpaymentFlag) OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag {
	return OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag is optional PaymentKonbiniExecutingResponseCancelOverpaymentFlag.
type OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag struct {
	Value PaymentKonbiniExecutingResponseCancelOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag was set.
func (o OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag) Reset() {
	var v PaymentKonbiniExecutingResponseCancelOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag) SetTo(v PaymentKonbiniExecutingResponseCancelOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag) Get() (v PaymentKonbiniExecutingResponseCancelOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag) Or(d PaymentKonbiniExecutingResponseCancelOverpaymentFlag) PaymentKonbiniExecutingResponseCancelOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniExecutingResponseOverpaymentFlag returns new OptPaymentKonbiniExecutingResponseOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniExecutingResponseOverpaymentFlag(v PaymentKonbiniExecutingResponseOverpaymentFlag) OptPaymentKonbiniExecutingResponseOverpaymentFlag {
	return OptPaymentKonbiniExecutingResponseOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniExecutingResponseOverpaymentFlag is optional PaymentKonbiniExecutingResponseOverpaymentFlag.
type OptPaymentKonbiniExecutingResponseOverpaymentFlag struct {
	Value PaymentKonbiniExecutingResponseOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniExecutingResponseOverpaymentFlag was set.
func (o OptPaymentKonbiniExecutingResponseOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniExecutingResponseOverpaymentFlag) Reset() {
	var v PaymentKonbiniExecutingResponseOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniExecutingResponseOverpaymentFlag) SetTo(v PaymentKonbiniExecutingResponseOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniExecutingResponseOverpaymentFlag) Get() (v PaymentKonbiniExecutingResponseOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniExecutingResponseOverpaymentFlag) Or(d PaymentKonbiniExecutingResponseOverpaymentFlag) PaymentKonbiniExecutingResponseOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag returns new OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag(v PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag {
	return OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag is optional PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag.
type OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag struct {
	Value PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag was set.
func (o OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) Reset() {
	var v PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) SetTo(v PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) Get() (v PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) Or(d PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag returns new OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag(v PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag {
	return OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag is optional PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag.
type OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag struct {
	Value PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag was set.
func (o OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) Reset() {
	var v PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) SetTo(v PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) Get() (v PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) Or(d PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag returns new OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag(v PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag {
	return OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag is optional PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag.
type OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag struct {
	Value PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag was set.
func (o OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) Reset() {
	var v PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) SetTo(v PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) Get() (v PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) Or(d PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag returns new OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag(v PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag {
	return OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag is optional PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag.
type OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag struct {
	Value PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag was set.
func (o OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) Reset() {
	var v PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) SetTo(v PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) Get() (v PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) Or(d PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag returns new OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag(v PaymentKonbiniRetrievingResponseCancelOverpaymentFlag) OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag {
	return OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag is optional PaymentKonbiniRetrievingResponseCancelOverpaymentFlag.
type OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag struct {
	Value PaymentKonbiniRetrievingResponseCancelOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag was set.
func (o OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag) Reset() {
	var v PaymentKonbiniRetrievingResponseCancelOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag) SetTo(v PaymentKonbiniRetrievingResponseCancelOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag) Get() (v PaymentKonbiniRetrievingResponseCancelOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag) Or(d PaymentKonbiniRetrievingResponseCancelOverpaymentFlag) PaymentKonbiniRetrievingResponseCancelOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentKonbiniRetrievingResponseOverpaymentFlag returns new OptPaymentKonbiniRetrievingResponseOverpaymentFlag with value set to v.
func NewOptPaymentKonbiniRetrievingResponseOverpaymentFlag(v PaymentKonbiniRetrievingResponseOverpaymentFlag) OptPaymentKonbiniRetrievingResponseOverpaymentFlag {
	return OptPaymentKonbiniRetrievingResponseOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentKonbiniRetrievingResponseOverpaymentFlag is optional PaymentKonbiniRetrievingResponseOverpaymentFlag.
type OptPaymentKonbiniRetrievingResponseOverpaymentFlag struct {
	Value PaymentKonbiniRetrievingResponseOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentKonbiniRetrievingResponseOverpaymentFlag was set.
func (o OptPaymentKonbiniRetrievingResponseOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentKonbiniRetrievingResponseOverpaymentFlag) Reset() {
	var v PaymentKonbiniRetrievingResponseOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentKonbiniRetrievingResponseOverpaymentFlag) SetTo(v PaymentKonbiniRetrievingResponseOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentKonbiniRetrievingResponseOverpaymentFlag) Get() (v PaymentKonbiniRetrievingResponseOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentKonbiniRetrievingResponseOverpaymentFlag) Or(d PaymentKonbiniRetrievingResponseOverpaymentFlag) PaymentKonbiniRetrievingResponseOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentListRetrievingCardQueryParamsPayPattern returns new OptPaymentListRetrievingCardQueryParamsPayPattern with value set to v.
func NewOptPaymentListRetrievingCardQueryParamsPayPattern(v PaymentListRetrievingCardQueryParamsPayPattern) OptPaymentListRetrievingCardQueryParamsPayPattern {
	return OptPaymentListRetrievingCardQueryParamsPayPattern{
		Value: v,
		Set:   true,
	}
}

// OptPaymentListRetrievingCardQueryParamsPayPattern is optional PaymentListRetrievingCardQueryParamsPayPattern.
type OptPaymentListRetrievingCardQueryParamsPayPattern struct {
	Value PaymentListRetrievingCardQueryParamsPayPattern
	Set   bool
}

// IsSet returns true if OptPaymentListRetrievingCardQueryParamsPayPattern was set.
func (o OptPaymentListRetrievingCardQueryParamsPayPattern) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentListRetrievingCardQueryParamsPayPattern) Reset() {
	var v PaymentListRetrievingCardQueryParamsPayPattern
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentListRetrievingCardQueryParamsPayPattern) SetTo(v PaymentListRetrievingCardQueryParamsPayPattern) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentListRetrievingCardQueryParamsPayPattern) Get() (v PaymentListRetrievingCardQueryParamsPayPattern, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentListRetrievingCardQueryParamsPayPattern) Or(d PaymentListRetrievingCardQueryParamsPayPattern) PaymentListRetrievingCardQueryParamsPayPattern {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentListRetrievingDirectDebitQueryParamsPayPattern returns new OptPaymentListRetrievingDirectDebitQueryParamsPayPattern with value set to v.
func NewOptPaymentListRetrievingDirectDebitQueryParamsPayPattern(v PaymentListRetrievingDirectDebitQueryParamsPayPattern) OptPaymentListRetrievingDirectDebitQueryParamsPayPattern {
	return OptPaymentListRetrievingDirectDebitQueryParamsPayPattern{
		Value: v,
		Set:   true,
	}
}

// OptPaymentListRetrievingDirectDebitQueryParamsPayPattern is optional PaymentListRetrievingDirectDebitQueryParamsPayPattern.
type OptPaymentListRetrievingDirectDebitQueryParamsPayPattern struct {
	Value PaymentListRetrievingDirectDebitQueryParamsPayPattern
	Set   bool
}

// IsSet returns true if OptPaymentListRetrievingDirectDebitQueryParamsPayPattern was set.
func (o OptPaymentListRetrievingDirectDebitQueryParamsPayPattern) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentListRetrievingDirectDebitQueryParamsPayPattern) Reset() {
	var v PaymentListRetrievingDirectDebitQueryParamsPayPattern
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentListRetrievingDirectDebitQueryParamsPayPattern) SetTo(v PaymentListRetrievingDirectDebitQueryParamsPayPattern) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentListRetrievingDirectDebitQueryParamsPayPattern) Get() (v PaymentListRetrievingDirectDebitQueryParamsPayPattern, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentListRetrievingDirectDebitQueryParamsPayPattern) Or(d PaymentListRetrievingDirectDebitQueryParamsPayPattern) PaymentListRetrievingDirectDebitQueryParamsPayPattern {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag returns new OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag with value set to v.
func NewOptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag(v PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag {
	return OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag is optional PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag.
type OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag struct {
	Value PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag was set.
func (o OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) Reset() {
	var v PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) SetTo(v PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) Get() (v PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) Or(d PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag returns new OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag with value set to v.
func NewOptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag(v PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag {
	return OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag is optional PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag.
type OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag struct {
	Value PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag
	Set   bool
}

// IsSet returns true if OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag was set.
func (o OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) Reset() {
	var v PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) SetTo(v PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) Get() (v PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) Or(d PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentMethodDefaultFlag returns new OptPaymentMethodDefaultFlag with value set to v.
func NewOptPaymentMethodDefaultFlag(v PaymentMethodDefaultFlag) OptPaymentMethodDefaultFlag {
	return OptPaymentMethodDefaultFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentMethodDefaultFlag is optional PaymentMethodDefaultFlag.
type OptPaymentMethodDefaultFlag struct {
	Value PaymentMethodDefaultFlag
	Set   bool
}

// IsSet returns true if OptPaymentMethodDefaultFlag was set.
func (o OptPaymentMethodDefaultFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentMethodDefaultFlag) Reset() {
	var v PaymentMethodDefaultFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentMethodDefaultFlag) SetTo(v PaymentMethodDefaultFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentMethodDefaultFlag) Get() (v PaymentMethodDefaultFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentMethodDefaultFlag) Or(d PaymentMethodDefaultFlag) PaymentMethodDefaultFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentMethodPayType returns new OptPaymentMethodPayType with value set to v.
func NewOptPaymentMethodPayType(v PaymentMethodPayType) OptPaymentMethodPayType {
	return OptPaymentMethodPayType{
		Value: v,
		Set:   true,
	}
}

// OptPaymentMethodPayType is optional PaymentMethodPayType.
type OptPaymentMethodPayType struct {
	Value PaymentMethodPayType
	Set   bool
}

// IsSet returns true if OptPaymentMethodPayType was set.
func (o OptPaymentMethodPayType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentMethodPayType) Reset() {
	var v PaymentMethodPayType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentMethodPayType) SetTo(v PaymentMethodPayType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentMethodPayType) Get() (v PaymentMethodPayType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentMethodPayType) Or(d PaymentMethodPayType) PaymentMethodPayType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentMethodPropertiesID returns new OptPaymentMethodPropertiesID with value set to v.
func NewOptPaymentMethodPropertiesID(v PaymentMethodPropertiesID) OptPaymentMethodPropertiesID {
	return OptPaymentMethodPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptPaymentMethodPropertiesID is optional PaymentMethodPropertiesID.
type OptPaymentMethodPropertiesID struct {
	Value PaymentMethodPropertiesID
	Set   bool
}

// IsSet returns true if OptPaymentMethodPropertiesID was set.
func (o OptPaymentMethodPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentMethodPropertiesID) Reset() {
	var v PaymentMethodPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentMethodPropertiesID) SetTo(v PaymentMethodPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentMethodPropertiesID) Get() (v PaymentMethodPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentMethodPropertiesID) Or(d PaymentMethodPropertiesID) PaymentMethodPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentMethodStatus returns new OptPaymentMethodStatus with value set to v.
func NewOptPaymentMethodStatus(v PaymentMethodStatus) OptPaymentMethodStatus {
	return OptPaymentMethodStatus{
		Value: v,
		Set:   true,
	}
}

// OptPaymentMethodStatus is optional PaymentMethodStatus.
type OptPaymentMethodStatus struct {
	Value PaymentMethodStatus
	Set   bool
}

// IsSet returns true if OptPaymentMethodStatus was set.
func (o OptPaymentMethodStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentMethodStatus) Reset() {
	var v PaymentMethodStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentMethodStatus) SetTo(v PaymentMethodStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentMethodStatus) Get() (v PaymentMethodStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentMethodStatus) Or(d PaymentMethodStatus) PaymentMethodStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentPropertiesID returns new OptPaymentPropertiesID with value set to v.
func NewOptPaymentPropertiesID(v PaymentPropertiesID) OptPaymentPropertiesID {
	return OptPaymentPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptPaymentPropertiesID is optional PaymentPropertiesID.
type OptPaymentPropertiesID struct {
	Value PaymentPropertiesID
	Set   bool
}

// IsSet returns true if OptPaymentPropertiesID was set.
func (o OptPaymentPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentPropertiesID) Reset() {
	var v PaymentPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentPropertiesID) SetTo(v PaymentPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentPropertiesID) Get() (v PaymentPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentPropertiesID) Or(d PaymentPropertiesID) PaymentPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentProvider returns new OptPaymentProvider with value set to v.
func NewOptPaymentProvider(v PaymentProvider) OptPaymentProvider {
	return OptPaymentProvider{
		Value: v,
		Set:   true,
	}
}

// OptPaymentProvider is optional PaymentProvider.
type OptPaymentProvider struct {
	Value PaymentProvider
	Set   bool
}

// IsSet returns true if OptPaymentProvider was set.
func (o OptPaymentProvider) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentProvider) Reset() {
	var v PaymentProvider
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentProvider) SetTo(v PaymentProvider) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentProvider) Get() (v PaymentProvider, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentProvider) Or(d PaymentProvider) PaymentProvider {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentSessionCard returns new OptPaymentSessionCard with value set to v.
func NewOptPaymentSessionCard(v PaymentSessionCard) OptPaymentSessionCard {
	return OptPaymentSessionCard{
		Value: v,
		Set:   true,
	}
}

// OptPaymentSessionCard is optional PaymentSessionCard.
type OptPaymentSessionCard struct {
	Value PaymentSessionCard
	Set   bool
}

// IsSet returns true if OptPaymentSessionCard was set.
func (o OptPaymentSessionCard) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentSessionCard) Reset() {
	var v PaymentSessionCard
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentSessionCard) SetTo(v PaymentSessionCard) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentSessionCard) Get() (v PaymentSessionCard, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentSessionCard) Or(d PaymentSessionCard) PaymentSessionCard {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentSessionGuideMailSendFlag returns new OptPaymentSessionGuideMailSendFlag with value set to v.
func NewOptPaymentSessionGuideMailSendFlag(v PaymentSessionGuideMailSendFlag) OptPaymentSessionGuideMailSendFlag {
	return OptPaymentSessionGuideMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentSessionGuideMailSendFlag is optional PaymentSessionGuideMailSendFlag.
type OptPaymentSessionGuideMailSendFlag struct {
	Value PaymentSessionGuideMailSendFlag
	Set   bool
}

// IsSet returns true if OptPaymentSessionGuideMailSendFlag was set.
func (o OptPaymentSessionGuideMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentSessionGuideMailSendFlag) Reset() {
	var v PaymentSessionGuideMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentSessionGuideMailSendFlag) SetTo(v PaymentSessionGuideMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentSessionGuideMailSendFlag) Get() (v PaymentSessionGuideMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentSessionGuideMailSendFlag) Or(d PaymentSessionGuideMailSendFlag) PaymentSessionGuideMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentSessionKonbini returns new OptPaymentSessionKonbini with value set to v.
func NewOptPaymentSessionKonbini(v PaymentSessionKonbini) OptPaymentSessionKonbini {
	return OptPaymentSessionKonbini{
		Value: v,
		Set:   true,
	}
}

// OptPaymentSessionKonbini is optional PaymentSessionKonbini.
type OptPaymentSessionKonbini struct {
	Value PaymentSessionKonbini
	Set   bool
}

// IsSet returns true if OptPaymentSessionKonbini was set.
func (o OptPaymentSessionKonbini) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentSessionKonbini) Reset() {
	var v PaymentSessionKonbini
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentSessionKonbini) SetTo(v PaymentSessionKonbini) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentSessionKonbini) Get() (v PaymentSessionKonbini, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentSessionKonbini) Or(d PaymentSessionKonbini) PaymentSessionKonbini {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentSessionKonbiniKonbiniReceptionMailSendFlag returns new OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag with value set to v.
func NewOptPaymentSessionKonbiniKonbiniReceptionMailSendFlag(v PaymentSessionKonbiniKonbiniReceptionMailSendFlag) OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag {
	return OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag is optional PaymentSessionKonbiniKonbiniReceptionMailSendFlag.
type OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag struct {
	Value PaymentSessionKonbiniKonbiniReceptionMailSendFlag
	Set   bool
}

// IsSet returns true if OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag was set.
func (o OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag) Reset() {
	var v PaymentSessionKonbiniKonbiniReceptionMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag) SetTo(v PaymentSessionKonbiniKonbiniReceptionMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag) Get() (v PaymentSessionKonbiniKonbiniReceptionMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag) Or(d PaymentSessionKonbiniKonbiniReceptionMailSendFlag) PaymentSessionKonbiniKonbiniReceptionMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentSessionPayPay returns new OptPaymentSessionPayPay with value set to v.
func NewOptPaymentSessionPayPay(v PaymentSessionPayPay) OptPaymentSessionPayPay {
	return OptPaymentSessionPayPay{
		Value: v,
		Set:   true,
	}
}

// OptPaymentSessionPayPay is optional PaymentSessionPayPay.
type OptPaymentSessionPayPay struct {
	Value PaymentSessionPayPay
	Set   bool
}

// IsSet returns true if OptPaymentSessionPayPay was set.
func (o OptPaymentSessionPayPay) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentSessionPayPay) Reset() {
	var v PaymentSessionPayPay
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentSessionPayPay) SetTo(v PaymentSessionPayPay) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentSessionPayPay) Get() (v PaymentSessionPayPay, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentSessionPayPay) Or(d PaymentSessionPayPay) PaymentSessionPayPay {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentSessionStatus returns new OptPaymentSessionStatus with value set to v.
func NewOptPaymentSessionStatus(v PaymentSessionStatus) OptPaymentSessionStatus {
	return OptPaymentSessionStatus{
		Value: v,
		Set:   true,
	}
}

// OptPaymentSessionStatus is optional PaymentSessionStatus.
type OptPaymentSessionStatus struct {
	Value PaymentSessionStatus
	Set   bool
}

// IsSet returns true if OptPaymentSessionStatus was set.
func (o OptPaymentSessionStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentSessionStatus) Reset() {
	var v PaymentSessionStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentSessionStatus) SetTo(v PaymentSessionStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentSessionStatus) Get() (v PaymentSessionStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentSessionStatus) Or(d PaymentSessionStatus) PaymentSessionStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentSessionThanksMailSendFlag returns new OptPaymentSessionThanksMailSendFlag with value set to v.
func NewOptPaymentSessionThanksMailSendFlag(v PaymentSessionThanksMailSendFlag) OptPaymentSessionThanksMailSendFlag {
	return OptPaymentSessionThanksMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptPaymentSessionThanksMailSendFlag is optional PaymentSessionThanksMailSendFlag.
type OptPaymentSessionThanksMailSendFlag struct {
	Value PaymentSessionThanksMailSendFlag
	Set   bool
}

// IsSet returns true if OptPaymentSessionThanksMailSendFlag was set.
func (o OptPaymentSessionThanksMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentSessionThanksMailSendFlag) Reset() {
	var v PaymentSessionThanksMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentSessionThanksMailSendFlag) SetTo(v PaymentSessionThanksMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentSessionThanksMailSendFlag) Get() (v PaymentSessionThanksMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentSessionThanksMailSendFlag) Or(d PaymentSessionThanksMailSendFlag) PaymentSessionThanksMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentSessionTransaction returns new OptPaymentSessionTransaction with value set to v.
func NewOptPaymentSessionTransaction(v PaymentSessionTransaction) OptPaymentSessionTransaction {
	return OptPaymentSessionTransaction{
		Value: v,
		Set:   true,
	}
}

// OptPaymentSessionTransaction is optional PaymentSessionTransaction.
type OptPaymentSessionTransaction struct {
	Value PaymentSessionTransaction
	Set   bool
}

// IsSet returns true if OptPaymentSessionTransaction was set.
func (o OptPaymentSessionTransaction) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentSessionTransaction) Reset() {
	var v PaymentSessionTransaction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentSessionTransaction) SetTo(v PaymentSessionTransaction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentSessionTransaction) Get() (v PaymentSessionTransaction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentSessionTransaction) Or(d PaymentSessionTransaction) PaymentSessionTransaction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentStatus returns new OptPaymentStatus with value set to v.
func NewOptPaymentStatus(v PaymentStatus) OptPaymentStatus {
	return OptPaymentStatus{
		Value: v,
		Set:   true,
	}
}

// OptPaymentStatus is optional PaymentStatus.
type OptPaymentStatus struct {
	Value PaymentStatus
	Set   bool
}

// IsSet returns true if OptPaymentStatus was set.
func (o OptPaymentStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentStatus) Reset() {
	var v PaymentStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentStatus) SetTo(v PaymentStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentStatus) Get() (v PaymentStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentStatus) Or(d PaymentStatus) PaymentStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlanIntervalCount returns new OptPlanIntervalCount with value set to v.
func NewOptPlanIntervalCount(v PlanIntervalCount) OptPlanIntervalCount {
	return OptPlanIntervalCount{
		Value: v,
		Set:   true,
	}
}

// OptPlanIntervalCount is optional PlanIntervalCount.
type OptPlanIntervalCount struct {
	Value PlanIntervalCount
	Set   bool
}

// IsSet returns true if OptPlanIntervalCount was set.
func (o OptPlanIntervalCount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlanIntervalCount) Reset() {
	var v PlanIntervalCount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlanIntervalCount) SetTo(v PlanIntervalCount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlanIntervalCount) Get() (v PlanIntervalCount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlanIntervalCount) Or(d PlanIntervalCount) PlanIntervalCount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlanIntervalPattern returns new OptPlanIntervalPattern with value set to v.
func NewOptPlanIntervalPattern(v PlanIntervalPattern) OptPlanIntervalPattern {
	return OptPlanIntervalPattern{
		Value: v,
		Set:   true,
	}
}

// OptPlanIntervalPattern is optional PlanIntervalPattern.
type OptPlanIntervalPattern struct {
	Value PlanIntervalPattern
	Set   bool
}

// IsSet returns true if OptPlanIntervalPattern was set.
func (o OptPlanIntervalPattern) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlanIntervalPattern) Reset() {
	var v PlanIntervalPattern
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlanIntervalPattern) SetTo(v PlanIntervalPattern) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlanIntervalPattern) Get() (v PlanIntervalPattern, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlanIntervalPattern) Or(d PlanIntervalPattern) PlanIntervalPattern {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlanName returns new OptPlanName with value set to v.
func NewOptPlanName(v PlanName) OptPlanName {
	return OptPlanName{
		Value: v,
		Set:   true,
	}
}

// OptPlanName is optional PlanName.
type OptPlanName struct {
	Value PlanName
	Set   bool
}

// IsSet returns true if OptPlanName was set.
func (o OptPlanName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlanName) Reset() {
	var v PlanName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlanName) SetTo(v PlanName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlanName) Get() (v PlanName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlanName) Or(d PlanName) PlanName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlanPropertiesAmount returns new OptPlanPropertiesAmount with value set to v.
func NewOptPlanPropertiesAmount(v PlanPropertiesAmount) OptPlanPropertiesAmount {
	return OptPlanPropertiesAmount{
		Value: v,
		Set:   true,
	}
}

// OptPlanPropertiesAmount is optional PlanPropertiesAmount.
type OptPlanPropertiesAmount struct {
	Value PlanPropertiesAmount
	Set   bool
}

// IsSet returns true if OptPlanPropertiesAmount was set.
func (o OptPlanPropertiesAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlanPropertiesAmount) Reset() {
	var v PlanPropertiesAmount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlanPropertiesAmount) SetTo(v PlanPropertiesAmount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlanPropertiesAmount) Get() (v PlanPropertiesAmount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlanPropertiesAmount) Or(d PlanPropertiesAmount) PlanPropertiesAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlanPropertiesID returns new OptPlanPropertiesID with value set to v.
func NewOptPlanPropertiesID(v PlanPropertiesID) OptPlanPropertiesID {
	return OptPlanPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptPlanPropertiesID is optional PlanPropertiesID.
type OptPlanPropertiesID struct {
	Value PlanPropertiesID
	Set   bool
}

// IsSet returns true if OptPlanPropertiesID was set.
func (o OptPlanPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlanPropertiesID) Reset() {
	var v PlanPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlanPropertiesID) SetTo(v PlanPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlanPropertiesID) Get() (v PlanPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlanPropertiesID) Or(d PlanPropertiesID) PlanPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlanPropertiesTax returns new OptPlanPropertiesTax with value set to v.
func NewOptPlanPropertiesTax(v PlanPropertiesTax) OptPlanPropertiesTax {
	return OptPlanPropertiesTax{
		Value: v,
		Set:   true,
	}
}

// OptPlanPropertiesTax is optional PlanPropertiesTax.
type OptPlanPropertiesTax struct {
	Value PlanPropertiesTax
	Set   bool
}

// IsSet returns true if OptPlanPropertiesTax was set.
func (o OptPlanPropertiesTax) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlanPropertiesTax) Reset() {
	var v PlanPropertiesTax
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlanPropertiesTax) SetTo(v PlanPropertiesTax) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlanPropertiesTax) Get() (v PlanPropertiesTax, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlanPropertiesTax) Or(d PlanPropertiesTax) PlanPropertiesTax {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlanUsedFlag returns new OptPlanUsedFlag with value set to v.
func NewOptPlanUsedFlag(v PlanUsedFlag) OptPlanUsedFlag {
	return OptPlanUsedFlag{
		Value: v,
		Set:   true,
	}
}

// OptPlanUsedFlag is optional PlanUsedFlag.
type OptPlanUsedFlag struct {
	Value PlanUsedFlag
	Set   bool
}

// IsSet returns true if OptPlanUsedFlag was set.
func (o OptPlanUsedFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlanUsedFlag) Reset() {
	var v PlanUsedFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlanUsedFlag) SetTo(v PlanUsedFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlanUsedFlag) Get() (v PlanUsedFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlanUsedFlag) Or(d PlanUsedFlag) PlanUsedFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlatformAccountPropertiesID returns new OptPlatformAccountPropertiesID with value set to v.
func NewOptPlatformAccountPropertiesID(v PlatformAccountPropertiesID) OptPlatformAccountPropertiesID {
	return OptPlatformAccountPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptPlatformAccountPropertiesID is optional PlatformAccountPropertiesID.
type OptPlatformAccountPropertiesID struct {
	Value PlatformAccountPropertiesID
	Set   bool
}

// IsSet returns true if OptPlatformAccountPropertiesID was set.
func (o OptPlatformAccountPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlatformAccountPropertiesID) Reset() {
	var v PlatformAccountPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlatformAccountPropertiesID) SetTo(v PlatformAccountPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlatformAccountPropertiesID) Get() (v PlatformAccountPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlatformAccountPropertiesID) Or(d PlatformAccountPropertiesID) PlatformAccountPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPlatformID returns new OptPlatformID with value set to v.
func NewOptPlatformID(v PlatformID) OptPlatformID {
	return OptPlatformID{
		Value: v,
		Set:   true,
	}
}

// OptPlatformID is optional PlatformID.
type OptPlatformID struct {
	Value PlatformID
	Set   bool
}

// IsSet returns true if OptPlatformID was set.
func (o OptPlatformID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPlatformID) Reset() {
	var v PlatformID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPlatformID) SetTo(v PlatformID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPlatformID) Get() (v PlatformID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPlatformID) Or(d PlatformID) PlatformID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesAccountID returns new OptPropertiesAccountID with value set to v.
func NewOptPropertiesAccountID(v PropertiesAccountID) OptPropertiesAccountID {
	return OptPropertiesAccountID{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesAccountID is optional PropertiesAccountID.
type OptPropertiesAccountID struct {
	Value PropertiesAccountID
	Set   bool
}

// IsSet returns true if OptPropertiesAccountID was set.
func (o OptPropertiesAccountID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesAccountID) Reset() {
	var v PropertiesAccountID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesAccountID) SetTo(v PropertiesAccountID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesAccountID) Get() (v PropertiesAccountID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesAccountID) Or(d PropertiesAccountID) PropertiesAccountID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesAmount returns new OptPropertiesAmount with value set to v.
func NewOptPropertiesAmount(v PropertiesAmount) OptPropertiesAmount {
	return OptPropertiesAmount{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesAmount is optional PropertiesAmount.
type OptPropertiesAmount struct {
	Value PropertiesAmount
	Set   bool
}

// IsSet returns true if OptPropertiesAmount was set.
func (o OptPropertiesAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesAmount) Reset() {
	var v PropertiesAmount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesAmount) SetTo(v PropertiesAmount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesAmount) Get() (v PropertiesAmount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesAmount) Or(d PropertiesAmount) PropertiesAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesDefaultFlag returns new OptPropertiesDefaultFlag with value set to v.
func NewOptPropertiesDefaultFlag(v PropertiesDefaultFlag) OptPropertiesDefaultFlag {
	return OptPropertiesDefaultFlag{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesDefaultFlag is optional PropertiesDefaultFlag.
type OptPropertiesDefaultFlag struct {
	Value PropertiesDefaultFlag
	Set   bool
}

// IsSet returns true if OptPropertiesDefaultFlag was set.
func (o OptPropertiesDefaultFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesDefaultFlag) Reset() {
	var v PropertiesDefaultFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesDefaultFlag) SetTo(v PropertiesDefaultFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesDefaultFlag) Get() (v PropertiesDefaultFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesDefaultFlag) Or(d PropertiesDefaultFlag) PropertiesDefaultFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesExpire returns new OptPropertiesExpire with value set to v.
func NewOptPropertiesExpire(v PropertiesExpire) OptPropertiesExpire {
	return OptPropertiesExpire{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesExpire is optional PropertiesExpire.
type OptPropertiesExpire struct {
	Value PropertiesExpire
	Set   bool
}

// IsSet returns true if OptPropertiesExpire was set.
func (o OptPropertiesExpire) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesExpire) Reset() {
	var v PropertiesExpire
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesExpire) SetTo(v PropertiesExpire) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesExpire) Get() (v PropertiesExpire, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesExpire) Or(d PropertiesExpire) PropertiesExpire {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesGuideMailSendFlag returns new OptPropertiesGuideMailSendFlag with value set to v.
func NewOptPropertiesGuideMailSendFlag(v PropertiesGuideMailSendFlag) OptPropertiesGuideMailSendFlag {
	return OptPropertiesGuideMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesGuideMailSendFlag is optional PropertiesGuideMailSendFlag.
type OptPropertiesGuideMailSendFlag struct {
	Value PropertiesGuideMailSendFlag
	Set   bool
}

// IsSet returns true if OptPropertiesGuideMailSendFlag was set.
func (o OptPropertiesGuideMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesGuideMailSendFlag) Reset() {
	var v PropertiesGuideMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesGuideMailSendFlag) SetTo(v PropertiesGuideMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesGuideMailSendFlag) Get() (v PropertiesGuideMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesGuideMailSendFlag) Or(d PropertiesGuideMailSendFlag) PropertiesGuideMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesID returns new OptPropertiesID with value set to v.
func NewOptPropertiesID(v PropertiesID) OptPropertiesID {
	return OptPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesID is optional PropertiesID.
type OptPropertiesID struct {
	Value PropertiesID
	Set   bool
}

// IsSet returns true if OptPropertiesID was set.
func (o OptPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesID) Reset() {
	var v PropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesID) SetTo(v PropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesID) Get() (v PropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesID) Or(d PropertiesID) PropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesIntervalCount returns new OptPropertiesIntervalCount with value set to v.
func NewOptPropertiesIntervalCount(v PropertiesIntervalCount) OptPropertiesIntervalCount {
	return OptPropertiesIntervalCount{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesIntervalCount is optional PropertiesIntervalCount.
type OptPropertiesIntervalCount struct {
	Value PropertiesIntervalCount
	Set   bool
}

// IsSet returns true if OptPropertiesIntervalCount was set.
func (o OptPropertiesIntervalCount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesIntervalCount) Reset() {
	var v PropertiesIntervalCount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesIntervalCount) SetTo(v PropertiesIntervalCount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesIntervalCount) Get() (v PropertiesIntervalCount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesIntervalCount) Or(d PropertiesIntervalCount) PropertiesIntervalCount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesIntervalPattern returns new OptPropertiesIntervalPattern with value set to v.
func NewOptPropertiesIntervalPattern(v PropertiesIntervalPattern) OptPropertiesIntervalPattern {
	return OptPropertiesIntervalPattern{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesIntervalPattern is optional PropertiesIntervalPattern.
type OptPropertiesIntervalPattern struct {
	Value PropertiesIntervalPattern
	Set   bool
}

// IsSet returns true if OptPropertiesIntervalPattern was set.
func (o OptPropertiesIntervalPattern) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesIntervalPattern) Reset() {
	var v PropertiesIntervalPattern
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesIntervalPattern) SetTo(v PropertiesIntervalPattern) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesIntervalPattern) Get() (v PropertiesIntervalPattern, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesIntervalPattern) Or(d PropertiesIntervalPattern) PropertiesIntervalPattern {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesProcessDate returns new OptPropertiesProcessDate with value set to v.
func NewOptPropertiesProcessDate(v PropertiesProcessDate) OptPropertiesProcessDate {
	return OptPropertiesProcessDate{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesProcessDate is optional PropertiesProcessDate.
type OptPropertiesProcessDate struct {
	Value PropertiesProcessDate
	Set   bool
}

// IsSet returns true if OptPropertiesProcessDate was set.
func (o OptPropertiesProcessDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesProcessDate) Reset() {
	var v PropertiesProcessDate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesProcessDate) SetTo(v PropertiesProcessDate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesProcessDate) Get() (v PropertiesProcessDate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesProcessDate) Or(d PropertiesProcessDate) PropertiesProcessDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesShopName returns new OptPropertiesShopName with value set to v.
func NewOptPropertiesShopName(v PropertiesShopName) OptPropertiesShopName {
	return OptPropertiesShopName{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesShopName is optional PropertiesShopName.
type OptPropertiesShopName struct {
	Value PropertiesShopName
	Set   bool
}

// IsSet returns true if OptPropertiesShopName was set.
func (o OptPropertiesShopName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesShopName) Reset() {
	var v PropertiesShopName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesShopName) SetTo(v PropertiesShopName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesShopName) Get() (v PropertiesShopName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesShopName) Or(d PropertiesShopName) PropertiesShopName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesShopNameKana returns new OptPropertiesShopNameKana with value set to v.
func NewOptPropertiesShopNameKana(v PropertiesShopNameKana) OptPropertiesShopNameKana {
	return OptPropertiesShopNameKana{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesShopNameKana is optional PropertiesShopNameKana.
type OptPropertiesShopNameKana struct {
	Value PropertiesShopNameKana
	Set   bool
}

// IsSet returns true if OptPropertiesShopNameKana was set.
func (o OptPropertiesShopNameKana) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesShopNameKana) Reset() {
	var v PropertiesShopNameKana
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesShopNameKana) SetTo(v PropertiesShopNameKana) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesShopNameKana) Get() (v PropertiesShopNameKana, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesShopNameKana) Or(d PropertiesShopNameKana) PropertiesShopNameKana {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesTax returns new OptPropertiesTax with value set to v.
func NewOptPropertiesTax(v PropertiesTax) OptPropertiesTax {
	return OptPropertiesTax{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesTax is optional PropertiesTax.
type OptPropertiesTax struct {
	Value PropertiesTax
	Set   bool
}

// IsSet returns true if OptPropertiesTax was set.
func (o OptPropertiesTax) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesTax) Reset() {
	var v PropertiesTax
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesTax) SetTo(v PropertiesTax) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesTax) Get() (v PropertiesTax, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesTax) Or(d PropertiesTax) PropertiesTax {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesTotalAmount returns new OptPropertiesTotalAmount with value set to v.
func NewOptPropertiesTotalAmount(v PropertiesTotalAmount) OptPropertiesTotalAmount {
	return OptPropertiesTotalAmount{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesTotalAmount is optional PropertiesTotalAmount.
type OptPropertiesTotalAmount struct {
	Value PropertiesTotalAmount
	Set   bool
}

// IsSet returns true if OptPropertiesTotalAmount was set.
func (o OptPropertiesTotalAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesTotalAmount) Reset() {
	var v PropertiesTotalAmount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesTotalAmount) SetTo(v PropertiesTotalAmount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesTotalAmount) Get() (v PropertiesTotalAmount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesTotalAmount) Or(d PropertiesTotalAmount) PropertiesTotalAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPropertiesURL returns new OptPropertiesURL with value set to v.
func NewOptPropertiesURL(v PropertiesURL) OptPropertiesURL {
	return OptPropertiesURL{
		Value: v,
		Set:   true,
	}
}

// OptPropertiesURL is optional PropertiesURL.
type OptPropertiesURL struct {
	Value PropertiesURL
	Set   bool
}

// IsSet returns true if OptPropertiesURL was set.
func (o OptPropertiesURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPropertiesURL) Reset() {
	var v PropertiesURL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPropertiesURL) SetTo(v PropertiesURL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPropertiesURL) Get() (v PropertiesURL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPropertiesURL) Or(d PropertiesURL) PropertiesURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptR3DS2Status returns new OptR3DS2Status with value set to v.
func NewOptR3DS2Status(v R3DS2Status) OptR3DS2Status {
	return OptR3DS2Status{
		Value: v,
		Set:   true,
	}
}

// OptR3DS2Status is optional R3DS2Status.
type OptR3DS2Status struct {
	Value R3DS2Status
	Set   bool
}

// IsSet returns true if OptR3DS2Status was set.
func (o OptR3DS2Status) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptR3DS2Status) Reset() {
	var v R3DS2Status
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptR3DS2Status) SetTo(v R3DS2Status) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptR3DS2Status) Get() (v R3DS2Status, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptR3DS2Status) Or(d R3DS2Status) R3DS2Status {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptR3DS2TransactionResult returns new OptR3DS2TransactionResult with value set to v.
func NewOptR3DS2TransactionResult(v R3DS2TransactionResult) OptR3DS2TransactionResult {
	return OptR3DS2TransactionResult{
		Value: v,
		Set:   true,
	}
}

// OptR3DS2TransactionResult is optional R3DS2TransactionResult.
type OptR3DS2TransactionResult struct {
	Value R3DS2TransactionResult
	Set   bool
}

// IsSet returns true if OptR3DS2TransactionResult was set.
func (o OptR3DS2TransactionResult) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptR3DS2TransactionResult) Reset() {
	var v R3DS2TransactionResult
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptR3DS2TransactionResult) SetTo(v R3DS2TransactionResult) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptR3DS2TransactionResult) Get() (v R3DS2TransactionResult, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptR3DS2TransactionResult) Or(d R3DS2TransactionResult) R3DS2TransactionResult {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptR3DS2TransactionResultReason returns new OptR3DS2TransactionResultReason with value set to v.
func NewOptR3DS2TransactionResultReason(v R3DS2TransactionResultReason) OptR3DS2TransactionResultReason {
	return OptR3DS2TransactionResultReason{
		Value: v,
		Set:   true,
	}
}

// OptR3DS2TransactionResultReason is optional R3DS2TransactionResultReason.
type OptR3DS2TransactionResultReason struct {
	Value R3DS2TransactionResultReason
	Set   bool
}

// IsSet returns true if OptR3DS2TransactionResultReason was set.
func (o OptR3DS2TransactionResultReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptR3DS2TransactionResultReason) Reset() {
	var v R3DS2TransactionResultReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptR3DS2TransactionResultReason) SetTo(v R3DS2TransactionResultReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptR3DS2TransactionResultReason) Get() (v R3DS2TransactionResultReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptR3DS2TransactionResultReason) Or(d R3DS2TransactionResultReason) R3DS2TransactionResultReason {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRegistryCorporateInfo returns new OptRegistryCorporateInfo with value set to v.
func NewOptRegistryCorporateInfo(v RegistryCorporateInfo) OptRegistryCorporateInfo {
	return OptRegistryCorporateInfo{
		Value: v,
		Set:   true,
	}
}

// OptRegistryCorporateInfo is optional RegistryCorporateInfo.
type OptRegistryCorporateInfo struct {
	Value RegistryCorporateInfo
	Set   bool
}

// IsSet returns true if OptRegistryCorporateInfo was set.
func (o OptRegistryCorporateInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRegistryCorporateInfo) Reset() {
	var v RegistryCorporateInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRegistryCorporateInfo) SetTo(v RegistryCorporateInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRegistryCorporateInfo) Get() (v RegistryCorporateInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRegistryCorporateInfo) Or(d RegistryCorporateInfo) RegistryCorporateInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrieveAccountListQuery returns new OptRetrieveAccountListQuery with value set to v.
func NewOptRetrieveAccountListQuery(v RetrieveAccountListQuery) OptRetrieveAccountListQuery {
	return OptRetrieveAccountListQuery{
		Value: v,
		Set:   true,
	}
}

// OptRetrieveAccountListQuery is optional RetrieveAccountListQuery.
type OptRetrieveAccountListQuery struct {
	Value RetrieveAccountListQuery
	Set   bool
}

// IsSet returns true if OptRetrieveAccountListQuery was set.
func (o OptRetrieveAccountListQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrieveAccountListQuery) Reset() {
	var v RetrieveAccountListQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrieveAccountListQuery) SetTo(v RetrieveAccountListQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrieveAccountListQuery) Get() (v RetrieveAccountListQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrieveAccountListQuery) Or(d RetrieveAccountListQuery) RetrieveAccountListQuery {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrieveCustomerListQuery returns new OptRetrieveCustomerListQuery with value set to v.
func NewOptRetrieveCustomerListQuery(v RetrieveCustomerListQuery) OptRetrieveCustomerListQuery {
	return OptRetrieveCustomerListQuery{
		Value: v,
		Set:   true,
	}
}

// OptRetrieveCustomerListQuery is optional RetrieveCustomerListQuery.
type OptRetrieveCustomerListQuery struct {
	Value RetrieveCustomerListQuery
	Set   bool
}

// IsSet returns true if OptRetrieveCustomerListQuery was set.
func (o OptRetrieveCustomerListQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrieveCustomerListQuery) Reset() {
	var v RetrieveCustomerListQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrieveCustomerListQuery) SetTo(v RetrieveCustomerListQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrieveCustomerListQuery) Get() (v RetrieveCustomerListQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrieveCustomerListQuery) Or(d RetrieveCustomerListQuery) RetrieveCustomerListQuery {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrievePaymentBulkListQuery returns new OptRetrievePaymentBulkListQuery with value set to v.
func NewOptRetrievePaymentBulkListQuery(v RetrievePaymentBulkListQuery) OptRetrievePaymentBulkListQuery {
	return OptRetrievePaymentBulkListQuery{
		Value: v,
		Set:   true,
	}
}

// OptRetrievePaymentBulkListQuery is optional RetrievePaymentBulkListQuery.
type OptRetrievePaymentBulkListQuery struct {
	Value RetrievePaymentBulkListQuery
	Set   bool
}

// IsSet returns true if OptRetrievePaymentBulkListQuery was set.
func (o OptRetrievePaymentBulkListQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrievePaymentBulkListQuery) Reset() {
	var v RetrievePaymentBulkListQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrievePaymentBulkListQuery) SetTo(v RetrievePaymentBulkListQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrievePaymentBulkListQuery) Get() (v RetrievePaymentBulkListQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrievePaymentBulkListQuery) Or(d RetrievePaymentBulkListQuery) RetrievePaymentBulkListQuery {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrievePlanListQuery returns new OptRetrievePlanListQuery with value set to v.
func NewOptRetrievePlanListQuery(v RetrievePlanListQuery) OptRetrievePlanListQuery {
	return OptRetrievePlanListQuery{
		Value: v,
		Set:   true,
	}
}

// OptRetrievePlanListQuery is optional RetrievePlanListQuery.
type OptRetrievePlanListQuery struct {
	Value RetrievePlanListQuery
	Set   bool
}

// IsSet returns true if OptRetrievePlanListQuery was set.
func (o OptRetrievePlanListQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrievePlanListQuery) Reset() {
	var v RetrievePlanListQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrievePlanListQuery) SetTo(v RetrievePlanListQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrievePlanListQuery) Get() (v RetrievePlanListQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrievePlanListQuery) Or(d RetrievePlanListQuery) RetrievePlanListQuery {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrievePlanListQueryIntervalPattern returns new OptRetrievePlanListQueryIntervalPattern with value set to v.
func NewOptRetrievePlanListQueryIntervalPattern(v RetrievePlanListQueryIntervalPattern) OptRetrievePlanListQueryIntervalPattern {
	return OptRetrievePlanListQueryIntervalPattern{
		Value: v,
		Set:   true,
	}
}

// OptRetrievePlanListQueryIntervalPattern is optional RetrievePlanListQueryIntervalPattern.
type OptRetrievePlanListQueryIntervalPattern struct {
	Value RetrievePlanListQueryIntervalPattern
	Set   bool
}

// IsSet returns true if OptRetrievePlanListQueryIntervalPattern was set.
func (o OptRetrievePlanListQueryIntervalPattern) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrievePlanListQueryIntervalPattern) Reset() {
	var v RetrievePlanListQueryIntervalPattern
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrievePlanListQueryIntervalPattern) SetTo(v RetrievePlanListQueryIntervalPattern) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrievePlanListQueryIntervalPattern) Get() (v RetrievePlanListQueryIntervalPattern, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrievePlanListQueryIntervalPattern) Or(d RetrievePlanListQueryIntervalPattern) RetrievePlanListQueryIntervalPattern {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrievePlatformAccountListQuery returns new OptRetrievePlatformAccountListQuery with value set to v.
func NewOptRetrievePlatformAccountListQuery(v RetrievePlatformAccountListQuery) OptRetrievePlatformAccountListQuery {
	return OptRetrievePlatformAccountListQuery{
		Value: v,
		Set:   true,
	}
}

// OptRetrievePlatformAccountListQuery is optional RetrievePlatformAccountListQuery.
type OptRetrievePlatformAccountListQuery struct {
	Value RetrievePlatformAccountListQuery
	Set   bool
}

// IsSet returns true if OptRetrievePlatformAccountListQuery was set.
func (o OptRetrievePlatformAccountListQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrievePlatformAccountListQuery) Reset() {
	var v RetrievePlatformAccountListQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrievePlatformAccountListQuery) SetTo(v RetrievePlatformAccountListQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrievePlatformAccountListQuery) Get() (v RetrievePlatformAccountListQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrievePlatformAccountListQuery) Or(d RetrievePlatformAccountListQuery) RetrievePlatformAccountListQuery {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrievePlatformAccountSummaryListQuery returns new OptRetrievePlatformAccountSummaryListQuery with value set to v.
func NewOptRetrievePlatformAccountSummaryListQuery(v RetrievePlatformAccountSummaryListQuery) OptRetrievePlatformAccountSummaryListQuery {
	return OptRetrievePlatformAccountSummaryListQuery{
		Value: v,
		Set:   true,
	}
}

// OptRetrievePlatformAccountSummaryListQuery is optional RetrievePlatformAccountSummaryListQuery.
type OptRetrievePlatformAccountSummaryListQuery struct {
	Value RetrievePlatformAccountSummaryListQuery
	Set   bool
}

// IsSet returns true if OptRetrievePlatformAccountSummaryListQuery was set.
func (o OptRetrievePlatformAccountSummaryListQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrievePlatformAccountSummaryListQuery) Reset() {
	var v RetrievePlatformAccountSummaryListQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrievePlatformAccountSummaryListQuery) SetTo(v RetrievePlatformAccountSummaryListQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrievePlatformAccountSummaryListQuery) Get() (v RetrievePlatformAccountSummaryListQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrievePlatformAccountSummaryListQuery) Or(d RetrievePlatformAccountSummaryListQuery) RetrievePlatformAccountSummaryListQuery {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrievePlatformShopListQuery returns new OptRetrievePlatformShopListQuery with value set to v.
func NewOptRetrievePlatformShopListQuery(v RetrievePlatformShopListQuery) OptRetrievePlatformShopListQuery {
	return OptRetrievePlatformShopListQuery{
		Value: v,
		Set:   true,
	}
}

// OptRetrievePlatformShopListQuery is optional RetrievePlatformShopListQuery.
type OptRetrievePlatformShopListQuery struct {
	Value RetrievePlatformShopListQuery
	Set   bool
}

// IsSet returns true if OptRetrievePlatformShopListQuery was set.
func (o OptRetrievePlatformShopListQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrievePlatformShopListQuery) Reset() {
	var v RetrievePlatformShopListQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrievePlatformShopListQuery) SetTo(v RetrievePlatformShopListQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrievePlatformShopListQuery) Get() (v RetrievePlatformShopListQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrievePlatformShopListQuery) Or(d RetrievePlatformShopListQuery) RetrievePlatformShopListQuery {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRetrieveTenantShopListQuery returns new OptRetrieveTenantShopListQuery with value set to v.
func NewOptRetrieveTenantShopListQuery(v RetrieveTenantShopListQuery) OptRetrieveTenantShopListQuery {
	return OptRetrieveTenantShopListQuery{
		Value: v,
		Set:   true,
	}
}

// OptRetrieveTenantShopListQuery is optional RetrieveTenantShopListQuery.
type OptRetrieveTenantShopListQuery struct {
	Value RetrieveTenantShopListQuery
	Set   bool
}

// IsSet returns true if OptRetrieveTenantShopListQuery was set.
func (o OptRetrieveTenantShopListQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRetrieveTenantShopListQuery) Reset() {
	var v RetrieveTenantShopListQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRetrieveTenantShopListQuery) SetTo(v RetrieveTenantShopListQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRetrieveTenantShopListQuery) Get() (v RetrieveTenantShopListQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRetrieveTenantShopListQuery) Or(d RetrieveTenantShopListQuery) RetrieveTenantShopListQuery {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRolePropertiesID returns new OptRolePropertiesID with value set to v.
func NewOptRolePropertiesID(v RolePropertiesID) OptRolePropertiesID {
	return OptRolePropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptRolePropertiesID is optional RolePropertiesID.
type OptRolePropertiesID struct {
	Value RolePropertiesID
	Set   bool
}

// IsSet returns true if OptRolePropertiesID was set.
func (o OptRolePropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRolePropertiesID) Reset() {
	var v RolePropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRolePropertiesID) SetTo(v RolePropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRolePropertiesID) Get() (v RolePropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRolePropertiesID) Or(d RolePropertiesID) RolePropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSchema returns new OptSchema with value set to v.
func NewOptSchema(v Schema) OptSchema {
	return OptSchema{
		Value: v,
		Set:   true,
	}
}

// OptSchema is optional Schema.
type OptSchema struct {
	Value Schema
	Set   bool
}

// IsSet returns true if OptSchema was set.
func (o OptSchema) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSchema) Reset() {
	var v Schema
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSchema) SetTo(v Schema) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSchema) Get() (v Schema, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSchema) Or(d Schema) Schema {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptShopID returns new OptShopID with value set to v.
func NewOptShopID(v ShopID) OptShopID {
	return OptShopID{
		Value: v,
		Set:   true,
	}
}

// OptShopID is optional ShopID.
type OptShopID struct {
	Value ShopID
	Set   bool
}

// IsSet returns true if OptShopID was set.
func (o OptShopID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShopID) Reset() {
	var v ShopID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShopID) SetTo(v ShopID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShopID) Get() (v ShopID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptShopID) Or(d ShopID) ShopID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptShopInfoV2 returns new OptShopInfoV2 with value set to v.
func NewOptShopInfoV2(v ShopInfoV2) OptShopInfoV2 {
	return OptShopInfoV2{
		Value: v,
		Set:   true,
	}
}

// OptShopInfoV2 is optional ShopInfoV2.
type OptShopInfoV2 struct {
	Value ShopInfoV2
	Set   bool
}

// IsSet returns true if OptShopInfoV2 was set.
func (o OptShopInfoV2) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShopInfoV2) Reset() {
	var v ShopInfoV2
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShopInfoV2) SetTo(v ShopInfoV2) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShopInfoV2) Get() (v ShopInfoV2, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptShopInfoV2) Or(d ShopInfoV2) ShopInfoV2 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptShopInfoV2PrepaidPointInfo returns new OptShopInfoV2PrepaidPointInfo with value set to v.
func NewOptShopInfoV2PrepaidPointInfo(v ShopInfoV2PrepaidPointInfo) OptShopInfoV2PrepaidPointInfo {
	return OptShopInfoV2PrepaidPointInfo{
		Value: v,
		Set:   true,
	}
}

// OptShopInfoV2PrepaidPointInfo is optional ShopInfoV2PrepaidPointInfo.
type OptShopInfoV2PrepaidPointInfo struct {
	Value ShopInfoV2PrepaidPointInfo
	Set   bool
}

// IsSet returns true if OptShopInfoV2PrepaidPointInfo was set.
func (o OptShopInfoV2PrepaidPointInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShopInfoV2PrepaidPointInfo) Reset() {
	var v ShopInfoV2PrepaidPointInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShopInfoV2PrepaidPointInfo) SetTo(v ShopInfoV2PrepaidPointInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShopInfoV2PrepaidPointInfo) Get() (v ShopInfoV2PrepaidPointInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptShopInfoV2PrepaidPointInfo) Or(d ShopInfoV2PrepaidPointInfo) ShopInfoV2PrepaidPointInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptShopInfoV2SiteInfo returns new OptShopInfoV2SiteInfo with value set to v.
func NewOptShopInfoV2SiteInfo(v ShopInfoV2SiteInfo) OptShopInfoV2SiteInfo {
	return OptShopInfoV2SiteInfo{
		Value: v,
		Set:   true,
	}
}

// OptShopInfoV2SiteInfo is optional ShopInfoV2SiteInfo.
type OptShopInfoV2SiteInfo struct {
	Value ShopInfoV2SiteInfo
	Set   bool
}

// IsSet returns true if OptShopInfoV2SiteInfo was set.
func (o OptShopInfoV2SiteInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShopInfoV2SiteInfo) Reset() {
	var v ShopInfoV2SiteInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShopInfoV2SiteInfo) SetTo(v ShopInfoV2SiteInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShopInfoV2SiteInfo) Get() (v ShopInfoV2SiteInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptShopInfoV2SiteInfo) Or(d ShopInfoV2SiteInfo) ShopInfoV2SiteInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptShopNameEn returns new OptShopNameEn with value set to v.
func NewOptShopNameEn(v ShopNameEn) OptShopNameEn {
	return OptShopNameEn{
		Value: v,
		Set:   true,
	}
}

// OptShopNameEn is optional ShopNameEn.
type OptShopNameEn struct {
	Value ShopNameEn
	Set   bool
}

// IsSet returns true if OptShopNameEn was set.
func (o OptShopNameEn) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShopNameEn) Reset() {
	var v ShopNameEn
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShopNameEn) SetTo(v ShopNameEn) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShopNameEn) Get() (v ShopNameEn, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptShopNameEn) Or(d ShopNameEn) ShopNameEn {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptShopPaymentMethod returns new OptShopPaymentMethod with value set to v.
func NewOptShopPaymentMethod(v ShopPaymentMethod) OptShopPaymentMethod {
	return OptShopPaymentMethod{
		Value: v,
		Set:   true,
	}
}

// OptShopPaymentMethod is optional ShopPaymentMethod.
type OptShopPaymentMethod struct {
	Value ShopPaymentMethod
	Set   bool
}

// IsSet returns true if OptShopPaymentMethod was set.
func (o OptShopPaymentMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShopPaymentMethod) Reset() {
	var v ShopPaymentMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShopPaymentMethod) SetTo(v ShopPaymentMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShopPaymentMethod) Get() (v ShopPaymentMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptShopPaymentMethod) Or(d ShopPaymentMethod) ShopPaymentMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptShopPropertiesID returns new OptShopPropertiesID with value set to v.
func NewOptShopPropertiesID(v ShopPropertiesID) OptShopPropertiesID {
	return OptShopPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptShopPropertiesID is optional ShopPropertiesID.
type OptShopPropertiesID struct {
	Value ShopPropertiesID
	Set   bool
}

// IsSet returns true if OptShopPropertiesID was set.
func (o OptShopPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShopPropertiesID) Reset() {
	var v ShopPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShopPropertiesID) SetTo(v ShopPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShopPropertiesID) Get() (v ShopPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptShopPropertiesID) Or(d ShopPropertiesID) ShopPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSignature returns new OptSignature with value set to v.
func NewOptSignature(v Signature) OptSignature {
	return OptSignature{
		Value: v,
		Set:   true,
	}
}

// OptSignature is optional Signature.
type OptSignature struct {
	Value Signature
	Set   bool
}

// IsSet returns true if OptSignature was set.
func (o OptSignature) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSignature) Reset() {
	var v Signature
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSignature) SetTo(v Signature) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSignature) Get() (v Signature, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSignature) Or(d Signature) Signature {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSort returns new OptSort with value set to v.
func NewOptSort(v Sort) OptSort {
	return OptSort{
		Value: v,
		Set:   true,
	}
}

// OptSort is optional Sort.
type OptSort struct {
	Value Sort
	Set   bool
}

// IsSet returns true if OptSort was set.
func (o OptSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSort) Reset() {
	var v Sort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSort) SetTo(v Sort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSort) Get() (v Sort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSort) Or(d Sort) Sort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStartDate returns new OptStartDate with value set to v.
func NewOptStartDate(v StartDate) OptStartDate {
	return OptStartDate{
		Value: v,
		Set:   true,
	}
}

// OptStartDate is optional StartDate.
type OptStartDate struct {
	Value StartDate
	Set   bool
}

// IsSet returns true if OptStartDate was set.
func (o OptStartDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStartDate) Reset() {
	var v StartDate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStartDate) SetTo(v StartDate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStartDate) Get() (v StartDate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStartDate) Or(d StartDate) StartDate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSubscriptionEndMonthFlag returns new OptSubscriptionEndMonthFlag with value set to v.
func NewOptSubscriptionEndMonthFlag(v SubscriptionEndMonthFlag) OptSubscriptionEndMonthFlag {
	return OptSubscriptionEndMonthFlag{
		Value: v,
		Set:   true,
	}
}

// OptSubscriptionEndMonthFlag is optional SubscriptionEndMonthFlag.
type OptSubscriptionEndMonthFlag struct {
	Value SubscriptionEndMonthFlag
	Set   bool
}

// IsSet returns true if OptSubscriptionEndMonthFlag was set.
func (o OptSubscriptionEndMonthFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSubscriptionEndMonthFlag) Reset() {
	var v SubscriptionEndMonthFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSubscriptionEndMonthFlag) SetTo(v SubscriptionEndMonthFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSubscriptionEndMonthFlag) Get() (v SubscriptionEndMonthFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSubscriptionEndMonthFlag) Or(d SubscriptionEndMonthFlag) SubscriptionEndMonthFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSubscriptionPayType returns new OptSubscriptionPayType with value set to v.
func NewOptSubscriptionPayType(v SubscriptionPayType) OptSubscriptionPayType {
	return OptSubscriptionPayType{
		Value: v,
		Set:   true,
	}
}

// OptSubscriptionPayType is optional SubscriptionPayType.
type OptSubscriptionPayType struct {
	Value SubscriptionPayType
	Set   bool
}

// IsSet returns true if OptSubscriptionPayType was set.
func (o OptSubscriptionPayType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSubscriptionPayType) Reset() {
	var v SubscriptionPayType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSubscriptionPayType) SetTo(v SubscriptionPayType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSubscriptionPayType) Get() (v SubscriptionPayType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSubscriptionPayType) Or(d SubscriptionPayType) SubscriptionPayType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSubscriptionPropertiesID returns new OptSubscriptionPropertiesID with value set to v.
func NewOptSubscriptionPropertiesID(v SubscriptionPropertiesID) OptSubscriptionPropertiesID {
	return OptSubscriptionPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptSubscriptionPropertiesID is optional SubscriptionPropertiesID.
type OptSubscriptionPropertiesID struct {
	Value SubscriptionPropertiesID
	Set   bool
}

// IsSet returns true if OptSubscriptionPropertiesID was set.
func (o OptSubscriptionPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSubscriptionPropertiesID) Reset() {
	var v SubscriptionPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSubscriptionPropertiesID) SetTo(v SubscriptionPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSubscriptionPropertiesID) Get() (v SubscriptionPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSubscriptionPropertiesID) Or(d SubscriptionPropertiesID) SubscriptionPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSubscriptionResultStatus returns new OptSubscriptionResultStatus with value set to v.
func NewOptSubscriptionResultStatus(v SubscriptionResultStatus) OptSubscriptionResultStatus {
	return OptSubscriptionResultStatus{
		Value: v,
		Set:   true,
	}
}

// OptSubscriptionResultStatus is optional SubscriptionResultStatus.
type OptSubscriptionResultStatus struct {
	Value SubscriptionResultStatus
	Set   bool
}

// IsSet returns true if OptSubscriptionResultStatus was set.
func (o OptSubscriptionResultStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSubscriptionResultStatus) Reset() {
	var v SubscriptionResultStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSubscriptionResultStatus) SetTo(v SubscriptionResultStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSubscriptionResultStatus) Get() (v SubscriptionResultStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSubscriptionResultStatus) Or(d SubscriptionResultStatus) SubscriptionResultStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSubscriptionStatus returns new OptSubscriptionStatus with value set to v.
func NewOptSubscriptionStatus(v SubscriptionStatus) OptSubscriptionStatus {
	return OptSubscriptionStatus{
		Value: v,
		Set:   true,
	}
}

// OptSubscriptionStatus is optional SubscriptionStatus.
type OptSubscriptionStatus struct {
	Value SubscriptionStatus
	Set   bool
}

// IsSet returns true if OptSubscriptionStatus was set.
func (o OptSubscriptionStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSubscriptionStatus) Reset() {
	var v SubscriptionStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSubscriptionStatus) SetTo(v SubscriptionStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSubscriptionStatus) Get() (v SubscriptionStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSubscriptionStatus) Or(d SubscriptionStatus) SubscriptionStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTax returns new OptTax with value set to v.
func NewOptTax(v Tax) OptTax {
	return OptTax{
		Value: v,
		Set:   true,
	}
}

// OptTax is optional Tax.
type OptTax struct {
	Value Tax
	Set   bool
}

// IsSet returns true if OptTax was set.
func (o OptTax) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTax) Reset() {
	var v Tax
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTax) SetTo(v Tax) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTax) Get() (v Tax, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTax) Or(d Tax) Tax {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTdTenantName returns new OptTdTenantName with value set to v.
func NewOptTdTenantName(v TdTenantName) OptTdTenantName {
	return OptTdTenantName{
		Value: v,
		Set:   true,
	}
}

// OptTdTenantName is optional TdTenantName.
type OptTdTenantName struct {
	Value TdTenantName
	Set   bool
}

// IsSet returns true if OptTdTenantName was set.
func (o OptTdTenantName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTdTenantName) Reset() {
	var v TdTenantName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTdTenantName) SetTo(v TdTenantName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTdTenantName) Get() (v TdTenantName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTdTenantName) Or(d TdTenantName) TdTenantName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTds2BillAddrLine3 returns new OptTds2BillAddrLine3 with value set to v.
func NewOptTds2BillAddrLine3(v Tds2BillAddrLine3) OptTds2BillAddrLine3 {
	return OptTds2BillAddrLine3{
		Value: v,
		Set:   true,
	}
}

// OptTds2BillAddrLine3 is optional Tds2BillAddrLine3.
type OptTds2BillAddrLine3 struct {
	Value Tds2BillAddrLine3
	Set   bool
}

// IsSet returns true if OptTds2BillAddrLine3 was set.
func (o OptTds2BillAddrLine3) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTds2BillAddrLine3) Reset() {
	var v Tds2BillAddrLine3
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTds2BillAddrLine3) SetTo(v Tds2BillAddrLine3) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTds2BillAddrLine3) Get() (v Tds2BillAddrLine3, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTds2BillAddrLine3) Or(d Tds2BillAddrLine3) Tds2BillAddrLine3 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTds2Status returns new OptTds2Status with value set to v.
func NewOptTds2Status(v Tds2Status) OptTds2Status {
	return OptTds2Status{
		Value: v,
		Set:   true,
	}
}

// OptTds2Status is optional Tds2Status.
type OptTds2Status struct {
	Value Tds2Status
	Set   bool
}

// IsSet returns true if OptTds2Status was set.
func (o OptTds2Status) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTds2Status) Reset() {
	var v Tds2Status
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTds2Status) SetTo(v Tds2Status) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTds2Status) Get() (v Tds2Status, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTds2Status) Or(d Tds2Status) Tds2Status {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptThanksMailSendFlag returns new OptThanksMailSendFlag with value set to v.
func NewOptThanksMailSendFlag(v ThanksMailSendFlag) OptThanksMailSendFlag {
	return OptThanksMailSendFlag{
		Value: v,
		Set:   true,
	}
}

// OptThanksMailSendFlag is optional ThanksMailSendFlag.
type OptThanksMailSendFlag struct {
	Value ThanksMailSendFlag
	Set   bool
}

// IsSet returns true if OptThanksMailSendFlag was set.
func (o OptThanksMailSendFlag) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptThanksMailSendFlag) Reset() {
	var v ThanksMailSendFlag
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptThanksMailSendFlag) SetTo(v ThanksMailSendFlag) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptThanksMailSendFlag) Get() (v ThanksMailSendFlag, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptThanksMailSendFlag) Or(d ThanksMailSendFlag) ThanksMailSendFlag {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptToken returns new OptToken with value set to v.
func NewOptToken(v Token) OptToken {
	return OptToken{
		Value: v,
		Set:   true,
	}
}

// OptToken is optional Token.
type OptToken struct {
	Value Token
	Set   bool
}

// IsSet returns true if OptToken was set.
func (o OptToken) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptToken) Reset() {
	var v Token
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptToken) SetTo(v Token) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptToken) Get() (v Token, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptToken) Or(d Token) Token {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTotalAmount returns new OptTotalAmount with value set to v.
func NewOptTotalAmount(v TotalAmount) OptTotalAmount {
	return OptTotalAmount{
		Value: v,
		Set:   true,
	}
}

// OptTotalAmount is optional TotalAmount.
type OptTotalAmount struct {
	Value TotalAmount
	Set   bool
}

// IsSet returns true if OptTotalAmount was set.
func (o OptTotalAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTotalAmount) Reset() {
	var v TotalAmount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTotalAmount) SetTo(v TotalAmount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTotalAmount) Get() (v TotalAmount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTotalAmount) Or(d TotalAmount) TotalAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUser returns new OptUser with value set to v.
func NewOptUser(v User) OptUser {
	return OptUser{
		Value: v,
		Set:   true,
	}
}

// OptUser is optional User.
type OptUser struct {
	Value User
	Set   bool
}

// IsSet returns true if OptUser was set.
func (o OptUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUser) Reset() {
	var v User
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUser) SetTo(v User) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUser) Get() (v User, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUser) Or(d User) User {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserAccountStatus returns new OptUserAccountStatus with value set to v.
func NewOptUserAccountStatus(v UserAccountStatus) OptUserAccountStatus {
	return OptUserAccountStatus{
		Value: v,
		Set:   true,
	}
}

// OptUserAccountStatus is optional UserAccountStatus.
type OptUserAccountStatus struct {
	Value UserAccountStatus
	Set   bool
}

// IsSet returns true if OptUserAccountStatus was set.
func (o OptUserAccountStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserAccountStatus) Reset() {
	var v UserAccountStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserAccountStatus) SetTo(v UserAccountStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserAccountStatus) Get() (v UserAccountStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserAccountStatus) Or(d UserAccountStatus) UserAccountStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserAgent returns new OptUserAgent with value set to v.
func NewOptUserAgent(v UserAgent) OptUserAgent {
	return OptUserAgent{
		Value: v,
		Set:   true,
	}
}

// OptUserAgent is optional UserAgent.
type OptUserAgent struct {
	Value UserAgent
	Set   bool
}

// IsSet returns true if OptUserAgent was set.
func (o OptUserAgent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserAgent) Reset() {
	var v UserAgent
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserAgent) SetTo(v UserAgent) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserAgent) Get() (v UserAgent, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserAgent) Or(d UserAgent) UserAgent {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserInviteStatus returns new OptUserInviteStatus with value set to v.
func NewOptUserInviteStatus(v UserInviteStatus) OptUserInviteStatus {
	return OptUserInviteStatus{
		Value: v,
		Set:   true,
	}
}

// OptUserInviteStatus is optional UserInviteStatus.
type OptUserInviteStatus struct {
	Value UserInviteStatus
	Set   bool
}

// IsSet returns true if OptUserInviteStatus was set.
func (o OptUserInviteStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserInviteStatus) Reset() {
	var v UserInviteStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserInviteStatus) SetTo(v UserInviteStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserInviteStatus) Get() (v UserInviteStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserInviteStatus) Or(d UserInviteStatus) UserInviteStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserMailAuthStatus returns new OptUserMailAuthStatus with value set to v.
func NewOptUserMailAuthStatus(v UserMailAuthStatus) OptUserMailAuthStatus {
	return OptUserMailAuthStatus{
		Value: v,
		Set:   true,
	}
}

// OptUserMailAuthStatus is optional UserMailAuthStatus.
type OptUserMailAuthStatus struct {
	Value UserMailAuthStatus
	Set   bool
}

// IsSet returns true if OptUserMailAuthStatus was set.
func (o OptUserMailAuthStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserMailAuthStatus) Reset() {
	var v UserMailAuthStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserMailAuthStatus) SetTo(v UserMailAuthStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserMailAuthStatus) Get() (v UserMailAuthStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserMailAuthStatus) Or(d UserMailAuthStatus) UserMailAuthStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserPasswordLockStatus returns new OptUserPasswordLockStatus with value set to v.
func NewOptUserPasswordLockStatus(v UserPasswordLockStatus) OptUserPasswordLockStatus {
	return OptUserPasswordLockStatus{
		Value: v,
		Set:   true,
	}
}

// OptUserPasswordLockStatus is optional UserPasswordLockStatus.
type OptUserPasswordLockStatus struct {
	Value UserPasswordLockStatus
	Set   bool
}

// IsSet returns true if OptUserPasswordLockStatus was set.
func (o OptUserPasswordLockStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserPasswordLockStatus) Reset() {
	var v UserPasswordLockStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserPasswordLockStatus) SetTo(v UserPasswordLockStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserPasswordLockStatus) Get() (v UserPasswordLockStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserPasswordLockStatus) Or(d UserPasswordLockStatus) UserPasswordLockStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserTwoFactorAuthStatus returns new OptUserTwoFactorAuthStatus with value set to v.
func NewOptUserTwoFactorAuthStatus(v UserTwoFactorAuthStatus) OptUserTwoFactorAuthStatus {
	return OptUserTwoFactorAuthStatus{
		Value: v,
		Set:   true,
	}
}

// OptUserTwoFactorAuthStatus is optional UserTwoFactorAuthStatus.
type OptUserTwoFactorAuthStatus struct {
	Value UserTwoFactorAuthStatus
	Set   bool
}

// IsSet returns true if OptUserTwoFactorAuthStatus was set.
func (o OptUserTwoFactorAuthStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserTwoFactorAuthStatus) Reset() {
	var v UserTwoFactorAuthStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserTwoFactorAuthStatus) SetTo(v UserTwoFactorAuthStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserTwoFactorAuthStatus) Get() (v UserTwoFactorAuthStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserTwoFactorAuthStatus) Or(d UserTwoFactorAuthStatus) UserTwoFactorAuthStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserType returns new OptUserType with value set to v.
func NewOptUserType(v UserType) OptUserType {
	return OptUserType{
		Value: v,
		Set:   true,
	}
}

// OptUserType is optional UserType.
type OptUserType struct {
	Value UserType
	Set   bool
}

// IsSet returns true if OptUserType was set.
func (o OptUserType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserType) Reset() {
	var v UserType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserType) SetTo(v UserType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserType) Get() (v UserType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserType) Or(d UserType) UserType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVerified returns new OptVerified with value set to v.
func NewOptVerified(v Verified) OptVerified {
	return OptVerified{
		Value: v,
		Set:   true,
	}
}

// OptVerified is optional Verified.
type OptVerified struct {
	Value Verified
	Set   bool
}

// IsSet returns true if OptVerified was set.
func (o OptVerified) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVerified) Reset() {
	var v Verified
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVerified) SetTo(v Verified) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVerified) Get() (v Verified, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVerified) Or(d Verified) Verified {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWebhookEventCardPayType returns new OptWebhookEventCardPayType with value set to v.
func NewOptWebhookEventCardPayType(v WebhookEventCardPayType) OptWebhookEventCardPayType {
	return OptWebhookEventCardPayType{
		Value: v,
		Set:   true,
	}
}

// OptWebhookEventCardPayType is optional WebhookEventCardPayType.
type OptWebhookEventCardPayType struct {
	Value WebhookEventCardPayType
	Set   bool
}

// IsSet returns true if OptWebhookEventCardPayType was set.
func (o OptWebhookEventCardPayType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWebhookEventCardPayType) Reset() {
	var v WebhookEventCardPayType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWebhookEventCardPayType) SetTo(v WebhookEventCardPayType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWebhookEventCardPayType) Get() (v WebhookEventCardPayType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWebhookEventCardPayType) Or(d WebhookEventCardPayType) WebhookEventCardPayType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWebhookEventCardProcessType returns new OptWebhookEventCardProcessType with value set to v.
func NewOptWebhookEventCardProcessType(v WebhookEventCardProcessType) OptWebhookEventCardProcessType {
	return OptWebhookEventCardProcessType{
		Value: v,
		Set:   true,
	}
}

// OptWebhookEventCardProcessType is optional WebhookEventCardProcessType.
type OptWebhookEventCardProcessType struct {
	Value WebhookEventCardProcessType
	Set   bool
}

// IsSet returns true if OptWebhookEventCardProcessType was set.
func (o OptWebhookEventCardProcessType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWebhookEventCardProcessType) Reset() {
	var v WebhookEventCardProcessType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWebhookEventCardProcessType) SetTo(v WebhookEventCardProcessType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWebhookEventCardProcessType) Get() (v WebhookEventCardProcessType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWebhookEventCardProcessType) Or(d WebhookEventCardProcessType) WebhookEventCardProcessType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWebhookResponseReceive returns new OptWebhookResponseReceive with value set to v.
func NewOptWebhookResponseReceive(v WebhookResponseReceive) OptWebhookResponseReceive {
	return OptWebhookResponseReceive{
		Value: v,
		Set:   true,
	}
}

// OptWebhookResponseReceive is optional WebhookResponseReceive.
type OptWebhookResponseReceive struct {
	Value WebhookResponseReceive
	Set   bool
}

// IsSet returns true if OptWebhookResponseReceive was set.
func (o OptWebhookResponseReceive) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWebhookResponseReceive) Reset() {
	var v WebhookResponseReceive
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWebhookResponseReceive) SetTo(v WebhookResponseReceive) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWebhookResponseReceive) Get() (v WebhookResponseReceive, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWebhookResponseReceive) Or(d WebhookResponseReceive) WebhookResponseReceive {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWebhookSettingPropertiesID returns new OptWebhookSettingPropertiesID with value set to v.
func NewOptWebhookSettingPropertiesID(v WebhookSettingPropertiesID) OptWebhookSettingPropertiesID {
	return OptWebhookSettingPropertiesID{
		Value: v,
		Set:   true,
	}
}

// OptWebhookSettingPropertiesID is optional WebhookSettingPropertiesID.
type OptWebhookSettingPropertiesID struct {
	Value WebhookSettingPropertiesID
	Set   bool
}

// IsSet returns true if OptWebhookSettingPropertiesID was set.
func (o OptWebhookSettingPropertiesID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWebhookSettingPropertiesID) Reset() {
	var v WebhookSettingPropertiesID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWebhookSettingPropertiesID) SetTo(v WebhookSettingPropertiesID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWebhookSettingPropertiesID) Get() (v WebhookSettingPropertiesID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWebhookSettingPropertiesID) Or(d WebhookSettingPropertiesID) WebhookSettingPropertiesID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWinHeight returns new OptWinHeight with value set to v.
func NewOptWinHeight(v WinHeight) OptWinHeight {
	return OptWinHeight{
		Value: v,
		Set:   true,
	}
}

// OptWinHeight is optional WinHeight.
type OptWinHeight struct {
	Value WinHeight
	Set   bool
}

// IsSet returns true if OptWinHeight was set.
func (o OptWinHeight) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWinHeight) Reset() {
	var v WinHeight
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWinHeight) SetTo(v WinHeight) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWinHeight) Get() (v WinHeight, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWinHeight) Or(d WinHeight) WinHeight {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWinWidth returns new OptWinWidth with value set to v.
func NewOptWinWidth(v WinWidth) OptWinWidth {
	return OptWinWidth{
		Value: v,
		Set:   true,
	}
}

// OptWinWidth is optional WinWidth.
type OptWinWidth struct {
	Value WinWidth
	Set   bool
}

// IsSet returns true if OptWinWidth was set.
func (o OptWinWidth) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWinWidth) Reset() {
	var v WinWidth
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWinWidth) SetTo(v WinWidth) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWinWidth) Get() (v WinWidth, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWinWidth) Or(d WinWidth) WinWidth {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptXReqPropertiesAmount returns new OptXReqPropertiesAmount with value set to v.
func NewOptXReqPropertiesAmount(v XReqPropertiesAmount) OptXReqPropertiesAmount {
	return OptXReqPropertiesAmount{
		Value: v,
		Set:   true,
	}
}

// OptXReqPropertiesAmount is optional XReqPropertiesAmount.
type OptXReqPropertiesAmount struct {
	Value XReqPropertiesAmount
	Set   bool
}

// IsSet returns true if OptXReqPropertiesAmount was set.
func (o OptXReqPropertiesAmount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptXReqPropertiesAmount) Reset() {
	var v XReqPropertiesAmount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptXReqPropertiesAmount) SetTo(v XReqPropertiesAmount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptXReqPropertiesAmount) Get() (v XReqPropertiesAmount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptXReqPropertiesAmount) Or(d XReqPropertiesAmount) XReqPropertiesAmount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptXReqPropertiesTax returns new OptXReqPropertiesTax with value set to v.
func NewOptXReqPropertiesTax(v XReqPropertiesTax) OptXReqPropertiesTax {
	return OptXReqPropertiesTax{
		Value: v,
		Set:   true,
	}
}

// OptXReqPropertiesTax is optional XReqPropertiesTax.
type OptXReqPropertiesTax struct {
	Value XReqPropertiesTax
	Set   bool
}

// IsSet returns true if OptXReqPropertiesTax was set.
func (o OptXReqPropertiesTax) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptXReqPropertiesTax) Reset() {
	var v XReqPropertiesTax
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptXReqPropertiesTax) SetTo(v XReqPropertiesTax) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptXReqPropertiesTax) Get() (v XReqPropertiesTax, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptXReqPropertiesTax) Or(d XReqPropertiesTax) XReqPropertiesTax {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type OrderDescription string

type OrderIdSchema string

type OrderSerial string

// 多重支払フラグ\
// この決済に対して複数回支払いが行われた場合`1`になります。
// - `0`: 0回、または1回の支払いが行われた
// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
// Ref: #/components/schemas/overpayment_flag
type OverpaymentFlag string

const (
	OverpaymentFlag0 OverpaymentFlag = "0"
	OverpaymentFlag1 OverpaymentFlag = "1"
)

// AllValues returns all OverpaymentFlag values.
func (OverpaymentFlag) AllValues() []OverpaymentFlag {
	return []OverpaymentFlag{
		OverpaymentFlag0,
		OverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case OverpaymentFlag0:
		return []byte(s), nil
	case OverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OverpaymentFlag) UnmarshalText(data []byte) error {
	switch OverpaymentFlag(data) {
	case OverpaymentFlag0:
		*s = OverpaymentFlag0
		return nil
	case OverpaymentFlag1:
		*s = OverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/POST.ContractsExaminations
type POSTContractsExaminations struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// VISA/Mastercard即時利用 結果
	// - `1`: OK<br /><span
	// class="smallText">即時利用が認められました。VISA/Mastercardブランドの決済受付が可能な状態です。</span>
	// - `2`: NG<br /><span
	// class="smallText">ネガティブチェックにより、fincodeの利用が認められませんでした。</span>
	// - `3`: 保留<br /><span
	// class="smallText">即時利用が認められませんでした。審査は継続して行われます。</span>.
	EnableImmediateUse OptPOSTContractsExaminationsEnableImmediateUse `json:"enable_immediate_use"`
}

// GetShopID returns the value of ShopID.
func (s *POSTContractsExaminations) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetEnableImmediateUse returns the value of EnableImmediateUse.
func (s *POSTContractsExaminations) GetEnableImmediateUse() OptPOSTContractsExaminationsEnableImmediateUse {
	return s.EnableImmediateUse
}

// SetShopID sets the value of ShopID.
func (s *POSTContractsExaminations) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetEnableImmediateUse sets the value of EnableImmediateUse.
func (s *POSTContractsExaminations) SetEnableImmediateUse(val OptPOSTContractsExaminationsEnableImmediateUse) {
	s.EnableImmediateUse = val
}

func (*POSTContractsExaminations) requestProductionEnvironmentRes() {}

// VISA/Mastercard即時利用 結果
// - `1`: OK<br /><span
// class="smallText">即時利用が認められました。VISA/Mastercardブランドの決済受付が可能な状態です。</span>
// - `2`: NG<br /><span
// class="smallText">ネガティブチェックにより、fincodeの利用が認められませんでした。</span>
// - `3`: 保留<br /><span
// class="smallText">即時利用が認められませんでした。審査は継続して行われます。</span>.
type POSTContractsExaminationsEnableImmediateUse float64

const (
	POSTContractsExaminationsEnableImmediateUse1 POSTContractsExaminationsEnableImmediateUse = 1
	POSTContractsExaminationsEnableImmediateUse2 POSTContractsExaminationsEnableImmediateUse = 2
	POSTContractsExaminationsEnableImmediateUse3 POSTContractsExaminationsEnableImmediateUse = 3
)

// AllValues returns all POSTContractsExaminationsEnableImmediateUse values.
func (POSTContractsExaminationsEnableImmediateUse) AllValues() []POSTContractsExaminationsEnableImmediateUse {
	return []POSTContractsExaminationsEnableImmediateUse{
		POSTContractsExaminationsEnableImmediateUse1,
		POSTContractsExaminationsEnableImmediateUse2,
		POSTContractsExaminationsEnableImmediateUse3,
	}
}

// Ref: #/components/schemas/POST.ContractsExaminations.Request
type POSTContractsExaminationsRequestMultipart struct {
	ShopID             OptShopPropertiesID   `json:"shop_id"`
	EnableImmediateUse OptEnableImmediateUse `json:"enable_immediate_use"`
}

// GetShopID returns the value of ShopID.
func (s *POSTContractsExaminationsRequestMultipart) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetEnableImmediateUse returns the value of EnableImmediateUse.
func (s *POSTContractsExaminationsRequestMultipart) GetEnableImmediateUse() OptEnableImmediateUse {
	return s.EnableImmediateUse
}

// SetShopID sets the value of ShopID.
func (s *POSTContractsExaminationsRequestMultipart) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetEnableImmediateUse sets the value of EnableImmediateUse.
func (s *POSTContractsExaminationsRequestMultipart) SetEnableImmediateUse(val OptEnableImmediateUse) {
	s.EnableImmediateUse = val
}

// Ref: #/components/schemas/POST.JoinTenants
type POSTJoinTenants struct {
	ID                 OptShopPropertiesID      `json:"id"`
	ShopName           OptNilShopName           `json:"shop_name"`
	ShopNameKana       OptNilShopNameKana       `json:"shop_name_kana"`
	ShopType           OptNilShopType           `json:"shop_type"`
	PlatformID         OptPlatformID            `json:"platform_id"`
	PlatformName       OptNilPlatformName       `json:"platform_name"`
	SharedCustomerFlag OptNilSharedCustomerFlag `json:"shared_customer_flag"`
	CustomerGroupID    OptNilCustomerGroupID    `json:"customer_group_id"`
	SendMailAddress    OptNilSendMailAddress    `json:"send_mail_address"`
	ShopMailAddress    OptNilShopMailAddress    `json:"shop_mail_address"`
	LogKeepDays        OptNilLogKeepDays        `json:"log_keep_days"`
	APIVersion         OptNilAPIVersion         `json:"api_version"`
	APIKeyDisplayFlag  OptNilAPIKeyDisplayFlag  `json:"api_key_display_flag"`
	Created            OptCreated               `json:"created"`
	Updated            OptNilUpdated            `json:"updated"`
}

// GetID returns the value of ID.
func (s *POSTJoinTenants) GetID() OptShopPropertiesID {
	return s.ID
}

// GetShopName returns the value of ShopName.
func (s *POSTJoinTenants) GetShopName() OptNilShopName {
	return s.ShopName
}

// GetShopNameKana returns the value of ShopNameKana.
func (s *POSTJoinTenants) GetShopNameKana() OptNilShopNameKana {
	return s.ShopNameKana
}

// GetShopType returns the value of ShopType.
func (s *POSTJoinTenants) GetShopType() OptNilShopType {
	return s.ShopType
}

// GetPlatformID returns the value of PlatformID.
func (s *POSTJoinTenants) GetPlatformID() OptPlatformID {
	return s.PlatformID
}

// GetPlatformName returns the value of PlatformName.
func (s *POSTJoinTenants) GetPlatformName() OptNilPlatformName {
	return s.PlatformName
}

// GetSharedCustomerFlag returns the value of SharedCustomerFlag.
func (s *POSTJoinTenants) GetSharedCustomerFlag() OptNilSharedCustomerFlag {
	return s.SharedCustomerFlag
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *POSTJoinTenants) GetCustomerGroupID() OptNilCustomerGroupID {
	return s.CustomerGroupID
}

// GetSendMailAddress returns the value of SendMailAddress.
func (s *POSTJoinTenants) GetSendMailAddress() OptNilSendMailAddress {
	return s.SendMailAddress
}

// GetShopMailAddress returns the value of ShopMailAddress.
func (s *POSTJoinTenants) GetShopMailAddress() OptNilShopMailAddress {
	return s.ShopMailAddress
}

// GetLogKeepDays returns the value of LogKeepDays.
func (s *POSTJoinTenants) GetLogKeepDays() OptNilLogKeepDays {
	return s.LogKeepDays
}

// GetAPIVersion returns the value of APIVersion.
func (s *POSTJoinTenants) GetAPIVersion() OptNilAPIVersion {
	return s.APIVersion
}

// GetAPIKeyDisplayFlag returns the value of APIKeyDisplayFlag.
func (s *POSTJoinTenants) GetAPIKeyDisplayFlag() OptNilAPIKeyDisplayFlag {
	return s.APIKeyDisplayFlag
}

// GetCreated returns the value of Created.
func (s *POSTJoinTenants) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *POSTJoinTenants) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *POSTJoinTenants) SetID(val OptShopPropertiesID) {
	s.ID = val
}

// SetShopName sets the value of ShopName.
func (s *POSTJoinTenants) SetShopName(val OptNilShopName) {
	s.ShopName = val
}

// SetShopNameKana sets the value of ShopNameKana.
func (s *POSTJoinTenants) SetShopNameKana(val OptNilShopNameKana) {
	s.ShopNameKana = val
}

// SetShopType sets the value of ShopType.
func (s *POSTJoinTenants) SetShopType(val OptNilShopType) {
	s.ShopType = val
}

// SetPlatformID sets the value of PlatformID.
func (s *POSTJoinTenants) SetPlatformID(val OptPlatformID) {
	s.PlatformID = val
}

// SetPlatformName sets the value of PlatformName.
func (s *POSTJoinTenants) SetPlatformName(val OptNilPlatformName) {
	s.PlatformName = val
}

// SetSharedCustomerFlag sets the value of SharedCustomerFlag.
func (s *POSTJoinTenants) SetSharedCustomerFlag(val OptNilSharedCustomerFlag) {
	s.SharedCustomerFlag = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *POSTJoinTenants) SetCustomerGroupID(val OptNilCustomerGroupID) {
	s.CustomerGroupID = val
}

// SetSendMailAddress sets the value of SendMailAddress.
func (s *POSTJoinTenants) SetSendMailAddress(val OptNilSendMailAddress) {
	s.SendMailAddress = val
}

// SetShopMailAddress sets the value of ShopMailAddress.
func (s *POSTJoinTenants) SetShopMailAddress(val OptNilShopMailAddress) {
	s.ShopMailAddress = val
}

// SetLogKeepDays sets the value of LogKeepDays.
func (s *POSTJoinTenants) SetLogKeepDays(val OptNilLogKeepDays) {
	s.LogKeepDays = val
}

// SetAPIVersion sets the value of APIVersion.
func (s *POSTJoinTenants) SetAPIVersion(val OptNilAPIVersion) {
	s.APIVersion = val
}

// SetAPIKeyDisplayFlag sets the value of APIKeyDisplayFlag.
func (s *POSTJoinTenants) SetAPIKeyDisplayFlag(val OptNilAPIKeyDisplayFlag) {
	s.APIKeyDisplayFlag = val
}

// SetCreated sets the value of Created.
func (s *POSTJoinTenants) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *POSTJoinTenants) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*POSTJoinTenants) createTenantWithExistingUserRes() {}

// Ref: #/components/schemas/POST.JoinTenants.Request
type POSTJoinTenantsRequest struct {
	Email       POSTJoinTenantsXReqPropertiesEmail `json:"email"`
	Password    XReqPropertiesPassword             `json:"password"`
	TenantURLID TenantURLID                        `json:"tenant_url_id"`
}

// GetEmail returns the value of Email.
func (s *POSTJoinTenantsRequest) GetEmail() POSTJoinTenantsXReqPropertiesEmail {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *POSTJoinTenantsRequest) GetPassword() XReqPropertiesPassword {
	return s.Password
}

// GetTenantURLID returns the value of TenantURLID.
func (s *POSTJoinTenantsRequest) GetTenantURLID() TenantURLID {
	return s.TenantURLID
}

// SetEmail sets the value of Email.
func (s *POSTJoinTenantsRequest) SetEmail(val POSTJoinTenantsXReqPropertiesEmail) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *POSTJoinTenantsRequest) SetPassword(val XReqPropertiesPassword) {
	s.Password = val
}

// SetTenantURLID sets the value of TenantURLID.
func (s *POSTJoinTenantsRequest) SetTenantURLID(val TenantURLID) {
	s.TenantURLID = val
}

type POSTJoinTenantsXReqPropertiesEmail string

// Ref: #/components/schemas/POST.ProviderReserve
type POSTProviderReserve struct {
	// 決済手段追加 申請リスト\
	// \
	// 申請中の決済手段のリストです。.
	ReservationList []POSTProviderReserveReservationListItem `json:"reservation_list"`
}

// GetReservationList returns the value of ReservationList.
func (s *POSTProviderReserve) GetReservationList() []POSTProviderReserveReservationListItem {
	return s.ReservationList
}

// SetReservationList sets the value of ReservationList.
func (s *POSTProviderReserve) SetReservationList(val []POSTProviderReserveReservationListItem) {
	s.ReservationList = val
}

func (*POSTProviderReserve) reserveProviderRes() {}

// Ref: #/components/schemas/POST.ProviderReserve.Request
type POSTProviderReserveRequestMultipart struct {
	Provider Provider `json:"provider"`
}

// GetProvider returns the value of Provider.
func (s *POSTProviderReserveRequestMultipart) GetProvider() Provider {
	return s.Provider
}

// SetProvider sets the value of Provider.
func (s *POSTProviderReserveRequestMultipart) SetProvider(val Provider) {
	s.Provider = val
}

type POSTProviderReserveReservationListItem struct {
	// 追加申請ID.
	ReservationID OptInt              `json:"reservation_id"`
	ShopID        OptShopPropertiesID `json:"shop_id"`
	Provider      OptPaymentProvider  `json:"provider"`
}

// GetReservationID returns the value of ReservationID.
func (s *POSTProviderReserveReservationListItem) GetReservationID() OptInt {
	return s.ReservationID
}

// GetShopID returns the value of ShopID.
func (s *POSTProviderReserveReservationListItem) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetProvider returns the value of Provider.
func (s *POSTProviderReserveReservationListItem) GetProvider() OptPaymentProvider {
	return s.Provider
}

// SetReservationID sets the value of ReservationID.
func (s *POSTProviderReserveReservationListItem) SetReservationID(val OptInt) {
	s.ReservationID = val
}

// SetShopID sets the value of ShopID.
func (s *POSTProviderReserveReservationListItem) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetProvider sets the value of Provider.
func (s *POSTProviderReserveReservationListItem) SetProvider(val OptPaymentProvider) {
	s.Provider = val
}

// Ref: #/components/schemas/POST.TenantEntries
type POSTTenantEntries struct {
	UserData OptUser `json:"user_data"`
	// アクセストークン.
	AccessToken OptString `json:"access_token"`
	// ユーザーの権限情報\
	// \
	// このユーザーが実行可能なエンドポイントとHTTPメソッドの情報.
	Authorities []POSTTenantEntriesAuthoritiesItem `json:"authorities"`
}

// GetUserData returns the value of UserData.
func (s *POSTTenantEntries) GetUserData() OptUser {
	return s.UserData
}

// GetAccessToken returns the value of AccessToken.
func (s *POSTTenantEntries) GetAccessToken() OptString {
	return s.AccessToken
}

// GetAuthorities returns the value of Authorities.
func (s *POSTTenantEntries) GetAuthorities() []POSTTenantEntriesAuthoritiesItem {
	return s.Authorities
}

// SetUserData sets the value of UserData.
func (s *POSTTenantEntries) SetUserData(val OptUser) {
	s.UserData = val
}

// SetAccessToken sets the value of AccessToken.
func (s *POSTTenantEntries) SetAccessToken(val OptString) {
	s.AccessToken = val
}

// SetAuthorities sets the value of Authorities.
func (s *POSTTenantEntries) SetAuthorities(val []POSTTenantEntriesAuthoritiesItem) {
	s.Authorities = val
}

func (*POSTTenantEntries) createTenantWithNewUserRes() {}

type POSTTenantEntriesAuthoritiesItem struct {
	// 権限ID.
	AuthID OptInt `json:"auth_id"`
	// エンドポイント.
	Endpoint OptString `json:"endpoint"`
	// HTTPメソッド.
	Method OptString `json:"method"`
}

// GetAuthID returns the value of AuthID.
func (s *POSTTenantEntriesAuthoritiesItem) GetAuthID() OptInt {
	return s.AuthID
}

// GetEndpoint returns the value of Endpoint.
func (s *POSTTenantEntriesAuthoritiesItem) GetEndpoint() OptString {
	return s.Endpoint
}

// GetMethod returns the value of Method.
func (s *POSTTenantEntriesAuthoritiesItem) GetMethod() OptString {
	return s.Method
}

// SetAuthID sets the value of AuthID.
func (s *POSTTenantEntriesAuthoritiesItem) SetAuthID(val OptInt) {
	s.AuthID = val
}

// SetEndpoint sets the value of Endpoint.
func (s *POSTTenantEntriesAuthoritiesItem) SetEndpoint(val OptString) {
	s.Endpoint = val
}

// SetMethod sets the value of Method.
func (s *POSTTenantEntriesAuthoritiesItem) SetMethod(val OptString) {
	s.Method = val
}

// Ref: #/components/schemas/POST.TenantEntries.Request
type POSTTenantEntriesRequest struct {
	Email       XReqPropertiesEmail `json:"email"`
	Password    Password            `json:"password"`
	Name        XReqPropertiesName  `json:"name"`
	TenantURLID TenantURLID         `json:"tenant_url_id"`
}

// GetEmail returns the value of Email.
func (s *POSTTenantEntriesRequest) GetEmail() XReqPropertiesEmail {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *POSTTenantEntriesRequest) GetPassword() Password {
	return s.Password
}

// GetName returns the value of Name.
func (s *POSTTenantEntriesRequest) GetName() XReqPropertiesName {
	return s.Name
}

// GetTenantURLID returns the value of TenantURLID.
func (s *POSTTenantEntriesRequest) GetTenantURLID() TenantURLID {
	return s.TenantURLID
}

// SetEmail sets the value of Email.
func (s *POSTTenantEntriesRequest) SetEmail(val XReqPropertiesEmail) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *POSTTenantEntriesRequest) SetPassword(val Password) {
	s.Password = val
}

// SetName sets the value of Name.
func (s *POSTTenantEntriesRequest) SetName(val XReqPropertiesName) {
	s.Name = val
}

// SetTenantURLID sets the value of TenantURLID.
func (s *POSTTenantEntriesRequest) SetTenantURLID(val TenantURLID) {
	s.TenantURLID = val
}

// Ref: #/components/schemas/Pagination.QueryParams
type PaginationQueryParams struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
}

// GetPage returns the value of Page.
func (s *PaginationQueryParams) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *PaginationQueryParams) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *PaginationQueryParams) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// SetPage sets the value of Page.
func (s *PaginationQueryParams) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *PaginationQueryParams) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *PaginationQueryParams) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// 依頼書登録のパラメータ.
// Ref: #/components/schemas/paper_application
type PaperApplication struct {
	// ゆうちょ 預金記号.
	PostalAccountNumber1 OptNilString `json:"postal_account_number_1"`
	// ゆうちょ 預金番号.
	PostalAccountNumber2 OptNilString `json:"postal_account_number_2"`
	// 依頼書ID。\
	// 依頼書を管理画面から登録した際に登録者が指定した、依頼書を一意に識別するIDです。\
	// ※プラットフォームショップの場合、プラットフォーム全体で一意である必要があります。.
	RequestFormID OptString `json:"request_form_id"`
}

// GetPostalAccountNumber1 returns the value of PostalAccountNumber1.
func (s *PaperApplication) GetPostalAccountNumber1() OptNilString {
	return s.PostalAccountNumber1
}

// GetPostalAccountNumber2 returns the value of PostalAccountNumber2.
func (s *PaperApplication) GetPostalAccountNumber2() OptNilString {
	return s.PostalAccountNumber2
}

// GetRequestFormID returns the value of RequestFormID.
func (s *PaperApplication) GetRequestFormID() OptString {
	return s.RequestFormID
}

// SetPostalAccountNumber1 sets the value of PostalAccountNumber1.
func (s *PaperApplication) SetPostalAccountNumber1(val OptNilString) {
	s.PostalAccountNumber1 = val
}

// SetPostalAccountNumber2 sets the value of PostalAccountNumber2.
func (s *PaperApplication) SetPostalAccountNumber2(val OptNilString) {
	s.PostalAccountNumber2 = val
}

// SetRequestFormID sets the value of RequestFormID.
func (s *PaperApplication) SetRequestFormID(val OptString) {
	s.RequestFormID = val
}

type Param string

type Password string

// 取引種別\
// この決済に対し決済実行を行った際、仮売上にするか即座に売上確定するか指定します。
// - `AUTH`：仮売上にする
// - `CAPTURE`：即時売上.
// Ref: #/components/schemas/PayPayPaymentJobCode
type PayPayPaymentJobCode string

const (
	PayPayPaymentJobCodeAUTH    PayPayPaymentJobCode = "AUTH"
	PayPayPaymentJobCodeCAPTURE PayPayPaymentJobCode = "CAPTURE"
)

// AllValues returns all PayPayPaymentJobCode values.
func (PayPayPaymentJobCode) AllValues() []PayPayPaymentJobCode {
	return []PayPayPaymentJobCode{
		PayPayPaymentJobCodeAUTH,
		PayPayPaymentJobCodeCAPTURE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PayPayPaymentJobCode) MarshalText() ([]byte, error) {
	switch s {
	case PayPayPaymentJobCodeAUTH:
		return []byte(s), nil
	case PayPayPaymentJobCodeCAPTURE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PayPayPaymentJobCode) UnmarshalText(data []byte) error {
	switch PayPayPaymentJobCode(data) {
	case PayPayPaymentJobCodeAUTH:
		*s = PayPayPaymentJobCodeAUTH
		return nil
	case PayPayPaymentJobCodeCAPTURE:
		*s = PayPayPaymentJobCodeCAPTURE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 決済種別\
// この決済で利用する決済手段です。
// - `Card`: クレジットカード/デビットカード/プリペイドカード
// - `Konbini`: コンビニ決済
// - `Paypay`: PayPay
// - `Applepay`: Apple Pay
// - `Directdebit`: 口座振替
// - `Virtualaccount`: 銀行振込.
// Ref: #/components/schemas/PayType
type PayType string

const (
	PayTypeCard           PayType = "Card"
	PayTypeKonbini        PayType = "Konbini"
	PayTypePaypay         PayType = "Paypay"
	PayTypeApplepay       PayType = "Applepay"
	PayTypeDirectdebit    PayType = "Directdebit"
	PayTypeVirtualaccount PayType = "Virtualaccount"
)

// AllValues returns all PayType values.
func (PayType) AllValues() []PayType {
	return []PayType{
		PayTypeCard,
		PayTypeKonbini,
		PayTypePaypay,
		PayTypeApplepay,
		PayTypeDirectdebit,
		PayTypeVirtualaccount,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PayType) MarshalText() ([]byte, error) {
	switch s {
	case PayTypeCard:
		return []byte(s), nil
	case PayTypeKonbini:
		return []byte(s), nil
	case PayTypePaypay:
		return []byte(s), nil
	case PayTypeApplepay:
		return []byte(s), nil
	case PayTypeDirectdebit:
		return []byte(s), nil
	case PayTypeVirtualaccount:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PayType) UnmarshalText(data []byte) error {
	switch PayType(data) {
	case PayTypeCard:
		*s = PayTypeCard
		return nil
	case PayTypeKonbini:
		*s = PayTypeKonbini
		return nil
	case PayTypePaypay:
		*s = PayTypePaypay
		return nil
	case PayTypeApplepay:
		*s = PayTypeApplepay
		return nil
	case PayTypeDirectdebit:
		*s = PayTypeDirectdebit
		return nil
	case PayTypeVirtualaccount:
		*s = PayTypeVirtualaccount
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.ApplePay.Canceling.Request
type PaymentApplePayCancelingRequest struct {
	PayType  PayType  `json:"pay_type"`
	AccessID AccessID `json:"access_id"`
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayCancelingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayCancelingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayCancelingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayCancelingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.ApplePay.Canceling.Response
type PaymentApplePayCancelingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString              `json:"customer_group_id"`
	ErrorCode       OptErrorCode              `json:"error_code"`
	Created         OptCreated                `json:"created"`
	Updated         OptNilUpdated             `json:"updated"`
	PayType         OptPayType                `json:"pay_type"`
	JobCode         OptApplePayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus          `json:"status"`
	Brand           OptCardBrand              `json:"brand"`
	CardNo          OptCardNo                 `json:"card_no"`
	Expire          OptNilExpire              `json:"expire"`
	HolderName      OptNilHolderName          `json:"holder_name"`
	CardNoHash      OptCardNoHash             `json:"card_no_hash"`
	Method          OptCardPayMethod          `json:"method"`
	PayTimes        OptCardPayTimes           `json:"pay_times"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
	// ※ 閉塞機能.
	SendURL OptNilString `json:"send_url"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentApplePayCancelingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentApplePayCancelingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayCancelingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentApplePayCancelingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentApplePayCancelingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentApplePayCancelingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentApplePayCancelingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentApplePayCancelingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentApplePayCancelingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentApplePayCancelingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentApplePayCancelingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentApplePayCancelingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentApplePayCancelingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentApplePayCancelingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentApplePayCancelingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayCancelingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentApplePayCancelingResponse) GetJobCode() OptApplePayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentApplePayCancelingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetBrand returns the value of Brand.
func (s *PaymentApplePayCancelingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentApplePayCancelingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentApplePayCancelingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentApplePayCancelingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentApplePayCancelingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentApplePayCancelingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentApplePayCancelingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetForward returns the value of Forward.
func (s *PaymentApplePayCancelingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentApplePayCancelingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentApplePayCancelingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentApplePayCancelingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentApplePayCancelingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentApplePayCancelingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// GetSendURL returns the value of SendURL.
func (s *PaymentApplePayCancelingResponse) GetSendURL() OptNilString {
	return s.SendURL
}

// SetShopID sets the value of ShopID.
func (s *PaymentApplePayCancelingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentApplePayCancelingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayCancelingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentApplePayCancelingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentApplePayCancelingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentApplePayCancelingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentApplePayCancelingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentApplePayCancelingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentApplePayCancelingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentApplePayCancelingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentApplePayCancelingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentApplePayCancelingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentApplePayCancelingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentApplePayCancelingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentApplePayCancelingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayCancelingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentApplePayCancelingResponse) SetJobCode(val OptApplePayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentApplePayCancelingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetBrand sets the value of Brand.
func (s *PaymentApplePayCancelingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentApplePayCancelingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentApplePayCancelingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentApplePayCancelingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentApplePayCancelingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentApplePayCancelingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentApplePayCancelingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetForward sets the value of Forward.
func (s *PaymentApplePayCancelingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentApplePayCancelingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentApplePayCancelingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentApplePayCancelingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentApplePayCancelingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentApplePayCancelingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// SetSendURL sets the value of SendURL.
func (s *PaymentApplePayCancelingResponse) SetSendURL(val OptNilString) {
	s.SendURL = val
}

// Ref: #/components/schemas/Payment.ApplePay.Capturing.Request
type PaymentApplePayCapturingRequest struct {
	PayType  PayType  `json:"pay_type"`
	AccessID AccessID `json:"access_id"`
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayCapturingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayCapturingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayCapturingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayCapturingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.ApplePay.Capturing.Response
type PaymentApplePayCapturingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString              `json:"customer_group_id"`
	ErrorCode       OptErrorCode              `json:"error_code"`
	Created         OptCreated                `json:"created"`
	Updated         OptNilUpdated             `json:"updated"`
	PayType         OptPayType                `json:"pay_type"`
	JobCode         OptApplePayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus          `json:"status"`
	Brand           OptCardBrand              `json:"brand"`
	CardNo          OptCardNo                 `json:"card_no"`
	Expire          OptNilExpire              `json:"expire"`
	HolderName      OptNilHolderName          `json:"holder_name"`
	CardNoHash      OptCardNoHash             `json:"card_no_hash"`
	Method          OptCardPayMethod          `json:"method"`
	PayTimes        OptCardPayTimes           `json:"pay_times"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
	// ※ 閉塞機能.
	SendURL OptNilString `json:"send_url"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentApplePayCapturingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentApplePayCapturingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayCapturingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentApplePayCapturingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentApplePayCapturingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentApplePayCapturingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentApplePayCapturingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentApplePayCapturingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentApplePayCapturingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentApplePayCapturingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentApplePayCapturingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentApplePayCapturingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentApplePayCapturingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentApplePayCapturingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentApplePayCapturingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayCapturingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentApplePayCapturingResponse) GetJobCode() OptApplePayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentApplePayCapturingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetBrand returns the value of Brand.
func (s *PaymentApplePayCapturingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentApplePayCapturingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentApplePayCapturingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentApplePayCapturingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentApplePayCapturingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentApplePayCapturingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentApplePayCapturingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetForward returns the value of Forward.
func (s *PaymentApplePayCapturingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentApplePayCapturingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentApplePayCapturingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentApplePayCapturingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentApplePayCapturingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentApplePayCapturingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// GetSendURL returns the value of SendURL.
func (s *PaymentApplePayCapturingResponse) GetSendURL() OptNilString {
	return s.SendURL
}

// SetShopID sets the value of ShopID.
func (s *PaymentApplePayCapturingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentApplePayCapturingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayCapturingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentApplePayCapturingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentApplePayCapturingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentApplePayCapturingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentApplePayCapturingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentApplePayCapturingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentApplePayCapturingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentApplePayCapturingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentApplePayCapturingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentApplePayCapturingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentApplePayCapturingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentApplePayCapturingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentApplePayCapturingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayCapturingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentApplePayCapturingResponse) SetJobCode(val OptApplePayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentApplePayCapturingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetBrand sets the value of Brand.
func (s *PaymentApplePayCapturingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentApplePayCapturingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentApplePayCapturingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentApplePayCapturingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentApplePayCapturingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentApplePayCapturingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentApplePayCapturingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetForward sets the value of Forward.
func (s *PaymentApplePayCapturingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentApplePayCapturingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentApplePayCapturingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentApplePayCapturingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentApplePayCapturingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentApplePayCapturingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// SetSendURL sets the value of SendURL.
func (s *PaymentApplePayCapturingResponse) SetSendURL(val OptNilString) {
	s.SendURL = val
}

// Ref: #/components/schemas/Payment.ApplePay.Creating.Request
type PaymentApplePayCreatingRequest struct {
	ID           OptPaymentPropertiesID `json:"id"`
	PayType      PayType                `json:"pay_type"`
	JobCode      ApplePayPaymentJobCode `json:"job_code"`
	Amount       Amount                 `json:"amount"`
	Tax          OptTax                 `json:"tax"`
	ClientField1 OptNilClientFieldN     `json:"client_field_1"`
	ClientField2 OptNilClientFieldN     `json:"client_field_2"`
	ClientField3 OptNilClientFieldN     `json:"client_field_3"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetID returns the value of ID.
func (s *PaymentApplePayCreatingRequest) GetID() OptPaymentPropertiesID {
	return s.ID
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayCreatingRequest) GetPayType() PayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentApplePayCreatingRequest) GetJobCode() ApplePayPaymentJobCode {
	return s.JobCode
}

// GetAmount returns the value of Amount.
func (s *PaymentApplePayCreatingRequest) GetAmount() Amount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentApplePayCreatingRequest) GetTax() OptTax {
	return s.Tax
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentApplePayCreatingRequest) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentApplePayCreatingRequest) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentApplePayCreatingRequest) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentApplePayCreatingRequest) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetID sets the value of ID.
func (s *PaymentApplePayCreatingRequest) SetID(val OptPaymentPropertiesID) {
	s.ID = val
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayCreatingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentApplePayCreatingRequest) SetJobCode(val ApplePayPaymentJobCode) {
	s.JobCode = val
}

// SetAmount sets the value of Amount.
func (s *PaymentApplePayCreatingRequest) SetAmount(val Amount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentApplePayCreatingRequest) SetTax(val OptTax) {
	s.Tax = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentApplePayCreatingRequest) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentApplePayCreatingRequest) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentApplePayCreatingRequest) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentApplePayCreatingRequest) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.ApplePay.Creating.Response
type PaymentApplePayCreatingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString              `json:"customer_group_id"`
	ErrorCode       OptErrorCode              `json:"error_code"`
	Created         OptCreated                `json:"created"`
	Updated         OptNilUpdated             `json:"updated"`
	PayType         OptPayType                `json:"pay_type"`
	JobCode         OptApplePayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus          `json:"status"`
	Brand           OptCardBrand              `json:"brand"`
	CardNo          OptCardNo                 `json:"card_no"`
	Expire          OptNilExpire              `json:"expire"`
	HolderName      OptNilHolderName          `json:"holder_name"`
	CardNoHash      OptCardNoHash             `json:"card_no_hash"`
	Method          OptCardPayMethod          `json:"method"`
	PayTimes        OptCardPayTimes           `json:"pay_times"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
	// ※ 閉塞機能.
	SendURL OptNilString `json:"send_url"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentApplePayCreatingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentApplePayCreatingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayCreatingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentApplePayCreatingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentApplePayCreatingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentApplePayCreatingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentApplePayCreatingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentApplePayCreatingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentApplePayCreatingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentApplePayCreatingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentApplePayCreatingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentApplePayCreatingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentApplePayCreatingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentApplePayCreatingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentApplePayCreatingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayCreatingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentApplePayCreatingResponse) GetJobCode() OptApplePayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentApplePayCreatingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetBrand returns the value of Brand.
func (s *PaymentApplePayCreatingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentApplePayCreatingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentApplePayCreatingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentApplePayCreatingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentApplePayCreatingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentApplePayCreatingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentApplePayCreatingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetForward returns the value of Forward.
func (s *PaymentApplePayCreatingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentApplePayCreatingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentApplePayCreatingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentApplePayCreatingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentApplePayCreatingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentApplePayCreatingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// GetSendURL returns the value of SendURL.
func (s *PaymentApplePayCreatingResponse) GetSendURL() OptNilString {
	return s.SendURL
}

// SetShopID sets the value of ShopID.
func (s *PaymentApplePayCreatingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentApplePayCreatingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayCreatingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentApplePayCreatingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentApplePayCreatingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentApplePayCreatingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentApplePayCreatingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentApplePayCreatingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentApplePayCreatingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentApplePayCreatingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentApplePayCreatingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentApplePayCreatingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentApplePayCreatingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentApplePayCreatingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentApplePayCreatingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayCreatingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentApplePayCreatingResponse) SetJobCode(val OptApplePayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentApplePayCreatingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetBrand sets the value of Brand.
func (s *PaymentApplePayCreatingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentApplePayCreatingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentApplePayCreatingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentApplePayCreatingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentApplePayCreatingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentApplePayCreatingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentApplePayCreatingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetForward sets the value of Forward.
func (s *PaymentApplePayCreatingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentApplePayCreatingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentApplePayCreatingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentApplePayCreatingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentApplePayCreatingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentApplePayCreatingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// SetSendURL sets the value of SendURL.
func (s *PaymentApplePayCreatingResponse) SetSendURL(val OptNilString) {
	s.SendURL = val
}

// Ref: #/components/schemas/Payment.ApplePay.Executing.Request
type PaymentApplePayExecutingRequest struct {
	PayType    PayType                            `json:"pay_type"`
	AccessID   AccessID                           `json:"access_id"`
	Token      PaymentApplePayXReqPropertiesToken `json:"token"`
	CustomerID OptID                              `json:"customer_id"`
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayExecutingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayExecutingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetToken returns the value of Token.
func (s *PaymentApplePayExecutingRequest) GetToken() PaymentApplePayXReqPropertiesToken {
	return s.Token
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentApplePayExecutingRequest) GetCustomerID() OptID {
	return s.CustomerID
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayExecutingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayExecutingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetToken sets the value of Token.
func (s *PaymentApplePayExecutingRequest) SetToken(val PaymentApplePayXReqPropertiesToken) {
	s.Token = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentApplePayExecutingRequest) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.ApplePay.Executing.Response
type PaymentApplePayExecutingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString              `json:"customer_group_id"`
	ErrorCode       OptErrorCode              `json:"error_code"`
	Created         OptCreated                `json:"created"`
	Updated         OptNilUpdated             `json:"updated"`
	PayType         OptPayType                `json:"pay_type"`
	JobCode         OptApplePayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus          `json:"status"`
	Brand           OptCardBrand              `json:"brand"`
	CardNo          OptCardNo                 `json:"card_no"`
	Expire          OptNilExpire              `json:"expire"`
	HolderName      OptNilHolderName          `json:"holder_name"`
	CardNoHash      OptCardNoHash             `json:"card_no_hash"`
	Method          OptCardPayMethod          `json:"method"`
	PayTimes        OptCardPayTimes           `json:"pay_times"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
	// ※ 閉塞機能.
	SendURL OptNilString `json:"send_url"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentApplePayExecutingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentApplePayExecutingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayExecutingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentApplePayExecutingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentApplePayExecutingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentApplePayExecutingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentApplePayExecutingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentApplePayExecutingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentApplePayExecutingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentApplePayExecutingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentApplePayExecutingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentApplePayExecutingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentApplePayExecutingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentApplePayExecutingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentApplePayExecutingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayExecutingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentApplePayExecutingResponse) GetJobCode() OptApplePayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentApplePayExecutingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetBrand returns the value of Brand.
func (s *PaymentApplePayExecutingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentApplePayExecutingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentApplePayExecutingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentApplePayExecutingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentApplePayExecutingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentApplePayExecutingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentApplePayExecutingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetForward returns the value of Forward.
func (s *PaymentApplePayExecutingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentApplePayExecutingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentApplePayExecutingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentApplePayExecutingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentApplePayExecutingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentApplePayExecutingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// GetSendURL returns the value of SendURL.
func (s *PaymentApplePayExecutingResponse) GetSendURL() OptNilString {
	return s.SendURL
}

// SetShopID sets the value of ShopID.
func (s *PaymentApplePayExecutingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentApplePayExecutingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayExecutingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentApplePayExecutingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentApplePayExecutingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentApplePayExecutingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentApplePayExecutingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentApplePayExecutingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentApplePayExecutingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentApplePayExecutingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentApplePayExecutingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentApplePayExecutingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentApplePayExecutingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentApplePayExecutingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentApplePayExecutingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayExecutingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentApplePayExecutingResponse) SetJobCode(val OptApplePayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentApplePayExecutingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetBrand sets the value of Brand.
func (s *PaymentApplePayExecutingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentApplePayExecutingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentApplePayExecutingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentApplePayExecutingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentApplePayExecutingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentApplePayExecutingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentApplePayExecutingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetForward sets the value of Forward.
func (s *PaymentApplePayExecutingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentApplePayExecutingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentApplePayExecutingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentApplePayExecutingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentApplePayExecutingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentApplePayExecutingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// SetSendURL sets the value of SendURL.
func (s *PaymentApplePayExecutingResponse) SetSendURL(val OptNilString) {
	s.SendURL = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.ApplePay.ListRetrieving.Response
type PaymentApplePayListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString                                    `json:"link_previous"`
	List         []PaymentApplePayListRetrievingResponseListItem `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PaymentApplePayListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PaymentApplePayListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PaymentApplePayListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PaymentApplePayListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PaymentApplePayListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PaymentApplePayListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PaymentApplePayListRetrievingResponse) GetList() []PaymentApplePayListRetrievingResponseListItem {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PaymentApplePayListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PaymentApplePayListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PaymentApplePayListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PaymentApplePayListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PaymentApplePayListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PaymentApplePayListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PaymentApplePayListRetrievingResponse) SetList(val []PaymentApplePayListRetrievingResponseListItem) {
	s.List = val
}

// Merged schema.
type PaymentApplePayListRetrievingResponseListItem struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString              `json:"customer_group_id"`
	ErrorCode       OptErrorCode              `json:"error_code"`
	Created         OptCreated                `json:"created"`
	Updated         OptNilUpdated             `json:"updated"`
	PayType         OptPayType                `json:"pay_type"`
	JobCode         OptApplePayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus          `json:"status"`
	Brand           OptCardBrand              `json:"brand"`
	CardNo          OptCardNo                 `json:"card_no"`
	Expire          OptNilExpire              `json:"expire"`
	HolderName      OptNilHolderName          `json:"holder_name"`
	CardNoHash      OptCardNoHash             `json:"card_no_hash"`
	Method          OptCardPayMethod          `json:"method"`
	PayTimes        OptCardPayTimes           `json:"pay_times"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
	// ※ 閉塞機能.
	SendURL OptNilString `json:"send_url"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentApplePayListRetrievingResponseListItem) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentApplePayListRetrievingResponseListItem) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayListRetrievingResponseListItem) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentApplePayListRetrievingResponseListItem) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentApplePayListRetrievingResponseListItem) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentApplePayListRetrievingResponseListItem) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentApplePayListRetrievingResponseListItem) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentApplePayListRetrievingResponseListItem) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentApplePayListRetrievingResponseListItem) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentApplePayListRetrievingResponseListItem) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentApplePayListRetrievingResponseListItem) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentApplePayListRetrievingResponseListItem) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentApplePayListRetrievingResponseListItem) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentApplePayListRetrievingResponseListItem) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentApplePayListRetrievingResponseListItem) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayListRetrievingResponseListItem) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentApplePayListRetrievingResponseListItem) GetJobCode() OptApplePayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentApplePayListRetrievingResponseListItem) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetBrand returns the value of Brand.
func (s *PaymentApplePayListRetrievingResponseListItem) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentApplePayListRetrievingResponseListItem) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentApplePayListRetrievingResponseListItem) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentApplePayListRetrievingResponseListItem) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentApplePayListRetrievingResponseListItem) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentApplePayListRetrievingResponseListItem) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentApplePayListRetrievingResponseListItem) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetForward returns the value of Forward.
func (s *PaymentApplePayListRetrievingResponseListItem) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentApplePayListRetrievingResponseListItem) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentApplePayListRetrievingResponseListItem) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentApplePayListRetrievingResponseListItem) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentApplePayListRetrievingResponseListItem) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentApplePayListRetrievingResponseListItem) GetItemCode() OptNilString {
	return s.ItemCode
}

// GetSendURL returns the value of SendURL.
func (s *PaymentApplePayListRetrievingResponseListItem) GetSendURL() OptNilString {
	return s.SendURL
}

// SetShopID sets the value of ShopID.
func (s *PaymentApplePayListRetrievingResponseListItem) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentApplePayListRetrievingResponseListItem) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayListRetrievingResponseListItem) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentApplePayListRetrievingResponseListItem) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentApplePayListRetrievingResponseListItem) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentApplePayListRetrievingResponseListItem) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentApplePayListRetrievingResponseListItem) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentApplePayListRetrievingResponseListItem) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentApplePayListRetrievingResponseListItem) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentApplePayListRetrievingResponseListItem) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentApplePayListRetrievingResponseListItem) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentApplePayListRetrievingResponseListItem) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentApplePayListRetrievingResponseListItem) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentApplePayListRetrievingResponseListItem) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentApplePayListRetrievingResponseListItem) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayListRetrievingResponseListItem) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentApplePayListRetrievingResponseListItem) SetJobCode(val OptApplePayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentApplePayListRetrievingResponseListItem) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetBrand sets the value of Brand.
func (s *PaymentApplePayListRetrievingResponseListItem) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentApplePayListRetrievingResponseListItem) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentApplePayListRetrievingResponseListItem) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentApplePayListRetrievingResponseListItem) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentApplePayListRetrievingResponseListItem) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentApplePayListRetrievingResponseListItem) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentApplePayListRetrievingResponseListItem) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetForward sets the value of Forward.
func (s *PaymentApplePayListRetrievingResponseListItem) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentApplePayListRetrievingResponseListItem) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentApplePayListRetrievingResponseListItem) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentApplePayListRetrievingResponseListItem) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentApplePayListRetrievingResponseListItem) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentApplePayListRetrievingResponseListItem) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// SetSendURL sets the value of SendURL.
func (s *PaymentApplePayListRetrievingResponseListItem) SetSendURL(val OptNilString) {
	s.SendURL = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.ApplePay.Retrieving.Response
type PaymentApplePayRetrievingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString              `json:"customer_group_id"`
	ErrorCode       OptErrorCode              `json:"error_code"`
	Created         OptCreated                `json:"created"`
	Updated         OptNilUpdated             `json:"updated"`
	PayType         OptPayType                `json:"pay_type"`
	JobCode         OptApplePayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus          `json:"status"`
	Brand           OptCardBrand              `json:"brand"`
	CardNo          OptCardNo                 `json:"card_no"`
	Expire          OptNilExpire              `json:"expire"`
	HolderName      OptNilHolderName          `json:"holder_name"`
	CardNoHash      OptCardNoHash             `json:"card_no_hash"`
	Method          OptCardPayMethod          `json:"method"`
	PayTimes        OptCardPayTimes           `json:"pay_times"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
	// ※ 閉塞機能.
	SendURL OptNilString `json:"send_url"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentApplePayRetrievingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentApplePayRetrievingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentApplePayRetrievingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentApplePayRetrievingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentApplePayRetrievingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentApplePayRetrievingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentApplePayRetrievingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentApplePayRetrievingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentApplePayRetrievingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentApplePayRetrievingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentApplePayRetrievingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentApplePayRetrievingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentApplePayRetrievingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentApplePayRetrievingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentApplePayRetrievingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentApplePayRetrievingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentApplePayRetrievingResponse) GetJobCode() OptApplePayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentApplePayRetrievingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetBrand returns the value of Brand.
func (s *PaymentApplePayRetrievingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentApplePayRetrievingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentApplePayRetrievingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentApplePayRetrievingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentApplePayRetrievingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentApplePayRetrievingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentApplePayRetrievingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetForward returns the value of Forward.
func (s *PaymentApplePayRetrievingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentApplePayRetrievingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentApplePayRetrievingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentApplePayRetrievingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentApplePayRetrievingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentApplePayRetrievingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// GetSendURL returns the value of SendURL.
func (s *PaymentApplePayRetrievingResponse) GetSendURL() OptNilString {
	return s.SendURL
}

// SetShopID sets the value of ShopID.
func (s *PaymentApplePayRetrievingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentApplePayRetrievingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentApplePayRetrievingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentApplePayRetrievingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentApplePayRetrievingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentApplePayRetrievingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentApplePayRetrievingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentApplePayRetrievingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentApplePayRetrievingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentApplePayRetrievingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentApplePayRetrievingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentApplePayRetrievingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentApplePayRetrievingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentApplePayRetrievingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentApplePayRetrievingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentApplePayRetrievingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentApplePayRetrievingResponse) SetJobCode(val OptApplePayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentApplePayRetrievingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetBrand sets the value of Brand.
func (s *PaymentApplePayRetrievingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentApplePayRetrievingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentApplePayRetrievingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentApplePayRetrievingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentApplePayRetrievingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentApplePayRetrievingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentApplePayRetrievingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetForward sets the value of Forward.
func (s *PaymentApplePayRetrievingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentApplePayRetrievingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentApplePayRetrievingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentApplePayRetrievingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentApplePayRetrievingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentApplePayRetrievingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// SetSendURL sets the value of SendURL.
func (s *PaymentApplePayRetrievingResponse) SetSendURL(val OptNilString) {
	s.SendURL = val
}

type PaymentApplePayXReqPropertiesToken string

// Ref: #/components/schemas/PaymentBulk
type PaymentBulk struct {
	// 一括決済ID.
	ID      OptString                  `json:"id"`
	ShopID  OptShopPropertiesID        `json:"shop_id"`
	PayType OptPaymentBulkPayType      `json:"pay_type"`
	Status  OptPaymentBulkDetailStatus `json:"status"`
	// 一括決済 処理予定日\
	// この一括決済の処理予定日です。\
	// \
	// 形式：`yyyy/MM/dd`.
	ProcessPlanDate OptString `json:"process_plan_date"`
	// 一括決済データファイル名.
	FileName OptString `json:"file_name"`
	// 一括決済 処理開始日時\
	// この一括決済の処理開始日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	ProcessStartDate OptNilString `json:"process_start_date"`
	// 一括決済 処理終了日時\
	// この一括決済の処理終了日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	ProcessEndDate OptNilString `json:"process_end_date"`
	// 一括決済 総件数\
	// この一括決済に含まれる決済の件数です。.
	TotalCount OptInt32 `json:"total_count"`
	// 一括決済 成功件数\
	// この一括決済の処理に成功した決済の件数です。.
	ProcessSuccessCount OptInt32 `json:"process_success_count"`
	// 一括決済 失敗件数\
	// この一括決済の処理に失敗した決済の件数です。.
	ProcessFailureCount OptInt32      `json:"process_failure_count"`
	ErrorCode           OptErrorCode  `json:"error_code"`
	DeleteFlag          OptDeleteFlag `json:"delete_flag"`
	Created             OptCreated    `json:"created"`
	Updated             OptNilUpdated `json:"updated"`
}

// GetID returns the value of ID.
func (s *PaymentBulk) GetID() OptString {
	return s.ID
}

// GetShopID returns the value of ShopID.
func (s *PaymentBulk) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetPayType returns the value of PayType.
func (s *PaymentBulk) GetPayType() OptPaymentBulkPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentBulk) GetStatus() OptPaymentBulkDetailStatus {
	return s.Status
}

// GetProcessPlanDate returns the value of ProcessPlanDate.
func (s *PaymentBulk) GetProcessPlanDate() OptString {
	return s.ProcessPlanDate
}

// GetFileName returns the value of FileName.
func (s *PaymentBulk) GetFileName() OptString {
	return s.FileName
}

// GetProcessStartDate returns the value of ProcessStartDate.
func (s *PaymentBulk) GetProcessStartDate() OptNilString {
	return s.ProcessStartDate
}

// GetProcessEndDate returns the value of ProcessEndDate.
func (s *PaymentBulk) GetProcessEndDate() OptNilString {
	return s.ProcessEndDate
}

// GetTotalCount returns the value of TotalCount.
func (s *PaymentBulk) GetTotalCount() OptInt32 {
	return s.TotalCount
}

// GetProcessSuccessCount returns the value of ProcessSuccessCount.
func (s *PaymentBulk) GetProcessSuccessCount() OptInt32 {
	return s.ProcessSuccessCount
}

// GetProcessFailureCount returns the value of ProcessFailureCount.
func (s *PaymentBulk) GetProcessFailureCount() OptInt32 {
	return s.ProcessFailureCount
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentBulk) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *PaymentBulk) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// GetCreated returns the value of Created.
func (s *PaymentBulk) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentBulk) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *PaymentBulk) SetID(val OptString) {
	s.ID = val
}

// SetShopID sets the value of ShopID.
func (s *PaymentBulk) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetPayType sets the value of PayType.
func (s *PaymentBulk) SetPayType(val OptPaymentBulkPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentBulk) SetStatus(val OptPaymentBulkDetailStatus) {
	s.Status = val
}

// SetProcessPlanDate sets the value of ProcessPlanDate.
func (s *PaymentBulk) SetProcessPlanDate(val OptString) {
	s.ProcessPlanDate = val
}

// SetFileName sets the value of FileName.
func (s *PaymentBulk) SetFileName(val OptString) {
	s.FileName = val
}

// SetProcessStartDate sets the value of ProcessStartDate.
func (s *PaymentBulk) SetProcessStartDate(val OptNilString) {
	s.ProcessStartDate = val
}

// SetProcessEndDate sets the value of ProcessEndDate.
func (s *PaymentBulk) SetProcessEndDate(val OptNilString) {
	s.ProcessEndDate = val
}

// SetTotalCount sets the value of TotalCount.
func (s *PaymentBulk) SetTotalCount(val OptInt32) {
	s.TotalCount = val
}

// SetProcessSuccessCount sets the value of ProcessSuccessCount.
func (s *PaymentBulk) SetProcessSuccessCount(val OptInt32) {
	s.ProcessSuccessCount = val
}

// SetProcessFailureCount sets the value of ProcessFailureCount.
func (s *PaymentBulk) SetProcessFailureCount(val OptInt32) {
	s.ProcessFailureCount = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentBulk) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *PaymentBulk) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

// SetCreated sets the value of Created.
func (s *PaymentBulk) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentBulk) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*PaymentBulk) createPaymentBulkRes() {}

// Ref: #/components/schemas/PaymentBulk.Creating.Request
type PaymentBulkCreatingRequestMultipart struct {
	File OptFile `json:"file"`
}

// GetFile returns the value of File.
func (s *PaymentBulkCreatingRequestMultipart) GetFile() OptFile {
	return s.File
}

// SetFile sets the value of File.
func (s *PaymentBulkCreatingRequestMultipart) SetFile(val OptFile) {
	s.File = val
}

// Ref: #/components/schemas/PaymentBulk.Deleting.Response
type PaymentBulkDeletingResponse struct {
	ID         OptPaymentBulkPropertiesID `json:"id"`
	DeleteFlag OptDeleteFlag              `json:"delete_flag"`
}

// GetID returns the value of ID.
func (s *PaymentBulkDeletingResponse) GetID() OptPaymentBulkPropertiesID {
	return s.ID
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *PaymentBulkDeletingResponse) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// SetID sets the value of ID.
func (s *PaymentBulkDeletingResponse) SetID(val OptPaymentBulkPropertiesID) {
	s.ID = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *PaymentBulkDeletingResponse) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

func (*PaymentBulkDeletingResponse) deletePaymentBulkRes() {}

// Ref: #/components/schemas/PaymentBulkDetail
type PaymentBulkDetail struct {
	ID            OptPaymentBulkPropertiesID `json:"id"`
	ShopID        OptShopPropertiesID        `json:"shop_id"`
	OrderID       OptPaymentPropertiesID     `json:"order_id"`
	AccessID      OptAccessID                `json:"access_id"`
	JobCode       OptCardPaymentJobCode      `json:"job_code"`
	Amount        OptPropertiesAmount        `json:"amount"`
	Tax           OptPropertiesTax           `json:"tax"`
	TotalAmount   OptPropertiesTotalAmount   `json:"total_amount"`
	Method        OptCardPayMethod           `json:"method"`
	PayTimes      OptCardPayTimes            `json:"pay_times"`
	CustomerID    OptID                      `json:"customer_id"`
	CardID        OptPropertiesID            `json:"card_id"`
	ClientField1  OptNilClientFieldN         `json:"client_field_1"`
	ClientField2  OptNilClientFieldN         `json:"client_field_2"`
	ClientField3  OptNilClientFieldN         `json:"client_field_3"`
	ErrorCode     OptErrorCode               `json:"error_code"`
	Created       OptCreated                 `json:"created"`
	Updated       OptNilUpdated              `json:"updated"`
	ItemCode      OptNilItemCode             `json:"item_code"`
	TransactionID OptNilTransactionID        `json:"transaction_id"`
	Approve       OptNilApprove              `json:"approve"`
	Forward       OptNilForward              `json:"forward"`
}

// GetID returns the value of ID.
func (s *PaymentBulkDetail) GetID() OptPaymentBulkPropertiesID {
	return s.ID
}

// GetShopID returns the value of ShopID.
func (s *PaymentBulkDetail) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetOrderID returns the value of OrderID.
func (s *PaymentBulkDetail) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentBulkDetail) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetJobCode returns the value of JobCode.
func (s *PaymentBulkDetail) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetAmount returns the value of Amount.
func (s *PaymentBulkDetail) GetAmount() OptPropertiesAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentBulkDetail) GetTax() OptPropertiesTax {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentBulkDetail) GetTotalAmount() OptPropertiesTotalAmount {
	return s.TotalAmount
}

// GetMethod returns the value of Method.
func (s *PaymentBulkDetail) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentBulkDetail) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentBulkDetail) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCardID returns the value of CardID.
func (s *PaymentBulkDetail) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentBulkDetail) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentBulkDetail) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentBulkDetail) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentBulkDetail) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentBulkDetail) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentBulkDetail) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentBulkDetail) GetItemCode() OptNilItemCode {
	return s.ItemCode
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentBulkDetail) GetTransactionID() OptNilTransactionID {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentBulkDetail) GetApprove() OptNilApprove {
	return s.Approve
}

// GetForward returns the value of Forward.
func (s *PaymentBulkDetail) GetForward() OptNilForward {
	return s.Forward
}

// SetID sets the value of ID.
func (s *PaymentBulkDetail) SetID(val OptPaymentBulkPropertiesID) {
	s.ID = val
}

// SetShopID sets the value of ShopID.
func (s *PaymentBulkDetail) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetOrderID sets the value of OrderID.
func (s *PaymentBulkDetail) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentBulkDetail) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentBulkDetail) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetAmount sets the value of Amount.
func (s *PaymentBulkDetail) SetAmount(val OptPropertiesAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentBulkDetail) SetTax(val OptPropertiesTax) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentBulkDetail) SetTotalAmount(val OptPropertiesTotalAmount) {
	s.TotalAmount = val
}

// SetMethod sets the value of Method.
func (s *PaymentBulkDetail) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentBulkDetail) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentBulkDetail) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCardID sets the value of CardID.
func (s *PaymentBulkDetail) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentBulkDetail) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentBulkDetail) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentBulkDetail) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentBulkDetail) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentBulkDetail) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentBulkDetail) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentBulkDetail) SetItemCode(val OptNilItemCode) {
	s.ItemCode = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentBulkDetail) SetTransactionID(val OptNilTransactionID) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentBulkDetail) SetApprove(val OptNilApprove) {
	s.Approve = val
}

// SetForward sets the value of Forward.
func (s *PaymentBulkDetail) SetForward(val OptNilForward) {
	s.Forward = val
}

// Merged schema.
// Ref: #/components/schemas/PaymentBulkDetail.ListRetrieving.Response
type PaymentBulkDetailListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString `json:"link_previous"`
	ErrorCode    OptErrorCode `json:"error_code"`
	// 一括決済詳細リスト\
	// \
	// 決済1件につき1オブジェクトが格納され、オブジェクト内には決済情報が格納されます。.
	List []PaymentBulkDetail `json:"list"`
	// 一括決済エラー詳細リスト\
	// \
	// エラー1件につき1オブジェクトが格納され、オブジェクト内にはエラーが発生した決済のIDとその決済で発生したエラーのリストが格納されます。.
	ErrorDetail []PaymentBulkErrorDetail `json:"error_detail"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PaymentBulkDetailListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PaymentBulkDetailListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PaymentBulkDetailListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PaymentBulkDetailListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PaymentBulkDetailListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PaymentBulkDetailListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentBulkDetailListRetrievingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetList returns the value of List.
func (s *PaymentBulkDetailListRetrievingResponse) GetList() []PaymentBulkDetail {
	return s.List
}

// GetErrorDetail returns the value of ErrorDetail.
func (s *PaymentBulkDetailListRetrievingResponse) GetErrorDetail() []PaymentBulkErrorDetail {
	return s.ErrorDetail
}

// SetTotalCount sets the value of TotalCount.
func (s *PaymentBulkDetailListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PaymentBulkDetailListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PaymentBulkDetailListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PaymentBulkDetailListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PaymentBulkDetailListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PaymentBulkDetailListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentBulkDetailListRetrievingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetList sets the value of List.
func (s *PaymentBulkDetailListRetrievingResponse) SetList(val []PaymentBulkDetail) {
	s.List = val
}

// SetErrorDetail sets the value of ErrorDetail.
func (s *PaymentBulkDetailListRetrievingResponse) SetErrorDetail(val []PaymentBulkErrorDetail) {
	s.ErrorDetail = val
}

func (*PaymentBulkDetailListRetrievingResponse) retrievePaymentBulkDetailListRes() {}

// ステータス
// - `CHECKED`: チェック済み<br /><span
// class="smallText">データのチェックが完了し、決済処理の実行を待っています。</span>
// - `SUCCEEDED`: 決済成功<br /><span
// class="smallText">この決済の処理においてエラーが発生せず請求が完了しました。</span>
// - `FAILED`: 決済失敗<br /><span
// class="smallText">この決済の処理において1件以上のエラーが発生しました。</span>.
// Ref: #/components/schemas/PaymentBulkDetailStatus
type PaymentBulkDetailStatus string

const (
	PaymentBulkDetailStatusCHECKED   PaymentBulkDetailStatus = "CHECKED"
	PaymentBulkDetailStatusSUCCEEDED PaymentBulkDetailStatus = "SUCCEEDED"
	PaymentBulkDetailStatusFAILED    PaymentBulkDetailStatus = "FAILED"
)

// AllValues returns all PaymentBulkDetailStatus values.
func (PaymentBulkDetailStatus) AllValues() []PaymentBulkDetailStatus {
	return []PaymentBulkDetailStatus{
		PaymentBulkDetailStatusCHECKED,
		PaymentBulkDetailStatusSUCCEEDED,
		PaymentBulkDetailStatusFAILED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentBulkDetailStatus) MarshalText() ([]byte, error) {
	switch s {
	case PaymentBulkDetailStatusCHECKED:
		return []byte(s), nil
	case PaymentBulkDetailStatusSUCCEEDED:
		return []byte(s), nil
	case PaymentBulkDetailStatusFAILED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentBulkDetailStatus) UnmarshalText(data []byte) error {
	switch PaymentBulkDetailStatus(data) {
	case PaymentBulkDetailStatusCHECKED:
		*s = PaymentBulkDetailStatusCHECKED
		return nil
	case PaymentBulkDetailStatusSUCCEEDED:
		*s = PaymentBulkDetailStatusSUCCEEDED
		return nil
	case PaymentBulkDetailStatusFAILED:
		*s = PaymentBulkDetailStatusFAILED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PaymentBulkErrorDetail
type PaymentBulkErrorDetail struct {
	// 行数.
	Number  OptString              `json:"number"`
	OrderID OptPaymentPropertiesID `json:"order_id"`
	Errors  []FincodeAPIError      `json:"errors"`
}

// GetNumber returns the value of Number.
func (s *PaymentBulkErrorDetail) GetNumber() OptString {
	return s.Number
}

// GetOrderID returns the value of OrderID.
func (s *PaymentBulkErrorDetail) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetErrors returns the value of Errors.
func (s *PaymentBulkErrorDetail) GetErrors() []FincodeAPIError {
	return s.Errors
}

// SetNumber sets the value of Number.
func (s *PaymentBulkErrorDetail) SetNumber(val OptString) {
	s.Number = val
}

// SetOrderID sets the value of OrderID.
func (s *PaymentBulkErrorDetail) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetErrors sets the value of Errors.
func (s *PaymentBulkErrorDetail) SetErrors(val []FincodeAPIError) {
	s.Errors = val
}

type PaymentBulkIdSchema string

// Merged schema.
// Ref: #/components/schemas/PaymentBulk.ListRetrieving.Response
type PaymentBulkListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString  `json:"link_previous"`
	List         []PaymentBulk `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PaymentBulkListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PaymentBulkListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PaymentBulkListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PaymentBulkListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PaymentBulkListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PaymentBulkListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PaymentBulkListRetrievingResponse) GetList() []PaymentBulk {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PaymentBulkListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PaymentBulkListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PaymentBulkListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PaymentBulkListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PaymentBulkListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PaymentBulkListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PaymentBulkListRetrievingResponse) SetList(val []PaymentBulk) {
	s.List = val
}

func (*PaymentBulkListRetrievingResponse) retrievePaymentBulkListRes() {}

// 決済種別（一括決済に対応しているもの）
// - `Card`: クレジットカード/デビットカード/プリペイドカード.
// Ref: #/components/schemas/PaymentBulkPayType
type PaymentBulkPayType string

const (
	PaymentBulkPayTypeCard PaymentBulkPayType = "Card"
)

// AllValues returns all PaymentBulkPayType values.
func (PaymentBulkPayType) AllValues() []PaymentBulkPayType {
	return []PaymentBulkPayType{
		PaymentBulkPayTypeCard,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentBulkPayType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentBulkPayTypeCard:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentBulkPayType) UnmarshalText(data []byte) error {
	switch PaymentBulkPayType(data) {
	case PaymentBulkPayTypeCard:
		*s = PaymentBulkPayTypeCard
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type PaymentBulkPropertiesID string

// 一括決済 ステータス
// - `CHECKING`: チェック中<br /><span
// class="smallText">アップロードした一括決済リクエストデータの形式などをチェック中</span>
// - `CHECKED`: チェック済み<br /><span
// class="smallText">データのチェックが完了し、決済処理の実行を待っています。</span>
// - `RUNNING`: 決済処理中<br /><span class="smallText">一括決済処理が実行中</span>
// - `COMPLETED`: 完了
// - `ERROR`: エラー<br /><span
// class="smallText">決済処理中に1件以上のエラーが発生</span>.
// Ref: #/components/schemas/PaymentBulkStatus
type PaymentBulkStatus string

const (
	PaymentBulkStatusCHECKING  PaymentBulkStatus = "CHECKING"
	PaymentBulkStatusCHECKED   PaymentBulkStatus = "CHECKED"
	PaymentBulkStatusRUNNING   PaymentBulkStatus = "RUNNING"
	PaymentBulkStatusCOMPLETED PaymentBulkStatus = "COMPLETED"
	PaymentBulkStatusERROR     PaymentBulkStatus = "ERROR"
)

// AllValues returns all PaymentBulkStatus values.
func (PaymentBulkStatus) AllValues() []PaymentBulkStatus {
	return []PaymentBulkStatus{
		PaymentBulkStatusCHECKING,
		PaymentBulkStatusCHECKED,
		PaymentBulkStatusRUNNING,
		PaymentBulkStatusCOMPLETED,
		PaymentBulkStatusERROR,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentBulkStatus) MarshalText() ([]byte, error) {
	switch s {
	case PaymentBulkStatusCHECKING:
		return []byte(s), nil
	case PaymentBulkStatusCHECKED:
		return []byte(s), nil
	case PaymentBulkStatusRUNNING:
		return []byte(s), nil
	case PaymentBulkStatusCOMPLETED:
		return []byte(s), nil
	case PaymentBulkStatusERROR:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentBulkStatus) UnmarshalText(data []byte) error {
	switch PaymentBulkStatus(data) {
	case PaymentBulkStatusCHECKING:
		*s = PaymentBulkStatusCHECKING
		return nil
	case PaymentBulkStatusCHECKED:
		*s = PaymentBulkStatusCHECKED
		return nil
	case PaymentBulkStatusRUNNING:
		*s = PaymentBulkStatusRUNNING
		return nil
	case PaymentBulkStatusCOMPLETED:
		*s = PaymentBulkStatusCOMPLETED
		return nil
	case PaymentBulkStatusERROR:
		*s = PaymentBulkStatusERROR
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.Card.Canceling.Request
type PaymentCardCancelingRequest struct {
	PayType  PayType  `json:"pay_type"`
	AccessID AccessID `json:"access_id"`
}

// GetPayType returns the value of PayType.
func (s *PaymentCardCancelingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardCancelingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// SetPayType sets the value of PayType.
func (s *PaymentCardCancelingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardCancelingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.Canceling.Response
type PaymentCardCancelingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardCancelingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardCancelingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardCancelingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardCancelingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardCancelingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardCancelingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardCancelingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardCancelingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardCancelingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardCancelingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardCancelingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardCancelingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardCancelingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardCancelingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardCancelingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardCancelingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardCancelingResponse) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardCancelingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardCancelingResponse) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardCancelingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardCancelingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardCancelingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardCancelingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardCancelingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardCancelingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardCancelingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardCancelingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardCancelingResponse) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardCancelingResponse) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardCancelingResponse) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardCancelingResponse) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardCancelingResponse) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardCancelingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardCancelingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardCancelingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardCancelingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardCancelingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardCancelingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardCancelingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardCancelingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardCancelingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardCancelingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardCancelingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardCancelingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardCancelingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardCancelingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardCancelingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardCancelingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardCancelingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardCancelingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardCancelingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardCancelingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardCancelingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardCancelingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardCancelingResponse) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardCancelingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardCancelingResponse) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardCancelingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardCancelingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardCancelingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardCancelingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardCancelingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardCancelingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardCancelingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardCancelingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardCancelingResponse) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardCancelingResponse) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardCancelingResponse) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardCancelingResponse) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardCancelingResponse) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardCancelingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardCancelingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardCancelingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardCancelingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardCancelingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardCancelingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// Ref: #/components/schemas/Payment.Card.Capturing.Request
type PaymentCardCapturingRequest struct {
	PayType  PayType          `json:"pay_type"`
	AccessID AccessID         `json:"access_id"`
	Method   OptCardPayMethod `json:"method"`
	PayTimes OptCardPayTimes  `json:"pay_times"`
}

// GetPayType returns the value of PayType.
func (s *PaymentCardCapturingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardCapturingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetMethod returns the value of Method.
func (s *PaymentCardCapturingRequest) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardCapturingRequest) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// SetPayType sets the value of PayType.
func (s *PaymentCardCapturingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardCapturingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardCapturingRequest) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardCapturingRequest) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.Capturing.Response
type PaymentCardCapturingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardCapturingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardCapturingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardCapturingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardCapturingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardCapturingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardCapturingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardCapturingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardCapturingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardCapturingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardCapturingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardCapturingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardCapturingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardCapturingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardCapturingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardCapturingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardCapturingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardCapturingResponse) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardCapturingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardCapturingResponse) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardCapturingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardCapturingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardCapturingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardCapturingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardCapturingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardCapturingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardCapturingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardCapturingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardCapturingResponse) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardCapturingResponse) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardCapturingResponse) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardCapturingResponse) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardCapturingResponse) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardCapturingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardCapturingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardCapturingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardCapturingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardCapturingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardCapturingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardCapturingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardCapturingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardCapturingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardCapturingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardCapturingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardCapturingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardCapturingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardCapturingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardCapturingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardCapturingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardCapturingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardCapturingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardCapturingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardCapturingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardCapturingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardCapturingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardCapturingResponse) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardCapturingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardCapturingResponse) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardCapturingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardCapturingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardCapturingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardCapturingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardCapturingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardCapturingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardCapturingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardCapturingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardCapturingResponse) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardCapturingResponse) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardCapturingResponse) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardCapturingResponse) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardCapturingResponse) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardCapturingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardCapturingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardCapturingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardCapturingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardCapturingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardCapturingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// Ref: #/components/schemas/Payment.Card.ChangingAmount.Request
type PaymentCardChangingAmountRequest struct {
	PayType  PayType            `json:"pay_type"`
	AccessID AccessID           `json:"access_id"`
	Amount   Amount             `json:"amount"`
	Tax      OptTax             `json:"tax"`
	JobCode  CardPaymentJobCode `json:"job_code"`
}

// GetPayType returns the value of PayType.
func (s *PaymentCardChangingAmountRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardChangingAmountRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardChangingAmountRequest) GetAmount() Amount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardChangingAmountRequest) GetTax() OptTax {
	return s.Tax
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardChangingAmountRequest) GetJobCode() CardPaymentJobCode {
	return s.JobCode
}

// SetPayType sets the value of PayType.
func (s *PaymentCardChangingAmountRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardChangingAmountRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardChangingAmountRequest) SetAmount(val Amount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardChangingAmountRequest) SetTax(val OptTax) {
	s.Tax = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardChangingAmountRequest) SetJobCode(val CardPaymentJobCode) {
	s.JobCode = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.ChangingAmount.Response
type PaymentCardChangingAmountResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardChangingAmountResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardChangingAmountResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardChangingAmountResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardChangingAmountResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardChangingAmountResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardChangingAmountResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardChangingAmountResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardChangingAmountResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardChangingAmountResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardChangingAmountResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardChangingAmountResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardChangingAmountResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardChangingAmountResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardChangingAmountResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardChangingAmountResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardChangingAmountResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardChangingAmountResponse) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardChangingAmountResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardChangingAmountResponse) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardChangingAmountResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardChangingAmountResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardChangingAmountResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardChangingAmountResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardChangingAmountResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardChangingAmountResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardChangingAmountResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardChangingAmountResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardChangingAmountResponse) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardChangingAmountResponse) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardChangingAmountResponse) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardChangingAmountResponse) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardChangingAmountResponse) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardChangingAmountResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardChangingAmountResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardChangingAmountResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardChangingAmountResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardChangingAmountResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardChangingAmountResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardChangingAmountResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardChangingAmountResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardChangingAmountResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardChangingAmountResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardChangingAmountResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardChangingAmountResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardChangingAmountResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardChangingAmountResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardChangingAmountResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardChangingAmountResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardChangingAmountResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardChangingAmountResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardChangingAmountResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardChangingAmountResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardChangingAmountResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardChangingAmountResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardChangingAmountResponse) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardChangingAmountResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardChangingAmountResponse) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardChangingAmountResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardChangingAmountResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardChangingAmountResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardChangingAmountResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardChangingAmountResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardChangingAmountResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardChangingAmountResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardChangingAmountResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardChangingAmountResponse) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardChangingAmountResponse) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardChangingAmountResponse) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardChangingAmountResponse) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardChangingAmountResponse) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardChangingAmountResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardChangingAmountResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardChangingAmountResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardChangingAmountResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardChangingAmountResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardChangingAmountResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// Ref: #/components/schemas/Payment.Card.Creating.Request
type PaymentCardCreatingRequest struct {
	ID           OptPaymentPropertiesID `json:"id"`
	PayType      PayType                `json:"pay_type"`
	JobCode      CardPaymentJobCode     `json:"job_code"`
	Amount       OptAmount              `json:"amount"`
	Tax          OptTax                 `json:"tax"`
	TdsType      OptNilTdsType          `json:"tds_type"`
	Tds2Type     OptNilTds2Type         `json:"tds2_type"`
	TdTenantName OptTdTenantName        `json:"td_tenant_name"`
	ClientField1 OptNilClientFieldN     `json:"client_field_1"`
	ClientField2 OptNilClientFieldN     `json:"client_field_2"`
	ClientField3 OptNilClientFieldN     `json:"client_field_3"`
}

// GetID returns the value of ID.
func (s *PaymentCardCreatingRequest) GetID() OptPaymentPropertiesID {
	return s.ID
}

// GetPayType returns the value of PayType.
func (s *PaymentCardCreatingRequest) GetPayType() PayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardCreatingRequest) GetJobCode() CardPaymentJobCode {
	return s.JobCode
}

// GetAmount returns the value of Amount.
func (s *PaymentCardCreatingRequest) GetAmount() OptAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardCreatingRequest) GetTax() OptTax {
	return s.Tax
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardCreatingRequest) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardCreatingRequest) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTdTenantName returns the value of TdTenantName.
func (s *PaymentCardCreatingRequest) GetTdTenantName() OptTdTenantName {
	return s.TdTenantName
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardCreatingRequest) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardCreatingRequest) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardCreatingRequest) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// SetID sets the value of ID.
func (s *PaymentCardCreatingRequest) SetID(val OptPaymentPropertiesID) {
	s.ID = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardCreatingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardCreatingRequest) SetJobCode(val CardPaymentJobCode) {
	s.JobCode = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardCreatingRequest) SetAmount(val OptAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardCreatingRequest) SetTax(val OptTax) {
	s.Tax = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardCreatingRequest) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardCreatingRequest) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTdTenantName sets the value of TdTenantName.
func (s *PaymentCardCreatingRequest) SetTdTenantName(val OptTdTenantName) {
	s.TdTenantName = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardCreatingRequest) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardCreatingRequest) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardCreatingRequest) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.Creating.Response
type PaymentCardCreatingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardCreatingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardCreatingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardCreatingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardCreatingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardCreatingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardCreatingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardCreatingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardCreatingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardCreatingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardCreatingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardCreatingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardCreatingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardCreatingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardCreatingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardCreatingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardCreatingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardCreatingResponse) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardCreatingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardCreatingResponse) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardCreatingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardCreatingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardCreatingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardCreatingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardCreatingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardCreatingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardCreatingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardCreatingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardCreatingResponse) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardCreatingResponse) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardCreatingResponse) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardCreatingResponse) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardCreatingResponse) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardCreatingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardCreatingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardCreatingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardCreatingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardCreatingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardCreatingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardCreatingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardCreatingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardCreatingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardCreatingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardCreatingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardCreatingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardCreatingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardCreatingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardCreatingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardCreatingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardCreatingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardCreatingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardCreatingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardCreatingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardCreatingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardCreatingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardCreatingResponse) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardCreatingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardCreatingResponse) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardCreatingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardCreatingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardCreatingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardCreatingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardCreatingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardCreatingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardCreatingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardCreatingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardCreatingResponse) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardCreatingResponse) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardCreatingResponse) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardCreatingResponse) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardCreatingResponse) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardCreatingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardCreatingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardCreatingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardCreatingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardCreatingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardCreatingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// Ref: #/components/schemas/Payment.Card.ExecutingAfter3DS.Request
type PaymentCardExecutingAfter3DSRequest struct {
	PayType  PayType  `json:"pay_type"`
	AccessID AccessID `json:"access_id"`
	// ※ 閉塞機能\
	// 3Dセキュアサービス結果電文\
	// \
	// 3Dセキュア1.0利用時のみ必須。.
	//
	// Deprecated: schema marks this property as deprecated.
	PaRes OptString `json:"pa_res"`
}

// GetPayType returns the value of PayType.
func (s *PaymentCardExecutingAfter3DSRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardExecutingAfter3DSRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetPaRes returns the value of PaRes.
func (s *PaymentCardExecutingAfter3DSRequest) GetPaRes() OptString {
	return s.PaRes
}

// SetPayType sets the value of PayType.
func (s *PaymentCardExecutingAfter3DSRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardExecutingAfter3DSRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetPaRes sets the value of PaRes.
func (s *PaymentCardExecutingAfter3DSRequest) SetPaRes(val OptString) {
	s.PaRes = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.ExecutingAfter3DS.Response
type PaymentCardExecutingAfter3DSResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardExecutingAfter3DSResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardExecutingAfter3DSResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardExecutingAfter3DSResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardExecutingAfter3DSResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardExecutingAfter3DSResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardExecutingAfter3DSResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardExecutingAfter3DSResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardExecutingAfter3DSResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardExecutingAfter3DSResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardExecutingAfter3DSResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardExecutingAfter3DSResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardExecutingAfter3DSResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardExecutingAfter3DSResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardExecutingAfter3DSResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardExecutingAfter3DSResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardExecutingAfter3DSResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardExecutingAfter3DSResponse) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardExecutingAfter3DSResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardExecutingAfter3DSResponse) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardExecutingAfter3DSResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardExecutingAfter3DSResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardExecutingAfter3DSResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardExecutingAfter3DSResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardExecutingAfter3DSResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardExecutingAfter3DSResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardExecutingAfter3DSResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardExecutingAfter3DSResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardExecutingAfter3DSResponse) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardExecutingAfter3DSResponse) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardExecutingAfter3DSResponse) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardExecutingAfter3DSResponse) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardExecutingAfter3DSResponse) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardExecutingAfter3DSResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardExecutingAfter3DSResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardExecutingAfter3DSResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardExecutingAfter3DSResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardExecutingAfter3DSResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardExecutingAfter3DSResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardExecutingAfter3DSResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardExecutingAfter3DSResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardExecutingAfter3DSResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardExecutingAfter3DSResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardExecutingAfter3DSResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardExecutingAfter3DSResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardExecutingAfter3DSResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardExecutingAfter3DSResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardExecutingAfter3DSResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardExecutingAfter3DSResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardExecutingAfter3DSResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardExecutingAfter3DSResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardExecutingAfter3DSResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardExecutingAfter3DSResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardExecutingAfter3DSResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardExecutingAfter3DSResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardExecutingAfter3DSResponse) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardExecutingAfter3DSResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardExecutingAfter3DSResponse) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardExecutingAfter3DSResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardExecutingAfter3DSResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardExecutingAfter3DSResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardExecutingAfter3DSResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardExecutingAfter3DSResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardExecutingAfter3DSResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardExecutingAfter3DSResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardExecutingAfter3DSResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardExecutingAfter3DSResponse) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardExecutingAfter3DSResponse) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardExecutingAfter3DSResponse) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardExecutingAfter3DSResponse) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardExecutingAfter3DSResponse) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardExecutingAfter3DSResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardExecutingAfter3DSResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardExecutingAfter3DSResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardExecutingAfter3DSResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardExecutingAfter3DSResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardExecutingAfter3DSResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

func (*PaymentCardExecutingAfter3DSResponse) executePaymentAfter3DSecureRes() {}

// Ref: #/components/schemas/Payment.Card.Executing.Request
type PaymentCardExecutingRequest struct {
	PayType                   PayType                         `json:"pay_type"`
	AccessID                  AccessID                        `json:"access_id"`
	Token                     OptToken                        `json:"token"`
	CustomerID                OptID                           `json:"customer_id"`
	CardID                    OptPropertiesID                 `json:"card_id"`
	Method                    OptCardPayMethod                `json:"method"`
	PayTimes                  OptCardPayTimes                 `json:"pay_times"`
	Tds2RetURL                OptNilTds2RetURL                `json:"tds2_ret_url"`
	Tds2ChAccChange           OptNilTds2ChAccChange           `json:"tds2_ch_acc_change"`
	Tds2ChAccDate             OptNilTds2ChAccDate             `json:"tds2_ch_acc_date"`
	Tds2ChAccPwChange         OptNilTds2ChAccPwChange         `json:"tds2_ch_acc_pw_change"`
	Tds2NbPurchaseAccount     OptNilTds2NbPurchaseAccount     `json:"tds2_nb_purchase_account"`
	Tds2PaymentAccAge         OptNilTds2PaymentAccAge         `json:"tds2_payment_acc_age"`
	Tds2ProvisionAttemptsDay  OptNilTds2ProvisionAttemptsDay  `json:"tds2_provision_attempts_day"`
	Tds2ShipAddressUsage      OptNilTds2ShipAddressUsage      `json:"tds2_ship_address_usage"`
	Tds2ShipNameInd           OptNilTds2ShipNameInd           `json:"tds2_ship_name_ind"`
	Tds2SuspiciousAccActivity OptNilTds2SuspiciousAccActivity `json:"tds2_suspicious_acc_activity"`
	Tds2TxnActivityDay        OptNilTds2TxnActivityDay        `json:"tds2_txn_activity_day"`
	Tds2TxnActivityYear       OptNilTds2TxnActivityYear       `json:"tds2_txn_activity_year"`
	Tds2ThreeDsReqAuthData    OptNilTds2ThreeDsReqAuthData    `json:"tds2_three_ds_req_auth_data"`
	Tds2ThreeDsReqAuthMethod  OptNilTds2ThreeDsReqAuthMethod  `json:"tds2_three_ds_req_auth_method"`
	Tds2AddrMatch             OptNilTds2AddrMatch             `json:"tds2_addr_match"`
	Tds2BillAddrCountry       OptNilTds2BillAddrCountry       `json:"tds2_bill_addr_country"`
	Tds2BillAddrState         OptNilTds2BillAddrState         `json:"tds2_bill_addr_state"`
	Tds2BillAddrCity          OptNilTds2BillAddrCity          `json:"tds2_bill_addr_city"`
	Tds2BillAddrLine1         OptNilTds2BillAddrLine1         `json:"tds2_bill_addr_line_1"`
	Tds2BillAddrLine2         OptNilTds2BillAddrLine2         `json:"tds2_bill_addr_line_2"`
	Tds2BillAddrLine3         OptTds2BillAddrLine3            `json:"tds2_bill_addr_line_3"`
	Tds2BillAddrPostCode      OptNilTds2BillAddrPostCode      `json:"tds2_bill_addr_post_code"`
	Tds2ShipAddrCountry       OptNilTds2ShipAddrCountry       `json:"tds2_ship_addr_country"`
	Tds2ShipAddrState         OptNilTds2ShipAddrState         `json:"tds2_ship_addr_state"`
	Tds2ShipAddrCity          OptNilTds2ShipAddrCity          `json:"tds2_ship_addr_city"`
	Tds2ShipAddrLine1         OptNilTds2ShipAddrLine1         `json:"tds2_ship_addr_line_1"`
	Tds2ShipAddrLine2         OptNilTds2ShipAddrLine2         `json:"tds2_ship_addr_line_2"`
	Tds2ShipAddrLine3         OptNilTds2ShipAddrLine3         `json:"tds2_ship_addr_line_3"`
	Tds2ShipAddrPostCode      OptNilTds2ShipAddrPostCode      `json:"tds2_ship_addr_post_code"`
	Tds2ShipInd               OptNilTds2ShipInd               `json:"tds2_ship_ind"`
	Tds2DeliveryEmailAddress  OptNilTds2DeliveryEmailAddress  `json:"tds2_delivery_email_address"`
	Tds2HomePhoneCc           OptNilTds2HomePhoneCc           `json:"tds2_home_phone_cc"`
	Tds2HomePhoneNo           OptNilTds2HomePhoneNo           `json:"tds2_home_phone_no"`
	Tds2MobilePhoneCc         OptNilTds2MobilePhoneCc         `json:"tds2_mobile_phone_cc"`
	Tds2MobilePhoneNo         OptNilTds2MobilePhoneNo         `json:"tds2_mobile_phone_no"`
	Tds2WorkPhoneCc           OptNilTds2WorkPhoneCc           `json:"tds2_work_phone_cc"`
	Tds2WorkPhoneNo           OptNilTds2WorkPhoneNo           `json:"tds2_work_phone_no"`
	Tds2DeliveryTimeframe     OptNilTds2DeliveryTimeframe     `json:"tds2_delivery_timeframe"`
	Tds2PreOrderDate          OptNilTds2PreOrderDate          `json:"tds2_pre_order_date"`
	Tds2PreOrderPurchaseInd   OptNilTds2PreOrderPurchaseInd   `json:"tds2_pre_order_purchase_ind"`
	Tds2ReorderItemsInd       OptNilTds2ReorderItemsInd       `json:"tds2_reorder_items_ind"`
	Tds2RecurringExpiry       OptNilTds2RecurringExpiry       `json:"tds2_recurring_expiry"`
	Tds2RecurringFrequency    OptNilTds2RecurringFrequency    `json:"tds2_recurring_frequency"`
	Tds2GiftCardAmount        OptNilTds2GiftCardAmount        `json:"tds2_gift_card_amount"`
	Tds2GiftCardCount         OptNilTds2GiftCardCount         `json:"tds2_gift_card_count"`
	Tds2GiftCardCurr          OptNilTds2GiftCardCurr          `json:"tds2_gift_card_curr"`
}

// GetPayType returns the value of PayType.
func (s *PaymentCardExecutingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardExecutingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetToken returns the value of Token.
func (s *PaymentCardExecutingRequest) GetToken() OptToken {
	return s.Token
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardExecutingRequest) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCardID returns the value of CardID.
func (s *PaymentCardExecutingRequest) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetMethod returns the value of Method.
func (s *PaymentCardExecutingRequest) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardExecutingRequest) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardExecutingRequest) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2ChAccChange returns the value of Tds2ChAccChange.
func (s *PaymentCardExecutingRequest) GetTds2ChAccChange() OptNilTds2ChAccChange {
	return s.Tds2ChAccChange
}

// GetTds2ChAccDate returns the value of Tds2ChAccDate.
func (s *PaymentCardExecutingRequest) GetTds2ChAccDate() OptNilTds2ChAccDate {
	return s.Tds2ChAccDate
}

// GetTds2ChAccPwChange returns the value of Tds2ChAccPwChange.
func (s *PaymentCardExecutingRequest) GetTds2ChAccPwChange() OptNilTds2ChAccPwChange {
	return s.Tds2ChAccPwChange
}

// GetTds2NbPurchaseAccount returns the value of Tds2NbPurchaseAccount.
func (s *PaymentCardExecutingRequest) GetTds2NbPurchaseAccount() OptNilTds2NbPurchaseAccount {
	return s.Tds2NbPurchaseAccount
}

// GetTds2PaymentAccAge returns the value of Tds2PaymentAccAge.
func (s *PaymentCardExecutingRequest) GetTds2PaymentAccAge() OptNilTds2PaymentAccAge {
	return s.Tds2PaymentAccAge
}

// GetTds2ProvisionAttemptsDay returns the value of Tds2ProvisionAttemptsDay.
func (s *PaymentCardExecutingRequest) GetTds2ProvisionAttemptsDay() OptNilTds2ProvisionAttemptsDay {
	return s.Tds2ProvisionAttemptsDay
}

// GetTds2ShipAddressUsage returns the value of Tds2ShipAddressUsage.
func (s *PaymentCardExecutingRequest) GetTds2ShipAddressUsage() OptNilTds2ShipAddressUsage {
	return s.Tds2ShipAddressUsage
}

// GetTds2ShipNameInd returns the value of Tds2ShipNameInd.
func (s *PaymentCardExecutingRequest) GetTds2ShipNameInd() OptNilTds2ShipNameInd {
	return s.Tds2ShipNameInd
}

// GetTds2SuspiciousAccActivity returns the value of Tds2SuspiciousAccActivity.
func (s *PaymentCardExecutingRequest) GetTds2SuspiciousAccActivity() OptNilTds2SuspiciousAccActivity {
	return s.Tds2SuspiciousAccActivity
}

// GetTds2TxnActivityDay returns the value of Tds2TxnActivityDay.
func (s *PaymentCardExecutingRequest) GetTds2TxnActivityDay() OptNilTds2TxnActivityDay {
	return s.Tds2TxnActivityDay
}

// GetTds2TxnActivityYear returns the value of Tds2TxnActivityYear.
func (s *PaymentCardExecutingRequest) GetTds2TxnActivityYear() OptNilTds2TxnActivityYear {
	return s.Tds2TxnActivityYear
}

// GetTds2ThreeDsReqAuthData returns the value of Tds2ThreeDsReqAuthData.
func (s *PaymentCardExecutingRequest) GetTds2ThreeDsReqAuthData() OptNilTds2ThreeDsReqAuthData {
	return s.Tds2ThreeDsReqAuthData
}

// GetTds2ThreeDsReqAuthMethod returns the value of Tds2ThreeDsReqAuthMethod.
func (s *PaymentCardExecutingRequest) GetTds2ThreeDsReqAuthMethod() OptNilTds2ThreeDsReqAuthMethod {
	return s.Tds2ThreeDsReqAuthMethod
}

// GetTds2AddrMatch returns the value of Tds2AddrMatch.
func (s *PaymentCardExecutingRequest) GetTds2AddrMatch() OptNilTds2AddrMatch {
	return s.Tds2AddrMatch
}

// GetTds2BillAddrCountry returns the value of Tds2BillAddrCountry.
func (s *PaymentCardExecutingRequest) GetTds2BillAddrCountry() OptNilTds2BillAddrCountry {
	return s.Tds2BillAddrCountry
}

// GetTds2BillAddrState returns the value of Tds2BillAddrState.
func (s *PaymentCardExecutingRequest) GetTds2BillAddrState() OptNilTds2BillAddrState {
	return s.Tds2BillAddrState
}

// GetTds2BillAddrCity returns the value of Tds2BillAddrCity.
func (s *PaymentCardExecutingRequest) GetTds2BillAddrCity() OptNilTds2BillAddrCity {
	return s.Tds2BillAddrCity
}

// GetTds2BillAddrLine1 returns the value of Tds2BillAddrLine1.
func (s *PaymentCardExecutingRequest) GetTds2BillAddrLine1() OptNilTds2BillAddrLine1 {
	return s.Tds2BillAddrLine1
}

// GetTds2BillAddrLine2 returns the value of Tds2BillAddrLine2.
func (s *PaymentCardExecutingRequest) GetTds2BillAddrLine2() OptNilTds2BillAddrLine2 {
	return s.Tds2BillAddrLine2
}

// GetTds2BillAddrLine3 returns the value of Tds2BillAddrLine3.
func (s *PaymentCardExecutingRequest) GetTds2BillAddrLine3() OptTds2BillAddrLine3 {
	return s.Tds2BillAddrLine3
}

// GetTds2BillAddrPostCode returns the value of Tds2BillAddrPostCode.
func (s *PaymentCardExecutingRequest) GetTds2BillAddrPostCode() OptNilTds2BillAddrPostCode {
	return s.Tds2BillAddrPostCode
}

// GetTds2ShipAddrCountry returns the value of Tds2ShipAddrCountry.
func (s *PaymentCardExecutingRequest) GetTds2ShipAddrCountry() OptNilTds2ShipAddrCountry {
	return s.Tds2ShipAddrCountry
}

// GetTds2ShipAddrState returns the value of Tds2ShipAddrState.
func (s *PaymentCardExecutingRequest) GetTds2ShipAddrState() OptNilTds2ShipAddrState {
	return s.Tds2ShipAddrState
}

// GetTds2ShipAddrCity returns the value of Tds2ShipAddrCity.
func (s *PaymentCardExecutingRequest) GetTds2ShipAddrCity() OptNilTds2ShipAddrCity {
	return s.Tds2ShipAddrCity
}

// GetTds2ShipAddrLine1 returns the value of Tds2ShipAddrLine1.
func (s *PaymentCardExecutingRequest) GetTds2ShipAddrLine1() OptNilTds2ShipAddrLine1 {
	return s.Tds2ShipAddrLine1
}

// GetTds2ShipAddrLine2 returns the value of Tds2ShipAddrLine2.
func (s *PaymentCardExecutingRequest) GetTds2ShipAddrLine2() OptNilTds2ShipAddrLine2 {
	return s.Tds2ShipAddrLine2
}

// GetTds2ShipAddrLine3 returns the value of Tds2ShipAddrLine3.
func (s *PaymentCardExecutingRequest) GetTds2ShipAddrLine3() OptNilTds2ShipAddrLine3 {
	return s.Tds2ShipAddrLine3
}

// GetTds2ShipAddrPostCode returns the value of Tds2ShipAddrPostCode.
func (s *PaymentCardExecutingRequest) GetTds2ShipAddrPostCode() OptNilTds2ShipAddrPostCode {
	return s.Tds2ShipAddrPostCode
}

// GetTds2ShipInd returns the value of Tds2ShipInd.
func (s *PaymentCardExecutingRequest) GetTds2ShipInd() OptNilTds2ShipInd {
	return s.Tds2ShipInd
}

// GetTds2DeliveryEmailAddress returns the value of Tds2DeliveryEmailAddress.
func (s *PaymentCardExecutingRequest) GetTds2DeliveryEmailAddress() OptNilTds2DeliveryEmailAddress {
	return s.Tds2DeliveryEmailAddress
}

// GetTds2HomePhoneCc returns the value of Tds2HomePhoneCc.
func (s *PaymentCardExecutingRequest) GetTds2HomePhoneCc() OptNilTds2HomePhoneCc {
	return s.Tds2HomePhoneCc
}

// GetTds2HomePhoneNo returns the value of Tds2HomePhoneNo.
func (s *PaymentCardExecutingRequest) GetTds2HomePhoneNo() OptNilTds2HomePhoneNo {
	return s.Tds2HomePhoneNo
}

// GetTds2MobilePhoneCc returns the value of Tds2MobilePhoneCc.
func (s *PaymentCardExecutingRequest) GetTds2MobilePhoneCc() OptNilTds2MobilePhoneCc {
	return s.Tds2MobilePhoneCc
}

// GetTds2MobilePhoneNo returns the value of Tds2MobilePhoneNo.
func (s *PaymentCardExecutingRequest) GetTds2MobilePhoneNo() OptNilTds2MobilePhoneNo {
	return s.Tds2MobilePhoneNo
}

// GetTds2WorkPhoneCc returns the value of Tds2WorkPhoneCc.
func (s *PaymentCardExecutingRequest) GetTds2WorkPhoneCc() OptNilTds2WorkPhoneCc {
	return s.Tds2WorkPhoneCc
}

// GetTds2WorkPhoneNo returns the value of Tds2WorkPhoneNo.
func (s *PaymentCardExecutingRequest) GetTds2WorkPhoneNo() OptNilTds2WorkPhoneNo {
	return s.Tds2WorkPhoneNo
}

// GetTds2DeliveryTimeframe returns the value of Tds2DeliveryTimeframe.
func (s *PaymentCardExecutingRequest) GetTds2DeliveryTimeframe() OptNilTds2DeliveryTimeframe {
	return s.Tds2DeliveryTimeframe
}

// GetTds2PreOrderDate returns the value of Tds2PreOrderDate.
func (s *PaymentCardExecutingRequest) GetTds2PreOrderDate() OptNilTds2PreOrderDate {
	return s.Tds2PreOrderDate
}

// GetTds2PreOrderPurchaseInd returns the value of Tds2PreOrderPurchaseInd.
func (s *PaymentCardExecutingRequest) GetTds2PreOrderPurchaseInd() OptNilTds2PreOrderPurchaseInd {
	return s.Tds2PreOrderPurchaseInd
}

// GetTds2ReorderItemsInd returns the value of Tds2ReorderItemsInd.
func (s *PaymentCardExecutingRequest) GetTds2ReorderItemsInd() OptNilTds2ReorderItemsInd {
	return s.Tds2ReorderItemsInd
}

// GetTds2RecurringExpiry returns the value of Tds2RecurringExpiry.
func (s *PaymentCardExecutingRequest) GetTds2RecurringExpiry() OptNilTds2RecurringExpiry {
	return s.Tds2RecurringExpiry
}

// GetTds2RecurringFrequency returns the value of Tds2RecurringFrequency.
func (s *PaymentCardExecutingRequest) GetTds2RecurringFrequency() OptNilTds2RecurringFrequency {
	return s.Tds2RecurringFrequency
}

// GetTds2GiftCardAmount returns the value of Tds2GiftCardAmount.
func (s *PaymentCardExecutingRequest) GetTds2GiftCardAmount() OptNilTds2GiftCardAmount {
	return s.Tds2GiftCardAmount
}

// GetTds2GiftCardCount returns the value of Tds2GiftCardCount.
func (s *PaymentCardExecutingRequest) GetTds2GiftCardCount() OptNilTds2GiftCardCount {
	return s.Tds2GiftCardCount
}

// GetTds2GiftCardCurr returns the value of Tds2GiftCardCurr.
func (s *PaymentCardExecutingRequest) GetTds2GiftCardCurr() OptNilTds2GiftCardCurr {
	return s.Tds2GiftCardCurr
}

// SetPayType sets the value of PayType.
func (s *PaymentCardExecutingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardExecutingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetToken sets the value of Token.
func (s *PaymentCardExecutingRequest) SetToken(val OptToken) {
	s.Token = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardExecutingRequest) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardExecutingRequest) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardExecutingRequest) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardExecutingRequest) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardExecutingRequest) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2ChAccChange sets the value of Tds2ChAccChange.
func (s *PaymentCardExecutingRequest) SetTds2ChAccChange(val OptNilTds2ChAccChange) {
	s.Tds2ChAccChange = val
}

// SetTds2ChAccDate sets the value of Tds2ChAccDate.
func (s *PaymentCardExecutingRequest) SetTds2ChAccDate(val OptNilTds2ChAccDate) {
	s.Tds2ChAccDate = val
}

// SetTds2ChAccPwChange sets the value of Tds2ChAccPwChange.
func (s *PaymentCardExecutingRequest) SetTds2ChAccPwChange(val OptNilTds2ChAccPwChange) {
	s.Tds2ChAccPwChange = val
}

// SetTds2NbPurchaseAccount sets the value of Tds2NbPurchaseAccount.
func (s *PaymentCardExecutingRequest) SetTds2NbPurchaseAccount(val OptNilTds2NbPurchaseAccount) {
	s.Tds2NbPurchaseAccount = val
}

// SetTds2PaymentAccAge sets the value of Tds2PaymentAccAge.
func (s *PaymentCardExecutingRequest) SetTds2PaymentAccAge(val OptNilTds2PaymentAccAge) {
	s.Tds2PaymentAccAge = val
}

// SetTds2ProvisionAttemptsDay sets the value of Tds2ProvisionAttemptsDay.
func (s *PaymentCardExecutingRequest) SetTds2ProvisionAttemptsDay(val OptNilTds2ProvisionAttemptsDay) {
	s.Tds2ProvisionAttemptsDay = val
}

// SetTds2ShipAddressUsage sets the value of Tds2ShipAddressUsage.
func (s *PaymentCardExecutingRequest) SetTds2ShipAddressUsage(val OptNilTds2ShipAddressUsage) {
	s.Tds2ShipAddressUsage = val
}

// SetTds2ShipNameInd sets the value of Tds2ShipNameInd.
func (s *PaymentCardExecutingRequest) SetTds2ShipNameInd(val OptNilTds2ShipNameInd) {
	s.Tds2ShipNameInd = val
}

// SetTds2SuspiciousAccActivity sets the value of Tds2SuspiciousAccActivity.
func (s *PaymentCardExecutingRequest) SetTds2SuspiciousAccActivity(val OptNilTds2SuspiciousAccActivity) {
	s.Tds2SuspiciousAccActivity = val
}

// SetTds2TxnActivityDay sets the value of Tds2TxnActivityDay.
func (s *PaymentCardExecutingRequest) SetTds2TxnActivityDay(val OptNilTds2TxnActivityDay) {
	s.Tds2TxnActivityDay = val
}

// SetTds2TxnActivityYear sets the value of Tds2TxnActivityYear.
func (s *PaymentCardExecutingRequest) SetTds2TxnActivityYear(val OptNilTds2TxnActivityYear) {
	s.Tds2TxnActivityYear = val
}

// SetTds2ThreeDsReqAuthData sets the value of Tds2ThreeDsReqAuthData.
func (s *PaymentCardExecutingRequest) SetTds2ThreeDsReqAuthData(val OptNilTds2ThreeDsReqAuthData) {
	s.Tds2ThreeDsReqAuthData = val
}

// SetTds2ThreeDsReqAuthMethod sets the value of Tds2ThreeDsReqAuthMethod.
func (s *PaymentCardExecutingRequest) SetTds2ThreeDsReqAuthMethod(val OptNilTds2ThreeDsReqAuthMethod) {
	s.Tds2ThreeDsReqAuthMethod = val
}

// SetTds2AddrMatch sets the value of Tds2AddrMatch.
func (s *PaymentCardExecutingRequest) SetTds2AddrMatch(val OptNilTds2AddrMatch) {
	s.Tds2AddrMatch = val
}

// SetTds2BillAddrCountry sets the value of Tds2BillAddrCountry.
func (s *PaymentCardExecutingRequest) SetTds2BillAddrCountry(val OptNilTds2BillAddrCountry) {
	s.Tds2BillAddrCountry = val
}

// SetTds2BillAddrState sets the value of Tds2BillAddrState.
func (s *PaymentCardExecutingRequest) SetTds2BillAddrState(val OptNilTds2BillAddrState) {
	s.Tds2BillAddrState = val
}

// SetTds2BillAddrCity sets the value of Tds2BillAddrCity.
func (s *PaymentCardExecutingRequest) SetTds2BillAddrCity(val OptNilTds2BillAddrCity) {
	s.Tds2BillAddrCity = val
}

// SetTds2BillAddrLine1 sets the value of Tds2BillAddrLine1.
func (s *PaymentCardExecutingRequest) SetTds2BillAddrLine1(val OptNilTds2BillAddrLine1) {
	s.Tds2BillAddrLine1 = val
}

// SetTds2BillAddrLine2 sets the value of Tds2BillAddrLine2.
func (s *PaymentCardExecutingRequest) SetTds2BillAddrLine2(val OptNilTds2BillAddrLine2) {
	s.Tds2BillAddrLine2 = val
}

// SetTds2BillAddrLine3 sets the value of Tds2BillAddrLine3.
func (s *PaymentCardExecutingRequest) SetTds2BillAddrLine3(val OptTds2BillAddrLine3) {
	s.Tds2BillAddrLine3 = val
}

// SetTds2BillAddrPostCode sets the value of Tds2BillAddrPostCode.
func (s *PaymentCardExecutingRequest) SetTds2BillAddrPostCode(val OptNilTds2BillAddrPostCode) {
	s.Tds2BillAddrPostCode = val
}

// SetTds2ShipAddrCountry sets the value of Tds2ShipAddrCountry.
func (s *PaymentCardExecutingRequest) SetTds2ShipAddrCountry(val OptNilTds2ShipAddrCountry) {
	s.Tds2ShipAddrCountry = val
}

// SetTds2ShipAddrState sets the value of Tds2ShipAddrState.
func (s *PaymentCardExecutingRequest) SetTds2ShipAddrState(val OptNilTds2ShipAddrState) {
	s.Tds2ShipAddrState = val
}

// SetTds2ShipAddrCity sets the value of Tds2ShipAddrCity.
func (s *PaymentCardExecutingRequest) SetTds2ShipAddrCity(val OptNilTds2ShipAddrCity) {
	s.Tds2ShipAddrCity = val
}

// SetTds2ShipAddrLine1 sets the value of Tds2ShipAddrLine1.
func (s *PaymentCardExecutingRequest) SetTds2ShipAddrLine1(val OptNilTds2ShipAddrLine1) {
	s.Tds2ShipAddrLine1 = val
}

// SetTds2ShipAddrLine2 sets the value of Tds2ShipAddrLine2.
func (s *PaymentCardExecutingRequest) SetTds2ShipAddrLine2(val OptNilTds2ShipAddrLine2) {
	s.Tds2ShipAddrLine2 = val
}

// SetTds2ShipAddrLine3 sets the value of Tds2ShipAddrLine3.
func (s *PaymentCardExecutingRequest) SetTds2ShipAddrLine3(val OptNilTds2ShipAddrLine3) {
	s.Tds2ShipAddrLine3 = val
}

// SetTds2ShipAddrPostCode sets the value of Tds2ShipAddrPostCode.
func (s *PaymentCardExecutingRequest) SetTds2ShipAddrPostCode(val OptNilTds2ShipAddrPostCode) {
	s.Tds2ShipAddrPostCode = val
}

// SetTds2ShipInd sets the value of Tds2ShipInd.
func (s *PaymentCardExecutingRequest) SetTds2ShipInd(val OptNilTds2ShipInd) {
	s.Tds2ShipInd = val
}

// SetTds2DeliveryEmailAddress sets the value of Tds2DeliveryEmailAddress.
func (s *PaymentCardExecutingRequest) SetTds2DeliveryEmailAddress(val OptNilTds2DeliveryEmailAddress) {
	s.Tds2DeliveryEmailAddress = val
}

// SetTds2HomePhoneCc sets the value of Tds2HomePhoneCc.
func (s *PaymentCardExecutingRequest) SetTds2HomePhoneCc(val OptNilTds2HomePhoneCc) {
	s.Tds2HomePhoneCc = val
}

// SetTds2HomePhoneNo sets the value of Tds2HomePhoneNo.
func (s *PaymentCardExecutingRequest) SetTds2HomePhoneNo(val OptNilTds2HomePhoneNo) {
	s.Tds2HomePhoneNo = val
}

// SetTds2MobilePhoneCc sets the value of Tds2MobilePhoneCc.
func (s *PaymentCardExecutingRequest) SetTds2MobilePhoneCc(val OptNilTds2MobilePhoneCc) {
	s.Tds2MobilePhoneCc = val
}

// SetTds2MobilePhoneNo sets the value of Tds2MobilePhoneNo.
func (s *PaymentCardExecutingRequest) SetTds2MobilePhoneNo(val OptNilTds2MobilePhoneNo) {
	s.Tds2MobilePhoneNo = val
}

// SetTds2WorkPhoneCc sets the value of Tds2WorkPhoneCc.
func (s *PaymentCardExecutingRequest) SetTds2WorkPhoneCc(val OptNilTds2WorkPhoneCc) {
	s.Tds2WorkPhoneCc = val
}

// SetTds2WorkPhoneNo sets the value of Tds2WorkPhoneNo.
func (s *PaymentCardExecutingRequest) SetTds2WorkPhoneNo(val OptNilTds2WorkPhoneNo) {
	s.Tds2WorkPhoneNo = val
}

// SetTds2DeliveryTimeframe sets the value of Tds2DeliveryTimeframe.
func (s *PaymentCardExecutingRequest) SetTds2DeliveryTimeframe(val OptNilTds2DeliveryTimeframe) {
	s.Tds2DeliveryTimeframe = val
}

// SetTds2PreOrderDate sets the value of Tds2PreOrderDate.
func (s *PaymentCardExecutingRequest) SetTds2PreOrderDate(val OptNilTds2PreOrderDate) {
	s.Tds2PreOrderDate = val
}

// SetTds2PreOrderPurchaseInd sets the value of Tds2PreOrderPurchaseInd.
func (s *PaymentCardExecutingRequest) SetTds2PreOrderPurchaseInd(val OptNilTds2PreOrderPurchaseInd) {
	s.Tds2PreOrderPurchaseInd = val
}

// SetTds2ReorderItemsInd sets the value of Tds2ReorderItemsInd.
func (s *PaymentCardExecutingRequest) SetTds2ReorderItemsInd(val OptNilTds2ReorderItemsInd) {
	s.Tds2ReorderItemsInd = val
}

// SetTds2RecurringExpiry sets the value of Tds2RecurringExpiry.
func (s *PaymentCardExecutingRequest) SetTds2RecurringExpiry(val OptNilTds2RecurringExpiry) {
	s.Tds2RecurringExpiry = val
}

// SetTds2RecurringFrequency sets the value of Tds2RecurringFrequency.
func (s *PaymentCardExecutingRequest) SetTds2RecurringFrequency(val OptNilTds2RecurringFrequency) {
	s.Tds2RecurringFrequency = val
}

// SetTds2GiftCardAmount sets the value of Tds2GiftCardAmount.
func (s *PaymentCardExecutingRequest) SetTds2GiftCardAmount(val OptNilTds2GiftCardAmount) {
	s.Tds2GiftCardAmount = val
}

// SetTds2GiftCardCount sets the value of Tds2GiftCardCount.
func (s *PaymentCardExecutingRequest) SetTds2GiftCardCount(val OptNilTds2GiftCardCount) {
	s.Tds2GiftCardCount = val
}

// SetTds2GiftCardCurr sets the value of Tds2GiftCardCurr.
func (s *PaymentCardExecutingRequest) SetTds2GiftCardCurr(val OptNilTds2GiftCardCurr) {
	s.Tds2GiftCardCurr = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.Executing.Response
type PaymentCardExecutingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardExecutingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardExecutingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardExecutingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardExecutingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardExecutingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardExecutingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardExecutingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardExecutingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardExecutingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardExecutingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardExecutingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardExecutingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardExecutingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardExecutingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardExecutingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardExecutingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardExecutingResponse) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardExecutingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardExecutingResponse) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardExecutingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardExecutingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardExecutingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardExecutingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardExecutingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardExecutingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardExecutingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardExecutingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardExecutingResponse) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardExecutingResponse) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardExecutingResponse) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardExecutingResponse) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardExecutingResponse) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardExecutingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardExecutingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardExecutingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardExecutingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardExecutingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardExecutingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardExecutingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardExecutingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardExecutingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardExecutingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardExecutingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardExecutingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardExecutingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardExecutingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardExecutingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardExecutingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardExecutingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardExecutingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardExecutingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardExecutingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardExecutingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardExecutingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardExecutingResponse) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardExecutingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardExecutingResponse) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardExecutingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardExecutingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardExecutingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardExecutingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardExecutingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardExecutingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardExecutingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardExecutingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardExecutingResponse) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardExecutingResponse) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardExecutingResponse) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardExecutingResponse) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardExecutingResponse) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardExecutingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardExecutingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardExecutingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardExecutingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardExecutingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardExecutingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.ListRetrieving.Response
type PaymentCardListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString                                `json:"link_previous"`
	List         []PaymentCardListRetrievingResponseListItem `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PaymentCardListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PaymentCardListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PaymentCardListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PaymentCardListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PaymentCardListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PaymentCardListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PaymentCardListRetrievingResponse) GetList() []PaymentCardListRetrievingResponseListItem {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PaymentCardListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PaymentCardListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PaymentCardListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PaymentCardListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PaymentCardListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PaymentCardListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PaymentCardListRetrievingResponse) SetList(val []PaymentCardListRetrievingResponseListItem) {
	s.List = val
}

// Merged schema.
type PaymentCardListRetrievingResponseListItem struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardListRetrievingResponseListItem) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardListRetrievingResponseListItem) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardListRetrievingResponseListItem) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardListRetrievingResponseListItem) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardListRetrievingResponseListItem) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardListRetrievingResponseListItem) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardListRetrievingResponseListItem) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardListRetrievingResponseListItem) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardListRetrievingResponseListItem) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardListRetrievingResponseListItem) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardListRetrievingResponseListItem) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardListRetrievingResponseListItem) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardListRetrievingResponseListItem) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardListRetrievingResponseListItem) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardListRetrievingResponseListItem) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardListRetrievingResponseListItem) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardListRetrievingResponseListItem) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardListRetrievingResponseListItem) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardListRetrievingResponseListItem) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardListRetrievingResponseListItem) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardListRetrievingResponseListItem) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardListRetrievingResponseListItem) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardListRetrievingResponseListItem) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardListRetrievingResponseListItem) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardListRetrievingResponseListItem) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardListRetrievingResponseListItem) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardListRetrievingResponseListItem) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardListRetrievingResponseListItem) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardListRetrievingResponseListItem) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardListRetrievingResponseListItem) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardListRetrievingResponseListItem) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardListRetrievingResponseListItem) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardListRetrievingResponseListItem) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardListRetrievingResponseListItem) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardListRetrievingResponseListItem) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardListRetrievingResponseListItem) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardListRetrievingResponseListItem) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardListRetrievingResponseListItem) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardListRetrievingResponseListItem) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardListRetrievingResponseListItem) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardListRetrievingResponseListItem) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardListRetrievingResponseListItem) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardListRetrievingResponseListItem) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardListRetrievingResponseListItem) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardListRetrievingResponseListItem) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardListRetrievingResponseListItem) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardListRetrievingResponseListItem) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardListRetrievingResponseListItem) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardListRetrievingResponseListItem) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardListRetrievingResponseListItem) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardListRetrievingResponseListItem) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardListRetrievingResponseListItem) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardListRetrievingResponseListItem) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardListRetrievingResponseListItem) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardListRetrievingResponseListItem) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardListRetrievingResponseListItem) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardListRetrievingResponseListItem) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardListRetrievingResponseListItem) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardListRetrievingResponseListItem) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardListRetrievingResponseListItem) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardListRetrievingResponseListItem) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardListRetrievingResponseListItem) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardListRetrievingResponseListItem) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardListRetrievingResponseListItem) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardListRetrievingResponseListItem) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardListRetrievingResponseListItem) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardListRetrievingResponseListItem) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardListRetrievingResponseListItem) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardListRetrievingResponseListItem) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardListRetrievingResponseListItem) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardListRetrievingResponseListItem) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardListRetrievingResponseListItem) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardListRetrievingResponseListItem) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardListRetrievingResponseListItem) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardListRetrievingResponseListItem) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardListRetrievingResponseListItem) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// Ref: #/components/schemas/Payment.Card.Reauthorizing.Request
type PaymentCardReauthorizingRequest struct {
	PayType  PayType         `json:"pay_type"`
	AccessID AccessID        `json:"access_id"`
	Method   CardPayMethod   `json:"method"`
	PayTimes OptCardPayTimes `json:"pay_times"`
}

// GetPayType returns the value of PayType.
func (s *PaymentCardReauthorizingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardReauthorizingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetMethod returns the value of Method.
func (s *PaymentCardReauthorizingRequest) GetMethod() CardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardReauthorizingRequest) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// SetPayType sets the value of PayType.
func (s *PaymentCardReauthorizingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardReauthorizingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardReauthorizingRequest) SetMethod(val CardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardReauthorizingRequest) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.Reauthorizing.Response
type PaymentCardReauthorizingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardReauthorizingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardReauthorizingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardReauthorizingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardReauthorizingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardReauthorizingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardReauthorizingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardReauthorizingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardReauthorizingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardReauthorizingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardReauthorizingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardReauthorizingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardReauthorizingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardReauthorizingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardReauthorizingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardReauthorizingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardReauthorizingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardReauthorizingResponse) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardReauthorizingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardReauthorizingResponse) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardReauthorizingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardReauthorizingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardReauthorizingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardReauthorizingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardReauthorizingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardReauthorizingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardReauthorizingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardReauthorizingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardReauthorizingResponse) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardReauthorizingResponse) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardReauthorizingResponse) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardReauthorizingResponse) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardReauthorizingResponse) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardReauthorizingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardReauthorizingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardReauthorizingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardReauthorizingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardReauthorizingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardReauthorizingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardReauthorizingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardReauthorizingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardReauthorizingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardReauthorizingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardReauthorizingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardReauthorizingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardReauthorizingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardReauthorizingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardReauthorizingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardReauthorizingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardReauthorizingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardReauthorizingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardReauthorizingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardReauthorizingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardReauthorizingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardReauthorizingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardReauthorizingResponse) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardReauthorizingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardReauthorizingResponse) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardReauthorizingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardReauthorizingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardReauthorizingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardReauthorizingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardReauthorizingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardReauthorizingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardReauthorizingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardReauthorizingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardReauthorizingResponse) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardReauthorizingResponse) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardReauthorizingResponse) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardReauthorizingResponse) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardReauthorizingResponse) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardReauthorizingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardReauthorizingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardReauthorizingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardReauthorizingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardReauthorizingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardReauthorizingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

func (*PaymentCardReauthorizingResponse) authorizePaymentRes() {}

// Merged schema.
// Ref: #/components/schemas/Payment.Card.Retrieving.Response
type PaymentCardRetrievingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString                `json:"customer_group_id"`
	ErrorCode       OptErrorCode                `json:"error_code"`
	Created         OptCreated                  `json:"created"`
	Updated         OptNilUpdated               `json:"updated"`
	PayType         OptPayType                  `json:"pay_type"`
	JobCode         OptCardPaymentJobCode       `json:"job_code"`
	Status          OptPaymentStatus            `json:"status"`
	CardID          OptPropertiesID             `json:"card_id"`
	Brand           OptCardBrand                `json:"brand"`
	CardNo          OptCardNo                   `json:"card_no"`
	Expire          OptNilExpire                `json:"expire"`
	HolderName      OptNilHolderName            `json:"holder_name"`
	CardNoHash      OptCardNoHash               `json:"card_no_hash"`
	Method          OptCardPayMethod            `json:"method"`
	PayTimes        OptCardPayTimes             `json:"pay_times"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	TdsType         OptNilTdsType               `json:"tds_type"`
	Tds2Type        OptNilTds2Type              `json:"tds2_type"`
	Tds2RetURL      OptNilTds2RetURL            `json:"tds2_ret_url"`
	Tds2Status      OptR3DS2Status              `json:"tds2_status"`
	MerchantName    OptTdTenantName             `json:"merchant_name"`
	// 仕向け先.
	Forward OptNilString `json:"forward"`
	// イシュア.
	Issuer OptNilString `json:"issuer"`
	// トランザクションID.
	TransactionID OptNilString `json:"transaction_id"`
	// 承認番号.
	Approve OptNilString `json:"approve"`
	// 仮売上有効期限\
	// `job_code`に`AUTH（仮売上）`を指定した場合値が設定されます。.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 商品コード.
	ItemCode OptNilString `json:"item_code"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentCardRetrievingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentCardRetrievingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentCardRetrievingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentCardRetrievingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentCardRetrievingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentCardRetrievingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentCardRetrievingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentCardRetrievingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentCardRetrievingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentCardRetrievingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentCardRetrievingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentCardRetrievingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentCardRetrievingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentCardRetrievingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentCardRetrievingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentCardRetrievingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentCardRetrievingResponse) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentCardRetrievingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCardID returns the value of CardID.
func (s *PaymentCardRetrievingResponse) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetBrand returns the value of Brand.
func (s *PaymentCardRetrievingResponse) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNo returns the value of CardNo.
func (s *PaymentCardRetrievingResponse) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentCardRetrievingResponse) GetExpire() OptNilExpire {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentCardRetrievingResponse) GetHolderName() OptNilHolderName {
	return s.HolderName
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentCardRetrievingResponse) GetCardNoHash() OptCardNoHash {
	return s.CardNoHash
}

// GetMethod returns the value of Method.
func (s *PaymentCardRetrievingResponse) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetPayTimes returns the value of PayTimes.
func (s *PaymentCardRetrievingResponse) GetPayTimes() OptCardPayTimes {
	return s.PayTimes
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentCardRetrievingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetTdsType returns the value of TdsType.
func (s *PaymentCardRetrievingResponse) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentCardRetrievingResponse) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2RetURL returns the value of Tds2RetURL.
func (s *PaymentCardRetrievingResponse) GetTds2RetURL() OptNilTds2RetURL {
	return s.Tds2RetURL
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentCardRetrievingResponse) GetTds2Status() OptR3DS2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentCardRetrievingResponse) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetForward returns the value of Forward.
func (s *PaymentCardRetrievingResponse) GetForward() OptNilString {
	return s.Forward
}

// GetIssuer returns the value of Issuer.
func (s *PaymentCardRetrievingResponse) GetIssuer() OptNilString {
	return s.Issuer
}

// GetTransactionID returns the value of TransactionID.
func (s *PaymentCardRetrievingResponse) GetTransactionID() OptNilString {
	return s.TransactionID
}

// GetApprove returns the value of Approve.
func (s *PaymentCardRetrievingResponse) GetApprove() OptNilString {
	return s.Approve
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentCardRetrievingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentCardRetrievingResponse) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetShopID sets the value of ShopID.
func (s *PaymentCardRetrievingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentCardRetrievingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentCardRetrievingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentCardRetrievingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentCardRetrievingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentCardRetrievingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentCardRetrievingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentCardRetrievingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentCardRetrievingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentCardRetrievingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentCardRetrievingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentCardRetrievingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentCardRetrievingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentCardRetrievingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentCardRetrievingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentCardRetrievingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentCardRetrievingResponse) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentCardRetrievingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCardID sets the value of CardID.
func (s *PaymentCardRetrievingResponse) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetBrand sets the value of Brand.
func (s *PaymentCardRetrievingResponse) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNo sets the value of CardNo.
func (s *PaymentCardRetrievingResponse) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentCardRetrievingResponse) SetExpire(val OptNilExpire) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentCardRetrievingResponse) SetHolderName(val OptNilHolderName) {
	s.HolderName = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentCardRetrievingResponse) SetCardNoHash(val OptCardNoHash) {
	s.CardNoHash = val
}

// SetMethod sets the value of Method.
func (s *PaymentCardRetrievingResponse) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetPayTimes sets the value of PayTimes.
func (s *PaymentCardRetrievingResponse) SetPayTimes(val OptCardPayTimes) {
	s.PayTimes = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentCardRetrievingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentCardRetrievingResponse) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentCardRetrievingResponse) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2RetURL sets the value of Tds2RetURL.
func (s *PaymentCardRetrievingResponse) SetTds2RetURL(val OptNilTds2RetURL) {
	s.Tds2RetURL = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentCardRetrievingResponse) SetTds2Status(val OptR3DS2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentCardRetrievingResponse) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetForward sets the value of Forward.
func (s *PaymentCardRetrievingResponse) SetForward(val OptNilString) {
	s.Forward = val
}

// SetIssuer sets the value of Issuer.
func (s *PaymentCardRetrievingResponse) SetIssuer(val OptNilString) {
	s.Issuer = val
}

// SetTransactionID sets the value of TransactionID.
func (s *PaymentCardRetrievingResponse) SetTransactionID(val OptNilString) {
	s.TransactionID = val
}

// SetApprove sets the value of Approve.
func (s *PaymentCardRetrievingResponse) SetApprove(val OptNilString) {
	s.Approve = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentCardRetrievingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentCardRetrievingResponse) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

type PaymentCompletionDate string

type PaymentDate string

type PaymentDeadline string

// Ref: #/components/schemas/Payment.DirectDebit.Canceling.Request
type PaymentDirectDebitCancelingRequest struct {
	PayType  PayType  `json:"pay_type"`
	AccessID AccessID `json:"access_id"`
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitCancelingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitCancelingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitCancelingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitCancelingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.DirectDebit.Canceling.Response
type PaymentDirectDebitCancelingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString             `json:"customer_group_id"`
	ErrorCode       OptErrorCode             `json:"error_code"`
	Created         OptCreated               `json:"created"`
	Updated         OptNilUpdated            `json:"updated"`
	PayType         OptPayType               `json:"pay_type"`
	Status          OptPaymentStatus         `json:"status"`
	ResultCode      OptDirectDebitResultCode `json:"result_code"`
	// 振替指定日\
	// 振替を行う日を指定します。下記の日付を指定できます。
	// - `yyyy/MM/05`: 5日
	// - `yyyy/MM/06`: 6日
	// - `yyyy/MM/23`: 23日
	// - `yyyy/MM/27`: 27日
	// 形式： `yyyy/MM/dd`\
	// 実際の振替は営業日に行われるため、必ずしも指定した日付に引き落としはされません。\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替日」の列で確認できます。.
	TargetDate OptNilString `json:"target_date"`
	// 引き落とし日\
	// 実際に購入者の口座から引き落としが行われた実績日です。\
	// \
	// 形式： `yyyy/MM/dd`.
	WithdrawalDate OptNilString `json:"withdrawal_date"`
	// 請求依頼受付期間 終了日\
	// 振替依頼を受け付ける最終日。この日付の23:59までに振替依頼（決済実行）を受け付けます。\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「請求依頼受付期間終了日」の列で確認できます。.
	RequestAcceptEndDate OptNilString `json:"request_accept_end_date"`
	// 請求結果反映 予定日\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替結果返却日」の列で確認できます。.
	TransferReturnDate OptNilString `json:"transfer_return_date"`
	// 決済手段ID\
	// この決済に使用された決済手段のIDです。.
	PaymentMethodID OptNilString `json:"payment_method_id"`
	// 金融機関コード\
	// fincodeの口座振替に対応している金融機関のコードのリストは[Docs >
	// 利用可能な金融機関（口座振替）](https://docs.fincode.
	// jp/payment/directdebit/restriction)で参照できます。.
	BankCode OptNilString `json:"bank_code"`
	// 金融機関名.
	BankName OptNilString `json:"bank_name"`
	// 支店コード.
	BranchCode OptNilString `json:"branch_code"`
	// 支店名.
	BranchName OptNilString `json:"branch_name"`
	// ご利用明細表示内容
	// -
	// フォーマット：半角英数カナ／全角英数カナ／一部の記号／半角全角スペース
	// - デフォルト： `ショップ名カナの先頭9文字`
	// ※ 利用可能な記号
	// - 半角：`.`、`(`、`)`、`–`
	// - 全角：`．`、`（`、`）`、`ー`.
	Remarks        OptNilString                `json:"remarks"`
	SubscriptionID OptSubscriptionPropertiesID `json:"subscription_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentDirectDebitCancelingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentDirectDebitCancelingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitCancelingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentDirectDebitCancelingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentDirectDebitCancelingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentDirectDebitCancelingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentDirectDebitCancelingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentDirectDebitCancelingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentDirectDebitCancelingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentDirectDebitCancelingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentDirectDebitCancelingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentDirectDebitCancelingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentDirectDebitCancelingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentDirectDebitCancelingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentDirectDebitCancelingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitCancelingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentDirectDebitCancelingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetResultCode returns the value of ResultCode.
func (s *PaymentDirectDebitCancelingResponse) GetResultCode() OptDirectDebitResultCode {
	return s.ResultCode
}

// GetTargetDate returns the value of TargetDate.
func (s *PaymentDirectDebitCancelingResponse) GetTargetDate() OptNilString {
	return s.TargetDate
}

// GetWithdrawalDate returns the value of WithdrawalDate.
func (s *PaymentDirectDebitCancelingResponse) GetWithdrawalDate() OptNilString {
	return s.WithdrawalDate
}

// GetRequestAcceptEndDate returns the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitCancelingResponse) GetRequestAcceptEndDate() OptNilString {
	return s.RequestAcceptEndDate
}

// GetTransferReturnDate returns the value of TransferReturnDate.
func (s *PaymentDirectDebitCancelingResponse) GetTransferReturnDate() OptNilString {
	return s.TransferReturnDate
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *PaymentDirectDebitCancelingResponse) GetPaymentMethodID() OptNilString {
	return s.PaymentMethodID
}

// GetBankCode returns the value of BankCode.
func (s *PaymentDirectDebitCancelingResponse) GetBankCode() OptNilString {
	return s.BankCode
}

// GetBankName returns the value of BankName.
func (s *PaymentDirectDebitCancelingResponse) GetBankName() OptNilString {
	return s.BankName
}

// GetBranchCode returns the value of BranchCode.
func (s *PaymentDirectDebitCancelingResponse) GetBranchCode() OptNilString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *PaymentDirectDebitCancelingResponse) GetBranchName() OptNilString {
	return s.BranchName
}

// GetRemarks returns the value of Remarks.
func (s *PaymentDirectDebitCancelingResponse) GetRemarks() OptNilString {
	return s.Remarks
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentDirectDebitCancelingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// SetShopID sets the value of ShopID.
func (s *PaymentDirectDebitCancelingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentDirectDebitCancelingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitCancelingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentDirectDebitCancelingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentDirectDebitCancelingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentDirectDebitCancelingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentDirectDebitCancelingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentDirectDebitCancelingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentDirectDebitCancelingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentDirectDebitCancelingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentDirectDebitCancelingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentDirectDebitCancelingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentDirectDebitCancelingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentDirectDebitCancelingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentDirectDebitCancelingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitCancelingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentDirectDebitCancelingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetResultCode sets the value of ResultCode.
func (s *PaymentDirectDebitCancelingResponse) SetResultCode(val OptDirectDebitResultCode) {
	s.ResultCode = val
}

// SetTargetDate sets the value of TargetDate.
func (s *PaymentDirectDebitCancelingResponse) SetTargetDate(val OptNilString) {
	s.TargetDate = val
}

// SetWithdrawalDate sets the value of WithdrawalDate.
func (s *PaymentDirectDebitCancelingResponse) SetWithdrawalDate(val OptNilString) {
	s.WithdrawalDate = val
}

// SetRequestAcceptEndDate sets the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitCancelingResponse) SetRequestAcceptEndDate(val OptNilString) {
	s.RequestAcceptEndDate = val
}

// SetTransferReturnDate sets the value of TransferReturnDate.
func (s *PaymentDirectDebitCancelingResponse) SetTransferReturnDate(val OptNilString) {
	s.TransferReturnDate = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *PaymentDirectDebitCancelingResponse) SetPaymentMethodID(val OptNilString) {
	s.PaymentMethodID = val
}

// SetBankCode sets the value of BankCode.
func (s *PaymentDirectDebitCancelingResponse) SetBankCode(val OptNilString) {
	s.BankCode = val
}

// SetBankName sets the value of BankName.
func (s *PaymentDirectDebitCancelingResponse) SetBankName(val OptNilString) {
	s.BankName = val
}

// SetBranchCode sets the value of BranchCode.
func (s *PaymentDirectDebitCancelingResponse) SetBranchCode(val OptNilString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *PaymentDirectDebitCancelingResponse) SetBranchName(val OptNilString) {
	s.BranchName = val
}

// SetRemarks sets the value of Remarks.
func (s *PaymentDirectDebitCancelingResponse) SetRemarks(val OptNilString) {
	s.Remarks = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentDirectDebitCancelingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// Ref: #/components/schemas/Payment.DirectDebit.ChangingAmount.Request
type PaymentDirectDebitChangingAmountRequest struct {
	PayType  PayType  `json:"pay_type"`
	AccessID AccessID `json:"access_id"`
	Amount   Amount   `json:"amount"`
	Tax      OptTax   `json:"tax"`
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitChangingAmountRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitChangingAmountRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentDirectDebitChangingAmountRequest) GetAmount() Amount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentDirectDebitChangingAmountRequest) GetTax() OptTax {
	return s.Tax
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitChangingAmountRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitChangingAmountRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentDirectDebitChangingAmountRequest) SetAmount(val Amount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentDirectDebitChangingAmountRequest) SetTax(val OptTax) {
	s.Tax = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.DirectDebit.ChangingAmount.Response
type PaymentDirectDebitChangingAmountResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString             `json:"customer_group_id"`
	ErrorCode       OptErrorCode             `json:"error_code"`
	Created         OptCreated               `json:"created"`
	Updated         OptNilUpdated            `json:"updated"`
	PayType         OptPayType               `json:"pay_type"`
	Status          OptPaymentStatus         `json:"status"`
	ResultCode      OptDirectDebitResultCode `json:"result_code"`
	// 振替指定日\
	// 振替を行う日を指定します。下記の日付を指定できます。
	// - `yyyy/MM/05`: 5日
	// - `yyyy/MM/06`: 6日
	// - `yyyy/MM/23`: 23日
	// - `yyyy/MM/27`: 27日
	// 形式： `yyyy/MM/dd`\
	// 実際の振替は営業日に行われるため、必ずしも指定した日付に引き落としはされません。\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替日」の列で確認できます。.
	TargetDate OptNilString `json:"target_date"`
	// 引き落とし日\
	// 実際に購入者の口座から引き落としが行われた実績日です。\
	// \
	// 形式： `yyyy/MM/dd`.
	WithdrawalDate OptNilString `json:"withdrawal_date"`
	// 請求依頼受付期間 終了日\
	// 振替依頼を受け付ける最終日。この日付の23:59までに振替依頼（決済実行）を受け付けます。\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「請求依頼受付期間終了日」の列で確認できます。.
	RequestAcceptEndDate OptNilString `json:"request_accept_end_date"`
	// 請求結果反映 予定日\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替結果返却日」の列で確認できます。.
	TransferReturnDate OptNilString `json:"transfer_return_date"`
	// 決済手段ID\
	// この決済に使用された決済手段のIDです。.
	PaymentMethodID OptNilString `json:"payment_method_id"`
	// 金融機関コード\
	// fincodeの口座振替に対応している金融機関のコードのリストは[Docs >
	// 利用可能な金融機関（口座振替）](https://docs.fincode.
	// jp/payment/directdebit/restriction)で参照できます。.
	BankCode OptNilString `json:"bank_code"`
	// 金融機関名.
	BankName OptNilString `json:"bank_name"`
	// 支店コード.
	BranchCode OptNilString `json:"branch_code"`
	// 支店名.
	BranchName OptNilString `json:"branch_name"`
	// ご利用明細表示内容
	// -
	// フォーマット：半角英数カナ／全角英数カナ／一部の記号／半角全角スペース
	// - デフォルト： `ショップ名カナの先頭9文字`
	// ※ 利用可能な記号
	// - 半角：`.`、`(`、`)`、`–`
	// - 全角：`．`、`（`、`）`、`ー`.
	Remarks        OptNilString                `json:"remarks"`
	SubscriptionID OptSubscriptionPropertiesID `json:"subscription_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentDirectDebitChangingAmountResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentDirectDebitChangingAmountResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitChangingAmountResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentDirectDebitChangingAmountResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentDirectDebitChangingAmountResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentDirectDebitChangingAmountResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentDirectDebitChangingAmountResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentDirectDebitChangingAmountResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentDirectDebitChangingAmountResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentDirectDebitChangingAmountResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentDirectDebitChangingAmountResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentDirectDebitChangingAmountResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentDirectDebitChangingAmountResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentDirectDebitChangingAmountResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentDirectDebitChangingAmountResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitChangingAmountResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentDirectDebitChangingAmountResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetResultCode returns the value of ResultCode.
func (s *PaymentDirectDebitChangingAmountResponse) GetResultCode() OptDirectDebitResultCode {
	return s.ResultCode
}

// GetTargetDate returns the value of TargetDate.
func (s *PaymentDirectDebitChangingAmountResponse) GetTargetDate() OptNilString {
	return s.TargetDate
}

// GetWithdrawalDate returns the value of WithdrawalDate.
func (s *PaymentDirectDebitChangingAmountResponse) GetWithdrawalDate() OptNilString {
	return s.WithdrawalDate
}

// GetRequestAcceptEndDate returns the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitChangingAmountResponse) GetRequestAcceptEndDate() OptNilString {
	return s.RequestAcceptEndDate
}

// GetTransferReturnDate returns the value of TransferReturnDate.
func (s *PaymentDirectDebitChangingAmountResponse) GetTransferReturnDate() OptNilString {
	return s.TransferReturnDate
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *PaymentDirectDebitChangingAmountResponse) GetPaymentMethodID() OptNilString {
	return s.PaymentMethodID
}

// GetBankCode returns the value of BankCode.
func (s *PaymentDirectDebitChangingAmountResponse) GetBankCode() OptNilString {
	return s.BankCode
}

// GetBankName returns the value of BankName.
func (s *PaymentDirectDebitChangingAmountResponse) GetBankName() OptNilString {
	return s.BankName
}

// GetBranchCode returns the value of BranchCode.
func (s *PaymentDirectDebitChangingAmountResponse) GetBranchCode() OptNilString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *PaymentDirectDebitChangingAmountResponse) GetBranchName() OptNilString {
	return s.BranchName
}

// GetRemarks returns the value of Remarks.
func (s *PaymentDirectDebitChangingAmountResponse) GetRemarks() OptNilString {
	return s.Remarks
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentDirectDebitChangingAmountResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// SetShopID sets the value of ShopID.
func (s *PaymentDirectDebitChangingAmountResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentDirectDebitChangingAmountResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitChangingAmountResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentDirectDebitChangingAmountResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentDirectDebitChangingAmountResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentDirectDebitChangingAmountResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentDirectDebitChangingAmountResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentDirectDebitChangingAmountResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentDirectDebitChangingAmountResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentDirectDebitChangingAmountResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentDirectDebitChangingAmountResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentDirectDebitChangingAmountResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentDirectDebitChangingAmountResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentDirectDebitChangingAmountResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentDirectDebitChangingAmountResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitChangingAmountResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentDirectDebitChangingAmountResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetResultCode sets the value of ResultCode.
func (s *PaymentDirectDebitChangingAmountResponse) SetResultCode(val OptDirectDebitResultCode) {
	s.ResultCode = val
}

// SetTargetDate sets the value of TargetDate.
func (s *PaymentDirectDebitChangingAmountResponse) SetTargetDate(val OptNilString) {
	s.TargetDate = val
}

// SetWithdrawalDate sets the value of WithdrawalDate.
func (s *PaymentDirectDebitChangingAmountResponse) SetWithdrawalDate(val OptNilString) {
	s.WithdrawalDate = val
}

// SetRequestAcceptEndDate sets the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitChangingAmountResponse) SetRequestAcceptEndDate(val OptNilString) {
	s.RequestAcceptEndDate = val
}

// SetTransferReturnDate sets the value of TransferReturnDate.
func (s *PaymentDirectDebitChangingAmountResponse) SetTransferReturnDate(val OptNilString) {
	s.TransferReturnDate = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *PaymentDirectDebitChangingAmountResponse) SetPaymentMethodID(val OptNilString) {
	s.PaymentMethodID = val
}

// SetBankCode sets the value of BankCode.
func (s *PaymentDirectDebitChangingAmountResponse) SetBankCode(val OptNilString) {
	s.BankCode = val
}

// SetBankName sets the value of BankName.
func (s *PaymentDirectDebitChangingAmountResponse) SetBankName(val OptNilString) {
	s.BankName = val
}

// SetBranchCode sets the value of BranchCode.
func (s *PaymentDirectDebitChangingAmountResponse) SetBranchCode(val OptNilString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *PaymentDirectDebitChangingAmountResponse) SetBranchName(val OptNilString) {
	s.BranchName = val
}

// SetRemarks sets the value of Remarks.
func (s *PaymentDirectDebitChangingAmountResponse) SetRemarks(val OptNilString) {
	s.Remarks = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentDirectDebitChangingAmountResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// Ref: #/components/schemas/Payment.DirectDebit.Creating.Request
type PaymentDirectDebitCreatingRequest struct {
	ID           OptPaymentPropertiesID `json:"id"`
	PayType      PayType                `json:"pay_type"`
	Amount       Amount                 `json:"amount"`
	Tax          OptTax                 `json:"tax"`
	Remarks      OptNilRemarks          `json:"remarks"`
	ClientField1 OptNilClientFieldN     `json:"client_field_1"`
	ClientField2 OptNilClientFieldN     `json:"client_field_2"`
	ClientField3 OptNilClientFieldN     `json:"client_field_3"`
}

// GetID returns the value of ID.
func (s *PaymentDirectDebitCreatingRequest) GetID() OptPaymentPropertiesID {
	return s.ID
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitCreatingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAmount returns the value of Amount.
func (s *PaymentDirectDebitCreatingRequest) GetAmount() Amount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentDirectDebitCreatingRequest) GetTax() OptTax {
	return s.Tax
}

// GetRemarks returns the value of Remarks.
func (s *PaymentDirectDebitCreatingRequest) GetRemarks() OptNilRemarks {
	return s.Remarks
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentDirectDebitCreatingRequest) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentDirectDebitCreatingRequest) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentDirectDebitCreatingRequest) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// SetID sets the value of ID.
func (s *PaymentDirectDebitCreatingRequest) SetID(val OptPaymentPropertiesID) {
	s.ID = val
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitCreatingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAmount sets the value of Amount.
func (s *PaymentDirectDebitCreatingRequest) SetAmount(val Amount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentDirectDebitCreatingRequest) SetTax(val OptTax) {
	s.Tax = val
}

// SetRemarks sets the value of Remarks.
func (s *PaymentDirectDebitCreatingRequest) SetRemarks(val OptNilRemarks) {
	s.Remarks = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentDirectDebitCreatingRequest) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentDirectDebitCreatingRequest) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentDirectDebitCreatingRequest) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.DirectDebit.Creating.Response
type PaymentDirectDebitCreatingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString             `json:"customer_group_id"`
	ErrorCode       OptErrorCode             `json:"error_code"`
	Created         OptCreated               `json:"created"`
	Updated         OptNilUpdated            `json:"updated"`
	PayType         OptPayType               `json:"pay_type"`
	Status          OptPaymentStatus         `json:"status"`
	ResultCode      OptDirectDebitResultCode `json:"result_code"`
	// 振替指定日\
	// 振替を行う日を指定します。下記の日付を指定できます。
	// - `yyyy/MM/05`: 5日
	// - `yyyy/MM/06`: 6日
	// - `yyyy/MM/23`: 23日
	// - `yyyy/MM/27`: 27日
	// 形式： `yyyy/MM/dd`\
	// 実際の振替は営業日に行われるため、必ずしも指定した日付に引き落としはされません。\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替日」の列で確認できます。.
	TargetDate OptNilString `json:"target_date"`
	// 引き落とし日\
	// 実際に購入者の口座から引き落としが行われた実績日です。\
	// \
	// 形式： `yyyy/MM/dd`.
	WithdrawalDate OptNilString `json:"withdrawal_date"`
	// 請求依頼受付期間 終了日\
	// 振替依頼を受け付ける最終日。この日付の23:59までに振替依頼（決済実行）を受け付けます。\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「請求依頼受付期間終了日」の列で確認できます。.
	RequestAcceptEndDate OptNilString `json:"request_accept_end_date"`
	// 請求結果反映 予定日\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替結果返却日」の列で確認できます。.
	TransferReturnDate OptNilString `json:"transfer_return_date"`
	// 決済手段ID\
	// この決済に使用された決済手段のIDです。.
	PaymentMethodID OptNilString `json:"payment_method_id"`
	// 金融機関コード\
	// fincodeの口座振替に対応している金融機関のコードのリストは[Docs >
	// 利用可能な金融機関（口座振替）](https://docs.fincode.
	// jp/payment/directdebit/restriction)で参照できます。.
	BankCode OptNilString `json:"bank_code"`
	// 金融機関名.
	BankName OptNilString `json:"bank_name"`
	// 支店コード.
	BranchCode OptNilString `json:"branch_code"`
	// 支店名.
	BranchName OptNilString `json:"branch_name"`
	// ご利用明細表示内容
	// -
	// フォーマット：半角英数カナ／全角英数カナ／一部の記号／半角全角スペース
	// - デフォルト： `ショップ名カナの先頭9文字`
	// ※ 利用可能な記号
	// - 半角：`.`、`(`、`)`、`–`
	// - 全角：`．`、`（`、`）`、`ー`.
	Remarks        OptNilString                `json:"remarks"`
	SubscriptionID OptSubscriptionPropertiesID `json:"subscription_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentDirectDebitCreatingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentDirectDebitCreatingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitCreatingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentDirectDebitCreatingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentDirectDebitCreatingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentDirectDebitCreatingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentDirectDebitCreatingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentDirectDebitCreatingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentDirectDebitCreatingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentDirectDebitCreatingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentDirectDebitCreatingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentDirectDebitCreatingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentDirectDebitCreatingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentDirectDebitCreatingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentDirectDebitCreatingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitCreatingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentDirectDebitCreatingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetResultCode returns the value of ResultCode.
func (s *PaymentDirectDebitCreatingResponse) GetResultCode() OptDirectDebitResultCode {
	return s.ResultCode
}

// GetTargetDate returns the value of TargetDate.
func (s *PaymentDirectDebitCreatingResponse) GetTargetDate() OptNilString {
	return s.TargetDate
}

// GetWithdrawalDate returns the value of WithdrawalDate.
func (s *PaymentDirectDebitCreatingResponse) GetWithdrawalDate() OptNilString {
	return s.WithdrawalDate
}

// GetRequestAcceptEndDate returns the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitCreatingResponse) GetRequestAcceptEndDate() OptNilString {
	return s.RequestAcceptEndDate
}

// GetTransferReturnDate returns the value of TransferReturnDate.
func (s *PaymentDirectDebitCreatingResponse) GetTransferReturnDate() OptNilString {
	return s.TransferReturnDate
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *PaymentDirectDebitCreatingResponse) GetPaymentMethodID() OptNilString {
	return s.PaymentMethodID
}

// GetBankCode returns the value of BankCode.
func (s *PaymentDirectDebitCreatingResponse) GetBankCode() OptNilString {
	return s.BankCode
}

// GetBankName returns the value of BankName.
func (s *PaymentDirectDebitCreatingResponse) GetBankName() OptNilString {
	return s.BankName
}

// GetBranchCode returns the value of BranchCode.
func (s *PaymentDirectDebitCreatingResponse) GetBranchCode() OptNilString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *PaymentDirectDebitCreatingResponse) GetBranchName() OptNilString {
	return s.BranchName
}

// GetRemarks returns the value of Remarks.
func (s *PaymentDirectDebitCreatingResponse) GetRemarks() OptNilString {
	return s.Remarks
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentDirectDebitCreatingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// SetShopID sets the value of ShopID.
func (s *PaymentDirectDebitCreatingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentDirectDebitCreatingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitCreatingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentDirectDebitCreatingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentDirectDebitCreatingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentDirectDebitCreatingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentDirectDebitCreatingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentDirectDebitCreatingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentDirectDebitCreatingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentDirectDebitCreatingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentDirectDebitCreatingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentDirectDebitCreatingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentDirectDebitCreatingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentDirectDebitCreatingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentDirectDebitCreatingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitCreatingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentDirectDebitCreatingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetResultCode sets the value of ResultCode.
func (s *PaymentDirectDebitCreatingResponse) SetResultCode(val OptDirectDebitResultCode) {
	s.ResultCode = val
}

// SetTargetDate sets the value of TargetDate.
func (s *PaymentDirectDebitCreatingResponse) SetTargetDate(val OptNilString) {
	s.TargetDate = val
}

// SetWithdrawalDate sets the value of WithdrawalDate.
func (s *PaymentDirectDebitCreatingResponse) SetWithdrawalDate(val OptNilString) {
	s.WithdrawalDate = val
}

// SetRequestAcceptEndDate sets the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitCreatingResponse) SetRequestAcceptEndDate(val OptNilString) {
	s.RequestAcceptEndDate = val
}

// SetTransferReturnDate sets the value of TransferReturnDate.
func (s *PaymentDirectDebitCreatingResponse) SetTransferReturnDate(val OptNilString) {
	s.TransferReturnDate = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *PaymentDirectDebitCreatingResponse) SetPaymentMethodID(val OptNilString) {
	s.PaymentMethodID = val
}

// SetBankCode sets the value of BankCode.
func (s *PaymentDirectDebitCreatingResponse) SetBankCode(val OptNilString) {
	s.BankCode = val
}

// SetBankName sets the value of BankName.
func (s *PaymentDirectDebitCreatingResponse) SetBankName(val OptNilString) {
	s.BankName = val
}

// SetBranchCode sets the value of BranchCode.
func (s *PaymentDirectDebitCreatingResponse) SetBranchCode(val OptNilString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *PaymentDirectDebitCreatingResponse) SetBranchName(val OptNilString) {
	s.BranchName = val
}

// SetRemarks sets the value of Remarks.
func (s *PaymentDirectDebitCreatingResponse) SetRemarks(val OptNilString) {
	s.Remarks = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentDirectDebitCreatingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// Ref: #/components/schemas/Payment.DirectDebit.Executing.Request
type PaymentDirectDebitExecutingRequest struct {
	PayType         PayType                      `json:"pay_type"`
	AccessID        AccessID                     `json:"access_id"`
	CustomerID      ID                           `json:"customer_id"`
	PaymentMethodID OptPaymentMethodPropertiesID `json:"payment_method_id"`
	TargetDate      NilTargetDate                `json:"target_date"`
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitExecutingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitExecutingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentDirectDebitExecutingRequest) GetCustomerID() ID {
	return s.CustomerID
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *PaymentDirectDebitExecutingRequest) GetPaymentMethodID() OptPaymentMethodPropertiesID {
	return s.PaymentMethodID
}

// GetTargetDate returns the value of TargetDate.
func (s *PaymentDirectDebitExecutingRequest) GetTargetDate() NilTargetDate {
	return s.TargetDate
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitExecutingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitExecutingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentDirectDebitExecutingRequest) SetCustomerID(val ID) {
	s.CustomerID = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *PaymentDirectDebitExecutingRequest) SetPaymentMethodID(val OptPaymentMethodPropertiesID) {
	s.PaymentMethodID = val
}

// SetTargetDate sets the value of TargetDate.
func (s *PaymentDirectDebitExecutingRequest) SetTargetDate(val NilTargetDate) {
	s.TargetDate = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.DirectDebit.Executing.Response
type PaymentDirectDebitExecutingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString             `json:"customer_group_id"`
	ErrorCode       OptErrorCode             `json:"error_code"`
	Created         OptCreated               `json:"created"`
	Updated         OptNilUpdated            `json:"updated"`
	PayType         OptPayType               `json:"pay_type"`
	Status          OptPaymentStatus         `json:"status"`
	ResultCode      OptDirectDebitResultCode `json:"result_code"`
	// 振替指定日\
	// 振替を行う日を指定します。下記の日付を指定できます。
	// - `yyyy/MM/05`: 5日
	// - `yyyy/MM/06`: 6日
	// - `yyyy/MM/23`: 23日
	// - `yyyy/MM/27`: 27日
	// 形式： `yyyy/MM/dd`\
	// 実際の振替は営業日に行われるため、必ずしも指定した日付に引き落としはされません。\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替日」の列で確認できます。.
	TargetDate OptNilString `json:"target_date"`
	// 引き落とし日\
	// 実際に購入者の口座から引き落としが行われた実績日です。\
	// \
	// 形式： `yyyy/MM/dd`.
	WithdrawalDate OptNilString `json:"withdrawal_date"`
	// 請求依頼受付期間 終了日\
	// 振替依頼を受け付ける最終日。この日付の23:59までに振替依頼（決済実行）を受け付けます。\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「請求依頼受付期間終了日」の列で確認できます。.
	RequestAcceptEndDate OptNilString `json:"request_accept_end_date"`
	// 請求結果反映 予定日\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替結果返却日」の列で確認できます。.
	TransferReturnDate OptNilString `json:"transfer_return_date"`
	// 決済手段ID\
	// この決済に使用された決済手段のIDです。.
	PaymentMethodID OptNilString `json:"payment_method_id"`
	// 金融機関コード\
	// fincodeの口座振替に対応している金融機関のコードのリストは[Docs >
	// 利用可能な金融機関（口座振替）](https://docs.fincode.
	// jp/payment/directdebit/restriction)で参照できます。.
	BankCode OptNilString `json:"bank_code"`
	// 金融機関名.
	BankName OptNilString `json:"bank_name"`
	// 支店コード.
	BranchCode OptNilString `json:"branch_code"`
	// 支店名.
	BranchName OptNilString `json:"branch_name"`
	// ご利用明細表示内容
	// -
	// フォーマット：半角英数カナ／全角英数カナ／一部の記号／半角全角スペース
	// - デフォルト： `ショップ名カナの先頭9文字`
	// ※ 利用可能な記号
	// - 半角：`.`、`(`、`)`、`–`
	// - 全角：`．`、`（`、`）`、`ー`.
	Remarks        OptNilString                `json:"remarks"`
	SubscriptionID OptSubscriptionPropertiesID `json:"subscription_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentDirectDebitExecutingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentDirectDebitExecutingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitExecutingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentDirectDebitExecutingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentDirectDebitExecutingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentDirectDebitExecutingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentDirectDebitExecutingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentDirectDebitExecutingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentDirectDebitExecutingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentDirectDebitExecutingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentDirectDebitExecutingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentDirectDebitExecutingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentDirectDebitExecutingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentDirectDebitExecutingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentDirectDebitExecutingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitExecutingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentDirectDebitExecutingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetResultCode returns the value of ResultCode.
func (s *PaymentDirectDebitExecutingResponse) GetResultCode() OptDirectDebitResultCode {
	return s.ResultCode
}

// GetTargetDate returns the value of TargetDate.
func (s *PaymentDirectDebitExecutingResponse) GetTargetDate() OptNilString {
	return s.TargetDate
}

// GetWithdrawalDate returns the value of WithdrawalDate.
func (s *PaymentDirectDebitExecutingResponse) GetWithdrawalDate() OptNilString {
	return s.WithdrawalDate
}

// GetRequestAcceptEndDate returns the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitExecutingResponse) GetRequestAcceptEndDate() OptNilString {
	return s.RequestAcceptEndDate
}

// GetTransferReturnDate returns the value of TransferReturnDate.
func (s *PaymentDirectDebitExecutingResponse) GetTransferReturnDate() OptNilString {
	return s.TransferReturnDate
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *PaymentDirectDebitExecutingResponse) GetPaymentMethodID() OptNilString {
	return s.PaymentMethodID
}

// GetBankCode returns the value of BankCode.
func (s *PaymentDirectDebitExecutingResponse) GetBankCode() OptNilString {
	return s.BankCode
}

// GetBankName returns the value of BankName.
func (s *PaymentDirectDebitExecutingResponse) GetBankName() OptNilString {
	return s.BankName
}

// GetBranchCode returns the value of BranchCode.
func (s *PaymentDirectDebitExecutingResponse) GetBranchCode() OptNilString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *PaymentDirectDebitExecutingResponse) GetBranchName() OptNilString {
	return s.BranchName
}

// GetRemarks returns the value of Remarks.
func (s *PaymentDirectDebitExecutingResponse) GetRemarks() OptNilString {
	return s.Remarks
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentDirectDebitExecutingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// SetShopID sets the value of ShopID.
func (s *PaymentDirectDebitExecutingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentDirectDebitExecutingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitExecutingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentDirectDebitExecutingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentDirectDebitExecutingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentDirectDebitExecutingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentDirectDebitExecutingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentDirectDebitExecutingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentDirectDebitExecutingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentDirectDebitExecutingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentDirectDebitExecutingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentDirectDebitExecutingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentDirectDebitExecutingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentDirectDebitExecutingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentDirectDebitExecutingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitExecutingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentDirectDebitExecutingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetResultCode sets the value of ResultCode.
func (s *PaymentDirectDebitExecutingResponse) SetResultCode(val OptDirectDebitResultCode) {
	s.ResultCode = val
}

// SetTargetDate sets the value of TargetDate.
func (s *PaymentDirectDebitExecutingResponse) SetTargetDate(val OptNilString) {
	s.TargetDate = val
}

// SetWithdrawalDate sets the value of WithdrawalDate.
func (s *PaymentDirectDebitExecutingResponse) SetWithdrawalDate(val OptNilString) {
	s.WithdrawalDate = val
}

// SetRequestAcceptEndDate sets the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitExecutingResponse) SetRequestAcceptEndDate(val OptNilString) {
	s.RequestAcceptEndDate = val
}

// SetTransferReturnDate sets the value of TransferReturnDate.
func (s *PaymentDirectDebitExecutingResponse) SetTransferReturnDate(val OptNilString) {
	s.TransferReturnDate = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *PaymentDirectDebitExecutingResponse) SetPaymentMethodID(val OptNilString) {
	s.PaymentMethodID = val
}

// SetBankCode sets the value of BankCode.
func (s *PaymentDirectDebitExecutingResponse) SetBankCode(val OptNilString) {
	s.BankCode = val
}

// SetBankName sets the value of BankName.
func (s *PaymentDirectDebitExecutingResponse) SetBankName(val OptNilString) {
	s.BankName = val
}

// SetBranchCode sets the value of BranchCode.
func (s *PaymentDirectDebitExecutingResponse) SetBranchCode(val OptNilString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *PaymentDirectDebitExecutingResponse) SetBranchName(val OptNilString) {
	s.BranchName = val
}

// SetRemarks sets the value of Remarks.
func (s *PaymentDirectDebitExecutingResponse) SetRemarks(val OptNilString) {
	s.Remarks = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentDirectDebitExecutingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.DirectDebit.ListRetrieving.Response
type PaymentDirectDebitListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString                                       `json:"link_previous"`
	List         []PaymentDirectDebitListRetrievingResponseListItem `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PaymentDirectDebitListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PaymentDirectDebitListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PaymentDirectDebitListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PaymentDirectDebitListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PaymentDirectDebitListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PaymentDirectDebitListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PaymentDirectDebitListRetrievingResponse) GetList() []PaymentDirectDebitListRetrievingResponseListItem {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PaymentDirectDebitListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PaymentDirectDebitListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PaymentDirectDebitListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PaymentDirectDebitListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PaymentDirectDebitListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PaymentDirectDebitListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PaymentDirectDebitListRetrievingResponse) SetList(val []PaymentDirectDebitListRetrievingResponseListItem) {
	s.List = val
}

// Merged schema.
type PaymentDirectDebitListRetrievingResponseListItem struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString             `json:"customer_group_id"`
	ErrorCode       OptErrorCode             `json:"error_code"`
	Created         OptCreated               `json:"created"`
	Updated         OptNilUpdated            `json:"updated"`
	PayType         OptPayType               `json:"pay_type"`
	Status          OptPaymentStatus         `json:"status"`
	ResultCode      OptDirectDebitResultCode `json:"result_code"`
	// 振替指定日\
	// 振替を行う日を指定します。下記の日付を指定できます。
	// - `yyyy/MM/05`: 5日
	// - `yyyy/MM/06`: 6日
	// - `yyyy/MM/23`: 23日
	// - `yyyy/MM/27`: 27日
	// 形式： `yyyy/MM/dd`\
	// 実際の振替は営業日に行われるため、必ずしも指定した日付に引き落としはされません。\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替日」の列で確認できます。.
	TargetDate OptNilString `json:"target_date"`
	// 引き落とし日\
	// 実際に購入者の口座から引き落としが行われた実績日です。\
	// \
	// 形式： `yyyy/MM/dd`.
	WithdrawalDate OptNilString `json:"withdrawal_date"`
	// 請求依頼受付期間 終了日\
	// 振替依頼を受け付ける最終日。この日付の23:59までに振替依頼（決済実行）を受け付けます。\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「請求依頼受付期間終了日」の列で確認できます。.
	RequestAcceptEndDate OptNilString `json:"request_accept_end_date"`
	// 請求結果反映 予定日\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替結果返却日」の列で確認できます。.
	TransferReturnDate OptNilString `json:"transfer_return_date"`
	// 決済手段ID\
	// この決済に使用された決済手段のIDです。.
	PaymentMethodID OptNilString `json:"payment_method_id"`
	// 金融機関コード\
	// fincodeの口座振替に対応している金融機関のコードのリストは[Docs >
	// 利用可能な金融機関（口座振替）](https://docs.fincode.
	// jp/payment/directdebit/restriction)で参照できます。.
	BankCode OptNilString `json:"bank_code"`
	// 金融機関名.
	BankName OptNilString `json:"bank_name"`
	// 支店コード.
	BranchCode OptNilString `json:"branch_code"`
	// 支店名.
	BranchName OptNilString `json:"branch_name"`
	// ご利用明細表示内容
	// -
	// フォーマット：半角英数カナ／全角英数カナ／一部の記号／半角全角スペース
	// - デフォルト： `ショップ名カナの先頭9文字`
	// ※ 利用可能な記号
	// - 半角：`.`、`(`、`)`、`–`
	// - 全角：`．`、`（`、`）`、`ー`.
	Remarks        OptNilString                `json:"remarks"`
	SubscriptionID OptSubscriptionPropertiesID `json:"subscription_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetResultCode returns the value of ResultCode.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetResultCode() OptDirectDebitResultCode {
	return s.ResultCode
}

// GetTargetDate returns the value of TargetDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetTargetDate() OptNilString {
	return s.TargetDate
}

// GetWithdrawalDate returns the value of WithdrawalDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetWithdrawalDate() OptNilString {
	return s.WithdrawalDate
}

// GetRequestAcceptEndDate returns the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetRequestAcceptEndDate() OptNilString {
	return s.RequestAcceptEndDate
}

// GetTransferReturnDate returns the value of TransferReturnDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetTransferReturnDate() OptNilString {
	return s.TransferReturnDate
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetPaymentMethodID() OptNilString {
	return s.PaymentMethodID
}

// GetBankCode returns the value of BankCode.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetBankCode() OptNilString {
	return s.BankCode
}

// GetBankName returns the value of BankName.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetBankName() OptNilString {
	return s.BankName
}

// GetBranchCode returns the value of BranchCode.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetBranchCode() OptNilString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetBranchName() OptNilString {
	return s.BranchName
}

// GetRemarks returns the value of Remarks.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetRemarks() OptNilString {
	return s.Remarks
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// SetShopID sets the value of ShopID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetResultCode sets the value of ResultCode.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetResultCode(val OptDirectDebitResultCode) {
	s.ResultCode = val
}

// SetTargetDate sets the value of TargetDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetTargetDate(val OptNilString) {
	s.TargetDate = val
}

// SetWithdrawalDate sets the value of WithdrawalDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetWithdrawalDate(val OptNilString) {
	s.WithdrawalDate = val
}

// SetRequestAcceptEndDate sets the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetRequestAcceptEndDate(val OptNilString) {
	s.RequestAcceptEndDate = val
}

// SetTransferReturnDate sets the value of TransferReturnDate.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetTransferReturnDate(val OptNilString) {
	s.TransferReturnDate = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetPaymentMethodID(val OptNilString) {
	s.PaymentMethodID = val
}

// SetBankCode sets the value of BankCode.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetBankCode(val OptNilString) {
	s.BankCode = val
}

// SetBankName sets the value of BankName.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetBankName(val OptNilString) {
	s.BankName = val
}

// SetBranchCode sets the value of BranchCode.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetBranchCode(val OptNilString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetBranchName(val OptNilString) {
	s.BranchName = val
}

// SetRemarks sets the value of Remarks.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetRemarks(val OptNilString) {
	s.Remarks = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentDirectDebitListRetrievingResponseListItem) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.DirectDebit.Retrieving.Response
type PaymentDirectDebitRetrievingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString             `json:"customer_group_id"`
	ErrorCode       OptErrorCode             `json:"error_code"`
	Created         OptCreated               `json:"created"`
	Updated         OptNilUpdated            `json:"updated"`
	PayType         OptPayType               `json:"pay_type"`
	Status          OptPaymentStatus         `json:"status"`
	ResultCode      OptDirectDebitResultCode `json:"result_code"`
	// 振替指定日\
	// 振替を行う日を指定します。下記の日付を指定できます。
	// - `yyyy/MM/05`: 5日
	// - `yyyy/MM/06`: 6日
	// - `yyyy/MM/23`: 23日
	// - `yyyy/MM/27`: 27日
	// 形式： `yyyy/MM/dd`\
	// 実際の振替は営業日に行われるため、必ずしも指定した日付に引き落としはされません。\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替日」の列で確認できます。.
	TargetDate OptNilString `json:"target_date"`
	// 引き落とし日\
	// 実際に購入者の口座から引き落としが行われた実績日です。\
	// \
	// 形式： `yyyy/MM/dd`.
	WithdrawalDate OptNilString `json:"withdrawal_date"`
	// 請求依頼受付期間 終了日\
	// 振替依頼を受け付ける最終日。この日付の23:59までに振替依頼（決済実行）を受け付けます。\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「請求依頼受付期間終了日」の列で確認できます。.
	RequestAcceptEndDate OptNilString `json:"request_accept_end_date"`
	// 請求結果反映 予定日\
	// \
	// 形式： `yyyy/MM/dd`\
	// 詳細は[Docs > 口座振替年間スケジュール](https://docs.fincode.
	// jp/payment/directdebit/schedule)の「振替結果返却日」の列で確認できます。.
	TransferReturnDate OptNilString `json:"transfer_return_date"`
	// 決済手段ID\
	// この決済に使用された決済手段のIDです。.
	PaymentMethodID OptNilString `json:"payment_method_id"`
	// 金融機関コード\
	// fincodeの口座振替に対応している金融機関のコードのリストは[Docs >
	// 利用可能な金融機関（口座振替）](https://docs.fincode.
	// jp/payment/directdebit/restriction)で参照できます。.
	BankCode OptNilString `json:"bank_code"`
	// 金融機関名.
	BankName OptNilString `json:"bank_name"`
	// 支店コード.
	BranchCode OptNilString `json:"branch_code"`
	// 支店名.
	BranchName OptNilString `json:"branch_name"`
	// ご利用明細表示内容
	// -
	// フォーマット：半角英数カナ／全角英数カナ／一部の記号／半角全角スペース
	// - デフォルト： `ショップ名カナの先頭9文字`
	// ※ 利用可能な記号
	// - 半角：`.`、`(`、`)`、`–`
	// - 全角：`．`、`（`、`）`、`ー`.
	Remarks        OptNilString                `json:"remarks"`
	SubscriptionID OptSubscriptionPropertiesID `json:"subscription_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentDirectDebitRetrievingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentDirectDebitRetrievingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentDirectDebitRetrievingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentDirectDebitRetrievingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentDirectDebitRetrievingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentDirectDebitRetrievingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentDirectDebitRetrievingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentDirectDebitRetrievingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentDirectDebitRetrievingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentDirectDebitRetrievingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentDirectDebitRetrievingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentDirectDebitRetrievingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentDirectDebitRetrievingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentDirectDebitRetrievingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentDirectDebitRetrievingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentDirectDebitRetrievingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentDirectDebitRetrievingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetResultCode returns the value of ResultCode.
func (s *PaymentDirectDebitRetrievingResponse) GetResultCode() OptDirectDebitResultCode {
	return s.ResultCode
}

// GetTargetDate returns the value of TargetDate.
func (s *PaymentDirectDebitRetrievingResponse) GetTargetDate() OptNilString {
	return s.TargetDate
}

// GetWithdrawalDate returns the value of WithdrawalDate.
func (s *PaymentDirectDebitRetrievingResponse) GetWithdrawalDate() OptNilString {
	return s.WithdrawalDate
}

// GetRequestAcceptEndDate returns the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitRetrievingResponse) GetRequestAcceptEndDate() OptNilString {
	return s.RequestAcceptEndDate
}

// GetTransferReturnDate returns the value of TransferReturnDate.
func (s *PaymentDirectDebitRetrievingResponse) GetTransferReturnDate() OptNilString {
	return s.TransferReturnDate
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *PaymentDirectDebitRetrievingResponse) GetPaymentMethodID() OptNilString {
	return s.PaymentMethodID
}

// GetBankCode returns the value of BankCode.
func (s *PaymentDirectDebitRetrievingResponse) GetBankCode() OptNilString {
	return s.BankCode
}

// GetBankName returns the value of BankName.
func (s *PaymentDirectDebitRetrievingResponse) GetBankName() OptNilString {
	return s.BankName
}

// GetBranchCode returns the value of BranchCode.
func (s *PaymentDirectDebitRetrievingResponse) GetBranchCode() OptNilString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *PaymentDirectDebitRetrievingResponse) GetBranchName() OptNilString {
	return s.BranchName
}

// GetRemarks returns the value of Remarks.
func (s *PaymentDirectDebitRetrievingResponse) GetRemarks() OptNilString {
	return s.Remarks
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentDirectDebitRetrievingResponse) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// SetShopID sets the value of ShopID.
func (s *PaymentDirectDebitRetrievingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentDirectDebitRetrievingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentDirectDebitRetrievingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentDirectDebitRetrievingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentDirectDebitRetrievingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentDirectDebitRetrievingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentDirectDebitRetrievingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentDirectDebitRetrievingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentDirectDebitRetrievingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentDirectDebitRetrievingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentDirectDebitRetrievingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentDirectDebitRetrievingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentDirectDebitRetrievingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentDirectDebitRetrievingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentDirectDebitRetrievingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentDirectDebitRetrievingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentDirectDebitRetrievingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetResultCode sets the value of ResultCode.
func (s *PaymentDirectDebitRetrievingResponse) SetResultCode(val OptDirectDebitResultCode) {
	s.ResultCode = val
}

// SetTargetDate sets the value of TargetDate.
func (s *PaymentDirectDebitRetrievingResponse) SetTargetDate(val OptNilString) {
	s.TargetDate = val
}

// SetWithdrawalDate sets the value of WithdrawalDate.
func (s *PaymentDirectDebitRetrievingResponse) SetWithdrawalDate(val OptNilString) {
	s.WithdrawalDate = val
}

// SetRequestAcceptEndDate sets the value of RequestAcceptEndDate.
func (s *PaymentDirectDebitRetrievingResponse) SetRequestAcceptEndDate(val OptNilString) {
	s.RequestAcceptEndDate = val
}

// SetTransferReturnDate sets the value of TransferReturnDate.
func (s *PaymentDirectDebitRetrievingResponse) SetTransferReturnDate(val OptNilString) {
	s.TransferReturnDate = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *PaymentDirectDebitRetrievingResponse) SetPaymentMethodID(val OptNilString) {
	s.PaymentMethodID = val
}

// SetBankCode sets the value of BankCode.
func (s *PaymentDirectDebitRetrievingResponse) SetBankCode(val OptNilString) {
	s.BankCode = val
}

// SetBankName sets the value of BankName.
func (s *PaymentDirectDebitRetrievingResponse) SetBankName(val OptNilString) {
	s.BankName = val
}

// SetBranchCode sets the value of BranchCode.
func (s *PaymentDirectDebitRetrievingResponse) SetBranchCode(val OptNilString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *PaymentDirectDebitRetrievingResponse) SetBranchName(val OptNilString) {
	s.BranchName = val
}

// SetRemarks sets the value of Remarks.
func (s *PaymentDirectDebitRetrievingResponse) SetRemarks(val OptNilString) {
	s.Remarks = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentDirectDebitRetrievingResponse) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

type PaymentID string

// Ref: #/components/schemas/Payment.Konbini.Canceling.Request
type PaymentKonbiniCancelingRequest struct {
	PayType  PayType  `json:"pay_type"`
	AccessID AccessID `json:"access_id"`
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniCancelingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniCancelingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniCancelingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniCancelingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Konbini.Canceling.Response
type PaymentKonbiniCancelingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString     `json:"customer_group_id"`
	ErrorCode       OptErrorCode     `json:"error_code"`
	Created         OptCreated       `json:"created"`
	Updated         OptNilUpdated    `json:"updated"`
	PayType         OptPayType       `json:"pay_type"`
	Status          OptPaymentStatus `json:"status"`
	// 支払い期限日数\
	// この決済の支払い期限日数です。`"0"`日から`"14"`日まで指定できます。
	// -
	// `"0"`を指定すると決済を作成した当日に限り支払いが可能な決済が作成されます。
	// - デフォルト：`"2"`.
	PaymentTermDay OptNilString `json:"payment_term_day"`
	// 支払い期限日時\
	// コンビニ決済の支払い期限日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentTerm OptNilString `json:"payment_term"`
	// 支払日時\
	// コンビニ店頭で購入者が支払いを行った日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
	// バーコード画像 Base64エンコード済み画像データ\
	// コンビニ店頭での支払いに使用するバーコード画像のBase64エンコード済みデータです。このデータをデコードして表示します。\
	// バーコード画像はレギュレーションに従って表示する必要があります。詳細は[Docs > レギュレーションと注意事項](https://docs.fincode.jp/payment/konbini/note)から参照できます。.
	Barcode OptNilString `json:"barcode"`
	// バーコード画像 フォーマット\
	// 発行されたバーコード画像（`barcode`）のフォーマットです。.
	BarcodeFormat OptNilPaymentKonbiniCancelingResponseBarcodeFormat `json:"barcode_format"`
	// バーコード画像 横幅（px）\
	// 発行されたバーコード画像（`barcode`）の横幅です。.
	BarcodeWidth OptNilString `json:"barcode_width"`
	// バーコード画像 縦幅（px）\
	// 発行されたバーコード画像（`barcode`）の縦幅です。.
	BarcodeHeight OptNilString `json:"barcode_height"`
	// 多重支払フラグ\
	// この決済に対して複数回支払いが行われた場合`1`になります。
	// - `0`: 0回、または1回の支払いが行われた
	// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
	OverpaymentFlag OptPaymentKonbiniCancelingResponseOverpaymentFlag `json:"overpayment_flag"`
	// キャンセル後支払フラグ\
	// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
	// - `0`: キャンセル後支払は行われていない
	// - `1`: キャンセル後、購入者による支払いが行われた.
	CancelOverpaymentFlag OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag `json:"cancel_overpayment_flag"`
	KonbiniCode           OptKonbiniCode                                          `json:"konbini_code"`
	// コンビニ店舗コード\
	// コンビニ事業者ごとに独自体系の店舗コードです。.
	KonbiniStoreCode jx.Raw        `json:"konbini_store_code"`
	DeviceName       OptDeviceName `json:"device_name"`
	// OSバージョン.
	OsVersion jx.Raw       `json:"os_version"`
	WinWidth  OptWinWidth  `json:"win_width"`
	WinHeight OptWinHeight `json:"win_height"`
	// 画面横幅のDPI.
	Xdpi jx.Raw `json:"xdpi"`
	// 画面縦幅のDPI.
	Ydpi   jx.Raw                         `json:"ydpi"`
	Result OptKonbiniPaymentProcessResult `json:"result"`
	// 注文管理ID.
	OrderSerial OptNilString `json:"order_serial"`
	// 請求ID.
	InvoiceID OptNilString `json:"invoice_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentKonbiniCancelingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentKonbiniCancelingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniCancelingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentKonbiniCancelingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentKonbiniCancelingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentKonbiniCancelingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentKonbiniCancelingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentKonbiniCancelingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentKonbiniCancelingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentKonbiniCancelingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentKonbiniCancelingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentKonbiniCancelingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentKonbiniCancelingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentKonbiniCancelingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentKonbiniCancelingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniCancelingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentKonbiniCancelingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentKonbiniCancelingResponse) GetPaymentTermDay() OptNilString {
	return s.PaymentTermDay
}

// GetPaymentTerm returns the value of PaymentTerm.
func (s *PaymentKonbiniCancelingResponse) GetPaymentTerm() OptNilString {
	return s.PaymentTerm
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentKonbiniCancelingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// GetBarcode returns the value of Barcode.
func (s *PaymentKonbiniCancelingResponse) GetBarcode() OptNilString {
	return s.Barcode
}

// GetBarcodeFormat returns the value of BarcodeFormat.
func (s *PaymentKonbiniCancelingResponse) GetBarcodeFormat() OptNilPaymentKonbiniCancelingResponseBarcodeFormat {
	return s.BarcodeFormat
}

// GetBarcodeWidth returns the value of BarcodeWidth.
func (s *PaymentKonbiniCancelingResponse) GetBarcodeWidth() OptNilString {
	return s.BarcodeWidth
}

// GetBarcodeHeight returns the value of BarcodeHeight.
func (s *PaymentKonbiniCancelingResponse) GetBarcodeHeight() OptNilString {
	return s.BarcodeHeight
}

// GetOverpaymentFlag returns the value of OverpaymentFlag.
func (s *PaymentKonbiniCancelingResponse) GetOverpaymentFlag() OptPaymentKonbiniCancelingResponseOverpaymentFlag {
	return s.OverpaymentFlag
}

// GetCancelOverpaymentFlag returns the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniCancelingResponse) GetCancelOverpaymentFlag() OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag {
	return s.CancelOverpaymentFlag
}

// GetKonbiniCode returns the value of KonbiniCode.
func (s *PaymentKonbiniCancelingResponse) GetKonbiniCode() OptKonbiniCode {
	return s.KonbiniCode
}

// GetKonbiniStoreCode returns the value of KonbiniStoreCode.
func (s *PaymentKonbiniCancelingResponse) GetKonbiniStoreCode() jx.Raw {
	return s.KonbiniStoreCode
}

// GetDeviceName returns the value of DeviceName.
func (s *PaymentKonbiniCancelingResponse) GetDeviceName() OptDeviceName {
	return s.DeviceName
}

// GetOsVersion returns the value of OsVersion.
func (s *PaymentKonbiniCancelingResponse) GetOsVersion() jx.Raw {
	return s.OsVersion
}

// GetWinWidth returns the value of WinWidth.
func (s *PaymentKonbiniCancelingResponse) GetWinWidth() OptWinWidth {
	return s.WinWidth
}

// GetWinHeight returns the value of WinHeight.
func (s *PaymentKonbiniCancelingResponse) GetWinHeight() OptWinHeight {
	return s.WinHeight
}

// GetXdpi returns the value of Xdpi.
func (s *PaymentKonbiniCancelingResponse) GetXdpi() jx.Raw {
	return s.Xdpi
}

// GetYdpi returns the value of Ydpi.
func (s *PaymentKonbiniCancelingResponse) GetYdpi() jx.Raw {
	return s.Ydpi
}

// GetResult returns the value of Result.
func (s *PaymentKonbiniCancelingResponse) GetResult() OptKonbiniPaymentProcessResult {
	return s.Result
}

// GetOrderSerial returns the value of OrderSerial.
func (s *PaymentKonbiniCancelingResponse) GetOrderSerial() OptNilString {
	return s.OrderSerial
}

// GetInvoiceID returns the value of InvoiceID.
func (s *PaymentKonbiniCancelingResponse) GetInvoiceID() OptNilString {
	return s.InvoiceID
}

// SetShopID sets the value of ShopID.
func (s *PaymentKonbiniCancelingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentKonbiniCancelingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniCancelingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentKonbiniCancelingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentKonbiniCancelingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentKonbiniCancelingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentKonbiniCancelingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentKonbiniCancelingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentKonbiniCancelingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentKonbiniCancelingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentKonbiniCancelingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentKonbiniCancelingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentKonbiniCancelingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentKonbiniCancelingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentKonbiniCancelingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniCancelingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentKonbiniCancelingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentKonbiniCancelingResponse) SetPaymentTermDay(val OptNilString) {
	s.PaymentTermDay = val
}

// SetPaymentTerm sets the value of PaymentTerm.
func (s *PaymentKonbiniCancelingResponse) SetPaymentTerm(val OptNilString) {
	s.PaymentTerm = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentKonbiniCancelingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// SetBarcode sets the value of Barcode.
func (s *PaymentKonbiniCancelingResponse) SetBarcode(val OptNilString) {
	s.Barcode = val
}

// SetBarcodeFormat sets the value of BarcodeFormat.
func (s *PaymentKonbiniCancelingResponse) SetBarcodeFormat(val OptNilPaymentKonbiniCancelingResponseBarcodeFormat) {
	s.BarcodeFormat = val
}

// SetBarcodeWidth sets the value of BarcodeWidth.
func (s *PaymentKonbiniCancelingResponse) SetBarcodeWidth(val OptNilString) {
	s.BarcodeWidth = val
}

// SetBarcodeHeight sets the value of BarcodeHeight.
func (s *PaymentKonbiniCancelingResponse) SetBarcodeHeight(val OptNilString) {
	s.BarcodeHeight = val
}

// SetOverpaymentFlag sets the value of OverpaymentFlag.
func (s *PaymentKonbiniCancelingResponse) SetOverpaymentFlag(val OptPaymentKonbiniCancelingResponseOverpaymentFlag) {
	s.OverpaymentFlag = val
}

// SetCancelOverpaymentFlag sets the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniCancelingResponse) SetCancelOverpaymentFlag(val OptPaymentKonbiniCancelingResponseCancelOverpaymentFlag) {
	s.CancelOverpaymentFlag = val
}

// SetKonbiniCode sets the value of KonbiniCode.
func (s *PaymentKonbiniCancelingResponse) SetKonbiniCode(val OptKonbiniCode) {
	s.KonbiniCode = val
}

// SetKonbiniStoreCode sets the value of KonbiniStoreCode.
func (s *PaymentKonbiniCancelingResponse) SetKonbiniStoreCode(val jx.Raw) {
	s.KonbiniStoreCode = val
}

// SetDeviceName sets the value of DeviceName.
func (s *PaymentKonbiniCancelingResponse) SetDeviceName(val OptDeviceName) {
	s.DeviceName = val
}

// SetOsVersion sets the value of OsVersion.
func (s *PaymentKonbiniCancelingResponse) SetOsVersion(val jx.Raw) {
	s.OsVersion = val
}

// SetWinWidth sets the value of WinWidth.
func (s *PaymentKonbiniCancelingResponse) SetWinWidth(val OptWinWidth) {
	s.WinWidth = val
}

// SetWinHeight sets the value of WinHeight.
func (s *PaymentKonbiniCancelingResponse) SetWinHeight(val OptWinHeight) {
	s.WinHeight = val
}

// SetXdpi sets the value of Xdpi.
func (s *PaymentKonbiniCancelingResponse) SetXdpi(val jx.Raw) {
	s.Xdpi = val
}

// SetYdpi sets the value of Ydpi.
func (s *PaymentKonbiniCancelingResponse) SetYdpi(val jx.Raw) {
	s.Ydpi = val
}

// SetResult sets the value of Result.
func (s *PaymentKonbiniCancelingResponse) SetResult(val OptKonbiniPaymentProcessResult) {
	s.Result = val
}

// SetOrderSerial sets the value of OrderSerial.
func (s *PaymentKonbiniCancelingResponse) SetOrderSerial(val OptNilString) {
	s.OrderSerial = val
}

// SetInvoiceID sets the value of InvoiceID.
func (s *PaymentKonbiniCancelingResponse) SetInvoiceID(val OptNilString) {
	s.InvoiceID = val
}

// バーコード画像 フォーマット\
// 発行されたバーコード画像（`barcode`）のフォーマットです。.
type PaymentKonbiniCancelingResponseBarcodeFormat string

const (
	PaymentKonbiniCancelingResponseBarcodeFormatJPG PaymentKonbiniCancelingResponseBarcodeFormat = "jpg"
	PaymentKonbiniCancelingResponseBarcodeFormatPNG PaymentKonbiniCancelingResponseBarcodeFormat = "png"
	PaymentKonbiniCancelingResponseBarcodeFormatBmp PaymentKonbiniCancelingResponseBarcodeFormat = "bmp"
)

// AllValues returns all PaymentKonbiniCancelingResponseBarcodeFormat values.
func (PaymentKonbiniCancelingResponseBarcodeFormat) AllValues() []PaymentKonbiniCancelingResponseBarcodeFormat {
	return []PaymentKonbiniCancelingResponseBarcodeFormat{
		PaymentKonbiniCancelingResponseBarcodeFormatJPG,
		PaymentKonbiniCancelingResponseBarcodeFormatPNG,
		PaymentKonbiniCancelingResponseBarcodeFormatBmp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniCancelingResponseBarcodeFormat) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniCancelingResponseBarcodeFormatJPG:
		return []byte(s), nil
	case PaymentKonbiniCancelingResponseBarcodeFormatPNG:
		return []byte(s), nil
	case PaymentKonbiniCancelingResponseBarcodeFormatBmp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniCancelingResponseBarcodeFormat) UnmarshalText(data []byte) error {
	switch PaymentKonbiniCancelingResponseBarcodeFormat(data) {
	case PaymentKonbiniCancelingResponseBarcodeFormatJPG:
		*s = PaymentKonbiniCancelingResponseBarcodeFormatJPG
		return nil
	case PaymentKonbiniCancelingResponseBarcodeFormatPNG:
		*s = PaymentKonbiniCancelingResponseBarcodeFormatPNG
		return nil
	case PaymentKonbiniCancelingResponseBarcodeFormatBmp:
		*s = PaymentKonbiniCancelingResponseBarcodeFormatBmp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// キャンセル後支払フラグ\
// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
// - `0`: キャンセル後支払は行われていない
// - `1`: キャンセル後、購入者による支払いが行われた.
type PaymentKonbiniCancelingResponseCancelOverpaymentFlag string

const (
	PaymentKonbiniCancelingResponseCancelOverpaymentFlag0 PaymentKonbiniCancelingResponseCancelOverpaymentFlag = "0"
	PaymentKonbiniCancelingResponseCancelOverpaymentFlag1 PaymentKonbiniCancelingResponseCancelOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniCancelingResponseCancelOverpaymentFlag values.
func (PaymentKonbiniCancelingResponseCancelOverpaymentFlag) AllValues() []PaymentKonbiniCancelingResponseCancelOverpaymentFlag {
	return []PaymentKonbiniCancelingResponseCancelOverpaymentFlag{
		PaymentKonbiniCancelingResponseCancelOverpaymentFlag0,
		PaymentKonbiniCancelingResponseCancelOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniCancelingResponseCancelOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniCancelingResponseCancelOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniCancelingResponseCancelOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniCancelingResponseCancelOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniCancelingResponseCancelOverpaymentFlag(data) {
	case PaymentKonbiniCancelingResponseCancelOverpaymentFlag0:
		*s = PaymentKonbiniCancelingResponseCancelOverpaymentFlag0
		return nil
	case PaymentKonbiniCancelingResponseCancelOverpaymentFlag1:
		*s = PaymentKonbiniCancelingResponseCancelOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 多重支払フラグ\
// この決済に対して複数回支払いが行われた場合`1`になります。
// - `0`: 0回、または1回の支払いが行われた
// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
type PaymentKonbiniCancelingResponseOverpaymentFlag string

const (
	PaymentKonbiniCancelingResponseOverpaymentFlag0 PaymentKonbiniCancelingResponseOverpaymentFlag = "0"
	PaymentKonbiniCancelingResponseOverpaymentFlag1 PaymentKonbiniCancelingResponseOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniCancelingResponseOverpaymentFlag values.
func (PaymentKonbiniCancelingResponseOverpaymentFlag) AllValues() []PaymentKonbiniCancelingResponseOverpaymentFlag {
	return []PaymentKonbiniCancelingResponseOverpaymentFlag{
		PaymentKonbiniCancelingResponseOverpaymentFlag0,
		PaymentKonbiniCancelingResponseOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniCancelingResponseOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniCancelingResponseOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniCancelingResponseOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniCancelingResponseOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniCancelingResponseOverpaymentFlag(data) {
	case PaymentKonbiniCancelingResponseOverpaymentFlag0:
		*s = PaymentKonbiniCancelingResponseOverpaymentFlag0
		return nil
	case PaymentKonbiniCancelingResponseOverpaymentFlag1:
		*s = PaymentKonbiniCancelingResponseOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.Konbini.Creating.Request
type PaymentKonbiniCreatingRequest struct {
	ID           OptPaymentPropertiesID `json:"id"`
	PayType      PayType                `json:"pay_type"`
	Amount       Amount                 `json:"amount"`
	Tax          OptTax                 `json:"tax"`
	ClientField1 OptNilClientFieldN     `json:"client_field_1"`
	ClientField2 OptNilClientFieldN     `json:"client_field_2"`
	ClientField3 OptNilClientFieldN     `json:"client_field_3"`
}

// GetID returns the value of ID.
func (s *PaymentKonbiniCreatingRequest) GetID() OptPaymentPropertiesID {
	return s.ID
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniCreatingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAmount returns the value of Amount.
func (s *PaymentKonbiniCreatingRequest) GetAmount() Amount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentKonbiniCreatingRequest) GetTax() OptTax {
	return s.Tax
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentKonbiniCreatingRequest) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentKonbiniCreatingRequest) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentKonbiniCreatingRequest) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// SetID sets the value of ID.
func (s *PaymentKonbiniCreatingRequest) SetID(val OptPaymentPropertiesID) {
	s.ID = val
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniCreatingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAmount sets the value of Amount.
func (s *PaymentKonbiniCreatingRequest) SetAmount(val Amount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentKonbiniCreatingRequest) SetTax(val OptTax) {
	s.Tax = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentKonbiniCreatingRequest) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentKonbiniCreatingRequest) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentKonbiniCreatingRequest) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Konbini.Creating.Response
type PaymentKonbiniCreatingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString     `json:"customer_group_id"`
	ErrorCode       OptErrorCode     `json:"error_code"`
	Created         OptCreated       `json:"created"`
	Updated         OptNilUpdated    `json:"updated"`
	PayType         OptPayType       `json:"pay_type"`
	Status          OptPaymentStatus `json:"status"`
	// 支払い期限日数\
	// この決済の支払い期限日数です。`"0"`日から`"14"`日まで指定できます。
	// -
	// `"0"`を指定すると決済を作成した当日に限り支払いが可能な決済が作成されます。
	// - デフォルト：`"2"`.
	PaymentTermDay OptNilString `json:"payment_term_day"`
	// 支払い期限日時\
	// コンビニ決済の支払い期限日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentTerm OptNilString `json:"payment_term"`
	// 支払日時\
	// コンビニ店頭で購入者が支払いを行った日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
	// バーコード画像 Base64エンコード済み画像データ\
	// コンビニ店頭での支払いに使用するバーコード画像のBase64エンコード済みデータです。このデータをデコードして表示します。\
	// バーコード画像はレギュレーションに従って表示する必要があります。詳細は[Docs > レギュレーションと注意事項](https://docs.fincode.jp/payment/konbini/note)から参照できます。.
	Barcode OptNilString `json:"barcode"`
	// バーコード画像 フォーマット\
	// 発行されたバーコード画像（`barcode`）のフォーマットです。.
	BarcodeFormat OptNilPaymentKonbiniCreatingResponseBarcodeFormat `json:"barcode_format"`
	// バーコード画像 横幅（px）\
	// 発行されたバーコード画像（`barcode`）の横幅です。.
	BarcodeWidth OptNilString `json:"barcode_width"`
	// バーコード画像 縦幅（px）\
	// 発行されたバーコード画像（`barcode`）の縦幅です。.
	BarcodeHeight OptNilString `json:"barcode_height"`
	// 多重支払フラグ\
	// この決済に対して複数回支払いが行われた場合`1`になります。
	// - `0`: 0回、または1回の支払いが行われた
	// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
	OverpaymentFlag OptPaymentKonbiniCreatingResponseOverpaymentFlag `json:"overpayment_flag"`
	// キャンセル後支払フラグ\
	// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
	// - `0`: キャンセル後支払は行われていない
	// - `1`: キャンセル後、購入者による支払いが行われた.
	CancelOverpaymentFlag OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag `json:"cancel_overpayment_flag"`
	KonbiniCode           OptKonbiniCode                                         `json:"konbini_code"`
	// コンビニ店舗コード\
	// コンビニ事業者ごとに独自体系の店舗コードです。.
	KonbiniStoreCode jx.Raw        `json:"konbini_store_code"`
	DeviceName       OptDeviceName `json:"device_name"`
	// OSバージョン.
	OsVersion jx.Raw       `json:"os_version"`
	WinWidth  OptWinWidth  `json:"win_width"`
	WinHeight OptWinHeight `json:"win_height"`
	// 画面横幅のDPI.
	Xdpi jx.Raw `json:"xdpi"`
	// 画面縦幅のDPI.
	Ydpi   jx.Raw                         `json:"ydpi"`
	Result OptKonbiniPaymentProcessResult `json:"result"`
	// 注文管理ID.
	OrderSerial OptNilString `json:"order_serial"`
	// 請求ID.
	InvoiceID OptNilString `json:"invoice_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentKonbiniCreatingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentKonbiniCreatingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniCreatingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentKonbiniCreatingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentKonbiniCreatingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentKonbiniCreatingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentKonbiniCreatingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentKonbiniCreatingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentKonbiniCreatingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentKonbiniCreatingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentKonbiniCreatingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentKonbiniCreatingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentKonbiniCreatingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentKonbiniCreatingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentKonbiniCreatingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniCreatingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentKonbiniCreatingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentKonbiniCreatingResponse) GetPaymentTermDay() OptNilString {
	return s.PaymentTermDay
}

// GetPaymentTerm returns the value of PaymentTerm.
func (s *PaymentKonbiniCreatingResponse) GetPaymentTerm() OptNilString {
	return s.PaymentTerm
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentKonbiniCreatingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// GetBarcode returns the value of Barcode.
func (s *PaymentKonbiniCreatingResponse) GetBarcode() OptNilString {
	return s.Barcode
}

// GetBarcodeFormat returns the value of BarcodeFormat.
func (s *PaymentKonbiniCreatingResponse) GetBarcodeFormat() OptNilPaymentKonbiniCreatingResponseBarcodeFormat {
	return s.BarcodeFormat
}

// GetBarcodeWidth returns the value of BarcodeWidth.
func (s *PaymentKonbiniCreatingResponse) GetBarcodeWidth() OptNilString {
	return s.BarcodeWidth
}

// GetBarcodeHeight returns the value of BarcodeHeight.
func (s *PaymentKonbiniCreatingResponse) GetBarcodeHeight() OptNilString {
	return s.BarcodeHeight
}

// GetOverpaymentFlag returns the value of OverpaymentFlag.
func (s *PaymentKonbiniCreatingResponse) GetOverpaymentFlag() OptPaymentKonbiniCreatingResponseOverpaymentFlag {
	return s.OverpaymentFlag
}

// GetCancelOverpaymentFlag returns the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniCreatingResponse) GetCancelOverpaymentFlag() OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag {
	return s.CancelOverpaymentFlag
}

// GetKonbiniCode returns the value of KonbiniCode.
func (s *PaymentKonbiniCreatingResponse) GetKonbiniCode() OptKonbiniCode {
	return s.KonbiniCode
}

// GetKonbiniStoreCode returns the value of KonbiniStoreCode.
func (s *PaymentKonbiniCreatingResponse) GetKonbiniStoreCode() jx.Raw {
	return s.KonbiniStoreCode
}

// GetDeviceName returns the value of DeviceName.
func (s *PaymentKonbiniCreatingResponse) GetDeviceName() OptDeviceName {
	return s.DeviceName
}

// GetOsVersion returns the value of OsVersion.
func (s *PaymentKonbiniCreatingResponse) GetOsVersion() jx.Raw {
	return s.OsVersion
}

// GetWinWidth returns the value of WinWidth.
func (s *PaymentKonbiniCreatingResponse) GetWinWidth() OptWinWidth {
	return s.WinWidth
}

// GetWinHeight returns the value of WinHeight.
func (s *PaymentKonbiniCreatingResponse) GetWinHeight() OptWinHeight {
	return s.WinHeight
}

// GetXdpi returns the value of Xdpi.
func (s *PaymentKonbiniCreatingResponse) GetXdpi() jx.Raw {
	return s.Xdpi
}

// GetYdpi returns the value of Ydpi.
func (s *PaymentKonbiniCreatingResponse) GetYdpi() jx.Raw {
	return s.Ydpi
}

// GetResult returns the value of Result.
func (s *PaymentKonbiniCreatingResponse) GetResult() OptKonbiniPaymentProcessResult {
	return s.Result
}

// GetOrderSerial returns the value of OrderSerial.
func (s *PaymentKonbiniCreatingResponse) GetOrderSerial() OptNilString {
	return s.OrderSerial
}

// GetInvoiceID returns the value of InvoiceID.
func (s *PaymentKonbiniCreatingResponse) GetInvoiceID() OptNilString {
	return s.InvoiceID
}

// SetShopID sets the value of ShopID.
func (s *PaymentKonbiniCreatingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentKonbiniCreatingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniCreatingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentKonbiniCreatingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentKonbiniCreatingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentKonbiniCreatingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentKonbiniCreatingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentKonbiniCreatingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentKonbiniCreatingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentKonbiniCreatingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentKonbiniCreatingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentKonbiniCreatingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentKonbiniCreatingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentKonbiniCreatingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentKonbiniCreatingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniCreatingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentKonbiniCreatingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentKonbiniCreatingResponse) SetPaymentTermDay(val OptNilString) {
	s.PaymentTermDay = val
}

// SetPaymentTerm sets the value of PaymentTerm.
func (s *PaymentKonbiniCreatingResponse) SetPaymentTerm(val OptNilString) {
	s.PaymentTerm = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentKonbiniCreatingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// SetBarcode sets the value of Barcode.
func (s *PaymentKonbiniCreatingResponse) SetBarcode(val OptNilString) {
	s.Barcode = val
}

// SetBarcodeFormat sets the value of BarcodeFormat.
func (s *PaymentKonbiniCreatingResponse) SetBarcodeFormat(val OptNilPaymentKonbiniCreatingResponseBarcodeFormat) {
	s.BarcodeFormat = val
}

// SetBarcodeWidth sets the value of BarcodeWidth.
func (s *PaymentKonbiniCreatingResponse) SetBarcodeWidth(val OptNilString) {
	s.BarcodeWidth = val
}

// SetBarcodeHeight sets the value of BarcodeHeight.
func (s *PaymentKonbiniCreatingResponse) SetBarcodeHeight(val OptNilString) {
	s.BarcodeHeight = val
}

// SetOverpaymentFlag sets the value of OverpaymentFlag.
func (s *PaymentKonbiniCreatingResponse) SetOverpaymentFlag(val OptPaymentKonbiniCreatingResponseOverpaymentFlag) {
	s.OverpaymentFlag = val
}

// SetCancelOverpaymentFlag sets the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniCreatingResponse) SetCancelOverpaymentFlag(val OptPaymentKonbiniCreatingResponseCancelOverpaymentFlag) {
	s.CancelOverpaymentFlag = val
}

// SetKonbiniCode sets the value of KonbiniCode.
func (s *PaymentKonbiniCreatingResponse) SetKonbiniCode(val OptKonbiniCode) {
	s.KonbiniCode = val
}

// SetKonbiniStoreCode sets the value of KonbiniStoreCode.
func (s *PaymentKonbiniCreatingResponse) SetKonbiniStoreCode(val jx.Raw) {
	s.KonbiniStoreCode = val
}

// SetDeviceName sets the value of DeviceName.
func (s *PaymentKonbiniCreatingResponse) SetDeviceName(val OptDeviceName) {
	s.DeviceName = val
}

// SetOsVersion sets the value of OsVersion.
func (s *PaymentKonbiniCreatingResponse) SetOsVersion(val jx.Raw) {
	s.OsVersion = val
}

// SetWinWidth sets the value of WinWidth.
func (s *PaymentKonbiniCreatingResponse) SetWinWidth(val OptWinWidth) {
	s.WinWidth = val
}

// SetWinHeight sets the value of WinHeight.
func (s *PaymentKonbiniCreatingResponse) SetWinHeight(val OptWinHeight) {
	s.WinHeight = val
}

// SetXdpi sets the value of Xdpi.
func (s *PaymentKonbiniCreatingResponse) SetXdpi(val jx.Raw) {
	s.Xdpi = val
}

// SetYdpi sets the value of Ydpi.
func (s *PaymentKonbiniCreatingResponse) SetYdpi(val jx.Raw) {
	s.Ydpi = val
}

// SetResult sets the value of Result.
func (s *PaymentKonbiniCreatingResponse) SetResult(val OptKonbiniPaymentProcessResult) {
	s.Result = val
}

// SetOrderSerial sets the value of OrderSerial.
func (s *PaymentKonbiniCreatingResponse) SetOrderSerial(val OptNilString) {
	s.OrderSerial = val
}

// SetInvoiceID sets the value of InvoiceID.
func (s *PaymentKonbiniCreatingResponse) SetInvoiceID(val OptNilString) {
	s.InvoiceID = val
}

// バーコード画像 フォーマット\
// 発行されたバーコード画像（`barcode`）のフォーマットです。.
type PaymentKonbiniCreatingResponseBarcodeFormat string

const (
	PaymentKonbiniCreatingResponseBarcodeFormatJPG PaymentKonbiniCreatingResponseBarcodeFormat = "jpg"
	PaymentKonbiniCreatingResponseBarcodeFormatPNG PaymentKonbiniCreatingResponseBarcodeFormat = "png"
	PaymentKonbiniCreatingResponseBarcodeFormatBmp PaymentKonbiniCreatingResponseBarcodeFormat = "bmp"
)

// AllValues returns all PaymentKonbiniCreatingResponseBarcodeFormat values.
func (PaymentKonbiniCreatingResponseBarcodeFormat) AllValues() []PaymentKonbiniCreatingResponseBarcodeFormat {
	return []PaymentKonbiniCreatingResponseBarcodeFormat{
		PaymentKonbiniCreatingResponseBarcodeFormatJPG,
		PaymentKonbiniCreatingResponseBarcodeFormatPNG,
		PaymentKonbiniCreatingResponseBarcodeFormatBmp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniCreatingResponseBarcodeFormat) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniCreatingResponseBarcodeFormatJPG:
		return []byte(s), nil
	case PaymentKonbiniCreatingResponseBarcodeFormatPNG:
		return []byte(s), nil
	case PaymentKonbiniCreatingResponseBarcodeFormatBmp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniCreatingResponseBarcodeFormat) UnmarshalText(data []byte) error {
	switch PaymentKonbiniCreatingResponseBarcodeFormat(data) {
	case PaymentKonbiniCreatingResponseBarcodeFormatJPG:
		*s = PaymentKonbiniCreatingResponseBarcodeFormatJPG
		return nil
	case PaymentKonbiniCreatingResponseBarcodeFormatPNG:
		*s = PaymentKonbiniCreatingResponseBarcodeFormatPNG
		return nil
	case PaymentKonbiniCreatingResponseBarcodeFormatBmp:
		*s = PaymentKonbiniCreatingResponseBarcodeFormatBmp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// キャンセル後支払フラグ\
// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
// - `0`: キャンセル後支払は行われていない
// - `1`: キャンセル後、購入者による支払いが行われた.
type PaymentKonbiniCreatingResponseCancelOverpaymentFlag string

const (
	PaymentKonbiniCreatingResponseCancelOverpaymentFlag0 PaymentKonbiniCreatingResponseCancelOverpaymentFlag = "0"
	PaymentKonbiniCreatingResponseCancelOverpaymentFlag1 PaymentKonbiniCreatingResponseCancelOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniCreatingResponseCancelOverpaymentFlag values.
func (PaymentKonbiniCreatingResponseCancelOverpaymentFlag) AllValues() []PaymentKonbiniCreatingResponseCancelOverpaymentFlag {
	return []PaymentKonbiniCreatingResponseCancelOverpaymentFlag{
		PaymentKonbiniCreatingResponseCancelOverpaymentFlag0,
		PaymentKonbiniCreatingResponseCancelOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniCreatingResponseCancelOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniCreatingResponseCancelOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniCreatingResponseCancelOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniCreatingResponseCancelOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniCreatingResponseCancelOverpaymentFlag(data) {
	case PaymentKonbiniCreatingResponseCancelOverpaymentFlag0:
		*s = PaymentKonbiniCreatingResponseCancelOverpaymentFlag0
		return nil
	case PaymentKonbiniCreatingResponseCancelOverpaymentFlag1:
		*s = PaymentKonbiniCreatingResponseCancelOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 多重支払フラグ\
// この決済に対して複数回支払いが行われた場合`1`になります。
// - `0`: 0回、または1回の支払いが行われた
// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
type PaymentKonbiniCreatingResponseOverpaymentFlag string

const (
	PaymentKonbiniCreatingResponseOverpaymentFlag0 PaymentKonbiniCreatingResponseOverpaymentFlag = "0"
	PaymentKonbiniCreatingResponseOverpaymentFlag1 PaymentKonbiniCreatingResponseOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniCreatingResponseOverpaymentFlag values.
func (PaymentKonbiniCreatingResponseOverpaymentFlag) AllValues() []PaymentKonbiniCreatingResponseOverpaymentFlag {
	return []PaymentKonbiniCreatingResponseOverpaymentFlag{
		PaymentKonbiniCreatingResponseOverpaymentFlag0,
		PaymentKonbiniCreatingResponseOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniCreatingResponseOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniCreatingResponseOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniCreatingResponseOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniCreatingResponseOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniCreatingResponseOverpaymentFlag(data) {
	case PaymentKonbiniCreatingResponseOverpaymentFlag0:
		*s = PaymentKonbiniCreatingResponseOverpaymentFlag0
		return nil
	case PaymentKonbiniCreatingResponseOverpaymentFlag1:
		*s = PaymentKonbiniCreatingResponseOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.Konbini.Executing.Request
type PaymentKonbiniExecutingRequest struct {
	PayType        PayType              `json:"pay_type"`
	AccessID       AccessID             `json:"access_id"`
	CustomerID     OptID                `json:"customer_id"`
	PaymentTermDay OptNilPaymentTermDay `json:"payment_term_day"`
	DeviceName     DeviceName           `json:"device_name"`
	WinWidth       WinWidth             `json:"win_width"`
	WinHeight      WinHeight            `json:"win_height"`
	PixelRatio     PixelRatio           `json:"pixel_ratio"`
	WinSizeType    WinSizeType          `json:"win_size_type"`
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniExecutingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniExecutingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentKonbiniExecutingRequest) GetCustomerID() OptID {
	return s.CustomerID
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentKonbiniExecutingRequest) GetPaymentTermDay() OptNilPaymentTermDay {
	return s.PaymentTermDay
}

// GetDeviceName returns the value of DeviceName.
func (s *PaymentKonbiniExecutingRequest) GetDeviceName() DeviceName {
	return s.DeviceName
}

// GetWinWidth returns the value of WinWidth.
func (s *PaymentKonbiniExecutingRequest) GetWinWidth() WinWidth {
	return s.WinWidth
}

// GetWinHeight returns the value of WinHeight.
func (s *PaymentKonbiniExecutingRequest) GetWinHeight() WinHeight {
	return s.WinHeight
}

// GetPixelRatio returns the value of PixelRatio.
func (s *PaymentKonbiniExecutingRequest) GetPixelRatio() PixelRatio {
	return s.PixelRatio
}

// GetWinSizeType returns the value of WinSizeType.
func (s *PaymentKonbiniExecutingRequest) GetWinSizeType() WinSizeType {
	return s.WinSizeType
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniExecutingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniExecutingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentKonbiniExecutingRequest) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentKonbiniExecutingRequest) SetPaymentTermDay(val OptNilPaymentTermDay) {
	s.PaymentTermDay = val
}

// SetDeviceName sets the value of DeviceName.
func (s *PaymentKonbiniExecutingRequest) SetDeviceName(val DeviceName) {
	s.DeviceName = val
}

// SetWinWidth sets the value of WinWidth.
func (s *PaymentKonbiniExecutingRequest) SetWinWidth(val WinWidth) {
	s.WinWidth = val
}

// SetWinHeight sets the value of WinHeight.
func (s *PaymentKonbiniExecutingRequest) SetWinHeight(val WinHeight) {
	s.WinHeight = val
}

// SetPixelRatio sets the value of PixelRatio.
func (s *PaymentKonbiniExecutingRequest) SetPixelRatio(val PixelRatio) {
	s.PixelRatio = val
}

// SetWinSizeType sets the value of WinSizeType.
func (s *PaymentKonbiniExecutingRequest) SetWinSizeType(val WinSizeType) {
	s.WinSizeType = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Konbini.Executing.Response
type PaymentKonbiniExecutingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString     `json:"customer_group_id"`
	ErrorCode       OptErrorCode     `json:"error_code"`
	Created         OptCreated       `json:"created"`
	Updated         OptNilUpdated    `json:"updated"`
	PayType         OptPayType       `json:"pay_type"`
	Status          OptPaymentStatus `json:"status"`
	// 支払い期限日数\
	// この決済の支払い期限日数です。`"0"`日から`"14"`日まで指定できます。
	// -
	// `"0"`を指定すると決済を作成した当日に限り支払いが可能な決済が作成されます。
	// - デフォルト：`"2"`.
	PaymentTermDay OptNilString `json:"payment_term_day"`
	// 支払い期限日時\
	// コンビニ決済の支払い期限日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentTerm OptNilString `json:"payment_term"`
	// 支払日時\
	// コンビニ店頭で購入者が支払いを行った日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
	// バーコード画像 Base64エンコード済み画像データ\
	// コンビニ店頭での支払いに使用するバーコード画像のBase64エンコード済みデータです。このデータをデコードして表示します。\
	// バーコード画像はレギュレーションに従って表示する必要があります。詳細は[Docs > レギュレーションと注意事項](https://docs.fincode.jp/payment/konbini/note)から参照できます。.
	Barcode OptNilString `json:"barcode"`
	// バーコード画像 フォーマット\
	// 発行されたバーコード画像（`barcode`）のフォーマットです。.
	BarcodeFormat OptNilPaymentKonbiniExecutingResponseBarcodeFormat `json:"barcode_format"`
	// バーコード画像 横幅（px）\
	// 発行されたバーコード画像（`barcode`）の横幅です。.
	BarcodeWidth OptNilString `json:"barcode_width"`
	// バーコード画像 縦幅（px）\
	// 発行されたバーコード画像（`barcode`）の縦幅です。.
	BarcodeHeight OptNilString `json:"barcode_height"`
	// 多重支払フラグ\
	// この決済に対して複数回支払いが行われた場合`1`になります。
	// - `0`: 0回、または1回の支払いが行われた
	// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
	OverpaymentFlag OptPaymentKonbiniExecutingResponseOverpaymentFlag `json:"overpayment_flag"`
	// キャンセル後支払フラグ\
	// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
	// - `0`: キャンセル後支払は行われていない
	// - `1`: キャンセル後、購入者による支払いが行われた.
	CancelOverpaymentFlag OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag `json:"cancel_overpayment_flag"`
	KonbiniCode           OptKonbiniCode                                          `json:"konbini_code"`
	// コンビニ店舗コード\
	// コンビニ事業者ごとに独自体系の店舗コードです。.
	KonbiniStoreCode jx.Raw        `json:"konbini_store_code"`
	DeviceName       OptDeviceName `json:"device_name"`
	// OSバージョン.
	OsVersion jx.Raw       `json:"os_version"`
	WinWidth  OptWinWidth  `json:"win_width"`
	WinHeight OptWinHeight `json:"win_height"`
	// 画面横幅のDPI.
	Xdpi jx.Raw `json:"xdpi"`
	// 画面縦幅のDPI.
	Ydpi   jx.Raw                         `json:"ydpi"`
	Result OptKonbiniPaymentProcessResult `json:"result"`
	// 注文管理ID.
	OrderSerial OptNilString `json:"order_serial"`
	// 請求ID.
	InvoiceID OptNilString `json:"invoice_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentKonbiniExecutingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentKonbiniExecutingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniExecutingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentKonbiniExecutingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentKonbiniExecutingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentKonbiniExecutingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentKonbiniExecutingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentKonbiniExecutingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentKonbiniExecutingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentKonbiniExecutingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentKonbiniExecutingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentKonbiniExecutingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentKonbiniExecutingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentKonbiniExecutingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentKonbiniExecutingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniExecutingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentKonbiniExecutingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentKonbiniExecutingResponse) GetPaymentTermDay() OptNilString {
	return s.PaymentTermDay
}

// GetPaymentTerm returns the value of PaymentTerm.
func (s *PaymentKonbiniExecutingResponse) GetPaymentTerm() OptNilString {
	return s.PaymentTerm
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentKonbiniExecutingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// GetBarcode returns the value of Barcode.
func (s *PaymentKonbiniExecutingResponse) GetBarcode() OptNilString {
	return s.Barcode
}

// GetBarcodeFormat returns the value of BarcodeFormat.
func (s *PaymentKonbiniExecutingResponse) GetBarcodeFormat() OptNilPaymentKonbiniExecutingResponseBarcodeFormat {
	return s.BarcodeFormat
}

// GetBarcodeWidth returns the value of BarcodeWidth.
func (s *PaymentKonbiniExecutingResponse) GetBarcodeWidth() OptNilString {
	return s.BarcodeWidth
}

// GetBarcodeHeight returns the value of BarcodeHeight.
func (s *PaymentKonbiniExecutingResponse) GetBarcodeHeight() OptNilString {
	return s.BarcodeHeight
}

// GetOverpaymentFlag returns the value of OverpaymentFlag.
func (s *PaymentKonbiniExecutingResponse) GetOverpaymentFlag() OptPaymentKonbiniExecutingResponseOverpaymentFlag {
	return s.OverpaymentFlag
}

// GetCancelOverpaymentFlag returns the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniExecutingResponse) GetCancelOverpaymentFlag() OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag {
	return s.CancelOverpaymentFlag
}

// GetKonbiniCode returns the value of KonbiniCode.
func (s *PaymentKonbiniExecutingResponse) GetKonbiniCode() OptKonbiniCode {
	return s.KonbiniCode
}

// GetKonbiniStoreCode returns the value of KonbiniStoreCode.
func (s *PaymentKonbiniExecutingResponse) GetKonbiniStoreCode() jx.Raw {
	return s.KonbiniStoreCode
}

// GetDeviceName returns the value of DeviceName.
func (s *PaymentKonbiniExecutingResponse) GetDeviceName() OptDeviceName {
	return s.DeviceName
}

// GetOsVersion returns the value of OsVersion.
func (s *PaymentKonbiniExecutingResponse) GetOsVersion() jx.Raw {
	return s.OsVersion
}

// GetWinWidth returns the value of WinWidth.
func (s *PaymentKonbiniExecutingResponse) GetWinWidth() OptWinWidth {
	return s.WinWidth
}

// GetWinHeight returns the value of WinHeight.
func (s *PaymentKonbiniExecutingResponse) GetWinHeight() OptWinHeight {
	return s.WinHeight
}

// GetXdpi returns the value of Xdpi.
func (s *PaymentKonbiniExecutingResponse) GetXdpi() jx.Raw {
	return s.Xdpi
}

// GetYdpi returns the value of Ydpi.
func (s *PaymentKonbiniExecutingResponse) GetYdpi() jx.Raw {
	return s.Ydpi
}

// GetResult returns the value of Result.
func (s *PaymentKonbiniExecutingResponse) GetResult() OptKonbiniPaymentProcessResult {
	return s.Result
}

// GetOrderSerial returns the value of OrderSerial.
func (s *PaymentKonbiniExecutingResponse) GetOrderSerial() OptNilString {
	return s.OrderSerial
}

// GetInvoiceID returns the value of InvoiceID.
func (s *PaymentKonbiniExecutingResponse) GetInvoiceID() OptNilString {
	return s.InvoiceID
}

// SetShopID sets the value of ShopID.
func (s *PaymentKonbiniExecutingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentKonbiniExecutingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniExecutingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentKonbiniExecutingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentKonbiniExecutingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentKonbiniExecutingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentKonbiniExecutingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentKonbiniExecutingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentKonbiniExecutingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentKonbiniExecutingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentKonbiniExecutingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentKonbiniExecutingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentKonbiniExecutingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentKonbiniExecutingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentKonbiniExecutingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniExecutingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentKonbiniExecutingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentKonbiniExecutingResponse) SetPaymentTermDay(val OptNilString) {
	s.PaymentTermDay = val
}

// SetPaymentTerm sets the value of PaymentTerm.
func (s *PaymentKonbiniExecutingResponse) SetPaymentTerm(val OptNilString) {
	s.PaymentTerm = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentKonbiniExecutingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// SetBarcode sets the value of Barcode.
func (s *PaymentKonbiniExecutingResponse) SetBarcode(val OptNilString) {
	s.Barcode = val
}

// SetBarcodeFormat sets the value of BarcodeFormat.
func (s *PaymentKonbiniExecutingResponse) SetBarcodeFormat(val OptNilPaymentKonbiniExecutingResponseBarcodeFormat) {
	s.BarcodeFormat = val
}

// SetBarcodeWidth sets the value of BarcodeWidth.
func (s *PaymentKonbiniExecutingResponse) SetBarcodeWidth(val OptNilString) {
	s.BarcodeWidth = val
}

// SetBarcodeHeight sets the value of BarcodeHeight.
func (s *PaymentKonbiniExecutingResponse) SetBarcodeHeight(val OptNilString) {
	s.BarcodeHeight = val
}

// SetOverpaymentFlag sets the value of OverpaymentFlag.
func (s *PaymentKonbiniExecutingResponse) SetOverpaymentFlag(val OptPaymentKonbiniExecutingResponseOverpaymentFlag) {
	s.OverpaymentFlag = val
}

// SetCancelOverpaymentFlag sets the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniExecutingResponse) SetCancelOverpaymentFlag(val OptPaymentKonbiniExecutingResponseCancelOverpaymentFlag) {
	s.CancelOverpaymentFlag = val
}

// SetKonbiniCode sets the value of KonbiniCode.
func (s *PaymentKonbiniExecutingResponse) SetKonbiniCode(val OptKonbiniCode) {
	s.KonbiniCode = val
}

// SetKonbiniStoreCode sets the value of KonbiniStoreCode.
func (s *PaymentKonbiniExecutingResponse) SetKonbiniStoreCode(val jx.Raw) {
	s.KonbiniStoreCode = val
}

// SetDeviceName sets the value of DeviceName.
func (s *PaymentKonbiniExecutingResponse) SetDeviceName(val OptDeviceName) {
	s.DeviceName = val
}

// SetOsVersion sets the value of OsVersion.
func (s *PaymentKonbiniExecutingResponse) SetOsVersion(val jx.Raw) {
	s.OsVersion = val
}

// SetWinWidth sets the value of WinWidth.
func (s *PaymentKonbiniExecutingResponse) SetWinWidth(val OptWinWidth) {
	s.WinWidth = val
}

// SetWinHeight sets the value of WinHeight.
func (s *PaymentKonbiniExecutingResponse) SetWinHeight(val OptWinHeight) {
	s.WinHeight = val
}

// SetXdpi sets the value of Xdpi.
func (s *PaymentKonbiniExecutingResponse) SetXdpi(val jx.Raw) {
	s.Xdpi = val
}

// SetYdpi sets the value of Ydpi.
func (s *PaymentKonbiniExecutingResponse) SetYdpi(val jx.Raw) {
	s.Ydpi = val
}

// SetResult sets the value of Result.
func (s *PaymentKonbiniExecutingResponse) SetResult(val OptKonbiniPaymentProcessResult) {
	s.Result = val
}

// SetOrderSerial sets the value of OrderSerial.
func (s *PaymentKonbiniExecutingResponse) SetOrderSerial(val OptNilString) {
	s.OrderSerial = val
}

// SetInvoiceID sets the value of InvoiceID.
func (s *PaymentKonbiniExecutingResponse) SetInvoiceID(val OptNilString) {
	s.InvoiceID = val
}

// バーコード画像 フォーマット\
// 発行されたバーコード画像（`barcode`）のフォーマットです。.
type PaymentKonbiniExecutingResponseBarcodeFormat string

const (
	PaymentKonbiniExecutingResponseBarcodeFormatJPG PaymentKonbiniExecutingResponseBarcodeFormat = "jpg"
	PaymentKonbiniExecutingResponseBarcodeFormatPNG PaymentKonbiniExecutingResponseBarcodeFormat = "png"
	PaymentKonbiniExecutingResponseBarcodeFormatBmp PaymentKonbiniExecutingResponseBarcodeFormat = "bmp"
)

// AllValues returns all PaymentKonbiniExecutingResponseBarcodeFormat values.
func (PaymentKonbiniExecutingResponseBarcodeFormat) AllValues() []PaymentKonbiniExecutingResponseBarcodeFormat {
	return []PaymentKonbiniExecutingResponseBarcodeFormat{
		PaymentKonbiniExecutingResponseBarcodeFormatJPG,
		PaymentKonbiniExecutingResponseBarcodeFormatPNG,
		PaymentKonbiniExecutingResponseBarcodeFormatBmp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniExecutingResponseBarcodeFormat) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniExecutingResponseBarcodeFormatJPG:
		return []byte(s), nil
	case PaymentKonbiniExecutingResponseBarcodeFormatPNG:
		return []byte(s), nil
	case PaymentKonbiniExecutingResponseBarcodeFormatBmp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniExecutingResponseBarcodeFormat) UnmarshalText(data []byte) error {
	switch PaymentKonbiniExecutingResponseBarcodeFormat(data) {
	case PaymentKonbiniExecutingResponseBarcodeFormatJPG:
		*s = PaymentKonbiniExecutingResponseBarcodeFormatJPG
		return nil
	case PaymentKonbiniExecutingResponseBarcodeFormatPNG:
		*s = PaymentKonbiniExecutingResponseBarcodeFormatPNG
		return nil
	case PaymentKonbiniExecutingResponseBarcodeFormatBmp:
		*s = PaymentKonbiniExecutingResponseBarcodeFormatBmp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// キャンセル後支払フラグ\
// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
// - `0`: キャンセル後支払は行われていない
// - `1`: キャンセル後、購入者による支払いが行われた.
type PaymentKonbiniExecutingResponseCancelOverpaymentFlag string

const (
	PaymentKonbiniExecutingResponseCancelOverpaymentFlag0 PaymentKonbiniExecutingResponseCancelOverpaymentFlag = "0"
	PaymentKonbiniExecutingResponseCancelOverpaymentFlag1 PaymentKonbiniExecutingResponseCancelOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniExecutingResponseCancelOverpaymentFlag values.
func (PaymentKonbiniExecutingResponseCancelOverpaymentFlag) AllValues() []PaymentKonbiniExecutingResponseCancelOverpaymentFlag {
	return []PaymentKonbiniExecutingResponseCancelOverpaymentFlag{
		PaymentKonbiniExecutingResponseCancelOverpaymentFlag0,
		PaymentKonbiniExecutingResponseCancelOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniExecutingResponseCancelOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniExecutingResponseCancelOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniExecutingResponseCancelOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniExecutingResponseCancelOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniExecutingResponseCancelOverpaymentFlag(data) {
	case PaymentKonbiniExecutingResponseCancelOverpaymentFlag0:
		*s = PaymentKonbiniExecutingResponseCancelOverpaymentFlag0
		return nil
	case PaymentKonbiniExecutingResponseCancelOverpaymentFlag1:
		*s = PaymentKonbiniExecutingResponseCancelOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 多重支払フラグ\
// この決済に対して複数回支払いが行われた場合`1`になります。
// - `0`: 0回、または1回の支払いが行われた
// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
type PaymentKonbiniExecutingResponseOverpaymentFlag string

const (
	PaymentKonbiniExecutingResponseOverpaymentFlag0 PaymentKonbiniExecutingResponseOverpaymentFlag = "0"
	PaymentKonbiniExecutingResponseOverpaymentFlag1 PaymentKonbiniExecutingResponseOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniExecutingResponseOverpaymentFlag values.
func (PaymentKonbiniExecutingResponseOverpaymentFlag) AllValues() []PaymentKonbiniExecutingResponseOverpaymentFlag {
	return []PaymentKonbiniExecutingResponseOverpaymentFlag{
		PaymentKonbiniExecutingResponseOverpaymentFlag0,
		PaymentKonbiniExecutingResponseOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniExecutingResponseOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniExecutingResponseOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniExecutingResponseOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniExecutingResponseOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniExecutingResponseOverpaymentFlag(data) {
	case PaymentKonbiniExecutingResponseOverpaymentFlag0:
		*s = PaymentKonbiniExecutingResponseOverpaymentFlag0
		return nil
	case PaymentKonbiniExecutingResponseOverpaymentFlag1:
		*s = PaymentKonbiniExecutingResponseOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.Konbini.GeneratingBarcode.Request
type PaymentKonbiniGeneratingBarcodeRequest struct {
	PayType     PayType     `json:"pay_type"`
	AccessID    AccessID    `json:"access_id"`
	DeviceName  DeviceName  `json:"device_name"`
	WinWidth    WinWidth    `json:"win_width"`
	WinHeight   WinHeight   `json:"win_height"`
	PixelRatio  PixelRatio  `json:"pixel_ratio"`
	WinSizeType WinSizeType `json:"win_size_type"`
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniGeneratingBarcodeRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniGeneratingBarcodeRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetDeviceName returns the value of DeviceName.
func (s *PaymentKonbiniGeneratingBarcodeRequest) GetDeviceName() DeviceName {
	return s.DeviceName
}

// GetWinWidth returns the value of WinWidth.
func (s *PaymentKonbiniGeneratingBarcodeRequest) GetWinWidth() WinWidth {
	return s.WinWidth
}

// GetWinHeight returns the value of WinHeight.
func (s *PaymentKonbiniGeneratingBarcodeRequest) GetWinHeight() WinHeight {
	return s.WinHeight
}

// GetPixelRatio returns the value of PixelRatio.
func (s *PaymentKonbiniGeneratingBarcodeRequest) GetPixelRatio() PixelRatio {
	return s.PixelRatio
}

// GetWinSizeType returns the value of WinSizeType.
func (s *PaymentKonbiniGeneratingBarcodeRequest) GetWinSizeType() WinSizeType {
	return s.WinSizeType
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniGeneratingBarcodeRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniGeneratingBarcodeRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetDeviceName sets the value of DeviceName.
func (s *PaymentKonbiniGeneratingBarcodeRequest) SetDeviceName(val DeviceName) {
	s.DeviceName = val
}

// SetWinWidth sets the value of WinWidth.
func (s *PaymentKonbiniGeneratingBarcodeRequest) SetWinWidth(val WinWidth) {
	s.WinWidth = val
}

// SetWinHeight sets the value of WinHeight.
func (s *PaymentKonbiniGeneratingBarcodeRequest) SetWinHeight(val WinHeight) {
	s.WinHeight = val
}

// SetPixelRatio sets the value of PixelRatio.
func (s *PaymentKonbiniGeneratingBarcodeRequest) SetPixelRatio(val PixelRatio) {
	s.PixelRatio = val
}

// SetWinSizeType sets the value of WinSizeType.
func (s *PaymentKonbiniGeneratingBarcodeRequest) SetWinSizeType(val WinSizeType) {
	s.WinSizeType = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.Konbini.GeneratingBarcode.Response
type PaymentKonbiniGeneratingBarcodeResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString     `json:"customer_group_id"`
	ErrorCode       OptErrorCode     `json:"error_code"`
	Created         OptCreated       `json:"created"`
	Updated         OptNilUpdated    `json:"updated"`
	PayType         OptPayType       `json:"pay_type"`
	Status          OptPaymentStatus `json:"status"`
	// 支払い期限日数\
	// この決済の支払い期限日数です。`"0"`日から`"14"`日まで指定できます。
	// -
	// `"0"`を指定すると決済を作成した当日に限り支払いが可能な決済が作成されます。
	// - デフォルト：`"2"`.
	PaymentTermDay OptNilString `json:"payment_term_day"`
	// 支払い期限日時\
	// コンビニ決済の支払い期限日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentTerm OptNilString `json:"payment_term"`
	// 支払日時\
	// コンビニ店頭で購入者が支払いを行った日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
	// バーコード画像 Base64エンコード済み画像データ\
	// コンビニ店頭での支払いに使用するバーコード画像のBase64エンコード済みデータです。このデータをデコードして表示します。\
	// バーコード画像はレギュレーションに従って表示する必要があります。詳細は[Docs > レギュレーションと注意事項](https://docs.fincode.jp/payment/konbini/note)から参照できます。.
	Barcode OptNilString `json:"barcode"`
	// バーコード画像 フォーマット\
	// 発行されたバーコード画像（`barcode`）のフォーマットです。.
	BarcodeFormat OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat `json:"barcode_format"`
	// バーコード画像 横幅（px）\
	// 発行されたバーコード画像（`barcode`）の横幅です。.
	BarcodeWidth OptNilString `json:"barcode_width"`
	// バーコード画像 縦幅（px）\
	// 発行されたバーコード画像（`barcode`）の縦幅です。.
	BarcodeHeight OptNilString `json:"barcode_height"`
	// 多重支払フラグ\
	// この決済に対して複数回支払いが行われた場合`1`になります。
	// - `0`: 0回、または1回の支払いが行われた
	// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
	OverpaymentFlag OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag `json:"overpayment_flag"`
	// キャンセル後支払フラグ\
	// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
	// - `0`: キャンセル後支払は行われていない
	// - `1`: キャンセル後、購入者による支払いが行われた.
	CancelOverpaymentFlag OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag `json:"cancel_overpayment_flag"`
	KonbiniCode           OptKonbiniCode                                                  `json:"konbini_code"`
	// コンビニ店舗コード\
	// コンビニ事業者ごとに独自体系の店舗コードです。.
	KonbiniStoreCode jx.Raw        `json:"konbini_store_code"`
	DeviceName       OptDeviceName `json:"device_name"`
	// OSバージョン.
	OsVersion jx.Raw       `json:"os_version"`
	WinWidth  OptWinWidth  `json:"win_width"`
	WinHeight OptWinHeight `json:"win_height"`
	// 画面横幅のDPI.
	Xdpi jx.Raw `json:"xdpi"`
	// 画面縦幅のDPI.
	Ydpi   jx.Raw                         `json:"ydpi"`
	Result OptKonbiniPaymentProcessResult `json:"result"`
	// 注文管理ID.
	OrderSerial OptNilString `json:"order_serial"`
	// 請求ID.
	InvoiceID OptNilString `json:"invoice_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetPaymentTermDay() OptNilString {
	return s.PaymentTermDay
}

// GetPaymentTerm returns the value of PaymentTerm.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetPaymentTerm() OptNilString {
	return s.PaymentTerm
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// GetBarcode returns the value of Barcode.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetBarcode() OptNilString {
	return s.Barcode
}

// GetBarcodeFormat returns the value of BarcodeFormat.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetBarcodeFormat() OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat {
	return s.BarcodeFormat
}

// GetBarcodeWidth returns the value of BarcodeWidth.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetBarcodeWidth() OptNilString {
	return s.BarcodeWidth
}

// GetBarcodeHeight returns the value of BarcodeHeight.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetBarcodeHeight() OptNilString {
	return s.BarcodeHeight
}

// GetOverpaymentFlag returns the value of OverpaymentFlag.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetOverpaymentFlag() OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag {
	return s.OverpaymentFlag
}

// GetCancelOverpaymentFlag returns the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetCancelOverpaymentFlag() OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag {
	return s.CancelOverpaymentFlag
}

// GetKonbiniCode returns the value of KonbiniCode.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetKonbiniCode() OptKonbiniCode {
	return s.KonbiniCode
}

// GetKonbiniStoreCode returns the value of KonbiniStoreCode.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetKonbiniStoreCode() jx.Raw {
	return s.KonbiniStoreCode
}

// GetDeviceName returns the value of DeviceName.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetDeviceName() OptDeviceName {
	return s.DeviceName
}

// GetOsVersion returns the value of OsVersion.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetOsVersion() jx.Raw {
	return s.OsVersion
}

// GetWinWidth returns the value of WinWidth.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetWinWidth() OptWinWidth {
	return s.WinWidth
}

// GetWinHeight returns the value of WinHeight.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetWinHeight() OptWinHeight {
	return s.WinHeight
}

// GetXdpi returns the value of Xdpi.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetXdpi() jx.Raw {
	return s.Xdpi
}

// GetYdpi returns the value of Ydpi.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetYdpi() jx.Raw {
	return s.Ydpi
}

// GetResult returns the value of Result.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetResult() OptKonbiniPaymentProcessResult {
	return s.Result
}

// GetOrderSerial returns the value of OrderSerial.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetOrderSerial() OptNilString {
	return s.OrderSerial
}

// GetInvoiceID returns the value of InvoiceID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) GetInvoiceID() OptNilString {
	return s.InvoiceID
}

// SetShopID sets the value of ShopID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetPaymentTermDay(val OptNilString) {
	s.PaymentTermDay = val
}

// SetPaymentTerm sets the value of PaymentTerm.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetPaymentTerm(val OptNilString) {
	s.PaymentTerm = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// SetBarcode sets the value of Barcode.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetBarcode(val OptNilString) {
	s.Barcode = val
}

// SetBarcodeFormat sets the value of BarcodeFormat.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetBarcodeFormat(val OptNilPaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) {
	s.BarcodeFormat = val
}

// SetBarcodeWidth sets the value of BarcodeWidth.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetBarcodeWidth(val OptNilString) {
	s.BarcodeWidth = val
}

// SetBarcodeHeight sets the value of BarcodeHeight.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetBarcodeHeight(val OptNilString) {
	s.BarcodeHeight = val
}

// SetOverpaymentFlag sets the value of OverpaymentFlag.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetOverpaymentFlag(val OptPaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) {
	s.OverpaymentFlag = val
}

// SetCancelOverpaymentFlag sets the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetCancelOverpaymentFlag(val OptPaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) {
	s.CancelOverpaymentFlag = val
}

// SetKonbiniCode sets the value of KonbiniCode.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetKonbiniCode(val OptKonbiniCode) {
	s.KonbiniCode = val
}

// SetKonbiniStoreCode sets the value of KonbiniStoreCode.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetKonbiniStoreCode(val jx.Raw) {
	s.KonbiniStoreCode = val
}

// SetDeviceName sets the value of DeviceName.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetDeviceName(val OptDeviceName) {
	s.DeviceName = val
}

// SetOsVersion sets the value of OsVersion.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetOsVersion(val jx.Raw) {
	s.OsVersion = val
}

// SetWinWidth sets the value of WinWidth.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetWinWidth(val OptWinWidth) {
	s.WinWidth = val
}

// SetWinHeight sets the value of WinHeight.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetWinHeight(val OptWinHeight) {
	s.WinHeight = val
}

// SetXdpi sets the value of Xdpi.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetXdpi(val jx.Raw) {
	s.Xdpi = val
}

// SetYdpi sets the value of Ydpi.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetYdpi(val jx.Raw) {
	s.Ydpi = val
}

// SetResult sets the value of Result.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetResult(val OptKonbiniPaymentProcessResult) {
	s.Result = val
}

// SetOrderSerial sets the value of OrderSerial.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetOrderSerial(val OptNilString) {
	s.OrderSerial = val
}

// SetInvoiceID sets the value of InvoiceID.
func (s *PaymentKonbiniGeneratingBarcodeResponse) SetInvoiceID(val OptNilString) {
	s.InvoiceID = val
}

func (*PaymentKonbiniGeneratingBarcodeResponse) generateBarcodeOfPaymentRes() {}

// バーコード画像 フォーマット\
// 発行されたバーコード画像（`barcode`）のフォーマットです。.
type PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat string

const (
	PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatJPG PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat = "jpg"
	PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatPNG PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat = "png"
	PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatBmp PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat = "bmp"
)

// AllValues returns all PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat values.
func (PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) AllValues() []PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat {
	return []PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat{
		PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatJPG,
		PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatPNG,
		PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatBmp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatJPG:
		return []byte(s), nil
	case PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatPNG:
		return []byte(s), nil
	case PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatBmp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat) UnmarshalText(data []byte) error {
	switch PaymentKonbiniGeneratingBarcodeResponseBarcodeFormat(data) {
	case PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatJPG:
		*s = PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatJPG
		return nil
	case PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatPNG:
		*s = PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatPNG
		return nil
	case PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatBmp:
		*s = PaymentKonbiniGeneratingBarcodeResponseBarcodeFormatBmp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// キャンセル後支払フラグ\
// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
// - `0`: キャンセル後支払は行われていない
// - `1`: キャンセル後、購入者による支払いが行われた.
type PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag string

const (
	PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag0 PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag = "0"
	PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag1 PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag values.
func (PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) AllValues() []PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag {
	return []PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag{
		PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag0,
		PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag(data) {
	case PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag0:
		*s = PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag0
		return nil
	case PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag1:
		*s = PaymentKonbiniGeneratingBarcodeResponseCancelOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 多重支払フラグ\
// この決済に対して複数回支払いが行われた場合`1`になります。
// - `0`: 0回、または1回の支払いが行われた
// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
type PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag string

const (
	PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag0 PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag = "0"
	PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag1 PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag values.
func (PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) AllValues() []PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag {
	return []PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag{
		PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag0,
		PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag(data) {
	case PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag0:
		*s = PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag0
		return nil
	case PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag1:
		*s = PaymentKonbiniGeneratingBarcodeResponseOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
// Ref: #/components/schemas/Payment.Konbini.ListRetrieving.Response
type PaymentKonbiniListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString                                   `json:"link_previous"`
	List         []PaymentKonbiniListRetrievingResponseListItem `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PaymentKonbiniListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PaymentKonbiniListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PaymentKonbiniListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PaymentKonbiniListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PaymentKonbiniListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PaymentKonbiniListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PaymentKonbiniListRetrievingResponse) GetList() []PaymentKonbiniListRetrievingResponseListItem {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PaymentKonbiniListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PaymentKonbiniListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PaymentKonbiniListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PaymentKonbiniListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PaymentKonbiniListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PaymentKonbiniListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PaymentKonbiniListRetrievingResponse) SetList(val []PaymentKonbiniListRetrievingResponseListItem) {
	s.List = val
}

// Merged schema.
type PaymentKonbiniListRetrievingResponseListItem struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString     `json:"customer_group_id"`
	ErrorCode       OptErrorCode     `json:"error_code"`
	Created         OptCreated       `json:"created"`
	Updated         OptNilUpdated    `json:"updated"`
	PayType         OptPayType       `json:"pay_type"`
	Status          OptPaymentStatus `json:"status"`
	// 支払い期限日数\
	// この決済の支払い期限日数です。`"0"`日から`"14"`日まで指定できます。
	// -
	// `"0"`を指定すると決済を作成した当日に限り支払いが可能な決済が作成されます。
	// - デフォルト：`"2"`.
	PaymentTermDay OptNilString `json:"payment_term_day"`
	// 支払い期限日時\
	// コンビニ決済の支払い期限日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentTerm OptNilString `json:"payment_term"`
	// 支払日時\
	// コンビニ店頭で購入者が支払いを行った日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
	// バーコード画像 Base64エンコード済み画像データ\
	// コンビニ店頭での支払いに使用するバーコード画像のBase64エンコード済みデータです。このデータをデコードして表示します。\
	// バーコード画像はレギュレーションに従って表示する必要があります。詳細は[Docs > レギュレーションと注意事項](https://docs.fincode.jp/payment/konbini/note)から参照できます。.
	Barcode OptNilString `json:"barcode"`
	// バーコード画像 フォーマット\
	// 発行されたバーコード画像（`barcode`）のフォーマットです。.
	BarcodeFormat OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat `json:"barcode_format"`
	// バーコード画像 横幅（px）\
	// 発行されたバーコード画像（`barcode`）の横幅です。.
	BarcodeWidth OptNilString `json:"barcode_width"`
	// バーコード画像 縦幅（px）\
	// 発行されたバーコード画像（`barcode`）の縦幅です。.
	BarcodeHeight OptNilString `json:"barcode_height"`
	// 多重支払フラグ\
	// この決済に対して複数回支払いが行われた場合`1`になります。
	// - `0`: 0回、または1回の支払いが行われた
	// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
	OverpaymentFlag OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag `json:"overpayment_flag"`
	// キャンセル後支払フラグ\
	// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
	// - `0`: キャンセル後支払は行われていない
	// - `1`: キャンセル後、購入者による支払いが行われた.
	CancelOverpaymentFlag OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag `json:"cancel_overpayment_flag"`
	KonbiniCode           OptKonbiniCode                                                       `json:"konbini_code"`
	// コンビニ店舗コード\
	// コンビニ事業者ごとに独自体系の店舗コードです。.
	KonbiniStoreCode jx.Raw        `json:"konbini_store_code"`
	DeviceName       OptDeviceName `json:"device_name"`
	// OSバージョン.
	OsVersion jx.Raw       `json:"os_version"`
	WinWidth  OptWinWidth  `json:"win_width"`
	WinHeight OptWinHeight `json:"win_height"`
	// 画面横幅のDPI.
	Xdpi jx.Raw `json:"xdpi"`
	// 画面縦幅のDPI.
	Ydpi   jx.Raw                         `json:"ydpi"`
	Result OptKonbiniPaymentProcessResult `json:"result"`
	// 注文管理ID.
	OrderSerial OptNilString `json:"order_serial"`
	// 請求ID.
	InvoiceID OptNilString `json:"invoice_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetPaymentTermDay() OptNilString {
	return s.PaymentTermDay
}

// GetPaymentTerm returns the value of PaymentTerm.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetPaymentTerm() OptNilString {
	return s.PaymentTerm
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// GetBarcode returns the value of Barcode.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetBarcode() OptNilString {
	return s.Barcode
}

// GetBarcodeFormat returns the value of BarcodeFormat.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetBarcodeFormat() OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat {
	return s.BarcodeFormat
}

// GetBarcodeWidth returns the value of BarcodeWidth.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetBarcodeWidth() OptNilString {
	return s.BarcodeWidth
}

// GetBarcodeHeight returns the value of BarcodeHeight.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetBarcodeHeight() OptNilString {
	return s.BarcodeHeight
}

// GetOverpaymentFlag returns the value of OverpaymentFlag.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetOverpaymentFlag() OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag {
	return s.OverpaymentFlag
}

// GetCancelOverpaymentFlag returns the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetCancelOverpaymentFlag() OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag {
	return s.CancelOverpaymentFlag
}

// GetKonbiniCode returns the value of KonbiniCode.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetKonbiniCode() OptKonbiniCode {
	return s.KonbiniCode
}

// GetKonbiniStoreCode returns the value of KonbiniStoreCode.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetKonbiniStoreCode() jx.Raw {
	return s.KonbiniStoreCode
}

// GetDeviceName returns the value of DeviceName.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetDeviceName() OptDeviceName {
	return s.DeviceName
}

// GetOsVersion returns the value of OsVersion.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetOsVersion() jx.Raw {
	return s.OsVersion
}

// GetWinWidth returns the value of WinWidth.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetWinWidth() OptWinWidth {
	return s.WinWidth
}

// GetWinHeight returns the value of WinHeight.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetWinHeight() OptWinHeight {
	return s.WinHeight
}

// GetXdpi returns the value of Xdpi.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetXdpi() jx.Raw {
	return s.Xdpi
}

// GetYdpi returns the value of Ydpi.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetYdpi() jx.Raw {
	return s.Ydpi
}

// GetResult returns the value of Result.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetResult() OptKonbiniPaymentProcessResult {
	return s.Result
}

// GetOrderSerial returns the value of OrderSerial.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetOrderSerial() OptNilString {
	return s.OrderSerial
}

// GetInvoiceID returns the value of InvoiceID.
func (s *PaymentKonbiniListRetrievingResponseListItem) GetInvoiceID() OptNilString {
	return s.InvoiceID
}

// SetShopID sets the value of ShopID.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetPaymentTermDay(val OptNilString) {
	s.PaymentTermDay = val
}

// SetPaymentTerm sets the value of PaymentTerm.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetPaymentTerm(val OptNilString) {
	s.PaymentTerm = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// SetBarcode sets the value of Barcode.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetBarcode(val OptNilString) {
	s.Barcode = val
}

// SetBarcodeFormat sets the value of BarcodeFormat.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetBarcodeFormat(val OptNilPaymentKonbiniListRetrievingResponseListItemBarcodeFormat) {
	s.BarcodeFormat = val
}

// SetBarcodeWidth sets the value of BarcodeWidth.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetBarcodeWidth(val OptNilString) {
	s.BarcodeWidth = val
}

// SetBarcodeHeight sets the value of BarcodeHeight.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetBarcodeHeight(val OptNilString) {
	s.BarcodeHeight = val
}

// SetOverpaymentFlag sets the value of OverpaymentFlag.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetOverpaymentFlag(val OptPaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) {
	s.OverpaymentFlag = val
}

// SetCancelOverpaymentFlag sets the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetCancelOverpaymentFlag(val OptPaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) {
	s.CancelOverpaymentFlag = val
}

// SetKonbiniCode sets the value of KonbiniCode.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetKonbiniCode(val OptKonbiniCode) {
	s.KonbiniCode = val
}

// SetKonbiniStoreCode sets the value of KonbiniStoreCode.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetKonbiniStoreCode(val jx.Raw) {
	s.KonbiniStoreCode = val
}

// SetDeviceName sets the value of DeviceName.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetDeviceName(val OptDeviceName) {
	s.DeviceName = val
}

// SetOsVersion sets the value of OsVersion.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetOsVersion(val jx.Raw) {
	s.OsVersion = val
}

// SetWinWidth sets the value of WinWidth.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetWinWidth(val OptWinWidth) {
	s.WinWidth = val
}

// SetWinHeight sets the value of WinHeight.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetWinHeight(val OptWinHeight) {
	s.WinHeight = val
}

// SetXdpi sets the value of Xdpi.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetXdpi(val jx.Raw) {
	s.Xdpi = val
}

// SetYdpi sets the value of Ydpi.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetYdpi(val jx.Raw) {
	s.Ydpi = val
}

// SetResult sets the value of Result.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetResult(val OptKonbiniPaymentProcessResult) {
	s.Result = val
}

// SetOrderSerial sets the value of OrderSerial.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetOrderSerial(val OptNilString) {
	s.OrderSerial = val
}

// SetInvoiceID sets the value of InvoiceID.
func (s *PaymentKonbiniListRetrievingResponseListItem) SetInvoiceID(val OptNilString) {
	s.InvoiceID = val
}

// バーコード画像 フォーマット\
// 発行されたバーコード画像（`barcode`）のフォーマットです。.
type PaymentKonbiniListRetrievingResponseListItemBarcodeFormat string

const (
	PaymentKonbiniListRetrievingResponseListItemBarcodeFormatJPG PaymentKonbiniListRetrievingResponseListItemBarcodeFormat = "jpg"
	PaymentKonbiniListRetrievingResponseListItemBarcodeFormatPNG PaymentKonbiniListRetrievingResponseListItemBarcodeFormat = "png"
	PaymentKonbiniListRetrievingResponseListItemBarcodeFormatBmp PaymentKonbiniListRetrievingResponseListItemBarcodeFormat = "bmp"
)

// AllValues returns all PaymentKonbiniListRetrievingResponseListItemBarcodeFormat values.
func (PaymentKonbiniListRetrievingResponseListItemBarcodeFormat) AllValues() []PaymentKonbiniListRetrievingResponseListItemBarcodeFormat {
	return []PaymentKonbiniListRetrievingResponseListItemBarcodeFormat{
		PaymentKonbiniListRetrievingResponseListItemBarcodeFormatJPG,
		PaymentKonbiniListRetrievingResponseListItemBarcodeFormatPNG,
		PaymentKonbiniListRetrievingResponseListItemBarcodeFormatBmp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniListRetrievingResponseListItemBarcodeFormat) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniListRetrievingResponseListItemBarcodeFormatJPG:
		return []byte(s), nil
	case PaymentKonbiniListRetrievingResponseListItemBarcodeFormatPNG:
		return []byte(s), nil
	case PaymentKonbiniListRetrievingResponseListItemBarcodeFormatBmp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniListRetrievingResponseListItemBarcodeFormat) UnmarshalText(data []byte) error {
	switch PaymentKonbiniListRetrievingResponseListItemBarcodeFormat(data) {
	case PaymentKonbiniListRetrievingResponseListItemBarcodeFormatJPG:
		*s = PaymentKonbiniListRetrievingResponseListItemBarcodeFormatJPG
		return nil
	case PaymentKonbiniListRetrievingResponseListItemBarcodeFormatPNG:
		*s = PaymentKonbiniListRetrievingResponseListItemBarcodeFormatPNG
		return nil
	case PaymentKonbiniListRetrievingResponseListItemBarcodeFormatBmp:
		*s = PaymentKonbiniListRetrievingResponseListItemBarcodeFormatBmp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// キャンセル後支払フラグ\
// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
// - `0`: キャンセル後支払は行われていない
// - `1`: キャンセル後、購入者による支払いが行われた.
type PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag string

const (
	PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag0 PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag = "0"
	PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag1 PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag values.
func (PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) AllValues() []PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag {
	return []PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag{
		PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag0,
		PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag(data) {
	case PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag0:
		*s = PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag0
		return nil
	case PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag1:
		*s = PaymentKonbiniListRetrievingResponseListItemCancelOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 多重支払フラグ\
// この決済に対して複数回支払いが行われた場合`1`になります。
// - `0`: 0回、または1回の支払いが行われた
// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
type PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag string

const (
	PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag0 PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag = "0"
	PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag1 PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag values.
func (PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) AllValues() []PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag {
	return []PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag{
		PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag0,
		PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag(data) {
	case PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag0:
		*s = PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag0
		return nil
	case PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag1:
		*s = PaymentKonbiniListRetrievingResponseListItemOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
// Ref: #/components/schemas/Payment.Konbini.Retrieving.Response
type PaymentKonbiniRetrievingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString     `json:"customer_group_id"`
	ErrorCode       OptErrorCode     `json:"error_code"`
	Created         OptCreated       `json:"created"`
	Updated         OptNilUpdated    `json:"updated"`
	PayType         OptPayType       `json:"pay_type"`
	Status          OptPaymentStatus `json:"status"`
	// 支払い期限日数\
	// この決済の支払い期限日数です。`"0"`日から`"14"`日まで指定できます。
	// -
	// `"0"`を指定すると決済を作成した当日に限り支払いが可能な決済が作成されます。
	// - デフォルト：`"2"`.
	PaymentTermDay OptNilString `json:"payment_term_day"`
	// 支払い期限日時\
	// コンビニ決済の支払い期限日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentTerm OptNilString `json:"payment_term"`
	// 支払日時\
	// コンビニ店頭で購入者が支払いを行った日時です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
	// バーコード画像 Base64エンコード済み画像データ\
	// コンビニ店頭での支払いに使用するバーコード画像のBase64エンコード済みデータです。このデータをデコードして表示します。\
	// バーコード画像はレギュレーションに従って表示する必要があります。詳細は[Docs > レギュレーションと注意事項](https://docs.fincode.jp/payment/konbini/note)から参照できます。.
	Barcode OptNilString `json:"barcode"`
	// バーコード画像 フォーマット\
	// 発行されたバーコード画像（`barcode`）のフォーマットです。.
	BarcodeFormat OptNilPaymentKonbiniRetrievingResponseBarcodeFormat `json:"barcode_format"`
	// バーコード画像 横幅（px）\
	// 発行されたバーコード画像（`barcode`）の横幅です。.
	BarcodeWidth OptNilString `json:"barcode_width"`
	// バーコード画像 縦幅（px）\
	// 発行されたバーコード画像（`barcode`）の縦幅です。.
	BarcodeHeight OptNilString `json:"barcode_height"`
	// 多重支払フラグ\
	// この決済に対して複数回支払いが行われた場合`1`になります。
	// - `0`: 0回、または1回の支払いが行われた
	// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
	OverpaymentFlag OptPaymentKonbiniRetrievingResponseOverpaymentFlag `json:"overpayment_flag"`
	// キャンセル後支払フラグ\
	// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
	// - `0`: キャンセル後支払は行われていない
	// - `1`: キャンセル後、購入者による支払いが行われた.
	CancelOverpaymentFlag OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag `json:"cancel_overpayment_flag"`
	KonbiniCode           OptKonbiniCode                                           `json:"konbini_code"`
	// コンビニ店舗コード\
	// コンビニ事業者ごとに独自体系の店舗コードです。.
	KonbiniStoreCode jx.Raw        `json:"konbini_store_code"`
	DeviceName       OptDeviceName `json:"device_name"`
	// OSバージョン.
	OsVersion jx.Raw       `json:"os_version"`
	WinWidth  OptWinWidth  `json:"win_width"`
	WinHeight OptWinHeight `json:"win_height"`
	// 画面横幅のDPI.
	Xdpi jx.Raw `json:"xdpi"`
	// 画面縦幅のDPI.
	Ydpi   jx.Raw                         `json:"ydpi"`
	Result OptKonbiniPaymentProcessResult `json:"result"`
	// 注文管理ID.
	OrderSerial OptNilString `json:"order_serial"`
	// 請求ID.
	InvoiceID OptNilString `json:"invoice_id"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentKonbiniRetrievingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentKonbiniRetrievingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentKonbiniRetrievingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentKonbiniRetrievingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentKonbiniRetrievingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentKonbiniRetrievingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentKonbiniRetrievingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentKonbiniRetrievingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentKonbiniRetrievingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentKonbiniRetrievingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentKonbiniRetrievingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentKonbiniRetrievingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentKonbiniRetrievingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentKonbiniRetrievingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentKonbiniRetrievingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentKonbiniRetrievingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *PaymentKonbiniRetrievingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentKonbiniRetrievingResponse) GetPaymentTermDay() OptNilString {
	return s.PaymentTermDay
}

// GetPaymentTerm returns the value of PaymentTerm.
func (s *PaymentKonbiniRetrievingResponse) GetPaymentTerm() OptNilString {
	return s.PaymentTerm
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentKonbiniRetrievingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// GetBarcode returns the value of Barcode.
func (s *PaymentKonbiniRetrievingResponse) GetBarcode() OptNilString {
	return s.Barcode
}

// GetBarcodeFormat returns the value of BarcodeFormat.
func (s *PaymentKonbiniRetrievingResponse) GetBarcodeFormat() OptNilPaymentKonbiniRetrievingResponseBarcodeFormat {
	return s.BarcodeFormat
}

// GetBarcodeWidth returns the value of BarcodeWidth.
func (s *PaymentKonbiniRetrievingResponse) GetBarcodeWidth() OptNilString {
	return s.BarcodeWidth
}

// GetBarcodeHeight returns the value of BarcodeHeight.
func (s *PaymentKonbiniRetrievingResponse) GetBarcodeHeight() OptNilString {
	return s.BarcodeHeight
}

// GetOverpaymentFlag returns the value of OverpaymentFlag.
func (s *PaymentKonbiniRetrievingResponse) GetOverpaymentFlag() OptPaymentKonbiniRetrievingResponseOverpaymentFlag {
	return s.OverpaymentFlag
}

// GetCancelOverpaymentFlag returns the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniRetrievingResponse) GetCancelOverpaymentFlag() OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag {
	return s.CancelOverpaymentFlag
}

// GetKonbiniCode returns the value of KonbiniCode.
func (s *PaymentKonbiniRetrievingResponse) GetKonbiniCode() OptKonbiniCode {
	return s.KonbiniCode
}

// GetKonbiniStoreCode returns the value of KonbiniStoreCode.
func (s *PaymentKonbiniRetrievingResponse) GetKonbiniStoreCode() jx.Raw {
	return s.KonbiniStoreCode
}

// GetDeviceName returns the value of DeviceName.
func (s *PaymentKonbiniRetrievingResponse) GetDeviceName() OptDeviceName {
	return s.DeviceName
}

// GetOsVersion returns the value of OsVersion.
func (s *PaymentKonbiniRetrievingResponse) GetOsVersion() jx.Raw {
	return s.OsVersion
}

// GetWinWidth returns the value of WinWidth.
func (s *PaymentKonbiniRetrievingResponse) GetWinWidth() OptWinWidth {
	return s.WinWidth
}

// GetWinHeight returns the value of WinHeight.
func (s *PaymentKonbiniRetrievingResponse) GetWinHeight() OptWinHeight {
	return s.WinHeight
}

// GetXdpi returns the value of Xdpi.
func (s *PaymentKonbiniRetrievingResponse) GetXdpi() jx.Raw {
	return s.Xdpi
}

// GetYdpi returns the value of Ydpi.
func (s *PaymentKonbiniRetrievingResponse) GetYdpi() jx.Raw {
	return s.Ydpi
}

// GetResult returns the value of Result.
func (s *PaymentKonbiniRetrievingResponse) GetResult() OptKonbiniPaymentProcessResult {
	return s.Result
}

// GetOrderSerial returns the value of OrderSerial.
func (s *PaymentKonbiniRetrievingResponse) GetOrderSerial() OptNilString {
	return s.OrderSerial
}

// GetInvoiceID returns the value of InvoiceID.
func (s *PaymentKonbiniRetrievingResponse) GetInvoiceID() OptNilString {
	return s.InvoiceID
}

// SetShopID sets the value of ShopID.
func (s *PaymentKonbiniRetrievingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentKonbiniRetrievingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentKonbiniRetrievingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentKonbiniRetrievingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentKonbiniRetrievingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentKonbiniRetrievingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentKonbiniRetrievingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentKonbiniRetrievingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentKonbiniRetrievingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentKonbiniRetrievingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentKonbiniRetrievingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentKonbiniRetrievingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentKonbiniRetrievingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentKonbiniRetrievingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentKonbiniRetrievingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentKonbiniRetrievingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *PaymentKonbiniRetrievingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentKonbiniRetrievingResponse) SetPaymentTermDay(val OptNilString) {
	s.PaymentTermDay = val
}

// SetPaymentTerm sets the value of PaymentTerm.
func (s *PaymentKonbiniRetrievingResponse) SetPaymentTerm(val OptNilString) {
	s.PaymentTerm = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentKonbiniRetrievingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// SetBarcode sets the value of Barcode.
func (s *PaymentKonbiniRetrievingResponse) SetBarcode(val OptNilString) {
	s.Barcode = val
}

// SetBarcodeFormat sets the value of BarcodeFormat.
func (s *PaymentKonbiniRetrievingResponse) SetBarcodeFormat(val OptNilPaymentKonbiniRetrievingResponseBarcodeFormat) {
	s.BarcodeFormat = val
}

// SetBarcodeWidth sets the value of BarcodeWidth.
func (s *PaymentKonbiniRetrievingResponse) SetBarcodeWidth(val OptNilString) {
	s.BarcodeWidth = val
}

// SetBarcodeHeight sets the value of BarcodeHeight.
func (s *PaymentKonbiniRetrievingResponse) SetBarcodeHeight(val OptNilString) {
	s.BarcodeHeight = val
}

// SetOverpaymentFlag sets the value of OverpaymentFlag.
func (s *PaymentKonbiniRetrievingResponse) SetOverpaymentFlag(val OptPaymentKonbiniRetrievingResponseOverpaymentFlag) {
	s.OverpaymentFlag = val
}

// SetCancelOverpaymentFlag sets the value of CancelOverpaymentFlag.
func (s *PaymentKonbiniRetrievingResponse) SetCancelOverpaymentFlag(val OptPaymentKonbiniRetrievingResponseCancelOverpaymentFlag) {
	s.CancelOverpaymentFlag = val
}

// SetKonbiniCode sets the value of KonbiniCode.
func (s *PaymentKonbiniRetrievingResponse) SetKonbiniCode(val OptKonbiniCode) {
	s.KonbiniCode = val
}

// SetKonbiniStoreCode sets the value of KonbiniStoreCode.
func (s *PaymentKonbiniRetrievingResponse) SetKonbiniStoreCode(val jx.Raw) {
	s.KonbiniStoreCode = val
}

// SetDeviceName sets the value of DeviceName.
func (s *PaymentKonbiniRetrievingResponse) SetDeviceName(val OptDeviceName) {
	s.DeviceName = val
}

// SetOsVersion sets the value of OsVersion.
func (s *PaymentKonbiniRetrievingResponse) SetOsVersion(val jx.Raw) {
	s.OsVersion = val
}

// SetWinWidth sets the value of WinWidth.
func (s *PaymentKonbiniRetrievingResponse) SetWinWidth(val OptWinWidth) {
	s.WinWidth = val
}

// SetWinHeight sets the value of WinHeight.
func (s *PaymentKonbiniRetrievingResponse) SetWinHeight(val OptWinHeight) {
	s.WinHeight = val
}

// SetXdpi sets the value of Xdpi.
func (s *PaymentKonbiniRetrievingResponse) SetXdpi(val jx.Raw) {
	s.Xdpi = val
}

// SetYdpi sets the value of Ydpi.
func (s *PaymentKonbiniRetrievingResponse) SetYdpi(val jx.Raw) {
	s.Ydpi = val
}

// SetResult sets the value of Result.
func (s *PaymentKonbiniRetrievingResponse) SetResult(val OptKonbiniPaymentProcessResult) {
	s.Result = val
}

// SetOrderSerial sets the value of OrderSerial.
func (s *PaymentKonbiniRetrievingResponse) SetOrderSerial(val OptNilString) {
	s.OrderSerial = val
}

// SetInvoiceID sets the value of InvoiceID.
func (s *PaymentKonbiniRetrievingResponse) SetInvoiceID(val OptNilString) {
	s.InvoiceID = val
}

// バーコード画像 フォーマット\
// 発行されたバーコード画像（`barcode`）のフォーマットです。.
type PaymentKonbiniRetrievingResponseBarcodeFormat string

const (
	PaymentKonbiniRetrievingResponseBarcodeFormatJPG PaymentKonbiniRetrievingResponseBarcodeFormat = "jpg"
	PaymentKonbiniRetrievingResponseBarcodeFormatPNG PaymentKonbiniRetrievingResponseBarcodeFormat = "png"
	PaymentKonbiniRetrievingResponseBarcodeFormatBmp PaymentKonbiniRetrievingResponseBarcodeFormat = "bmp"
)

// AllValues returns all PaymentKonbiniRetrievingResponseBarcodeFormat values.
func (PaymentKonbiniRetrievingResponseBarcodeFormat) AllValues() []PaymentKonbiniRetrievingResponseBarcodeFormat {
	return []PaymentKonbiniRetrievingResponseBarcodeFormat{
		PaymentKonbiniRetrievingResponseBarcodeFormatJPG,
		PaymentKonbiniRetrievingResponseBarcodeFormatPNG,
		PaymentKonbiniRetrievingResponseBarcodeFormatBmp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniRetrievingResponseBarcodeFormat) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniRetrievingResponseBarcodeFormatJPG:
		return []byte(s), nil
	case PaymentKonbiniRetrievingResponseBarcodeFormatPNG:
		return []byte(s), nil
	case PaymentKonbiniRetrievingResponseBarcodeFormatBmp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniRetrievingResponseBarcodeFormat) UnmarshalText(data []byte) error {
	switch PaymentKonbiniRetrievingResponseBarcodeFormat(data) {
	case PaymentKonbiniRetrievingResponseBarcodeFormatJPG:
		*s = PaymentKonbiniRetrievingResponseBarcodeFormatJPG
		return nil
	case PaymentKonbiniRetrievingResponseBarcodeFormatPNG:
		*s = PaymentKonbiniRetrievingResponseBarcodeFormatPNG
		return nil
	case PaymentKonbiniRetrievingResponseBarcodeFormatBmp:
		*s = PaymentKonbiniRetrievingResponseBarcodeFormatBmp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// キャンセル後支払フラグ\
// この決済をキャンセルした後に購入者がバーコードを用いて支払いを行った場合`1`になります。
// - `0`: キャンセル後支払は行われていない
// - `1`: キャンセル後、購入者による支払いが行われた.
type PaymentKonbiniRetrievingResponseCancelOverpaymentFlag string

const (
	PaymentKonbiniRetrievingResponseCancelOverpaymentFlag0 PaymentKonbiniRetrievingResponseCancelOverpaymentFlag = "0"
	PaymentKonbiniRetrievingResponseCancelOverpaymentFlag1 PaymentKonbiniRetrievingResponseCancelOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniRetrievingResponseCancelOverpaymentFlag values.
func (PaymentKonbiniRetrievingResponseCancelOverpaymentFlag) AllValues() []PaymentKonbiniRetrievingResponseCancelOverpaymentFlag {
	return []PaymentKonbiniRetrievingResponseCancelOverpaymentFlag{
		PaymentKonbiniRetrievingResponseCancelOverpaymentFlag0,
		PaymentKonbiniRetrievingResponseCancelOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniRetrievingResponseCancelOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniRetrievingResponseCancelOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniRetrievingResponseCancelOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniRetrievingResponseCancelOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniRetrievingResponseCancelOverpaymentFlag(data) {
	case PaymentKonbiniRetrievingResponseCancelOverpaymentFlag0:
		*s = PaymentKonbiniRetrievingResponseCancelOverpaymentFlag0
		return nil
	case PaymentKonbiniRetrievingResponseCancelOverpaymentFlag1:
		*s = PaymentKonbiniRetrievingResponseCancelOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 多重支払フラグ\
// この決済に対して複数回支払いが行われた場合`1`になります。
// - `0`: 0回、または1回の支払いが行われた
// - `1`: 2回以上、同一のバーコードを用いて支払いが行われた.
type PaymentKonbiniRetrievingResponseOverpaymentFlag string

const (
	PaymentKonbiniRetrievingResponseOverpaymentFlag0 PaymentKonbiniRetrievingResponseOverpaymentFlag = "0"
	PaymentKonbiniRetrievingResponseOverpaymentFlag1 PaymentKonbiniRetrievingResponseOverpaymentFlag = "1"
)

// AllValues returns all PaymentKonbiniRetrievingResponseOverpaymentFlag values.
func (PaymentKonbiniRetrievingResponseOverpaymentFlag) AllValues() []PaymentKonbiniRetrievingResponseOverpaymentFlag {
	return []PaymentKonbiniRetrievingResponseOverpaymentFlag{
		PaymentKonbiniRetrievingResponseOverpaymentFlag0,
		PaymentKonbiniRetrievingResponseOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentKonbiniRetrievingResponseOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentKonbiniRetrievingResponseOverpaymentFlag0:
		return []byte(s), nil
	case PaymentKonbiniRetrievingResponseOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentKonbiniRetrievingResponseOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentKonbiniRetrievingResponseOverpaymentFlag(data) {
	case PaymentKonbiniRetrievingResponseOverpaymentFlag0:
		*s = PaymentKonbiniRetrievingResponseOverpaymentFlag0
		return nil
	case PaymentKonbiniRetrievingResponseOverpaymentFlag1:
		*s = PaymentKonbiniRetrievingResponseOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.ListRetrieving.ApplePay.QueryParams
type PaymentListRetrievingApplePayQueryParams struct {
	Status OptPaymentStatus `json:"status"`
	// 仮売上有効期限（始値）\
	// 仮売上有効期限（`auth_max_date`）を対象に範囲検索を行います。この日付以降に仮売上が有効期限切れとなる決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	AuthMaxDateFrom OptString `json:"auth_max_date_from"`
	// 仮売上有効期限（終値）\
	// 仮売上有効期限（`auth_max_date`）を対象に範囲検索を行います。この日付以前に仮売上が有効期限切れとなる決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	AuthMaxDateTo OptString `json:"auth_max_date_to"`
	Sort          OptSort   `json:"sort"`
}

// GetStatus returns the value of Status.
func (s *PaymentListRetrievingApplePayQueryParams) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetAuthMaxDateFrom returns the value of AuthMaxDateFrom.
func (s *PaymentListRetrievingApplePayQueryParams) GetAuthMaxDateFrom() OptString {
	return s.AuthMaxDateFrom
}

// GetAuthMaxDateTo returns the value of AuthMaxDateTo.
func (s *PaymentListRetrievingApplePayQueryParams) GetAuthMaxDateTo() OptString {
	return s.AuthMaxDateTo
}

// GetSort returns the value of Sort.
func (s *PaymentListRetrievingApplePayQueryParams) GetSort() OptSort {
	return s.Sort
}

// SetStatus sets the value of Status.
func (s *PaymentListRetrievingApplePayQueryParams) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetAuthMaxDateFrom sets the value of AuthMaxDateFrom.
func (s *PaymentListRetrievingApplePayQueryParams) SetAuthMaxDateFrom(val OptString) {
	s.AuthMaxDateFrom = val
}

// SetAuthMaxDateTo sets the value of AuthMaxDateTo.
func (s *PaymentListRetrievingApplePayQueryParams) SetAuthMaxDateTo(val OptString) {
	s.AuthMaxDateTo = val
}

// SetSort sets the value of Sort.
func (s *PaymentListRetrievingApplePayQueryParams) SetSort(val OptSort) {
	s.Sort = val
}

// Ref: #/components/schemas/Payment.ListRetrieving.Card.QueryParams
type PaymentListRetrievingCardQueryParams struct {
	Status OptPaymentStatus `json:"status"`
	// 仮売上有効期限（始値）\
	// 仮売上有効期限（`auth_max_date`）を対象に範囲検索を行います。この日付以降に仮売上が有効期限切れとなる決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	AuthMaxDateFrom OptString `json:"auth_max_date_from"`
	// 仮売上有効期限（終値）\
	// 仮売上有効期限（`auth_max_date`）を対象に範囲検索を行います。この日付以前に仮売上が有効期限切れとなる決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	AuthMaxDateTo OptString `json:"auth_max_date_to"`
	// サブスクリプションID\
	// サブスクリプションIDを指定して、指定したサブスクリプションによって作成された決済情報を取得します。.
	SubscriptionID OptString `json:"subscription_id"`
	// 課金種別\
	// 指定した課金種別の決済情報を取得します。カンマ区切りにすることで複数指定（OR検索）できます。
	// - `onetime`: サブスクリプションでない都度払い
	// - `subscription`: サブスクリプション.
	PayPattern OptPaymentListRetrievingCardQueryParamsPayPattern `json:"pay_pattern"`
	Sort       OptSort                                           `json:"sort"`
}

// GetStatus returns the value of Status.
func (s *PaymentListRetrievingCardQueryParams) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetAuthMaxDateFrom returns the value of AuthMaxDateFrom.
func (s *PaymentListRetrievingCardQueryParams) GetAuthMaxDateFrom() OptString {
	return s.AuthMaxDateFrom
}

// GetAuthMaxDateTo returns the value of AuthMaxDateTo.
func (s *PaymentListRetrievingCardQueryParams) GetAuthMaxDateTo() OptString {
	return s.AuthMaxDateTo
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentListRetrievingCardQueryParams) GetSubscriptionID() OptString {
	return s.SubscriptionID
}

// GetPayPattern returns the value of PayPattern.
func (s *PaymentListRetrievingCardQueryParams) GetPayPattern() OptPaymentListRetrievingCardQueryParamsPayPattern {
	return s.PayPattern
}

// GetSort returns the value of Sort.
func (s *PaymentListRetrievingCardQueryParams) GetSort() OptSort {
	return s.Sort
}

// SetStatus sets the value of Status.
func (s *PaymentListRetrievingCardQueryParams) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetAuthMaxDateFrom sets the value of AuthMaxDateFrom.
func (s *PaymentListRetrievingCardQueryParams) SetAuthMaxDateFrom(val OptString) {
	s.AuthMaxDateFrom = val
}

// SetAuthMaxDateTo sets the value of AuthMaxDateTo.
func (s *PaymentListRetrievingCardQueryParams) SetAuthMaxDateTo(val OptString) {
	s.AuthMaxDateTo = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentListRetrievingCardQueryParams) SetSubscriptionID(val OptString) {
	s.SubscriptionID = val
}

// SetPayPattern sets the value of PayPattern.
func (s *PaymentListRetrievingCardQueryParams) SetPayPattern(val OptPaymentListRetrievingCardQueryParamsPayPattern) {
	s.PayPattern = val
}

// SetSort sets the value of Sort.
func (s *PaymentListRetrievingCardQueryParams) SetSort(val OptSort) {
	s.Sort = val
}

// 課金種別\
// 指定した課金種別の決済情報を取得します。カンマ区切りにすることで複数指定（OR検索）できます。
// - `onetime`: サブスクリプションでない都度払い
// - `subscription`: サブスクリプション.
type PaymentListRetrievingCardQueryParamsPayPattern string

const (
	PaymentListRetrievingCardQueryParamsPayPatternOnetime      PaymentListRetrievingCardQueryParamsPayPattern = "onetime"
	PaymentListRetrievingCardQueryParamsPayPatternSubscription PaymentListRetrievingCardQueryParamsPayPattern = "subscription"
)

// AllValues returns all PaymentListRetrievingCardQueryParamsPayPattern values.
func (PaymentListRetrievingCardQueryParamsPayPattern) AllValues() []PaymentListRetrievingCardQueryParamsPayPattern {
	return []PaymentListRetrievingCardQueryParamsPayPattern{
		PaymentListRetrievingCardQueryParamsPayPatternOnetime,
		PaymentListRetrievingCardQueryParamsPayPatternSubscription,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentListRetrievingCardQueryParamsPayPattern) MarshalText() ([]byte, error) {
	switch s {
	case PaymentListRetrievingCardQueryParamsPayPatternOnetime:
		return []byte(s), nil
	case PaymentListRetrievingCardQueryParamsPayPatternSubscription:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentListRetrievingCardQueryParamsPayPattern) UnmarshalText(data []byte) error {
	switch PaymentListRetrievingCardQueryParamsPayPattern(data) {
	case PaymentListRetrievingCardQueryParamsPayPatternOnetime:
		*s = PaymentListRetrievingCardQueryParamsPayPatternOnetime
		return nil
	case PaymentListRetrievingCardQueryParamsPayPatternSubscription:
		*s = PaymentListRetrievingCardQueryParamsPayPatternSubscription
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.ListRetrieving.DirectDebit.QueryParams
type PaymentListRetrievingDirectDebitQueryParams struct {
	// 振替指定日（始値）\
	// 振替指定日（`target_date`）を対象に範囲検索を行います。この日付以降に振替指定日が設定されている決済情報を取得します。\
	// \
	// 形式： `yyyy/MM/dd`.
	TargetDateFrom OptNilString `json:"target_date_from"`
	// 振替指定日（終値）\
	// 振替指定日（`target_date`）を対象に範囲検索を行います。この日付以前に振替指定日が設定されている決済情報を取得します。\
	// \
	// 形式： `yyyy/MM/dd`.
	TargetDateTo OptNilString `json:"target_date_to"`
	// 引き落とし日（始値）\
	// 引き落とし日（`withdrawal_date`）を対象に範囲検索を行います。この日付以降に引き落としが行われた決済情報を取得します。\
	// \
	// 形式： `yyyy/MM/dd`.
	WithdrawalDateFrom OptNilString `json:"withdrawal_date_from"`
	// 引き落とし日（終値）\
	// 引き落とし日（`withdrawal_date`）を対象に範囲検索を行います。この日付以前に引き落としが行われた決済情報を取得します。\
	// \
	// 形式： `yyyy/MM/dd`.
	WithdrawalDateTo OptNilString             `json:"withdrawal_date_to"`
	ResultCode       OptDirectDebitResultCode `json:"result_code"`
	// 課金種別\
	// 指定した課金種別の決済情報を取得します。カンマ区切りにすることで複数指定（OR検索）できます。
	// - `onetime`: サブスクリプションでない都度払い
	// - `subscription`: サブスクリプション.
	PayPattern OptPaymentListRetrievingDirectDebitQueryParamsPayPattern `json:"pay_pattern"`
	// サブスクリプションID\
	// サブスクリプションIDを指定して、指定したサブスクリプションによって作成された決済情報を取得します。.
	SubscriptionID OptString `json:"subscription_id"`
	Sort           OptSort   `json:"sort"`
}

// GetTargetDateFrom returns the value of TargetDateFrom.
func (s *PaymentListRetrievingDirectDebitQueryParams) GetTargetDateFrom() OptNilString {
	return s.TargetDateFrom
}

// GetTargetDateTo returns the value of TargetDateTo.
func (s *PaymentListRetrievingDirectDebitQueryParams) GetTargetDateTo() OptNilString {
	return s.TargetDateTo
}

// GetWithdrawalDateFrom returns the value of WithdrawalDateFrom.
func (s *PaymentListRetrievingDirectDebitQueryParams) GetWithdrawalDateFrom() OptNilString {
	return s.WithdrawalDateFrom
}

// GetWithdrawalDateTo returns the value of WithdrawalDateTo.
func (s *PaymentListRetrievingDirectDebitQueryParams) GetWithdrawalDateTo() OptNilString {
	return s.WithdrawalDateTo
}

// GetResultCode returns the value of ResultCode.
func (s *PaymentListRetrievingDirectDebitQueryParams) GetResultCode() OptDirectDebitResultCode {
	return s.ResultCode
}

// GetPayPattern returns the value of PayPattern.
func (s *PaymentListRetrievingDirectDebitQueryParams) GetPayPattern() OptPaymentListRetrievingDirectDebitQueryParamsPayPattern {
	return s.PayPattern
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *PaymentListRetrievingDirectDebitQueryParams) GetSubscriptionID() OptString {
	return s.SubscriptionID
}

// GetSort returns the value of Sort.
func (s *PaymentListRetrievingDirectDebitQueryParams) GetSort() OptSort {
	return s.Sort
}

// SetTargetDateFrom sets the value of TargetDateFrom.
func (s *PaymentListRetrievingDirectDebitQueryParams) SetTargetDateFrom(val OptNilString) {
	s.TargetDateFrom = val
}

// SetTargetDateTo sets the value of TargetDateTo.
func (s *PaymentListRetrievingDirectDebitQueryParams) SetTargetDateTo(val OptNilString) {
	s.TargetDateTo = val
}

// SetWithdrawalDateFrom sets the value of WithdrawalDateFrom.
func (s *PaymentListRetrievingDirectDebitQueryParams) SetWithdrawalDateFrom(val OptNilString) {
	s.WithdrawalDateFrom = val
}

// SetWithdrawalDateTo sets the value of WithdrawalDateTo.
func (s *PaymentListRetrievingDirectDebitQueryParams) SetWithdrawalDateTo(val OptNilString) {
	s.WithdrawalDateTo = val
}

// SetResultCode sets the value of ResultCode.
func (s *PaymentListRetrievingDirectDebitQueryParams) SetResultCode(val OptDirectDebitResultCode) {
	s.ResultCode = val
}

// SetPayPattern sets the value of PayPattern.
func (s *PaymentListRetrievingDirectDebitQueryParams) SetPayPattern(val OptPaymentListRetrievingDirectDebitQueryParamsPayPattern) {
	s.PayPattern = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *PaymentListRetrievingDirectDebitQueryParams) SetSubscriptionID(val OptString) {
	s.SubscriptionID = val
}

// SetSort sets the value of Sort.
func (s *PaymentListRetrievingDirectDebitQueryParams) SetSort(val OptSort) {
	s.Sort = val
}

// 課金種別\
// 指定した課金種別の決済情報を取得します。カンマ区切りにすることで複数指定（OR検索）できます。
// - `onetime`: サブスクリプションでない都度払い
// - `subscription`: サブスクリプション.
type PaymentListRetrievingDirectDebitQueryParamsPayPattern string

const (
	PaymentListRetrievingDirectDebitQueryParamsPayPatternOnetime      PaymentListRetrievingDirectDebitQueryParamsPayPattern = "onetime"
	PaymentListRetrievingDirectDebitQueryParamsPayPatternSubscription PaymentListRetrievingDirectDebitQueryParamsPayPattern = "subscription"
)

// AllValues returns all PaymentListRetrievingDirectDebitQueryParamsPayPattern values.
func (PaymentListRetrievingDirectDebitQueryParamsPayPattern) AllValues() []PaymentListRetrievingDirectDebitQueryParamsPayPattern {
	return []PaymentListRetrievingDirectDebitQueryParamsPayPattern{
		PaymentListRetrievingDirectDebitQueryParamsPayPatternOnetime,
		PaymentListRetrievingDirectDebitQueryParamsPayPatternSubscription,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentListRetrievingDirectDebitQueryParamsPayPattern) MarshalText() ([]byte, error) {
	switch s {
	case PaymentListRetrievingDirectDebitQueryParamsPayPatternOnetime:
		return []byte(s), nil
	case PaymentListRetrievingDirectDebitQueryParamsPayPatternSubscription:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentListRetrievingDirectDebitQueryParamsPayPattern) UnmarshalText(data []byte) error {
	switch PaymentListRetrievingDirectDebitQueryParamsPayPattern(data) {
	case PaymentListRetrievingDirectDebitQueryParamsPayPatternOnetime:
		*s = PaymentListRetrievingDirectDebitQueryParamsPayPatternOnetime
		return nil
	case PaymentListRetrievingDirectDebitQueryParamsPayPatternSubscription:
		*s = PaymentListRetrievingDirectDebitQueryParamsPayPatternSubscription
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.ListRetrieving.Konbini.QueryParams
type PaymentListRetrievingKonbiniQueryParams struct {
	Status OptPaymentStatus `json:"status"`
	// 支払い期限（始値）\
	// 支払い期限（`payment_term`）を対象に範囲検索を行います。この日付以降に支払い期限が到来する決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	PaymentTermFrom OptString `json:"payment_term_from"`
	// 支払い期限（終値）\
	// 支払い期限（`payment_term`）を対象に範囲検索を行います。この日付以前に支払い期限が到来する決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	PaymentTermTo OptString `json:"payment_term_to"`
	// 支払い日時（始値）\
	// 支払い日時（`payment_date`）を対象に範囲検索を行います。この日付以降に支払いが行われた決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	PaymentDateFrom OptString `json:"payment_date_from"`
	// 支払い日時（終値）\
	// 支払い日時（`payment_date`）を対象に範囲検索を行います。この日付以前に支払いが行われた決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	PaymentDateTo OptString `json:"payment_date_to"`
	// 多重支払フラグ\
	// 同一のバーコードで複数回支払いが行われた決済を検索する場合`1`を指定します。.
	OverpaymentFlag OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag `json:"overpayment_flag"`
	// キャンセル後支払フラグ\
	// キャンセルされた決済に対して支払いが行われた決済を検索する場合`1`を指定します。.
	CancelOverpaymentFlag OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag `json:"cancel_overpayment_flag"`
	Sort                  OptSort                                                         `json:"sort"`
}

// GetStatus returns the value of Status.
func (s *PaymentListRetrievingKonbiniQueryParams) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetPaymentTermFrom returns the value of PaymentTermFrom.
func (s *PaymentListRetrievingKonbiniQueryParams) GetPaymentTermFrom() OptString {
	return s.PaymentTermFrom
}

// GetPaymentTermTo returns the value of PaymentTermTo.
func (s *PaymentListRetrievingKonbiniQueryParams) GetPaymentTermTo() OptString {
	return s.PaymentTermTo
}

// GetPaymentDateFrom returns the value of PaymentDateFrom.
func (s *PaymentListRetrievingKonbiniQueryParams) GetPaymentDateFrom() OptString {
	return s.PaymentDateFrom
}

// GetPaymentDateTo returns the value of PaymentDateTo.
func (s *PaymentListRetrievingKonbiniQueryParams) GetPaymentDateTo() OptString {
	return s.PaymentDateTo
}

// GetOverpaymentFlag returns the value of OverpaymentFlag.
func (s *PaymentListRetrievingKonbiniQueryParams) GetOverpaymentFlag() OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag {
	return s.OverpaymentFlag
}

// GetCancelOverpaymentFlag returns the value of CancelOverpaymentFlag.
func (s *PaymentListRetrievingKonbiniQueryParams) GetCancelOverpaymentFlag() OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag {
	return s.CancelOverpaymentFlag
}

// GetSort returns the value of Sort.
func (s *PaymentListRetrievingKonbiniQueryParams) GetSort() OptSort {
	return s.Sort
}

// SetStatus sets the value of Status.
func (s *PaymentListRetrievingKonbiniQueryParams) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetPaymentTermFrom sets the value of PaymentTermFrom.
func (s *PaymentListRetrievingKonbiniQueryParams) SetPaymentTermFrom(val OptString) {
	s.PaymentTermFrom = val
}

// SetPaymentTermTo sets the value of PaymentTermTo.
func (s *PaymentListRetrievingKonbiniQueryParams) SetPaymentTermTo(val OptString) {
	s.PaymentTermTo = val
}

// SetPaymentDateFrom sets the value of PaymentDateFrom.
func (s *PaymentListRetrievingKonbiniQueryParams) SetPaymentDateFrom(val OptString) {
	s.PaymentDateFrom = val
}

// SetPaymentDateTo sets the value of PaymentDateTo.
func (s *PaymentListRetrievingKonbiniQueryParams) SetPaymentDateTo(val OptString) {
	s.PaymentDateTo = val
}

// SetOverpaymentFlag sets the value of OverpaymentFlag.
func (s *PaymentListRetrievingKonbiniQueryParams) SetOverpaymentFlag(val OptPaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) {
	s.OverpaymentFlag = val
}

// SetCancelOverpaymentFlag sets the value of CancelOverpaymentFlag.
func (s *PaymentListRetrievingKonbiniQueryParams) SetCancelOverpaymentFlag(val OptPaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) {
	s.CancelOverpaymentFlag = val
}

// SetSort sets the value of Sort.
func (s *PaymentListRetrievingKonbiniQueryParams) SetSort(val OptSort) {
	s.Sort = val
}

// キャンセル後支払フラグ\
// キャンセルされた決済に対して支払いが行われた決済を検索する場合`1`を指定します。.
type PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag string

const (
	PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag0 PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag = "0"
	PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag1 PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag = "1"
)

// AllValues returns all PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag values.
func (PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) AllValues() []PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag {
	return []PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag{
		PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag0,
		PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag0:
		return []byte(s), nil
	case PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag(data) {
	case PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag0:
		*s = PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag0
		return nil
	case PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag1:
		*s = PaymentListRetrievingKonbiniQueryParamsCancelOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 多重支払フラグ\
// 同一のバーコードで複数回支払いが行われた決済を検索する場合`1`を指定します。.
type PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag string

const (
	PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag0 PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag = "0"
	PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag1 PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag = "1"
)

// AllValues returns all PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag values.
func (PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) AllValues() []PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag {
	return []PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag{
		PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag0,
		PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag0:
		return []byte(s), nil
	case PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag) UnmarshalText(data []byte) error {
	switch PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag(data) {
	case PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag0:
		*s = PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag0
		return nil
	case PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag1:
		*s = PaymentListRetrievingKonbiniQueryParamsOverpaymentFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.ListRetrieving.PayPay.QueryParams
type PaymentListRetrievingPayPayQueryParams struct {
	Status OptPaymentStatus `json:"status"`
	// 仮売上有効期限（始値）\
	// 仮売上有効期限（`auth_max_date`）を対象に範囲検索を行います。この日付以降に仮売上が有効期限切れとなる決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	AuthMaxDateFrom OptString `json:"auth_max_date_from"`
	// 仮売上有効期限（終値）\
	// 仮売上有効期限（`auth_max_date`）を対象に範囲検索を行います。この日付以前に仮売上が有効期限切れとなる決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	AuthMaxDateTo OptString `json:"auth_max_date_to"`
	// 支払い日時（始値）\
	// 支払い日時（`payment_date`）を対象に範囲検索を行います。この日付以降に支払いが行われた決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	PaymentDateFrom OptString `json:"payment_date_from"`
	// 支払い日時（終値）\
	// 支払い日時（`payment_date`）を対象に範囲検索を行います。この日付以前に支払いが行われた決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	PaymentDateTo OptString `json:"payment_date_to"`
	Sort          OptSort   `json:"sort"`
}

// GetStatus returns the value of Status.
func (s *PaymentListRetrievingPayPayQueryParams) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetAuthMaxDateFrom returns the value of AuthMaxDateFrom.
func (s *PaymentListRetrievingPayPayQueryParams) GetAuthMaxDateFrom() OptString {
	return s.AuthMaxDateFrom
}

// GetAuthMaxDateTo returns the value of AuthMaxDateTo.
func (s *PaymentListRetrievingPayPayQueryParams) GetAuthMaxDateTo() OptString {
	return s.AuthMaxDateTo
}

// GetPaymentDateFrom returns the value of PaymentDateFrom.
func (s *PaymentListRetrievingPayPayQueryParams) GetPaymentDateFrom() OptString {
	return s.PaymentDateFrom
}

// GetPaymentDateTo returns the value of PaymentDateTo.
func (s *PaymentListRetrievingPayPayQueryParams) GetPaymentDateTo() OptString {
	return s.PaymentDateTo
}

// GetSort returns the value of Sort.
func (s *PaymentListRetrievingPayPayQueryParams) GetSort() OptSort {
	return s.Sort
}

// SetStatus sets the value of Status.
func (s *PaymentListRetrievingPayPayQueryParams) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetAuthMaxDateFrom sets the value of AuthMaxDateFrom.
func (s *PaymentListRetrievingPayPayQueryParams) SetAuthMaxDateFrom(val OptString) {
	s.AuthMaxDateFrom = val
}

// SetAuthMaxDateTo sets the value of AuthMaxDateTo.
func (s *PaymentListRetrievingPayPayQueryParams) SetAuthMaxDateTo(val OptString) {
	s.AuthMaxDateTo = val
}

// SetPaymentDateFrom sets the value of PaymentDateFrom.
func (s *PaymentListRetrievingPayPayQueryParams) SetPaymentDateFrom(val OptString) {
	s.PaymentDateFrom = val
}

// SetPaymentDateTo sets the value of PaymentDateTo.
func (s *PaymentListRetrievingPayPayQueryParams) SetPaymentDateTo(val OptString) {
	s.PaymentDateTo = val
}

// SetSort sets the value of Sort.
func (s *PaymentListRetrievingPayPayQueryParams) SetSort(val OptSort) {
	s.Sort = val
}

// Ref: #/components/schemas/PaymentMethod
type PaymentMethod struct {
	// 決済手段ID.
	ID      OptString               `json:"id"`
	PayType OptPaymentMethodPayType `json:"pay_type"`
	// この決済手段が紐づく顧客のID.
	CustomerID OptString              `json:"customer_id"`
	Status     OptPaymentMethodStatus `json:"status"`
	// リダイレクトURL。\
	// 購入者にこのURLを提供することで、ステータスが`AWAITING_CUSTOMER_ACTION`
	// の決済手段を有効化するためのアクションを購入者にとらせることができます。
	// - 振替口座登録の場合：
	// このURLにアクセスして振替口座登録の承認を行います。このURLには1度だけアクセスできます。
	// - カード登録の場合： このURLにアクセスして3Dセキュア認証を行います。.
	RedirectURL OptNilString `json:"redirect_url"`
	// リダイレクトURLアクセス済みフラグ\
	// 購入者が`redirect_url`にアクセスしたことがあるかどうかを示すフラグです。
	// - `0`: 未アクセス
	// - `1`: 1回以上アクセス済み.
	RedirectURLAccessedFlag OptNilPaymentMethodRedirectURLAccessedFlag `json:"redirect_url_accessed_flag"`
	// 加盟店戻りURL。（成功時）\
	// 購入者がアクションを完了し、決済手段の登録に成功した際にリダイレクトされるURLです。\
	// POSTメソッドでリダイレクトがされます。.
	ReturnURL OptNilString `json:"return_url"`
	// 加盟店戻りURL。（失敗時）\
	// 購入者がアクションを完了し、決済手段の登録に失敗した際にリダイレクトされるURLです。\
	// POSTメソッドでリダイレクトがされます。.
	ReturnURLOnFailure OptNilString `json:"return_url_on_failure"`
	// デフォルトフラグ。\
	// この決済手段が決済実行やサブスクリプション登録などで決済手段IDを指定しない場合に自動的に使用する決済手段かどうかを示すフラグです。\
	// 顧客に対して、決済種別ごとに必ず1つのデフォルト決済手段が存在します。（決済手段が1つも登録されていない場合を除く）
	// - `0`: デフォルト決済手段ではない
	// - `1`: デフォルト決済手段.
	DefaultFlag  OptPaymentMethodDefaultFlag `json:"default_flag"`
	ClientField1 OptNilClientFieldN          `json:"client_field_1"`
	ClientField2 OptNilClientFieldN          `json:"client_field_2"`
	ClientField3 OptNilClientFieldN          `json:"client_field_3"`
	DeleteFlag   OptDeleteFlag               `json:"delete_flag"`
	ProcessDate  OptNilProcessDate           `json:"process_date"`
	Created      OptCreated                  `json:"created"`
	Updated      OptNilUpdated               `json:"updated"`
	// <span class="smallText">この決済手段がカードを表す（`pay_type =
	// Card`）とき、カード情報の詳細がこの`card`オブジェクトに格納されます。</span>.
	Card OptNilPaymentMethodCard `json:"card"`
	// <span class="smallText">この決済手段が振替用口座を表す（`pay_type =
	// Directdebit`）とき、口座情報の詳細がこの`directdebit`オブジェクトに格納されます。</span>.
	Directdebit OptNilPaymentMethodDirectdebit `json:"directdebit"`
}

// GetID returns the value of ID.
func (s *PaymentMethod) GetID() OptString {
	return s.ID
}

// GetPayType returns the value of PayType.
func (s *PaymentMethod) GetPayType() OptPaymentMethodPayType {
	return s.PayType
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentMethod) GetCustomerID() OptString {
	return s.CustomerID
}

// GetStatus returns the value of Status.
func (s *PaymentMethod) GetStatus() OptPaymentMethodStatus {
	return s.Status
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentMethod) GetRedirectURL() OptNilString {
	return s.RedirectURL
}

// GetRedirectURLAccessedFlag returns the value of RedirectURLAccessedFlag.
func (s *PaymentMethod) GetRedirectURLAccessedFlag() OptNilPaymentMethodRedirectURLAccessedFlag {
	return s.RedirectURLAccessedFlag
}

// GetReturnURL returns the value of ReturnURL.
func (s *PaymentMethod) GetReturnURL() OptNilString {
	return s.ReturnURL
}

// GetReturnURLOnFailure returns the value of ReturnURLOnFailure.
func (s *PaymentMethod) GetReturnURLOnFailure() OptNilString {
	return s.ReturnURLOnFailure
}

// GetDefaultFlag returns the value of DefaultFlag.
func (s *PaymentMethod) GetDefaultFlag() OptPaymentMethodDefaultFlag {
	return s.DefaultFlag
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentMethod) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentMethod) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentMethod) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *PaymentMethod) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentMethod) GetProcessDate() OptNilProcessDate {
	return s.ProcessDate
}

// GetCreated returns the value of Created.
func (s *PaymentMethod) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentMethod) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetCard returns the value of Card.
func (s *PaymentMethod) GetCard() OptNilPaymentMethodCard {
	return s.Card
}

// GetDirectdebit returns the value of Directdebit.
func (s *PaymentMethod) GetDirectdebit() OptNilPaymentMethodDirectdebit {
	return s.Directdebit
}

// SetID sets the value of ID.
func (s *PaymentMethod) SetID(val OptString) {
	s.ID = val
}

// SetPayType sets the value of PayType.
func (s *PaymentMethod) SetPayType(val OptPaymentMethodPayType) {
	s.PayType = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentMethod) SetCustomerID(val OptString) {
	s.CustomerID = val
}

// SetStatus sets the value of Status.
func (s *PaymentMethod) SetStatus(val OptPaymentMethodStatus) {
	s.Status = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentMethod) SetRedirectURL(val OptNilString) {
	s.RedirectURL = val
}

// SetRedirectURLAccessedFlag sets the value of RedirectURLAccessedFlag.
func (s *PaymentMethod) SetRedirectURLAccessedFlag(val OptNilPaymentMethodRedirectURLAccessedFlag) {
	s.RedirectURLAccessedFlag = val
}

// SetReturnURL sets the value of ReturnURL.
func (s *PaymentMethod) SetReturnURL(val OptNilString) {
	s.ReturnURL = val
}

// SetReturnURLOnFailure sets the value of ReturnURLOnFailure.
func (s *PaymentMethod) SetReturnURLOnFailure(val OptNilString) {
	s.ReturnURLOnFailure = val
}

// SetDefaultFlag sets the value of DefaultFlag.
func (s *PaymentMethod) SetDefaultFlag(val OptPaymentMethodDefaultFlag) {
	s.DefaultFlag = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentMethod) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentMethod) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentMethod) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *PaymentMethod) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentMethod) SetProcessDate(val OptNilProcessDate) {
	s.ProcessDate = val
}

// SetCreated sets the value of Created.
func (s *PaymentMethod) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentMethod) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetCard sets the value of Card.
func (s *PaymentMethod) SetCard(val OptNilPaymentMethodCard) {
	s.Card = val
}

// SetDirectdebit sets the value of Directdebit.
func (s *PaymentMethod) SetDirectdebit(val OptNilPaymentMethodDirectdebit) {
	s.Directdebit = val
}

func (*PaymentMethod) createCustomerPaymentMethodRes()   {}
func (*PaymentMethod) retrieveCustomerPaymentMethodRes() {}

// <span class="smallText">この決済手段がカードを表す（`pay_type =
// Card`）とき、カード情報の詳細がこの`card`オブジェクトに格納されます。</span>.
type PaymentMethodCard struct {
	// マスク済みカード番号。\
	// <span class="smallText">
	// 下4桁以外をマスクしたカード番号です。\
	// カード情報非保持の原則に基づき、fincodeユーザーはマスクされていないカード番号の代わりにこの値を保持することができます。\
	// </span>
	// 形式：`************1234`.
	CardNo OptString `json:"card_no"`
	// カード有効期限。\
	// 形式：`YYMM`.
	Expire OptNilString `json:"expire"`
	// カード名義人名。.
	HolderName OptNilString `json:"holder_name"`
	Type       OptCardType  `json:"type"`
	Brand      OptCardBrand `json:"brand"`
	// カード番号をもとに生成されたハッシュ値。\
	// <span class="smallText">
	// おなじカード番号に対しては常に同じ値が返されます。\
	// カード情報非保持の原則に基づき、fincodeユーザーはマスクされていないカード番号の代わりにこの値を保持することができます。
	// </span>.
	CardNoHash   OptString       `json:"card_no_hash"`
	TdsType      OptNilTdsType   `json:"tds_type"`
	Tds2Type     OptNilTds2Type  `json:"tds2_type"`
	Tds2Status   OptTds2Status   `json:"tds2_status"`
	MerchantName OptTdTenantName `json:"merchant_name"`
	AccessID     OptAccessID     `json:"access_id"`
	// ACS呼出判定。.
	Acs OptNilString `json:"acs"`
}

// GetCardNo returns the value of CardNo.
func (s *PaymentMethodCard) GetCardNo() OptString {
	return s.CardNo
}

// GetExpire returns the value of Expire.
func (s *PaymentMethodCard) GetExpire() OptNilString {
	return s.Expire
}

// GetHolderName returns the value of HolderName.
func (s *PaymentMethodCard) GetHolderName() OptNilString {
	return s.HolderName
}

// GetType returns the value of Type.
func (s *PaymentMethodCard) GetType() OptCardType {
	return s.Type
}

// GetBrand returns the value of Brand.
func (s *PaymentMethodCard) GetBrand() OptCardBrand {
	return s.Brand
}

// GetCardNoHash returns the value of CardNoHash.
func (s *PaymentMethodCard) GetCardNoHash() OptString {
	return s.CardNoHash
}

// GetTdsType returns the value of TdsType.
func (s *PaymentMethodCard) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentMethodCard) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTds2Status returns the value of Tds2Status.
func (s *PaymentMethodCard) GetTds2Status() OptTds2Status {
	return s.Tds2Status
}

// GetMerchantName returns the value of MerchantName.
func (s *PaymentMethodCard) GetMerchantName() OptTdTenantName {
	return s.MerchantName
}

// GetAccessID returns the value of AccessID.
func (s *PaymentMethodCard) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetAcs returns the value of Acs.
func (s *PaymentMethodCard) GetAcs() OptNilString {
	return s.Acs
}

// SetCardNo sets the value of CardNo.
func (s *PaymentMethodCard) SetCardNo(val OptString) {
	s.CardNo = val
}

// SetExpire sets the value of Expire.
func (s *PaymentMethodCard) SetExpire(val OptNilString) {
	s.Expire = val
}

// SetHolderName sets the value of HolderName.
func (s *PaymentMethodCard) SetHolderName(val OptNilString) {
	s.HolderName = val
}

// SetType sets the value of Type.
func (s *PaymentMethodCard) SetType(val OptCardType) {
	s.Type = val
}

// SetBrand sets the value of Brand.
func (s *PaymentMethodCard) SetBrand(val OptCardBrand) {
	s.Brand = val
}

// SetCardNoHash sets the value of CardNoHash.
func (s *PaymentMethodCard) SetCardNoHash(val OptString) {
	s.CardNoHash = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentMethodCard) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentMethodCard) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTds2Status sets the value of Tds2Status.
func (s *PaymentMethodCard) SetTds2Status(val OptTds2Status) {
	s.Tds2Status = val
}

// SetMerchantName sets the value of MerchantName.
func (s *PaymentMethodCard) SetMerchantName(val OptTdTenantName) {
	s.MerchantName = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentMethodCard) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetAcs sets the value of Acs.
func (s *PaymentMethodCard) SetAcs(val OptNilString) {
	s.Acs = val
}

// デフォルトフラグ。\
// この決済手段が決済実行やサブスクリプション登録などで決済手段IDを指定しない場合に自動的に使用する決済手段かどうかを示すフラグです。\
// 顧客に対して、決済種別ごとに必ず1つのデフォルト決済手段が存在します。（決済手段が1つも登録されていない場合を除く）
// - `0`: デフォルト決済手段ではない
// - `1`: デフォルト決済手段.
type PaymentMethodDefaultFlag string

const (
	PaymentMethodDefaultFlag0 PaymentMethodDefaultFlag = "0"
	PaymentMethodDefaultFlag1 PaymentMethodDefaultFlag = "1"
)

// AllValues returns all PaymentMethodDefaultFlag values.
func (PaymentMethodDefaultFlag) AllValues() []PaymentMethodDefaultFlag {
	return []PaymentMethodDefaultFlag{
		PaymentMethodDefaultFlag0,
		PaymentMethodDefaultFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentMethodDefaultFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentMethodDefaultFlag0:
		return []byte(s), nil
	case PaymentMethodDefaultFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentMethodDefaultFlag) UnmarshalText(data []byte) error {
	switch PaymentMethodDefaultFlag(data) {
	case PaymentMethodDefaultFlag0:
		*s = PaymentMethodDefaultFlag0
		return nil
	case PaymentMethodDefaultFlag1:
		*s = PaymentMethodDefaultFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// <span class="smallText">この決済手段が振替用口座を表す（`pay_type =
// Directdebit`）とき、口座情報の詳細がこの`directdebit`オブジェクトに格納されます。</span>.
type PaymentMethodDirectdebit struct {
	ApplicationType OptNilDirectDebitApplicationType `json:"application_type"`
	// 請求可能予定日。\
	// 口座登録後、実際に請求依頼が可能となると予定される日時です。\
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	ExpectedBillableDate OptNilString `json:"expected_billable_date"`
	// 最終引落日。\
	// 金融機関によってこの口座から実際に引き落とされた実績日のうち、最も新しい日時です。\
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	LastWithdrawalDate OptNilString                    `json:"last_withdrawal_date"`
	LastResultCode     OptNilDirectDebitLastResultCode `json:"last_result_code"`
	// 金融機関種別。
	// - `0`: ゆうちょ銀行以外の金融機関
	// - `1`: ゆうちょ銀行.
	BankType OptNilPaymentMethodDirectdebitBankType `json:"bank_type"`
	// 金融機関コード。\
	// 金融機関のコードです。\
	// 例：`0310`.
	BankCode OptNilString `json:"bank_code"`
	// 金融機関名.
	BankName OptNilString `json:"bank_name"`
	// 支店コード。\
	// 金融機関の支店コードです。\
	// 例：`001`.
	BranchCode OptNilString `json:"branch_code"`
	// 支店名.
	BranchName OptString `json:"branch_name"`
	// 口座種別。
	// - `0`: 普通預金
	// - `1`: 当座預金.
	AccountType OptNilPaymentMethodDirectdebitAccountType `json:"account_type"`
	// 口座番号.
	AccountNumber OptNilString `json:"account_number"`
	// ゆうちょ 預金記号.
	PostalAccountNumber1 OptNilString `json:"postal_account_number_1"`
	// ゆうちょ 預金番号.
	PostalAccountNumber2 OptNilString `json:"postal_account_number_2"`
	// 口座名義.
	AccountName OptNilString `json:"account_name"`
	// 口座名義（カナ）.
	AccountNameKana OptNilString `json:"account_name_kana"`
	// 依頼書登録のパラメータ<br />
	// <span class="smallText">
	// ※
	// 依頼書登録により登録された口座の場合、この`paper_application`オブジェクトに依頼書からfincodeに転記した内容が含められます。
	// </span>.
	PaperApplication OptNilPaymentMethodDirectdebitPaperApplication `json:"paper_application"`
}

// GetApplicationType returns the value of ApplicationType.
func (s *PaymentMethodDirectdebit) GetApplicationType() OptNilDirectDebitApplicationType {
	return s.ApplicationType
}

// GetExpectedBillableDate returns the value of ExpectedBillableDate.
func (s *PaymentMethodDirectdebit) GetExpectedBillableDate() OptNilString {
	return s.ExpectedBillableDate
}

// GetLastWithdrawalDate returns the value of LastWithdrawalDate.
func (s *PaymentMethodDirectdebit) GetLastWithdrawalDate() OptNilString {
	return s.LastWithdrawalDate
}

// GetLastResultCode returns the value of LastResultCode.
func (s *PaymentMethodDirectdebit) GetLastResultCode() OptNilDirectDebitLastResultCode {
	return s.LastResultCode
}

// GetBankType returns the value of BankType.
func (s *PaymentMethodDirectdebit) GetBankType() OptNilPaymentMethodDirectdebitBankType {
	return s.BankType
}

// GetBankCode returns the value of BankCode.
func (s *PaymentMethodDirectdebit) GetBankCode() OptNilString {
	return s.BankCode
}

// GetBankName returns the value of BankName.
func (s *PaymentMethodDirectdebit) GetBankName() OptNilString {
	return s.BankName
}

// GetBranchCode returns the value of BranchCode.
func (s *PaymentMethodDirectdebit) GetBranchCode() OptNilString {
	return s.BranchCode
}

// GetBranchName returns the value of BranchName.
func (s *PaymentMethodDirectdebit) GetBranchName() OptString {
	return s.BranchName
}

// GetAccountType returns the value of AccountType.
func (s *PaymentMethodDirectdebit) GetAccountType() OptNilPaymentMethodDirectdebitAccountType {
	return s.AccountType
}

// GetAccountNumber returns the value of AccountNumber.
func (s *PaymentMethodDirectdebit) GetAccountNumber() OptNilString {
	return s.AccountNumber
}

// GetPostalAccountNumber1 returns the value of PostalAccountNumber1.
func (s *PaymentMethodDirectdebit) GetPostalAccountNumber1() OptNilString {
	return s.PostalAccountNumber1
}

// GetPostalAccountNumber2 returns the value of PostalAccountNumber2.
func (s *PaymentMethodDirectdebit) GetPostalAccountNumber2() OptNilString {
	return s.PostalAccountNumber2
}

// GetAccountName returns the value of AccountName.
func (s *PaymentMethodDirectdebit) GetAccountName() OptNilString {
	return s.AccountName
}

// GetAccountNameKana returns the value of AccountNameKana.
func (s *PaymentMethodDirectdebit) GetAccountNameKana() OptNilString {
	return s.AccountNameKana
}

// GetPaperApplication returns the value of PaperApplication.
func (s *PaymentMethodDirectdebit) GetPaperApplication() OptNilPaymentMethodDirectdebitPaperApplication {
	return s.PaperApplication
}

// SetApplicationType sets the value of ApplicationType.
func (s *PaymentMethodDirectdebit) SetApplicationType(val OptNilDirectDebitApplicationType) {
	s.ApplicationType = val
}

// SetExpectedBillableDate sets the value of ExpectedBillableDate.
func (s *PaymentMethodDirectdebit) SetExpectedBillableDate(val OptNilString) {
	s.ExpectedBillableDate = val
}

// SetLastWithdrawalDate sets the value of LastWithdrawalDate.
func (s *PaymentMethodDirectdebit) SetLastWithdrawalDate(val OptNilString) {
	s.LastWithdrawalDate = val
}

// SetLastResultCode sets the value of LastResultCode.
func (s *PaymentMethodDirectdebit) SetLastResultCode(val OptNilDirectDebitLastResultCode) {
	s.LastResultCode = val
}

// SetBankType sets the value of BankType.
func (s *PaymentMethodDirectdebit) SetBankType(val OptNilPaymentMethodDirectdebitBankType) {
	s.BankType = val
}

// SetBankCode sets the value of BankCode.
func (s *PaymentMethodDirectdebit) SetBankCode(val OptNilString) {
	s.BankCode = val
}

// SetBankName sets the value of BankName.
func (s *PaymentMethodDirectdebit) SetBankName(val OptNilString) {
	s.BankName = val
}

// SetBranchCode sets the value of BranchCode.
func (s *PaymentMethodDirectdebit) SetBranchCode(val OptNilString) {
	s.BranchCode = val
}

// SetBranchName sets the value of BranchName.
func (s *PaymentMethodDirectdebit) SetBranchName(val OptString) {
	s.BranchName = val
}

// SetAccountType sets the value of AccountType.
func (s *PaymentMethodDirectdebit) SetAccountType(val OptNilPaymentMethodDirectdebitAccountType) {
	s.AccountType = val
}

// SetAccountNumber sets the value of AccountNumber.
func (s *PaymentMethodDirectdebit) SetAccountNumber(val OptNilString) {
	s.AccountNumber = val
}

// SetPostalAccountNumber1 sets the value of PostalAccountNumber1.
func (s *PaymentMethodDirectdebit) SetPostalAccountNumber1(val OptNilString) {
	s.PostalAccountNumber1 = val
}

// SetPostalAccountNumber2 sets the value of PostalAccountNumber2.
func (s *PaymentMethodDirectdebit) SetPostalAccountNumber2(val OptNilString) {
	s.PostalAccountNumber2 = val
}

// SetAccountName sets the value of AccountName.
func (s *PaymentMethodDirectdebit) SetAccountName(val OptNilString) {
	s.AccountName = val
}

// SetAccountNameKana sets the value of AccountNameKana.
func (s *PaymentMethodDirectdebit) SetAccountNameKana(val OptNilString) {
	s.AccountNameKana = val
}

// SetPaperApplication sets the value of PaperApplication.
func (s *PaymentMethodDirectdebit) SetPaperApplication(val OptNilPaymentMethodDirectdebitPaperApplication) {
	s.PaperApplication = val
}

// 口座種別。
// - `0`: 普通預金
// - `1`: 当座預金.
type PaymentMethodDirectdebitAccountType string

const (
	PaymentMethodDirectdebitAccountType0 PaymentMethodDirectdebitAccountType = "0"
	PaymentMethodDirectdebitAccountType1 PaymentMethodDirectdebitAccountType = "1"
)

// AllValues returns all PaymentMethodDirectdebitAccountType values.
func (PaymentMethodDirectdebitAccountType) AllValues() []PaymentMethodDirectdebitAccountType {
	return []PaymentMethodDirectdebitAccountType{
		PaymentMethodDirectdebitAccountType0,
		PaymentMethodDirectdebitAccountType1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentMethodDirectdebitAccountType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentMethodDirectdebitAccountType0:
		return []byte(s), nil
	case PaymentMethodDirectdebitAccountType1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentMethodDirectdebitAccountType) UnmarshalText(data []byte) error {
	switch PaymentMethodDirectdebitAccountType(data) {
	case PaymentMethodDirectdebitAccountType0:
		*s = PaymentMethodDirectdebitAccountType0
		return nil
	case PaymentMethodDirectdebitAccountType1:
		*s = PaymentMethodDirectdebitAccountType1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 金融機関種別。
// - `0`: ゆうちょ銀行以外の金融機関
// - `1`: ゆうちょ銀行.
type PaymentMethodDirectdebitBankType string

const (
	PaymentMethodDirectdebitBankType0 PaymentMethodDirectdebitBankType = "0"
	PaymentMethodDirectdebitBankType1 PaymentMethodDirectdebitBankType = "1"
)

// AllValues returns all PaymentMethodDirectdebitBankType values.
func (PaymentMethodDirectdebitBankType) AllValues() []PaymentMethodDirectdebitBankType {
	return []PaymentMethodDirectdebitBankType{
		PaymentMethodDirectdebitBankType0,
		PaymentMethodDirectdebitBankType1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentMethodDirectdebitBankType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentMethodDirectdebitBankType0:
		return []byte(s), nil
	case PaymentMethodDirectdebitBankType1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentMethodDirectdebitBankType) UnmarshalText(data []byte) error {
	switch PaymentMethodDirectdebitBankType(data) {
	case PaymentMethodDirectdebitBankType0:
		*s = PaymentMethodDirectdebitBankType0
		return nil
	case PaymentMethodDirectdebitBankType1:
		*s = PaymentMethodDirectdebitBankType1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 依頼書登録のパラメータ<br />
// <span class="smallText">
// ※
// 依頼書登録により登録された口座の場合、この`paper_application`オブジェクトに依頼書からfincodeに転記した内容が含められます。
// </span>.
type PaymentMethodDirectdebitPaperApplication struct {
	// 依頼書 仮登録日時。\
	// 依頼書を仮登録した日時です。\
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PreregisteredDate OptNilString `json:"preregistered_date"`
	// 依頼書ID。\
	// 依頼書を管理画面から登録した際に登録者が指定した、依頼書を一意に識別するIDです。.
	RequestFormID OptNilString `json:"request_form_id"`
	// 依頼書登録に失敗した理由。.
	PaperFailureDescription OptNilString `json:"paper_failure_description"`
}

// GetPreregisteredDate returns the value of PreregisteredDate.
func (s *PaymentMethodDirectdebitPaperApplication) GetPreregisteredDate() OptNilString {
	return s.PreregisteredDate
}

// GetRequestFormID returns the value of RequestFormID.
func (s *PaymentMethodDirectdebitPaperApplication) GetRequestFormID() OptNilString {
	return s.RequestFormID
}

// GetPaperFailureDescription returns the value of PaperFailureDescription.
func (s *PaymentMethodDirectdebitPaperApplication) GetPaperFailureDescription() OptNilString {
	return s.PaperFailureDescription
}

// SetPreregisteredDate sets the value of PreregisteredDate.
func (s *PaymentMethodDirectdebitPaperApplication) SetPreregisteredDate(val OptNilString) {
	s.PreregisteredDate = val
}

// SetRequestFormID sets the value of RequestFormID.
func (s *PaymentMethodDirectdebitPaperApplication) SetRequestFormID(val OptNilString) {
	s.RequestFormID = val
}

// SetPaperFailureDescription sets the value of PaperFailureDescription.
func (s *PaymentMethodDirectdebitPaperApplication) SetPaperFailureDescription(val OptNilString) {
	s.PaperFailureDescription = val
}

type PaymentMethodIdSchema string

// Ref: #/components/schemas/PaymentMethod.list
type PaymentMethodList struct {
	List []PaymentMethod `json:"list"`
}

// GetList returns the value of List.
func (s *PaymentMethodList) GetList() []PaymentMethod {
	return s.List
}

// SetList sets the value of List.
func (s *PaymentMethodList) SetList(val []PaymentMethod) {
	s.List = val
}

func (*PaymentMethodList) retrieveCustomerPaymentMethodListRes() {}

// 決済種別（決済手段APIに対応しているもの）
// - `Card`: クレジットカード/デビットカード/プリペイドカード
// - `Directdebit`: 口座振替.
// Ref: #/components/schemas/PaymentMethodPayType
type PaymentMethodPayType string

const (
	PaymentMethodPayTypeCard        PaymentMethodPayType = "Card"
	PaymentMethodPayTypeDirectdebit PaymentMethodPayType = "Directdebit"
)

// AllValues returns all PaymentMethodPayType values.
func (PaymentMethodPayType) AllValues() []PaymentMethodPayType {
	return []PaymentMethodPayType{
		PaymentMethodPayTypeCard,
		PaymentMethodPayTypeDirectdebit,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentMethodPayType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentMethodPayTypeCard:
		return []byte(s), nil
	case PaymentMethodPayTypeDirectdebit:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentMethodPayType) UnmarshalText(data []byte) error {
	switch PaymentMethodPayType(data) {
	case PaymentMethodPayTypeCard:
		*s = PaymentMethodPayTypeCard
		return nil
	case PaymentMethodPayTypeDirectdebit:
		*s = PaymentMethodPayTypeDirectdebit
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type PaymentMethodPropertiesID string

// リダイレクトURLアクセス済みフラグ\
// 購入者が`redirect_url`にアクセスしたことがあるかどうかを示すフラグです。
// - `0`: 未アクセス
// - `1`: 1回以上アクセス済み.
type PaymentMethodRedirectURLAccessedFlag string

const (
	PaymentMethodRedirectURLAccessedFlag0 PaymentMethodRedirectURLAccessedFlag = "0"
	PaymentMethodRedirectURLAccessedFlag1 PaymentMethodRedirectURLAccessedFlag = "1"
)

// AllValues returns all PaymentMethodRedirectURLAccessedFlag values.
func (PaymentMethodRedirectURLAccessedFlag) AllValues() []PaymentMethodRedirectURLAccessedFlag {
	return []PaymentMethodRedirectURLAccessedFlag{
		PaymentMethodRedirectURLAccessedFlag0,
		PaymentMethodRedirectURLAccessedFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentMethodRedirectURLAccessedFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentMethodRedirectURLAccessedFlag0:
		return []byte(s), nil
	case PaymentMethodRedirectURLAccessedFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentMethodRedirectURLAccessedFlag) UnmarshalText(data []byte) error {
	switch PaymentMethodRedirectURLAccessedFlag(data) {
	case PaymentMethodRedirectURLAccessedFlag0:
		*s = PaymentMethodRedirectURLAccessedFlag0
		return nil
	case PaymentMethodRedirectURLAccessedFlag1:
		*s = PaymentMethodRedirectURLAccessedFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 決済手段のステータス
// - `INACTIVATED`: 有効化前<br /><span
// class="smallText">まだこの決済手段は決済に使用できません。</span>
// - `AWAITING_CUSTOMER_ACTION`: 顧客のアクション待ち<br /><span
// class="smallText">この決済手段は登録のための購入者の承認がされていない状態です。まだこの決済手段は決済に使用できません。</span>
// - `ACTIVATED`: 有効化済み<br /><span
// class="smallText">この決済手段は決済に使用できます。</span>
// - `FAILED`: 失敗<br /><span
// class="smallText">この決済手段は決済に使用できません。</span>.
// Ref: #/components/schemas/PaymentMethodStatus
type PaymentMethodStatus string

const (
	PaymentMethodStatusINACTIVATED            PaymentMethodStatus = "INACTIVATED"
	PaymentMethodStatusAWAITINGCUSTOMERACTION PaymentMethodStatus = "AWAITING_CUSTOMER_ACTION"
	PaymentMethodStatusACTIVATED              PaymentMethodStatus = "ACTIVATED"
	PaymentMethodStatusFAILED                 PaymentMethodStatus = "FAILED"
)

// AllValues returns all PaymentMethodStatus values.
func (PaymentMethodStatus) AllValues() []PaymentMethodStatus {
	return []PaymentMethodStatus{
		PaymentMethodStatusINACTIVATED,
		PaymentMethodStatusAWAITINGCUSTOMERACTION,
		PaymentMethodStatusACTIVATED,
		PaymentMethodStatusFAILED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentMethodStatus) MarshalText() ([]byte, error) {
	switch s {
	case PaymentMethodStatusINACTIVATED:
		return []byte(s), nil
	case PaymentMethodStatusAWAITINGCUSTOMERACTION:
		return []byte(s), nil
	case PaymentMethodStatusACTIVATED:
		return []byte(s), nil
	case PaymentMethodStatusFAILED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentMethodStatus) UnmarshalText(data []byte) error {
	switch PaymentMethodStatus(data) {
	case PaymentMethodStatusINACTIVATED:
		*s = PaymentMethodStatusINACTIVATED
		return nil
	case PaymentMethodStatusAWAITINGCUSTOMERACTION:
		*s = PaymentMethodStatusAWAITINGCUSTOMERACTION
		return nil
	case PaymentMethodStatusACTIVATED:
		*s = PaymentMethodStatusACTIVATED
		return nil
	case PaymentMethodStatusFAILED:
		*s = PaymentMethodStatusFAILED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.PayPay.Canceling.Request
type PaymentPayPayCancelingRequest struct {
	PayType           PayType                 `json:"pay_type"`
	AccessID          AccessID                `json:"access_id"`
	CancelDescription OptNilCancelDescription `json:"cancel_description"`
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayCancelingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayCancelingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetCancelDescription returns the value of CancelDescription.
func (s *PaymentPayPayCancelingRequest) GetCancelDescription() OptNilCancelDescription {
	return s.CancelDescription
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayCancelingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayCancelingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetCancelDescription sets the value of CancelDescription.
func (s *PaymentPayPayCancelingRequest) SetCancelDescription(val OptNilCancelDescription) {
	s.CancelDescription = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.PayPay.Canceling.Response
type PaymentPayPayCancelingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString            `json:"customer_group_id"`
	ErrorCode       OptErrorCode            `json:"error_code"`
	Created         OptCreated              `json:"created"`
	Updated         OptNilUpdated           `json:"updated"`
	PayType         OptPayType              `json:"pay_type"`
	JobCode         OptPayPayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus        `json:"status"`
	// PayPay支払いURL\
	// 購入者をこのURLにリダイレクトすることでPayPay上での取引を開始します。.
	CodeURL OptNilString `json:"code_url"`
	// 支払期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	CodeExpiryDate OptNilString `json:"code_expiry_date"`
	// リダイレクトURL\
	// 決済が完了した際にPayPayからリダイレクト先URL。.
	RedirectURL OptNilString `json:"redirect_url"`
	// リダイレクト先種別\
	// `redirect_url`の種別
	// - `1`： Webページ／Webアプリケーション
	// - `2`： ネイティブアプリ.
	RedirectType OptNilPaymentPayPayCancelingResponseRedirectType `json:"redirect_type"`
	// 仮売上期限\
	// 形式： `yyyy/MM/dd`.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 注文内容の説明\
	// 購入者のPayPayアプリ上で表示される注文内容の説明。.
	OrderDescription OptNilString `json:"order_description"`
	// 売上確定の説明\
	// 購入者のPayPayアプリ上で表示される売上確定の説明。.
	CaptureDescription OptNilString `json:"capture_description"`
	// 金額変更の説明\
	// 購入者のPayPayアプリ上で表示される金額変更の説明。.
	UpdateDescription OptNilString `json:"update_description"`
	// キャンセルの説明\
	// 購入者のPayPayアプリ上で表示されるキャンセルの説明。.
	CancelDescription OptNilString `json:"cancel_description"`
	// 店舗ID\
	// PayPayによって発行された店舗ID。.
	StoreID OptNilString `json:"store_id"`
	// PayPayの支払いコードID.
	CodeID OptNilString `json:"code_id"`
	// PayPay 決済ID.
	PaymentID OptNilString `json:"payment_id"`
	// PayPay処理結果コード.
	PaypayResultCode OptNilString `json:"paypay_result_code"`
	// PayPay トランザクションID.
	MerchantPaymentID OptNilString `json:"merchant_payment_id"`
	// PayPay 売上確定ID.
	MerchantCaptureID OptNilString `json:"merchant_capture_id"`
	// PayPay 金額変更ID.
	MerchantUpdateID OptNilString `json:"merchant_update_id"`
	// PayPay キャンセルID.
	MerchantRevertID OptNilString `json:"merchant_revert_id"`
	// PayPay 返金ID.
	MerchantRefundID OptNilString `json:"merchant_refund_id"`
	// 支払日時\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentPayPayCancelingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentPayPayCancelingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayCancelingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayCancelingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayCancelingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentPayPayCancelingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentPayPayCancelingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentPayPayCancelingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentPayPayCancelingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentPayPayCancelingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentPayPayCancelingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentPayPayCancelingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentPayPayCancelingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentPayPayCancelingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentPayPayCancelingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayCancelingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentPayPayCancelingResponse) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentPayPayCancelingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCodeURL returns the value of CodeURL.
func (s *PaymentPayPayCancelingResponse) GetCodeURL() OptNilString {
	return s.CodeURL
}

// GetCodeExpiryDate returns the value of CodeExpiryDate.
func (s *PaymentPayPayCancelingResponse) GetCodeExpiryDate() OptNilString {
	return s.CodeExpiryDate
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentPayPayCancelingResponse) GetRedirectURL() OptNilString {
	return s.RedirectURL
}

// GetRedirectType returns the value of RedirectType.
func (s *PaymentPayPayCancelingResponse) GetRedirectType() OptNilPaymentPayPayCancelingResponseRedirectType {
	return s.RedirectType
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentPayPayCancelingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentPayPayCancelingResponse) GetOrderDescription() OptNilString {
	return s.OrderDescription
}

// GetCaptureDescription returns the value of CaptureDescription.
func (s *PaymentPayPayCancelingResponse) GetCaptureDescription() OptNilString {
	return s.CaptureDescription
}

// GetUpdateDescription returns the value of UpdateDescription.
func (s *PaymentPayPayCancelingResponse) GetUpdateDescription() OptNilString {
	return s.UpdateDescription
}

// GetCancelDescription returns the value of CancelDescription.
func (s *PaymentPayPayCancelingResponse) GetCancelDescription() OptNilString {
	return s.CancelDescription
}

// GetStoreID returns the value of StoreID.
func (s *PaymentPayPayCancelingResponse) GetStoreID() OptNilString {
	return s.StoreID
}

// GetCodeID returns the value of CodeID.
func (s *PaymentPayPayCancelingResponse) GetCodeID() OptNilString {
	return s.CodeID
}

// GetPaymentID returns the value of PaymentID.
func (s *PaymentPayPayCancelingResponse) GetPaymentID() OptNilString {
	return s.PaymentID
}

// GetPaypayResultCode returns the value of PaypayResultCode.
func (s *PaymentPayPayCancelingResponse) GetPaypayResultCode() OptNilString {
	return s.PaypayResultCode
}

// GetMerchantPaymentID returns the value of MerchantPaymentID.
func (s *PaymentPayPayCancelingResponse) GetMerchantPaymentID() OptNilString {
	return s.MerchantPaymentID
}

// GetMerchantCaptureID returns the value of MerchantCaptureID.
func (s *PaymentPayPayCancelingResponse) GetMerchantCaptureID() OptNilString {
	return s.MerchantCaptureID
}

// GetMerchantUpdateID returns the value of MerchantUpdateID.
func (s *PaymentPayPayCancelingResponse) GetMerchantUpdateID() OptNilString {
	return s.MerchantUpdateID
}

// GetMerchantRevertID returns the value of MerchantRevertID.
func (s *PaymentPayPayCancelingResponse) GetMerchantRevertID() OptNilString {
	return s.MerchantRevertID
}

// GetMerchantRefundID returns the value of MerchantRefundID.
func (s *PaymentPayPayCancelingResponse) GetMerchantRefundID() OptNilString {
	return s.MerchantRefundID
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentPayPayCancelingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// SetShopID sets the value of ShopID.
func (s *PaymentPayPayCancelingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentPayPayCancelingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayCancelingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayCancelingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayCancelingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentPayPayCancelingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentPayPayCancelingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentPayPayCancelingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentPayPayCancelingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentPayPayCancelingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentPayPayCancelingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentPayPayCancelingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentPayPayCancelingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentPayPayCancelingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentPayPayCancelingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayCancelingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentPayPayCancelingResponse) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentPayPayCancelingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCodeURL sets the value of CodeURL.
func (s *PaymentPayPayCancelingResponse) SetCodeURL(val OptNilString) {
	s.CodeURL = val
}

// SetCodeExpiryDate sets the value of CodeExpiryDate.
func (s *PaymentPayPayCancelingResponse) SetCodeExpiryDate(val OptNilString) {
	s.CodeExpiryDate = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentPayPayCancelingResponse) SetRedirectURL(val OptNilString) {
	s.RedirectURL = val
}

// SetRedirectType sets the value of RedirectType.
func (s *PaymentPayPayCancelingResponse) SetRedirectType(val OptNilPaymentPayPayCancelingResponseRedirectType) {
	s.RedirectType = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentPayPayCancelingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentPayPayCancelingResponse) SetOrderDescription(val OptNilString) {
	s.OrderDescription = val
}

// SetCaptureDescription sets the value of CaptureDescription.
func (s *PaymentPayPayCancelingResponse) SetCaptureDescription(val OptNilString) {
	s.CaptureDescription = val
}

// SetUpdateDescription sets the value of UpdateDescription.
func (s *PaymentPayPayCancelingResponse) SetUpdateDescription(val OptNilString) {
	s.UpdateDescription = val
}

// SetCancelDescription sets the value of CancelDescription.
func (s *PaymentPayPayCancelingResponse) SetCancelDescription(val OptNilString) {
	s.CancelDescription = val
}

// SetStoreID sets the value of StoreID.
func (s *PaymentPayPayCancelingResponse) SetStoreID(val OptNilString) {
	s.StoreID = val
}

// SetCodeID sets the value of CodeID.
func (s *PaymentPayPayCancelingResponse) SetCodeID(val OptNilString) {
	s.CodeID = val
}

// SetPaymentID sets the value of PaymentID.
func (s *PaymentPayPayCancelingResponse) SetPaymentID(val OptNilString) {
	s.PaymentID = val
}

// SetPaypayResultCode sets the value of PaypayResultCode.
func (s *PaymentPayPayCancelingResponse) SetPaypayResultCode(val OptNilString) {
	s.PaypayResultCode = val
}

// SetMerchantPaymentID sets the value of MerchantPaymentID.
func (s *PaymentPayPayCancelingResponse) SetMerchantPaymentID(val OptNilString) {
	s.MerchantPaymentID = val
}

// SetMerchantCaptureID sets the value of MerchantCaptureID.
func (s *PaymentPayPayCancelingResponse) SetMerchantCaptureID(val OptNilString) {
	s.MerchantCaptureID = val
}

// SetMerchantUpdateID sets the value of MerchantUpdateID.
func (s *PaymentPayPayCancelingResponse) SetMerchantUpdateID(val OptNilString) {
	s.MerchantUpdateID = val
}

// SetMerchantRevertID sets the value of MerchantRevertID.
func (s *PaymentPayPayCancelingResponse) SetMerchantRevertID(val OptNilString) {
	s.MerchantRevertID = val
}

// SetMerchantRefundID sets the value of MerchantRefundID.
func (s *PaymentPayPayCancelingResponse) SetMerchantRefundID(val OptNilString) {
	s.MerchantRefundID = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentPayPayCancelingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// リダイレクト先種別\
// `redirect_url`の種別
// - `1`： Webページ／Webアプリケーション
// - `2`： ネイティブアプリ.
type PaymentPayPayCancelingResponseRedirectType string

const (
	PaymentPayPayCancelingResponseRedirectType1 PaymentPayPayCancelingResponseRedirectType = "1"
	PaymentPayPayCancelingResponseRedirectType2 PaymentPayPayCancelingResponseRedirectType = "2"
)

// AllValues returns all PaymentPayPayCancelingResponseRedirectType values.
func (PaymentPayPayCancelingResponseRedirectType) AllValues() []PaymentPayPayCancelingResponseRedirectType {
	return []PaymentPayPayCancelingResponseRedirectType{
		PaymentPayPayCancelingResponseRedirectType1,
		PaymentPayPayCancelingResponseRedirectType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentPayPayCancelingResponseRedirectType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentPayPayCancelingResponseRedirectType1:
		return []byte(s), nil
	case PaymentPayPayCancelingResponseRedirectType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentPayPayCancelingResponseRedirectType) UnmarshalText(data []byte) error {
	switch PaymentPayPayCancelingResponseRedirectType(data) {
	case PaymentPayPayCancelingResponseRedirectType1:
		*s = PaymentPayPayCancelingResponseRedirectType1
		return nil
	case PaymentPayPayCancelingResponseRedirectType2:
		*s = PaymentPayPayCancelingResponseRedirectType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.PayPay.Capturing.Request
type PaymentPayPayCapturingRequest struct {
	PayType            PayType                  `json:"pay_type"`
	AccessID           AccessID                 `json:"access_id"`
	CaptureDescription OptNilCaptureDescription `json:"capture_description"`
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayCapturingRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayCapturingRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetCaptureDescription returns the value of CaptureDescription.
func (s *PaymentPayPayCapturingRequest) GetCaptureDescription() OptNilCaptureDescription {
	return s.CaptureDescription
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayCapturingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayCapturingRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetCaptureDescription sets the value of CaptureDescription.
func (s *PaymentPayPayCapturingRequest) SetCaptureDescription(val OptNilCaptureDescription) {
	s.CaptureDescription = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.PayPay.Capturing.Response
type PaymentPayPayCapturingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString            `json:"customer_group_id"`
	ErrorCode       OptErrorCode            `json:"error_code"`
	Created         OptCreated              `json:"created"`
	Updated         OptNilUpdated           `json:"updated"`
	PayType         OptPayType              `json:"pay_type"`
	JobCode         OptPayPayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus        `json:"status"`
	// PayPay支払いURL\
	// 購入者をこのURLにリダイレクトすることでPayPay上での取引を開始します。.
	CodeURL OptNilString `json:"code_url"`
	// 支払期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	CodeExpiryDate OptNilString `json:"code_expiry_date"`
	// リダイレクトURL\
	// 決済が完了した際にPayPayからリダイレクト先URL。.
	RedirectURL OptNilString `json:"redirect_url"`
	// リダイレクト先種別\
	// `redirect_url`の種別
	// - `1`： Webページ／Webアプリケーション
	// - `2`： ネイティブアプリ.
	RedirectType OptNilPaymentPayPayCapturingResponseRedirectType `json:"redirect_type"`
	// 仮売上期限\
	// 形式： `yyyy/MM/dd`.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 注文内容の説明\
	// 購入者のPayPayアプリ上で表示される注文内容の説明。.
	OrderDescription OptNilString `json:"order_description"`
	// 売上確定の説明\
	// 購入者のPayPayアプリ上で表示される売上確定の説明。.
	CaptureDescription OptNilString `json:"capture_description"`
	// 金額変更の説明\
	// 購入者のPayPayアプリ上で表示される金額変更の説明。.
	UpdateDescription OptNilString `json:"update_description"`
	// キャンセルの説明\
	// 購入者のPayPayアプリ上で表示されるキャンセルの説明。.
	CancelDescription OptNilString `json:"cancel_description"`
	// 店舗ID\
	// PayPayによって発行された店舗ID。.
	StoreID OptNilString `json:"store_id"`
	// PayPayの支払いコードID.
	CodeID OptNilString `json:"code_id"`
	// PayPay 決済ID.
	PaymentID OptNilString `json:"payment_id"`
	// PayPay処理結果コード.
	PaypayResultCode OptNilString `json:"paypay_result_code"`
	// PayPay トランザクションID.
	MerchantPaymentID OptNilString `json:"merchant_payment_id"`
	// PayPay 売上確定ID.
	MerchantCaptureID OptNilString `json:"merchant_capture_id"`
	// PayPay 金額変更ID.
	MerchantUpdateID OptNilString `json:"merchant_update_id"`
	// PayPay キャンセルID.
	MerchantRevertID OptNilString `json:"merchant_revert_id"`
	// PayPay 返金ID.
	MerchantRefundID OptNilString `json:"merchant_refund_id"`
	// 支払日時\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentPayPayCapturingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentPayPayCapturingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayCapturingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayCapturingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayCapturingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentPayPayCapturingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentPayPayCapturingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentPayPayCapturingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentPayPayCapturingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentPayPayCapturingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentPayPayCapturingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentPayPayCapturingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentPayPayCapturingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentPayPayCapturingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentPayPayCapturingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayCapturingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentPayPayCapturingResponse) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentPayPayCapturingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCodeURL returns the value of CodeURL.
func (s *PaymentPayPayCapturingResponse) GetCodeURL() OptNilString {
	return s.CodeURL
}

// GetCodeExpiryDate returns the value of CodeExpiryDate.
func (s *PaymentPayPayCapturingResponse) GetCodeExpiryDate() OptNilString {
	return s.CodeExpiryDate
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentPayPayCapturingResponse) GetRedirectURL() OptNilString {
	return s.RedirectURL
}

// GetRedirectType returns the value of RedirectType.
func (s *PaymentPayPayCapturingResponse) GetRedirectType() OptNilPaymentPayPayCapturingResponseRedirectType {
	return s.RedirectType
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentPayPayCapturingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentPayPayCapturingResponse) GetOrderDescription() OptNilString {
	return s.OrderDescription
}

// GetCaptureDescription returns the value of CaptureDescription.
func (s *PaymentPayPayCapturingResponse) GetCaptureDescription() OptNilString {
	return s.CaptureDescription
}

// GetUpdateDescription returns the value of UpdateDescription.
func (s *PaymentPayPayCapturingResponse) GetUpdateDescription() OptNilString {
	return s.UpdateDescription
}

// GetCancelDescription returns the value of CancelDescription.
func (s *PaymentPayPayCapturingResponse) GetCancelDescription() OptNilString {
	return s.CancelDescription
}

// GetStoreID returns the value of StoreID.
func (s *PaymentPayPayCapturingResponse) GetStoreID() OptNilString {
	return s.StoreID
}

// GetCodeID returns the value of CodeID.
func (s *PaymentPayPayCapturingResponse) GetCodeID() OptNilString {
	return s.CodeID
}

// GetPaymentID returns the value of PaymentID.
func (s *PaymentPayPayCapturingResponse) GetPaymentID() OptNilString {
	return s.PaymentID
}

// GetPaypayResultCode returns the value of PaypayResultCode.
func (s *PaymentPayPayCapturingResponse) GetPaypayResultCode() OptNilString {
	return s.PaypayResultCode
}

// GetMerchantPaymentID returns the value of MerchantPaymentID.
func (s *PaymentPayPayCapturingResponse) GetMerchantPaymentID() OptNilString {
	return s.MerchantPaymentID
}

// GetMerchantCaptureID returns the value of MerchantCaptureID.
func (s *PaymentPayPayCapturingResponse) GetMerchantCaptureID() OptNilString {
	return s.MerchantCaptureID
}

// GetMerchantUpdateID returns the value of MerchantUpdateID.
func (s *PaymentPayPayCapturingResponse) GetMerchantUpdateID() OptNilString {
	return s.MerchantUpdateID
}

// GetMerchantRevertID returns the value of MerchantRevertID.
func (s *PaymentPayPayCapturingResponse) GetMerchantRevertID() OptNilString {
	return s.MerchantRevertID
}

// GetMerchantRefundID returns the value of MerchantRefundID.
func (s *PaymentPayPayCapturingResponse) GetMerchantRefundID() OptNilString {
	return s.MerchantRefundID
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentPayPayCapturingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// SetShopID sets the value of ShopID.
func (s *PaymentPayPayCapturingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentPayPayCapturingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayCapturingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayCapturingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayCapturingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentPayPayCapturingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentPayPayCapturingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentPayPayCapturingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentPayPayCapturingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentPayPayCapturingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentPayPayCapturingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentPayPayCapturingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentPayPayCapturingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentPayPayCapturingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentPayPayCapturingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayCapturingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentPayPayCapturingResponse) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentPayPayCapturingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCodeURL sets the value of CodeURL.
func (s *PaymentPayPayCapturingResponse) SetCodeURL(val OptNilString) {
	s.CodeURL = val
}

// SetCodeExpiryDate sets the value of CodeExpiryDate.
func (s *PaymentPayPayCapturingResponse) SetCodeExpiryDate(val OptNilString) {
	s.CodeExpiryDate = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentPayPayCapturingResponse) SetRedirectURL(val OptNilString) {
	s.RedirectURL = val
}

// SetRedirectType sets the value of RedirectType.
func (s *PaymentPayPayCapturingResponse) SetRedirectType(val OptNilPaymentPayPayCapturingResponseRedirectType) {
	s.RedirectType = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentPayPayCapturingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentPayPayCapturingResponse) SetOrderDescription(val OptNilString) {
	s.OrderDescription = val
}

// SetCaptureDescription sets the value of CaptureDescription.
func (s *PaymentPayPayCapturingResponse) SetCaptureDescription(val OptNilString) {
	s.CaptureDescription = val
}

// SetUpdateDescription sets the value of UpdateDescription.
func (s *PaymentPayPayCapturingResponse) SetUpdateDescription(val OptNilString) {
	s.UpdateDescription = val
}

// SetCancelDescription sets the value of CancelDescription.
func (s *PaymentPayPayCapturingResponse) SetCancelDescription(val OptNilString) {
	s.CancelDescription = val
}

// SetStoreID sets the value of StoreID.
func (s *PaymentPayPayCapturingResponse) SetStoreID(val OptNilString) {
	s.StoreID = val
}

// SetCodeID sets the value of CodeID.
func (s *PaymentPayPayCapturingResponse) SetCodeID(val OptNilString) {
	s.CodeID = val
}

// SetPaymentID sets the value of PaymentID.
func (s *PaymentPayPayCapturingResponse) SetPaymentID(val OptNilString) {
	s.PaymentID = val
}

// SetPaypayResultCode sets the value of PaypayResultCode.
func (s *PaymentPayPayCapturingResponse) SetPaypayResultCode(val OptNilString) {
	s.PaypayResultCode = val
}

// SetMerchantPaymentID sets the value of MerchantPaymentID.
func (s *PaymentPayPayCapturingResponse) SetMerchantPaymentID(val OptNilString) {
	s.MerchantPaymentID = val
}

// SetMerchantCaptureID sets the value of MerchantCaptureID.
func (s *PaymentPayPayCapturingResponse) SetMerchantCaptureID(val OptNilString) {
	s.MerchantCaptureID = val
}

// SetMerchantUpdateID sets the value of MerchantUpdateID.
func (s *PaymentPayPayCapturingResponse) SetMerchantUpdateID(val OptNilString) {
	s.MerchantUpdateID = val
}

// SetMerchantRevertID sets the value of MerchantRevertID.
func (s *PaymentPayPayCapturingResponse) SetMerchantRevertID(val OptNilString) {
	s.MerchantRevertID = val
}

// SetMerchantRefundID sets the value of MerchantRefundID.
func (s *PaymentPayPayCapturingResponse) SetMerchantRefundID(val OptNilString) {
	s.MerchantRefundID = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentPayPayCapturingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// リダイレクト先種別\
// `redirect_url`の種別
// - `1`： Webページ／Webアプリケーション
// - `2`： ネイティブアプリ.
type PaymentPayPayCapturingResponseRedirectType string

const (
	PaymentPayPayCapturingResponseRedirectType1 PaymentPayPayCapturingResponseRedirectType = "1"
	PaymentPayPayCapturingResponseRedirectType2 PaymentPayPayCapturingResponseRedirectType = "2"
)

// AllValues returns all PaymentPayPayCapturingResponseRedirectType values.
func (PaymentPayPayCapturingResponseRedirectType) AllValues() []PaymentPayPayCapturingResponseRedirectType {
	return []PaymentPayPayCapturingResponseRedirectType{
		PaymentPayPayCapturingResponseRedirectType1,
		PaymentPayPayCapturingResponseRedirectType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentPayPayCapturingResponseRedirectType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentPayPayCapturingResponseRedirectType1:
		return []byte(s), nil
	case PaymentPayPayCapturingResponseRedirectType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentPayPayCapturingResponseRedirectType) UnmarshalText(data []byte) error {
	switch PaymentPayPayCapturingResponseRedirectType(data) {
	case PaymentPayPayCapturingResponseRedirectType1:
		*s = PaymentPayPayCapturingResponseRedirectType1
		return nil
	case PaymentPayPayCapturingResponseRedirectType2:
		*s = PaymentPayPayCapturingResponseRedirectType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.PayPay.ChangingAmount.Request
type PaymentPayPayChangingAmountRequest struct {
	PayType           PayType                 `json:"pay_type"`
	AccessID          AccessID                `json:"access_id"`
	Amount            Amount                  `json:"amount"`
	Tax               OptTax                  `json:"tax"`
	UpdateDescription OptNilUpdateDescription `json:"update_description"`
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayChangingAmountRequest) GetPayType() PayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayChangingAmountRequest) GetAccessID() AccessID {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayChangingAmountRequest) GetAmount() Amount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayChangingAmountRequest) GetTax() OptTax {
	return s.Tax
}

// GetUpdateDescription returns the value of UpdateDescription.
func (s *PaymentPayPayChangingAmountRequest) GetUpdateDescription() OptNilUpdateDescription {
	return s.UpdateDescription
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayChangingAmountRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayChangingAmountRequest) SetAccessID(val AccessID) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayChangingAmountRequest) SetAmount(val Amount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayChangingAmountRequest) SetTax(val OptTax) {
	s.Tax = val
}

// SetUpdateDescription sets the value of UpdateDescription.
func (s *PaymentPayPayChangingAmountRequest) SetUpdateDescription(val OptNilUpdateDescription) {
	s.UpdateDescription = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.PayPay.ChangingAmount.Response
type PaymentPayPayChangingAmountResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString            `json:"customer_group_id"`
	ErrorCode       OptErrorCode            `json:"error_code"`
	Created         OptCreated              `json:"created"`
	Updated         OptNilUpdated           `json:"updated"`
	PayType         OptPayType              `json:"pay_type"`
	JobCode         OptPayPayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus        `json:"status"`
	// PayPay支払いURL\
	// 購入者をこのURLにリダイレクトすることでPayPay上での取引を開始します。.
	CodeURL OptNilString `json:"code_url"`
	// 支払期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	CodeExpiryDate OptNilString `json:"code_expiry_date"`
	// リダイレクトURL\
	// 決済が完了した際にPayPayからリダイレクト先URL。.
	RedirectURL OptNilString `json:"redirect_url"`
	// リダイレクト先種別\
	// `redirect_url`の種別
	// - `1`： Webページ／Webアプリケーション
	// - `2`： ネイティブアプリ.
	RedirectType OptNilPaymentPayPayChangingAmountResponseRedirectType `json:"redirect_type"`
	// 仮売上期限\
	// 形式： `yyyy/MM/dd`.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 注文内容の説明\
	// 購入者のPayPayアプリ上で表示される注文内容の説明。.
	OrderDescription OptNilString `json:"order_description"`
	// 売上確定の説明\
	// 購入者のPayPayアプリ上で表示される売上確定の説明。.
	CaptureDescription OptNilString `json:"capture_description"`
	// 金額変更の説明\
	// 購入者のPayPayアプリ上で表示される金額変更の説明。.
	UpdateDescription OptNilString `json:"update_description"`
	// キャンセルの説明\
	// 購入者のPayPayアプリ上で表示されるキャンセルの説明。.
	CancelDescription OptNilString `json:"cancel_description"`
	// 店舗ID\
	// PayPayによって発行された店舗ID。.
	StoreID OptNilString `json:"store_id"`
	// PayPayの支払いコードID.
	CodeID OptNilString `json:"code_id"`
	// PayPay 決済ID.
	PaymentID OptNilString `json:"payment_id"`
	// PayPay処理結果コード.
	PaypayResultCode OptNilString `json:"paypay_result_code"`
	// PayPay トランザクションID.
	MerchantPaymentID OptNilString `json:"merchant_payment_id"`
	// PayPay 売上確定ID.
	MerchantCaptureID OptNilString `json:"merchant_capture_id"`
	// PayPay 金額変更ID.
	MerchantUpdateID OptNilString `json:"merchant_update_id"`
	// PayPay キャンセルID.
	MerchantRevertID OptNilString `json:"merchant_revert_id"`
	// PayPay 返金ID.
	MerchantRefundID OptNilString `json:"merchant_refund_id"`
	// 支払日時\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentPayPayChangingAmountResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentPayPayChangingAmountResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayChangingAmountResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayChangingAmountResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayChangingAmountResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentPayPayChangingAmountResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentPayPayChangingAmountResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentPayPayChangingAmountResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentPayPayChangingAmountResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentPayPayChangingAmountResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentPayPayChangingAmountResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentPayPayChangingAmountResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentPayPayChangingAmountResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentPayPayChangingAmountResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentPayPayChangingAmountResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayChangingAmountResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentPayPayChangingAmountResponse) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentPayPayChangingAmountResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCodeURL returns the value of CodeURL.
func (s *PaymentPayPayChangingAmountResponse) GetCodeURL() OptNilString {
	return s.CodeURL
}

// GetCodeExpiryDate returns the value of CodeExpiryDate.
func (s *PaymentPayPayChangingAmountResponse) GetCodeExpiryDate() OptNilString {
	return s.CodeExpiryDate
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentPayPayChangingAmountResponse) GetRedirectURL() OptNilString {
	return s.RedirectURL
}

// GetRedirectType returns the value of RedirectType.
func (s *PaymentPayPayChangingAmountResponse) GetRedirectType() OptNilPaymentPayPayChangingAmountResponseRedirectType {
	return s.RedirectType
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentPayPayChangingAmountResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentPayPayChangingAmountResponse) GetOrderDescription() OptNilString {
	return s.OrderDescription
}

// GetCaptureDescription returns the value of CaptureDescription.
func (s *PaymentPayPayChangingAmountResponse) GetCaptureDescription() OptNilString {
	return s.CaptureDescription
}

// GetUpdateDescription returns the value of UpdateDescription.
func (s *PaymentPayPayChangingAmountResponse) GetUpdateDescription() OptNilString {
	return s.UpdateDescription
}

// GetCancelDescription returns the value of CancelDescription.
func (s *PaymentPayPayChangingAmountResponse) GetCancelDescription() OptNilString {
	return s.CancelDescription
}

// GetStoreID returns the value of StoreID.
func (s *PaymentPayPayChangingAmountResponse) GetStoreID() OptNilString {
	return s.StoreID
}

// GetCodeID returns the value of CodeID.
func (s *PaymentPayPayChangingAmountResponse) GetCodeID() OptNilString {
	return s.CodeID
}

// GetPaymentID returns the value of PaymentID.
func (s *PaymentPayPayChangingAmountResponse) GetPaymentID() OptNilString {
	return s.PaymentID
}

// GetPaypayResultCode returns the value of PaypayResultCode.
func (s *PaymentPayPayChangingAmountResponse) GetPaypayResultCode() OptNilString {
	return s.PaypayResultCode
}

// GetMerchantPaymentID returns the value of MerchantPaymentID.
func (s *PaymentPayPayChangingAmountResponse) GetMerchantPaymentID() OptNilString {
	return s.MerchantPaymentID
}

// GetMerchantCaptureID returns the value of MerchantCaptureID.
func (s *PaymentPayPayChangingAmountResponse) GetMerchantCaptureID() OptNilString {
	return s.MerchantCaptureID
}

// GetMerchantUpdateID returns the value of MerchantUpdateID.
func (s *PaymentPayPayChangingAmountResponse) GetMerchantUpdateID() OptNilString {
	return s.MerchantUpdateID
}

// GetMerchantRevertID returns the value of MerchantRevertID.
func (s *PaymentPayPayChangingAmountResponse) GetMerchantRevertID() OptNilString {
	return s.MerchantRevertID
}

// GetMerchantRefundID returns the value of MerchantRefundID.
func (s *PaymentPayPayChangingAmountResponse) GetMerchantRefundID() OptNilString {
	return s.MerchantRefundID
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentPayPayChangingAmountResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// SetShopID sets the value of ShopID.
func (s *PaymentPayPayChangingAmountResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentPayPayChangingAmountResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayChangingAmountResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayChangingAmountResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayChangingAmountResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentPayPayChangingAmountResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentPayPayChangingAmountResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentPayPayChangingAmountResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentPayPayChangingAmountResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentPayPayChangingAmountResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentPayPayChangingAmountResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentPayPayChangingAmountResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentPayPayChangingAmountResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentPayPayChangingAmountResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentPayPayChangingAmountResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayChangingAmountResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentPayPayChangingAmountResponse) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentPayPayChangingAmountResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCodeURL sets the value of CodeURL.
func (s *PaymentPayPayChangingAmountResponse) SetCodeURL(val OptNilString) {
	s.CodeURL = val
}

// SetCodeExpiryDate sets the value of CodeExpiryDate.
func (s *PaymentPayPayChangingAmountResponse) SetCodeExpiryDate(val OptNilString) {
	s.CodeExpiryDate = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentPayPayChangingAmountResponse) SetRedirectURL(val OptNilString) {
	s.RedirectURL = val
}

// SetRedirectType sets the value of RedirectType.
func (s *PaymentPayPayChangingAmountResponse) SetRedirectType(val OptNilPaymentPayPayChangingAmountResponseRedirectType) {
	s.RedirectType = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentPayPayChangingAmountResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentPayPayChangingAmountResponse) SetOrderDescription(val OptNilString) {
	s.OrderDescription = val
}

// SetCaptureDescription sets the value of CaptureDescription.
func (s *PaymentPayPayChangingAmountResponse) SetCaptureDescription(val OptNilString) {
	s.CaptureDescription = val
}

// SetUpdateDescription sets the value of UpdateDescription.
func (s *PaymentPayPayChangingAmountResponse) SetUpdateDescription(val OptNilString) {
	s.UpdateDescription = val
}

// SetCancelDescription sets the value of CancelDescription.
func (s *PaymentPayPayChangingAmountResponse) SetCancelDescription(val OptNilString) {
	s.CancelDescription = val
}

// SetStoreID sets the value of StoreID.
func (s *PaymentPayPayChangingAmountResponse) SetStoreID(val OptNilString) {
	s.StoreID = val
}

// SetCodeID sets the value of CodeID.
func (s *PaymentPayPayChangingAmountResponse) SetCodeID(val OptNilString) {
	s.CodeID = val
}

// SetPaymentID sets the value of PaymentID.
func (s *PaymentPayPayChangingAmountResponse) SetPaymentID(val OptNilString) {
	s.PaymentID = val
}

// SetPaypayResultCode sets the value of PaypayResultCode.
func (s *PaymentPayPayChangingAmountResponse) SetPaypayResultCode(val OptNilString) {
	s.PaypayResultCode = val
}

// SetMerchantPaymentID sets the value of MerchantPaymentID.
func (s *PaymentPayPayChangingAmountResponse) SetMerchantPaymentID(val OptNilString) {
	s.MerchantPaymentID = val
}

// SetMerchantCaptureID sets the value of MerchantCaptureID.
func (s *PaymentPayPayChangingAmountResponse) SetMerchantCaptureID(val OptNilString) {
	s.MerchantCaptureID = val
}

// SetMerchantUpdateID sets the value of MerchantUpdateID.
func (s *PaymentPayPayChangingAmountResponse) SetMerchantUpdateID(val OptNilString) {
	s.MerchantUpdateID = val
}

// SetMerchantRevertID sets the value of MerchantRevertID.
func (s *PaymentPayPayChangingAmountResponse) SetMerchantRevertID(val OptNilString) {
	s.MerchantRevertID = val
}

// SetMerchantRefundID sets the value of MerchantRefundID.
func (s *PaymentPayPayChangingAmountResponse) SetMerchantRefundID(val OptNilString) {
	s.MerchantRefundID = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentPayPayChangingAmountResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// リダイレクト先種別\
// `redirect_url`の種別
// - `1`： Webページ／Webアプリケーション
// - `2`： ネイティブアプリ.
type PaymentPayPayChangingAmountResponseRedirectType string

const (
	PaymentPayPayChangingAmountResponseRedirectType1 PaymentPayPayChangingAmountResponseRedirectType = "1"
	PaymentPayPayChangingAmountResponseRedirectType2 PaymentPayPayChangingAmountResponseRedirectType = "2"
)

// AllValues returns all PaymentPayPayChangingAmountResponseRedirectType values.
func (PaymentPayPayChangingAmountResponseRedirectType) AllValues() []PaymentPayPayChangingAmountResponseRedirectType {
	return []PaymentPayPayChangingAmountResponseRedirectType{
		PaymentPayPayChangingAmountResponseRedirectType1,
		PaymentPayPayChangingAmountResponseRedirectType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentPayPayChangingAmountResponseRedirectType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentPayPayChangingAmountResponseRedirectType1:
		return []byte(s), nil
	case PaymentPayPayChangingAmountResponseRedirectType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentPayPayChangingAmountResponseRedirectType) UnmarshalText(data []byte) error {
	switch PaymentPayPayChangingAmountResponseRedirectType(data) {
	case PaymentPayPayChangingAmountResponseRedirectType1:
		*s = PaymentPayPayChangingAmountResponseRedirectType1
		return nil
	case PaymentPayPayChangingAmountResponseRedirectType2:
		*s = PaymentPayPayChangingAmountResponseRedirectType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.PayPay.Creating.Request
type PaymentPayPayCreatingRequest struct {
	ID               OptPaymentPropertiesID `json:"id"`
	PayType          PayType                `json:"pay_type"`
	JobCode          PayPayPaymentJobCode   `json:"job_code"`
	Amount           Amount                 `json:"amount"`
	Tax              OptTax                 `json:"tax"`
	ClientField1     OptNilClientFieldN     `json:"client_field_1"`
	ClientField2     OptNilClientFieldN     `json:"client_field_2"`
	ClientField3     OptNilClientFieldN     `json:"client_field_3"`
	OrderDescription OptNilOrderDescription `json:"order_description"`
}

// GetID returns the value of ID.
func (s *PaymentPayPayCreatingRequest) GetID() OptPaymentPropertiesID {
	return s.ID
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayCreatingRequest) GetPayType() PayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentPayPayCreatingRequest) GetJobCode() PayPayPaymentJobCode {
	return s.JobCode
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayCreatingRequest) GetAmount() Amount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayCreatingRequest) GetTax() OptTax {
	return s.Tax
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentPayPayCreatingRequest) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentPayPayCreatingRequest) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentPayPayCreatingRequest) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentPayPayCreatingRequest) GetOrderDescription() OptNilOrderDescription {
	return s.OrderDescription
}

// SetID sets the value of ID.
func (s *PaymentPayPayCreatingRequest) SetID(val OptPaymentPropertiesID) {
	s.ID = val
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayCreatingRequest) SetPayType(val PayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentPayPayCreatingRequest) SetJobCode(val PayPayPaymentJobCode) {
	s.JobCode = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayCreatingRequest) SetAmount(val Amount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayCreatingRequest) SetTax(val OptTax) {
	s.Tax = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentPayPayCreatingRequest) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentPayPayCreatingRequest) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentPayPayCreatingRequest) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentPayPayCreatingRequest) SetOrderDescription(val OptNilOrderDescription) {
	s.OrderDescription = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.PayPay.Creating.Response
type PaymentPayPayCreatingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString            `json:"customer_group_id"`
	ErrorCode       OptErrorCode            `json:"error_code"`
	Created         OptCreated              `json:"created"`
	Updated         OptNilUpdated           `json:"updated"`
	PayType         OptPayType              `json:"pay_type"`
	JobCode         OptPayPayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus        `json:"status"`
	// PayPay支払いURL\
	// 購入者をこのURLにリダイレクトすることでPayPay上での取引を開始します。.
	CodeURL OptNilString `json:"code_url"`
	// 支払期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	CodeExpiryDate OptNilString `json:"code_expiry_date"`
	// リダイレクトURL\
	// 決済が完了した際にPayPayからリダイレクト先URL。.
	RedirectURL OptNilString `json:"redirect_url"`
	// リダイレクト先種別\
	// `redirect_url`の種別
	// - `1`： Webページ／Webアプリケーション
	// - `2`： ネイティブアプリ.
	RedirectType OptNilPaymentPayPayCreatingResponseRedirectType `json:"redirect_type"`
	// 仮売上期限\
	// 形式： `yyyy/MM/dd`.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 注文内容の説明\
	// 購入者のPayPayアプリ上で表示される注文内容の説明。.
	OrderDescription OptNilString `json:"order_description"`
	// 売上確定の説明\
	// 購入者のPayPayアプリ上で表示される売上確定の説明。.
	CaptureDescription OptNilString `json:"capture_description"`
	// 金額変更の説明\
	// 購入者のPayPayアプリ上で表示される金額変更の説明。.
	UpdateDescription OptNilString `json:"update_description"`
	// キャンセルの説明\
	// 購入者のPayPayアプリ上で表示されるキャンセルの説明。.
	CancelDescription OptNilString `json:"cancel_description"`
	// 店舗ID\
	// PayPayによって発行された店舗ID。.
	StoreID OptNilString `json:"store_id"`
	// PayPayの支払いコードID.
	CodeID OptNilString `json:"code_id"`
	// PayPay 決済ID.
	PaymentID OptNilString `json:"payment_id"`
	// PayPay処理結果コード.
	PaypayResultCode OptNilString `json:"paypay_result_code"`
	// PayPay トランザクションID.
	MerchantPaymentID OptNilString `json:"merchant_payment_id"`
	// PayPay 売上確定ID.
	MerchantCaptureID OptNilString `json:"merchant_capture_id"`
	// PayPay 金額変更ID.
	MerchantUpdateID OptNilString `json:"merchant_update_id"`
	// PayPay キャンセルID.
	MerchantRevertID OptNilString `json:"merchant_revert_id"`
	// PayPay 返金ID.
	MerchantRefundID OptNilString `json:"merchant_refund_id"`
	// 支払日時\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentPayPayCreatingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentPayPayCreatingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayCreatingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayCreatingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayCreatingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentPayPayCreatingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentPayPayCreatingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentPayPayCreatingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentPayPayCreatingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentPayPayCreatingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentPayPayCreatingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentPayPayCreatingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentPayPayCreatingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentPayPayCreatingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentPayPayCreatingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayCreatingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentPayPayCreatingResponse) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentPayPayCreatingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCodeURL returns the value of CodeURL.
func (s *PaymentPayPayCreatingResponse) GetCodeURL() OptNilString {
	return s.CodeURL
}

// GetCodeExpiryDate returns the value of CodeExpiryDate.
func (s *PaymentPayPayCreatingResponse) GetCodeExpiryDate() OptNilString {
	return s.CodeExpiryDate
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentPayPayCreatingResponse) GetRedirectURL() OptNilString {
	return s.RedirectURL
}

// GetRedirectType returns the value of RedirectType.
func (s *PaymentPayPayCreatingResponse) GetRedirectType() OptNilPaymentPayPayCreatingResponseRedirectType {
	return s.RedirectType
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentPayPayCreatingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentPayPayCreatingResponse) GetOrderDescription() OptNilString {
	return s.OrderDescription
}

// GetCaptureDescription returns the value of CaptureDescription.
func (s *PaymentPayPayCreatingResponse) GetCaptureDescription() OptNilString {
	return s.CaptureDescription
}

// GetUpdateDescription returns the value of UpdateDescription.
func (s *PaymentPayPayCreatingResponse) GetUpdateDescription() OptNilString {
	return s.UpdateDescription
}

// GetCancelDescription returns the value of CancelDescription.
func (s *PaymentPayPayCreatingResponse) GetCancelDescription() OptNilString {
	return s.CancelDescription
}

// GetStoreID returns the value of StoreID.
func (s *PaymentPayPayCreatingResponse) GetStoreID() OptNilString {
	return s.StoreID
}

// GetCodeID returns the value of CodeID.
func (s *PaymentPayPayCreatingResponse) GetCodeID() OptNilString {
	return s.CodeID
}

// GetPaymentID returns the value of PaymentID.
func (s *PaymentPayPayCreatingResponse) GetPaymentID() OptNilString {
	return s.PaymentID
}

// GetPaypayResultCode returns the value of PaypayResultCode.
func (s *PaymentPayPayCreatingResponse) GetPaypayResultCode() OptNilString {
	return s.PaypayResultCode
}

// GetMerchantPaymentID returns the value of MerchantPaymentID.
func (s *PaymentPayPayCreatingResponse) GetMerchantPaymentID() OptNilString {
	return s.MerchantPaymentID
}

// GetMerchantCaptureID returns the value of MerchantCaptureID.
func (s *PaymentPayPayCreatingResponse) GetMerchantCaptureID() OptNilString {
	return s.MerchantCaptureID
}

// GetMerchantUpdateID returns the value of MerchantUpdateID.
func (s *PaymentPayPayCreatingResponse) GetMerchantUpdateID() OptNilString {
	return s.MerchantUpdateID
}

// GetMerchantRevertID returns the value of MerchantRevertID.
func (s *PaymentPayPayCreatingResponse) GetMerchantRevertID() OptNilString {
	return s.MerchantRevertID
}

// GetMerchantRefundID returns the value of MerchantRefundID.
func (s *PaymentPayPayCreatingResponse) GetMerchantRefundID() OptNilString {
	return s.MerchantRefundID
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentPayPayCreatingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// SetShopID sets the value of ShopID.
func (s *PaymentPayPayCreatingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentPayPayCreatingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayCreatingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayCreatingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayCreatingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentPayPayCreatingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentPayPayCreatingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentPayPayCreatingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentPayPayCreatingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentPayPayCreatingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentPayPayCreatingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentPayPayCreatingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentPayPayCreatingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentPayPayCreatingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentPayPayCreatingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayCreatingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentPayPayCreatingResponse) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentPayPayCreatingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCodeURL sets the value of CodeURL.
func (s *PaymentPayPayCreatingResponse) SetCodeURL(val OptNilString) {
	s.CodeURL = val
}

// SetCodeExpiryDate sets the value of CodeExpiryDate.
func (s *PaymentPayPayCreatingResponse) SetCodeExpiryDate(val OptNilString) {
	s.CodeExpiryDate = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentPayPayCreatingResponse) SetRedirectURL(val OptNilString) {
	s.RedirectURL = val
}

// SetRedirectType sets the value of RedirectType.
func (s *PaymentPayPayCreatingResponse) SetRedirectType(val OptNilPaymentPayPayCreatingResponseRedirectType) {
	s.RedirectType = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentPayPayCreatingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentPayPayCreatingResponse) SetOrderDescription(val OptNilString) {
	s.OrderDescription = val
}

// SetCaptureDescription sets the value of CaptureDescription.
func (s *PaymentPayPayCreatingResponse) SetCaptureDescription(val OptNilString) {
	s.CaptureDescription = val
}

// SetUpdateDescription sets the value of UpdateDescription.
func (s *PaymentPayPayCreatingResponse) SetUpdateDescription(val OptNilString) {
	s.UpdateDescription = val
}

// SetCancelDescription sets the value of CancelDescription.
func (s *PaymentPayPayCreatingResponse) SetCancelDescription(val OptNilString) {
	s.CancelDescription = val
}

// SetStoreID sets the value of StoreID.
func (s *PaymentPayPayCreatingResponse) SetStoreID(val OptNilString) {
	s.StoreID = val
}

// SetCodeID sets the value of CodeID.
func (s *PaymentPayPayCreatingResponse) SetCodeID(val OptNilString) {
	s.CodeID = val
}

// SetPaymentID sets the value of PaymentID.
func (s *PaymentPayPayCreatingResponse) SetPaymentID(val OptNilString) {
	s.PaymentID = val
}

// SetPaypayResultCode sets the value of PaypayResultCode.
func (s *PaymentPayPayCreatingResponse) SetPaypayResultCode(val OptNilString) {
	s.PaypayResultCode = val
}

// SetMerchantPaymentID sets the value of MerchantPaymentID.
func (s *PaymentPayPayCreatingResponse) SetMerchantPaymentID(val OptNilString) {
	s.MerchantPaymentID = val
}

// SetMerchantCaptureID sets the value of MerchantCaptureID.
func (s *PaymentPayPayCreatingResponse) SetMerchantCaptureID(val OptNilString) {
	s.MerchantCaptureID = val
}

// SetMerchantUpdateID sets the value of MerchantUpdateID.
func (s *PaymentPayPayCreatingResponse) SetMerchantUpdateID(val OptNilString) {
	s.MerchantUpdateID = val
}

// SetMerchantRevertID sets the value of MerchantRevertID.
func (s *PaymentPayPayCreatingResponse) SetMerchantRevertID(val OptNilString) {
	s.MerchantRevertID = val
}

// SetMerchantRefundID sets the value of MerchantRefundID.
func (s *PaymentPayPayCreatingResponse) SetMerchantRefundID(val OptNilString) {
	s.MerchantRefundID = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentPayPayCreatingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// リダイレクト先種別\
// `redirect_url`の種別
// - `1`： Webページ／Webアプリケーション
// - `2`： ネイティブアプリ.
type PaymentPayPayCreatingResponseRedirectType string

const (
	PaymentPayPayCreatingResponseRedirectType1 PaymentPayPayCreatingResponseRedirectType = "1"
	PaymentPayPayCreatingResponseRedirectType2 PaymentPayPayCreatingResponseRedirectType = "2"
)

// AllValues returns all PaymentPayPayCreatingResponseRedirectType values.
func (PaymentPayPayCreatingResponseRedirectType) AllValues() []PaymentPayPayCreatingResponseRedirectType {
	return []PaymentPayPayCreatingResponseRedirectType{
		PaymentPayPayCreatingResponseRedirectType1,
		PaymentPayPayCreatingResponseRedirectType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentPayPayCreatingResponseRedirectType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentPayPayCreatingResponseRedirectType1:
		return []byte(s), nil
	case PaymentPayPayCreatingResponseRedirectType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentPayPayCreatingResponseRedirectType) UnmarshalText(data []byte) error {
	switch PaymentPayPayCreatingResponseRedirectType(data) {
	case PaymentPayPayCreatingResponseRedirectType1:
		*s = PaymentPayPayCreatingResponseRedirectType1
		return nil
	case PaymentPayPayCreatingResponseRedirectType2:
		*s = PaymentPayPayCreatingResponseRedirectType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.PayPay.Executing.Request
type PaymentPayPayExecutingRequest struct {
	PayType      OptPayType         `json:"pay_type"`
	AccessID     OptAccessID        `json:"access_id"`
	CustomerID   OptID              `json:"customer_id"`
	RedirectURL  OptNilRedirectURL  `json:"redirect_url"`
	RedirectType OptNilRedirectType `json:"redirect_type"`
	UserAgent    OptUserAgent       `json:"user_agent"`
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayExecutingRequest) GetPayType() OptPayType {
	return s.PayType
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayExecutingRequest) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentPayPayExecutingRequest) GetCustomerID() OptID {
	return s.CustomerID
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentPayPayExecutingRequest) GetRedirectURL() OptNilRedirectURL {
	return s.RedirectURL
}

// GetRedirectType returns the value of RedirectType.
func (s *PaymentPayPayExecutingRequest) GetRedirectType() OptNilRedirectType {
	return s.RedirectType
}

// GetUserAgent returns the value of UserAgent.
func (s *PaymentPayPayExecutingRequest) GetUserAgent() OptUserAgent {
	return s.UserAgent
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayExecutingRequest) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayExecutingRequest) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentPayPayExecutingRequest) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentPayPayExecutingRequest) SetRedirectURL(val OptNilRedirectURL) {
	s.RedirectURL = val
}

// SetRedirectType sets the value of RedirectType.
func (s *PaymentPayPayExecutingRequest) SetRedirectType(val OptNilRedirectType) {
	s.RedirectType = val
}

// SetUserAgent sets the value of UserAgent.
func (s *PaymentPayPayExecutingRequest) SetUserAgent(val OptUserAgent) {
	s.UserAgent = val
}

// Merged schema.
// Ref: #/components/schemas/Payment.PayPay.Executing.Response
type PaymentPayPayExecutingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString            `json:"customer_group_id"`
	ErrorCode       OptErrorCode            `json:"error_code"`
	Created         OptCreated              `json:"created"`
	Updated         OptNilUpdated           `json:"updated"`
	PayType         OptPayType              `json:"pay_type"`
	JobCode         OptPayPayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus        `json:"status"`
	// PayPay支払いURL\
	// 購入者をこのURLにリダイレクトすることでPayPay上での取引を開始します。.
	CodeURL OptNilString `json:"code_url"`
	// 支払期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	CodeExpiryDate OptNilString `json:"code_expiry_date"`
	// リダイレクトURL\
	// 決済が完了した際にPayPayからリダイレクト先URL。.
	RedirectURL OptNilString `json:"redirect_url"`
	// リダイレクト先種別\
	// `redirect_url`の種別
	// - `1`： Webページ／Webアプリケーション
	// - `2`： ネイティブアプリ.
	RedirectType OptNilPaymentPayPayExecutingResponseRedirectType `json:"redirect_type"`
	// 仮売上期限\
	// 形式： `yyyy/MM/dd`.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 注文内容の説明\
	// 購入者のPayPayアプリ上で表示される注文内容の説明。.
	OrderDescription OptNilString `json:"order_description"`
	// 売上確定の説明\
	// 購入者のPayPayアプリ上で表示される売上確定の説明。.
	CaptureDescription OptNilString `json:"capture_description"`
	// 金額変更の説明\
	// 購入者のPayPayアプリ上で表示される金額変更の説明。.
	UpdateDescription OptNilString `json:"update_description"`
	// キャンセルの説明\
	// 購入者のPayPayアプリ上で表示されるキャンセルの説明。.
	CancelDescription OptNilString `json:"cancel_description"`
	// 店舗ID\
	// PayPayによって発行された店舗ID。.
	StoreID OptNilString `json:"store_id"`
	// PayPayの支払いコードID.
	CodeID OptNilString `json:"code_id"`
	// PayPay 決済ID.
	PaymentID OptNilString `json:"payment_id"`
	// PayPay処理結果コード.
	PaypayResultCode OptNilString `json:"paypay_result_code"`
	// PayPay トランザクションID.
	MerchantPaymentID OptNilString `json:"merchant_payment_id"`
	// PayPay 売上確定ID.
	MerchantCaptureID OptNilString `json:"merchant_capture_id"`
	// PayPay 金額変更ID.
	MerchantUpdateID OptNilString `json:"merchant_update_id"`
	// PayPay キャンセルID.
	MerchantRevertID OptNilString `json:"merchant_revert_id"`
	// PayPay 返金ID.
	MerchantRefundID OptNilString `json:"merchant_refund_id"`
	// 支払日時\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentPayPayExecutingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentPayPayExecutingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayExecutingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayExecutingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayExecutingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentPayPayExecutingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentPayPayExecutingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentPayPayExecutingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentPayPayExecutingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentPayPayExecutingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentPayPayExecutingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentPayPayExecutingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentPayPayExecutingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentPayPayExecutingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentPayPayExecutingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayExecutingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentPayPayExecutingResponse) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentPayPayExecutingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCodeURL returns the value of CodeURL.
func (s *PaymentPayPayExecutingResponse) GetCodeURL() OptNilString {
	return s.CodeURL
}

// GetCodeExpiryDate returns the value of CodeExpiryDate.
func (s *PaymentPayPayExecutingResponse) GetCodeExpiryDate() OptNilString {
	return s.CodeExpiryDate
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentPayPayExecutingResponse) GetRedirectURL() OptNilString {
	return s.RedirectURL
}

// GetRedirectType returns the value of RedirectType.
func (s *PaymentPayPayExecutingResponse) GetRedirectType() OptNilPaymentPayPayExecutingResponseRedirectType {
	return s.RedirectType
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentPayPayExecutingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentPayPayExecutingResponse) GetOrderDescription() OptNilString {
	return s.OrderDescription
}

// GetCaptureDescription returns the value of CaptureDescription.
func (s *PaymentPayPayExecutingResponse) GetCaptureDescription() OptNilString {
	return s.CaptureDescription
}

// GetUpdateDescription returns the value of UpdateDescription.
func (s *PaymentPayPayExecutingResponse) GetUpdateDescription() OptNilString {
	return s.UpdateDescription
}

// GetCancelDescription returns the value of CancelDescription.
func (s *PaymentPayPayExecutingResponse) GetCancelDescription() OptNilString {
	return s.CancelDescription
}

// GetStoreID returns the value of StoreID.
func (s *PaymentPayPayExecutingResponse) GetStoreID() OptNilString {
	return s.StoreID
}

// GetCodeID returns the value of CodeID.
func (s *PaymentPayPayExecutingResponse) GetCodeID() OptNilString {
	return s.CodeID
}

// GetPaymentID returns the value of PaymentID.
func (s *PaymentPayPayExecutingResponse) GetPaymentID() OptNilString {
	return s.PaymentID
}

// GetPaypayResultCode returns the value of PaypayResultCode.
func (s *PaymentPayPayExecutingResponse) GetPaypayResultCode() OptNilString {
	return s.PaypayResultCode
}

// GetMerchantPaymentID returns the value of MerchantPaymentID.
func (s *PaymentPayPayExecutingResponse) GetMerchantPaymentID() OptNilString {
	return s.MerchantPaymentID
}

// GetMerchantCaptureID returns the value of MerchantCaptureID.
func (s *PaymentPayPayExecutingResponse) GetMerchantCaptureID() OptNilString {
	return s.MerchantCaptureID
}

// GetMerchantUpdateID returns the value of MerchantUpdateID.
func (s *PaymentPayPayExecutingResponse) GetMerchantUpdateID() OptNilString {
	return s.MerchantUpdateID
}

// GetMerchantRevertID returns the value of MerchantRevertID.
func (s *PaymentPayPayExecutingResponse) GetMerchantRevertID() OptNilString {
	return s.MerchantRevertID
}

// GetMerchantRefundID returns the value of MerchantRefundID.
func (s *PaymentPayPayExecutingResponse) GetMerchantRefundID() OptNilString {
	return s.MerchantRefundID
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentPayPayExecutingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// SetShopID sets the value of ShopID.
func (s *PaymentPayPayExecutingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentPayPayExecutingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayExecutingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayExecutingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayExecutingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentPayPayExecutingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentPayPayExecutingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentPayPayExecutingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentPayPayExecutingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentPayPayExecutingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentPayPayExecutingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentPayPayExecutingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentPayPayExecutingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentPayPayExecutingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentPayPayExecutingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayExecutingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentPayPayExecutingResponse) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentPayPayExecutingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCodeURL sets the value of CodeURL.
func (s *PaymentPayPayExecutingResponse) SetCodeURL(val OptNilString) {
	s.CodeURL = val
}

// SetCodeExpiryDate sets the value of CodeExpiryDate.
func (s *PaymentPayPayExecutingResponse) SetCodeExpiryDate(val OptNilString) {
	s.CodeExpiryDate = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentPayPayExecutingResponse) SetRedirectURL(val OptNilString) {
	s.RedirectURL = val
}

// SetRedirectType sets the value of RedirectType.
func (s *PaymentPayPayExecutingResponse) SetRedirectType(val OptNilPaymentPayPayExecutingResponseRedirectType) {
	s.RedirectType = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentPayPayExecutingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentPayPayExecutingResponse) SetOrderDescription(val OptNilString) {
	s.OrderDescription = val
}

// SetCaptureDescription sets the value of CaptureDescription.
func (s *PaymentPayPayExecutingResponse) SetCaptureDescription(val OptNilString) {
	s.CaptureDescription = val
}

// SetUpdateDescription sets the value of UpdateDescription.
func (s *PaymentPayPayExecutingResponse) SetUpdateDescription(val OptNilString) {
	s.UpdateDescription = val
}

// SetCancelDescription sets the value of CancelDescription.
func (s *PaymentPayPayExecutingResponse) SetCancelDescription(val OptNilString) {
	s.CancelDescription = val
}

// SetStoreID sets the value of StoreID.
func (s *PaymentPayPayExecutingResponse) SetStoreID(val OptNilString) {
	s.StoreID = val
}

// SetCodeID sets the value of CodeID.
func (s *PaymentPayPayExecutingResponse) SetCodeID(val OptNilString) {
	s.CodeID = val
}

// SetPaymentID sets the value of PaymentID.
func (s *PaymentPayPayExecutingResponse) SetPaymentID(val OptNilString) {
	s.PaymentID = val
}

// SetPaypayResultCode sets the value of PaypayResultCode.
func (s *PaymentPayPayExecutingResponse) SetPaypayResultCode(val OptNilString) {
	s.PaypayResultCode = val
}

// SetMerchantPaymentID sets the value of MerchantPaymentID.
func (s *PaymentPayPayExecutingResponse) SetMerchantPaymentID(val OptNilString) {
	s.MerchantPaymentID = val
}

// SetMerchantCaptureID sets the value of MerchantCaptureID.
func (s *PaymentPayPayExecutingResponse) SetMerchantCaptureID(val OptNilString) {
	s.MerchantCaptureID = val
}

// SetMerchantUpdateID sets the value of MerchantUpdateID.
func (s *PaymentPayPayExecutingResponse) SetMerchantUpdateID(val OptNilString) {
	s.MerchantUpdateID = val
}

// SetMerchantRevertID sets the value of MerchantRevertID.
func (s *PaymentPayPayExecutingResponse) SetMerchantRevertID(val OptNilString) {
	s.MerchantRevertID = val
}

// SetMerchantRefundID sets the value of MerchantRefundID.
func (s *PaymentPayPayExecutingResponse) SetMerchantRefundID(val OptNilString) {
	s.MerchantRefundID = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentPayPayExecutingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// リダイレクト先種別\
// `redirect_url`の種別
// - `1`： Webページ／Webアプリケーション
// - `2`： ネイティブアプリ.
type PaymentPayPayExecutingResponseRedirectType string

const (
	PaymentPayPayExecutingResponseRedirectType1 PaymentPayPayExecutingResponseRedirectType = "1"
	PaymentPayPayExecutingResponseRedirectType2 PaymentPayPayExecutingResponseRedirectType = "2"
)

// AllValues returns all PaymentPayPayExecutingResponseRedirectType values.
func (PaymentPayPayExecutingResponseRedirectType) AllValues() []PaymentPayPayExecutingResponseRedirectType {
	return []PaymentPayPayExecutingResponseRedirectType{
		PaymentPayPayExecutingResponseRedirectType1,
		PaymentPayPayExecutingResponseRedirectType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentPayPayExecutingResponseRedirectType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentPayPayExecutingResponseRedirectType1:
		return []byte(s), nil
	case PaymentPayPayExecutingResponseRedirectType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentPayPayExecutingResponseRedirectType) UnmarshalText(data []byte) error {
	switch PaymentPayPayExecutingResponseRedirectType(data) {
	case PaymentPayPayExecutingResponseRedirectType1:
		*s = PaymentPayPayExecutingResponseRedirectType1
		return nil
	case PaymentPayPayExecutingResponseRedirectType2:
		*s = PaymentPayPayExecutingResponseRedirectType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
// Ref: #/components/schemas/Payment.PayPay.ListRetrieving.Response
type PaymentPayPayListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString                                  `json:"link_previous"`
	List         []PaymentPayPayListRetrievingResponseListItem `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PaymentPayPayListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PaymentPayPayListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PaymentPayPayListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PaymentPayPayListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PaymentPayPayListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PaymentPayPayListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PaymentPayPayListRetrievingResponse) GetList() []PaymentPayPayListRetrievingResponseListItem {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PaymentPayPayListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PaymentPayPayListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PaymentPayPayListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PaymentPayPayListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PaymentPayPayListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PaymentPayPayListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PaymentPayPayListRetrievingResponse) SetList(val []PaymentPayPayListRetrievingResponseListItem) {
	s.List = val
}

// Merged schema.
type PaymentPayPayListRetrievingResponseListItem struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString            `json:"customer_group_id"`
	ErrorCode       OptErrorCode            `json:"error_code"`
	Created         OptCreated              `json:"created"`
	Updated         OptNilUpdated           `json:"updated"`
	PayType         OptPayType              `json:"pay_type"`
	JobCode         OptPayPayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus        `json:"status"`
	// PayPay支払いURL\
	// 購入者をこのURLにリダイレクトすることでPayPay上での取引を開始します。.
	CodeURL OptNilString `json:"code_url"`
	// 支払期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	CodeExpiryDate OptNilString `json:"code_expiry_date"`
	// リダイレクトURL\
	// 決済が完了した際にPayPayからリダイレクト先URL。.
	RedirectURL OptNilString `json:"redirect_url"`
	// リダイレクト先種別\
	// `redirect_url`の種別
	// - `1`： Webページ／Webアプリケーション
	// - `2`： ネイティブアプリ.
	RedirectType OptNilPaymentPayPayListRetrievingResponseListItemRedirectType `json:"redirect_type"`
	// 仮売上期限\
	// 形式： `yyyy/MM/dd`.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 注文内容の説明\
	// 購入者のPayPayアプリ上で表示される注文内容の説明。.
	OrderDescription OptNilString `json:"order_description"`
	// 売上確定の説明\
	// 購入者のPayPayアプリ上で表示される売上確定の説明。.
	CaptureDescription OptNilString `json:"capture_description"`
	// 金額変更の説明\
	// 購入者のPayPayアプリ上で表示される金額変更の説明。.
	UpdateDescription OptNilString `json:"update_description"`
	// キャンセルの説明\
	// 購入者のPayPayアプリ上で表示されるキャンセルの説明。.
	CancelDescription OptNilString `json:"cancel_description"`
	// 店舗ID\
	// PayPayによって発行された店舗ID。.
	StoreID OptNilString `json:"store_id"`
	// PayPayの支払いコードID.
	CodeID OptNilString `json:"code_id"`
	// PayPay 決済ID.
	PaymentID OptNilString `json:"payment_id"`
	// PayPay処理結果コード.
	PaypayResultCode OptNilString `json:"paypay_result_code"`
	// PayPay トランザクションID.
	MerchantPaymentID OptNilString `json:"merchant_payment_id"`
	// PayPay 売上確定ID.
	MerchantCaptureID OptNilString `json:"merchant_capture_id"`
	// PayPay 金額変更ID.
	MerchantUpdateID OptNilString `json:"merchant_update_id"`
	// PayPay キャンセルID.
	MerchantRevertID OptNilString `json:"merchant_revert_id"`
	// PayPay 返金ID.
	MerchantRefundID OptNilString `json:"merchant_refund_id"`
	// 支払日時\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayListRetrievingResponseListItem) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayListRetrievingResponseListItem) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentPayPayListRetrievingResponseListItem) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentPayPayListRetrievingResponseListItem) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentPayPayListRetrievingResponseListItem) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentPayPayListRetrievingResponseListItem) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentPayPayListRetrievingResponseListItem) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentPayPayListRetrievingResponseListItem) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentPayPayListRetrievingResponseListItem) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentPayPayListRetrievingResponseListItem) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayListRetrievingResponseListItem) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentPayPayListRetrievingResponseListItem) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentPayPayListRetrievingResponseListItem) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCodeURL returns the value of CodeURL.
func (s *PaymentPayPayListRetrievingResponseListItem) GetCodeURL() OptNilString {
	return s.CodeURL
}

// GetCodeExpiryDate returns the value of CodeExpiryDate.
func (s *PaymentPayPayListRetrievingResponseListItem) GetCodeExpiryDate() OptNilString {
	return s.CodeExpiryDate
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentPayPayListRetrievingResponseListItem) GetRedirectURL() OptNilString {
	return s.RedirectURL
}

// GetRedirectType returns the value of RedirectType.
func (s *PaymentPayPayListRetrievingResponseListItem) GetRedirectType() OptNilPaymentPayPayListRetrievingResponseListItemRedirectType {
	return s.RedirectType
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentPayPayListRetrievingResponseListItem) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentPayPayListRetrievingResponseListItem) GetOrderDescription() OptNilString {
	return s.OrderDescription
}

// GetCaptureDescription returns the value of CaptureDescription.
func (s *PaymentPayPayListRetrievingResponseListItem) GetCaptureDescription() OptNilString {
	return s.CaptureDescription
}

// GetUpdateDescription returns the value of UpdateDescription.
func (s *PaymentPayPayListRetrievingResponseListItem) GetUpdateDescription() OptNilString {
	return s.UpdateDescription
}

// GetCancelDescription returns the value of CancelDescription.
func (s *PaymentPayPayListRetrievingResponseListItem) GetCancelDescription() OptNilString {
	return s.CancelDescription
}

// GetStoreID returns the value of StoreID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetStoreID() OptNilString {
	return s.StoreID
}

// GetCodeID returns the value of CodeID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetCodeID() OptNilString {
	return s.CodeID
}

// GetPaymentID returns the value of PaymentID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetPaymentID() OptNilString {
	return s.PaymentID
}

// GetPaypayResultCode returns the value of PaypayResultCode.
func (s *PaymentPayPayListRetrievingResponseListItem) GetPaypayResultCode() OptNilString {
	return s.PaypayResultCode
}

// GetMerchantPaymentID returns the value of MerchantPaymentID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetMerchantPaymentID() OptNilString {
	return s.MerchantPaymentID
}

// GetMerchantCaptureID returns the value of MerchantCaptureID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetMerchantCaptureID() OptNilString {
	return s.MerchantCaptureID
}

// GetMerchantUpdateID returns the value of MerchantUpdateID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetMerchantUpdateID() OptNilString {
	return s.MerchantUpdateID
}

// GetMerchantRevertID returns the value of MerchantRevertID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetMerchantRevertID() OptNilString {
	return s.MerchantRevertID
}

// GetMerchantRefundID returns the value of MerchantRefundID.
func (s *PaymentPayPayListRetrievingResponseListItem) GetMerchantRefundID() OptNilString {
	return s.MerchantRefundID
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentPayPayListRetrievingResponseListItem) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// SetShopID sets the value of ShopID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayListRetrievingResponseListItem) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayListRetrievingResponseListItem) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentPayPayListRetrievingResponseListItem) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentPayPayListRetrievingResponseListItem) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentPayPayListRetrievingResponseListItem) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentPayPayListRetrievingResponseListItem) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentPayPayListRetrievingResponseListItem) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentPayPayListRetrievingResponseListItem) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentPayPayListRetrievingResponseListItem) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentPayPayListRetrievingResponseListItem) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayListRetrievingResponseListItem) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentPayPayListRetrievingResponseListItem) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentPayPayListRetrievingResponseListItem) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCodeURL sets the value of CodeURL.
func (s *PaymentPayPayListRetrievingResponseListItem) SetCodeURL(val OptNilString) {
	s.CodeURL = val
}

// SetCodeExpiryDate sets the value of CodeExpiryDate.
func (s *PaymentPayPayListRetrievingResponseListItem) SetCodeExpiryDate(val OptNilString) {
	s.CodeExpiryDate = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentPayPayListRetrievingResponseListItem) SetRedirectURL(val OptNilString) {
	s.RedirectURL = val
}

// SetRedirectType sets the value of RedirectType.
func (s *PaymentPayPayListRetrievingResponseListItem) SetRedirectType(val OptNilPaymentPayPayListRetrievingResponseListItemRedirectType) {
	s.RedirectType = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentPayPayListRetrievingResponseListItem) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentPayPayListRetrievingResponseListItem) SetOrderDescription(val OptNilString) {
	s.OrderDescription = val
}

// SetCaptureDescription sets the value of CaptureDescription.
func (s *PaymentPayPayListRetrievingResponseListItem) SetCaptureDescription(val OptNilString) {
	s.CaptureDescription = val
}

// SetUpdateDescription sets the value of UpdateDescription.
func (s *PaymentPayPayListRetrievingResponseListItem) SetUpdateDescription(val OptNilString) {
	s.UpdateDescription = val
}

// SetCancelDescription sets the value of CancelDescription.
func (s *PaymentPayPayListRetrievingResponseListItem) SetCancelDescription(val OptNilString) {
	s.CancelDescription = val
}

// SetStoreID sets the value of StoreID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetStoreID(val OptNilString) {
	s.StoreID = val
}

// SetCodeID sets the value of CodeID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetCodeID(val OptNilString) {
	s.CodeID = val
}

// SetPaymentID sets the value of PaymentID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetPaymentID(val OptNilString) {
	s.PaymentID = val
}

// SetPaypayResultCode sets the value of PaypayResultCode.
func (s *PaymentPayPayListRetrievingResponseListItem) SetPaypayResultCode(val OptNilString) {
	s.PaypayResultCode = val
}

// SetMerchantPaymentID sets the value of MerchantPaymentID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetMerchantPaymentID(val OptNilString) {
	s.MerchantPaymentID = val
}

// SetMerchantCaptureID sets the value of MerchantCaptureID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetMerchantCaptureID(val OptNilString) {
	s.MerchantCaptureID = val
}

// SetMerchantUpdateID sets the value of MerchantUpdateID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetMerchantUpdateID(val OptNilString) {
	s.MerchantUpdateID = val
}

// SetMerchantRevertID sets the value of MerchantRevertID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetMerchantRevertID(val OptNilString) {
	s.MerchantRevertID = val
}

// SetMerchantRefundID sets the value of MerchantRefundID.
func (s *PaymentPayPayListRetrievingResponseListItem) SetMerchantRefundID(val OptNilString) {
	s.MerchantRefundID = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentPayPayListRetrievingResponseListItem) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// リダイレクト先種別\
// `redirect_url`の種別
// - `1`： Webページ／Webアプリケーション
// - `2`： ネイティブアプリ.
type PaymentPayPayListRetrievingResponseListItemRedirectType string

const (
	PaymentPayPayListRetrievingResponseListItemRedirectType1 PaymentPayPayListRetrievingResponseListItemRedirectType = "1"
	PaymentPayPayListRetrievingResponseListItemRedirectType2 PaymentPayPayListRetrievingResponseListItemRedirectType = "2"
)

// AllValues returns all PaymentPayPayListRetrievingResponseListItemRedirectType values.
func (PaymentPayPayListRetrievingResponseListItemRedirectType) AllValues() []PaymentPayPayListRetrievingResponseListItemRedirectType {
	return []PaymentPayPayListRetrievingResponseListItemRedirectType{
		PaymentPayPayListRetrievingResponseListItemRedirectType1,
		PaymentPayPayListRetrievingResponseListItemRedirectType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentPayPayListRetrievingResponseListItemRedirectType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentPayPayListRetrievingResponseListItemRedirectType1:
		return []byte(s), nil
	case PaymentPayPayListRetrievingResponseListItemRedirectType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentPayPayListRetrievingResponseListItemRedirectType) UnmarshalText(data []byte) error {
	switch PaymentPayPayListRetrievingResponseListItemRedirectType(data) {
	case PaymentPayPayListRetrievingResponseListItemRedirectType1:
		*s = PaymentPayPayListRetrievingResponseListItemRedirectType1
		return nil
	case PaymentPayPayListRetrievingResponseListItemRedirectType2:
		*s = PaymentPayPayListRetrievingResponseListItemRedirectType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
// Ref: #/components/schemas/Payment.PayPay.Retrieving.Response
type PaymentPayPayRetrievingResponse struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// オーダーID\
	// 決済情報のIDです。.
	ID OptString `json:"id"`
	// 取引ID.
	AccessID OptString `json:"access_id"`
	// 利用金額.
	Amount OptInt `json:"amount"`
	// 税送料.
	Tax OptInt `json:"tax"`
	// 合計金額\
	// `amount`と`tax`の合計値です。.
	TotalAmount  OptInt64           `json:"total_amount"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	// 決済 処理日時\
	// 決済の各種処理（決済実行、キャンセルなど）が行われた日時です。.
	ProcessDate OptString `json:"process_date"`
	CustomerID  OptID     `json:"customer_id"`
	// 顧客情報共有グループID\
	// プラットフォームショップにおいて顧客情報が共有されている場合、顧客が所属する共有グループのIDです。.
	CustomerGroupID OptNilString            `json:"customer_group_id"`
	ErrorCode       OptErrorCode            `json:"error_code"`
	Created         OptCreated              `json:"created"`
	Updated         OptNilUpdated           `json:"updated"`
	PayType         OptPayType              `json:"pay_type"`
	JobCode         OptPayPayPaymentJobCode `json:"job_code"`
	Status          OptPaymentStatus        `json:"status"`
	// PayPay支払いURL\
	// 購入者をこのURLにリダイレクトすることでPayPay上での取引を開始します。.
	CodeURL OptNilString `json:"code_url"`
	// 支払期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	CodeExpiryDate OptNilString `json:"code_expiry_date"`
	// リダイレクトURL\
	// 決済が完了した際にPayPayからリダイレクト先URL。.
	RedirectURL OptNilString `json:"redirect_url"`
	// リダイレクト先種別\
	// `redirect_url`の種別
	// - `1`： Webページ／Webアプリケーション
	// - `2`： ネイティブアプリ.
	RedirectType OptNilPaymentPayPayRetrievingResponseRedirectType `json:"redirect_type"`
	// 仮売上期限\
	// 形式： `yyyy/MM/dd`.
	AuthMaxDate OptNilString `json:"auth_max_date"`
	// 注文内容の説明\
	// 購入者のPayPayアプリ上で表示される注文内容の説明。.
	OrderDescription OptNilString `json:"order_description"`
	// 売上確定の説明\
	// 購入者のPayPayアプリ上で表示される売上確定の説明。.
	CaptureDescription OptNilString `json:"capture_description"`
	// 金額変更の説明\
	// 購入者のPayPayアプリ上で表示される金額変更の説明。.
	UpdateDescription OptNilString `json:"update_description"`
	// キャンセルの説明\
	// 購入者のPayPayアプリ上で表示されるキャンセルの説明。.
	CancelDescription OptNilString `json:"cancel_description"`
	// 店舗ID\
	// PayPayによって発行された店舗ID。.
	StoreID OptNilString `json:"store_id"`
	// PayPayの支払いコードID.
	CodeID OptNilString `json:"code_id"`
	// PayPay 決済ID.
	PaymentID OptNilString `json:"payment_id"`
	// PayPay処理結果コード.
	PaypayResultCode OptNilString `json:"paypay_result_code"`
	// PayPay トランザクションID.
	MerchantPaymentID OptNilString `json:"merchant_payment_id"`
	// PayPay 売上確定ID.
	MerchantCaptureID OptNilString `json:"merchant_capture_id"`
	// PayPay 金額変更ID.
	MerchantUpdateID OptNilString `json:"merchant_update_id"`
	// PayPay キャンセルID.
	MerchantRevertID OptNilString `json:"merchant_revert_id"`
	// PayPay 返金ID.
	MerchantRefundID OptNilString `json:"merchant_refund_id"`
	// 支払日時\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	PaymentDate OptNilString `json:"payment_date"`
}

// GetShopID returns the value of ShopID.
func (s *PaymentPayPayRetrievingResponse) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetID returns the value of ID.
func (s *PaymentPayPayRetrievingResponse) GetID() OptString {
	return s.ID
}

// GetAccessID returns the value of AccessID.
func (s *PaymentPayPayRetrievingResponse) GetAccessID() OptString {
	return s.AccessID
}

// GetAmount returns the value of Amount.
func (s *PaymentPayPayRetrievingResponse) GetAmount() OptInt {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentPayPayRetrievingResponse) GetTax() OptInt {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PaymentPayPayRetrievingResponse) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentPayPayRetrievingResponse) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentPayPayRetrievingResponse) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentPayPayRetrievingResponse) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *PaymentPayPayRetrievingResponse) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetCustomerID returns the value of CustomerID.
func (s *PaymentPayPayRetrievingResponse) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *PaymentPayPayRetrievingResponse) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetErrorCode returns the value of ErrorCode.
func (s *PaymentPayPayRetrievingResponse) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *PaymentPayPayRetrievingResponse) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentPayPayRetrievingResponse) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetPayType returns the value of PayType.
func (s *PaymentPayPayRetrievingResponse) GetPayType() OptPayType {
	return s.PayType
}

// GetJobCode returns the value of JobCode.
func (s *PaymentPayPayRetrievingResponse) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetStatus returns the value of Status.
func (s *PaymentPayPayRetrievingResponse) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCodeURL returns the value of CodeURL.
func (s *PaymentPayPayRetrievingResponse) GetCodeURL() OptNilString {
	return s.CodeURL
}

// GetCodeExpiryDate returns the value of CodeExpiryDate.
func (s *PaymentPayPayRetrievingResponse) GetCodeExpiryDate() OptNilString {
	return s.CodeExpiryDate
}

// GetRedirectURL returns the value of RedirectURL.
func (s *PaymentPayPayRetrievingResponse) GetRedirectURL() OptNilString {
	return s.RedirectURL
}

// GetRedirectType returns the value of RedirectType.
func (s *PaymentPayPayRetrievingResponse) GetRedirectType() OptNilPaymentPayPayRetrievingResponseRedirectType {
	return s.RedirectType
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *PaymentPayPayRetrievingResponse) GetAuthMaxDate() OptNilString {
	return s.AuthMaxDate
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentPayPayRetrievingResponse) GetOrderDescription() OptNilString {
	return s.OrderDescription
}

// GetCaptureDescription returns the value of CaptureDescription.
func (s *PaymentPayPayRetrievingResponse) GetCaptureDescription() OptNilString {
	return s.CaptureDescription
}

// GetUpdateDescription returns the value of UpdateDescription.
func (s *PaymentPayPayRetrievingResponse) GetUpdateDescription() OptNilString {
	return s.UpdateDescription
}

// GetCancelDescription returns the value of CancelDescription.
func (s *PaymentPayPayRetrievingResponse) GetCancelDescription() OptNilString {
	return s.CancelDescription
}

// GetStoreID returns the value of StoreID.
func (s *PaymentPayPayRetrievingResponse) GetStoreID() OptNilString {
	return s.StoreID
}

// GetCodeID returns the value of CodeID.
func (s *PaymentPayPayRetrievingResponse) GetCodeID() OptNilString {
	return s.CodeID
}

// GetPaymentID returns the value of PaymentID.
func (s *PaymentPayPayRetrievingResponse) GetPaymentID() OptNilString {
	return s.PaymentID
}

// GetPaypayResultCode returns the value of PaypayResultCode.
func (s *PaymentPayPayRetrievingResponse) GetPaypayResultCode() OptNilString {
	return s.PaypayResultCode
}

// GetMerchantPaymentID returns the value of MerchantPaymentID.
func (s *PaymentPayPayRetrievingResponse) GetMerchantPaymentID() OptNilString {
	return s.MerchantPaymentID
}

// GetMerchantCaptureID returns the value of MerchantCaptureID.
func (s *PaymentPayPayRetrievingResponse) GetMerchantCaptureID() OptNilString {
	return s.MerchantCaptureID
}

// GetMerchantUpdateID returns the value of MerchantUpdateID.
func (s *PaymentPayPayRetrievingResponse) GetMerchantUpdateID() OptNilString {
	return s.MerchantUpdateID
}

// GetMerchantRevertID returns the value of MerchantRevertID.
func (s *PaymentPayPayRetrievingResponse) GetMerchantRevertID() OptNilString {
	return s.MerchantRevertID
}

// GetMerchantRefundID returns the value of MerchantRefundID.
func (s *PaymentPayPayRetrievingResponse) GetMerchantRefundID() OptNilString {
	return s.MerchantRefundID
}

// GetPaymentDate returns the value of PaymentDate.
func (s *PaymentPayPayRetrievingResponse) GetPaymentDate() OptNilString {
	return s.PaymentDate
}

// SetShopID sets the value of ShopID.
func (s *PaymentPayPayRetrievingResponse) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetID sets the value of ID.
func (s *PaymentPayPayRetrievingResponse) SetID(val OptString) {
	s.ID = val
}

// SetAccessID sets the value of AccessID.
func (s *PaymentPayPayRetrievingResponse) SetAccessID(val OptString) {
	s.AccessID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentPayPayRetrievingResponse) SetAmount(val OptInt) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentPayPayRetrievingResponse) SetTax(val OptInt) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PaymentPayPayRetrievingResponse) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentPayPayRetrievingResponse) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentPayPayRetrievingResponse) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentPayPayRetrievingResponse) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *PaymentPayPayRetrievingResponse) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetCustomerID sets the value of CustomerID.
func (s *PaymentPayPayRetrievingResponse) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *PaymentPayPayRetrievingResponse) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *PaymentPayPayRetrievingResponse) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *PaymentPayPayRetrievingResponse) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentPayPayRetrievingResponse) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetPayType sets the value of PayType.
func (s *PaymentPayPayRetrievingResponse) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetJobCode sets the value of JobCode.
func (s *PaymentPayPayRetrievingResponse) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetStatus sets the value of Status.
func (s *PaymentPayPayRetrievingResponse) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCodeURL sets the value of CodeURL.
func (s *PaymentPayPayRetrievingResponse) SetCodeURL(val OptNilString) {
	s.CodeURL = val
}

// SetCodeExpiryDate sets the value of CodeExpiryDate.
func (s *PaymentPayPayRetrievingResponse) SetCodeExpiryDate(val OptNilString) {
	s.CodeExpiryDate = val
}

// SetRedirectURL sets the value of RedirectURL.
func (s *PaymentPayPayRetrievingResponse) SetRedirectURL(val OptNilString) {
	s.RedirectURL = val
}

// SetRedirectType sets the value of RedirectType.
func (s *PaymentPayPayRetrievingResponse) SetRedirectType(val OptNilPaymentPayPayRetrievingResponseRedirectType) {
	s.RedirectType = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *PaymentPayPayRetrievingResponse) SetAuthMaxDate(val OptNilString) {
	s.AuthMaxDate = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentPayPayRetrievingResponse) SetOrderDescription(val OptNilString) {
	s.OrderDescription = val
}

// SetCaptureDescription sets the value of CaptureDescription.
func (s *PaymentPayPayRetrievingResponse) SetCaptureDescription(val OptNilString) {
	s.CaptureDescription = val
}

// SetUpdateDescription sets the value of UpdateDescription.
func (s *PaymentPayPayRetrievingResponse) SetUpdateDescription(val OptNilString) {
	s.UpdateDescription = val
}

// SetCancelDescription sets the value of CancelDescription.
func (s *PaymentPayPayRetrievingResponse) SetCancelDescription(val OptNilString) {
	s.CancelDescription = val
}

// SetStoreID sets the value of StoreID.
func (s *PaymentPayPayRetrievingResponse) SetStoreID(val OptNilString) {
	s.StoreID = val
}

// SetCodeID sets the value of CodeID.
func (s *PaymentPayPayRetrievingResponse) SetCodeID(val OptNilString) {
	s.CodeID = val
}

// SetPaymentID sets the value of PaymentID.
func (s *PaymentPayPayRetrievingResponse) SetPaymentID(val OptNilString) {
	s.PaymentID = val
}

// SetPaypayResultCode sets the value of PaypayResultCode.
func (s *PaymentPayPayRetrievingResponse) SetPaypayResultCode(val OptNilString) {
	s.PaypayResultCode = val
}

// SetMerchantPaymentID sets the value of MerchantPaymentID.
func (s *PaymentPayPayRetrievingResponse) SetMerchantPaymentID(val OptNilString) {
	s.MerchantPaymentID = val
}

// SetMerchantCaptureID sets the value of MerchantCaptureID.
func (s *PaymentPayPayRetrievingResponse) SetMerchantCaptureID(val OptNilString) {
	s.MerchantCaptureID = val
}

// SetMerchantUpdateID sets the value of MerchantUpdateID.
func (s *PaymentPayPayRetrievingResponse) SetMerchantUpdateID(val OptNilString) {
	s.MerchantUpdateID = val
}

// SetMerchantRevertID sets the value of MerchantRevertID.
func (s *PaymentPayPayRetrievingResponse) SetMerchantRevertID(val OptNilString) {
	s.MerchantRevertID = val
}

// SetMerchantRefundID sets the value of MerchantRefundID.
func (s *PaymentPayPayRetrievingResponse) SetMerchantRefundID(val OptNilString) {
	s.MerchantRefundID = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *PaymentPayPayRetrievingResponse) SetPaymentDate(val OptNilString) {
	s.PaymentDate = val
}

// リダイレクト先種別\
// `redirect_url`の種別
// - `1`： Webページ／Webアプリケーション
// - `2`： ネイティブアプリ.
type PaymentPayPayRetrievingResponseRedirectType string

const (
	PaymentPayPayRetrievingResponseRedirectType1 PaymentPayPayRetrievingResponseRedirectType = "1"
	PaymentPayPayRetrievingResponseRedirectType2 PaymentPayPayRetrievingResponseRedirectType = "2"
)

// AllValues returns all PaymentPayPayRetrievingResponseRedirectType values.
func (PaymentPayPayRetrievingResponseRedirectType) AllValues() []PaymentPayPayRetrievingResponseRedirectType {
	return []PaymentPayPayRetrievingResponseRedirectType{
		PaymentPayPayRetrievingResponseRedirectType1,
		PaymentPayPayRetrievingResponseRedirectType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentPayPayRetrievingResponseRedirectType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentPayPayRetrievingResponseRedirectType1:
		return []byte(s), nil
	case PaymentPayPayRetrievingResponseRedirectType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentPayPayRetrievingResponseRedirectType) UnmarshalText(data []byte) error {
	switch PaymentPayPayRetrievingResponseRedirectType(data) {
	case PaymentPayPayRetrievingResponseRedirectType1:
		*s = PaymentPayPayRetrievingResponseRedirectType1
		return nil
	case PaymentPayPayRetrievingResponseRedirectType2:
		*s = PaymentPayPayRetrievingResponseRedirectType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type PaymentPropertiesID string

// - `PAYSLE`: コンビニ決済
// - `PAYPAY`: PayPay
// - `APPLE_PAY_UC`: Apple Pay（VISA/Mastercard）
// - `APPLE_PAY_JCB`: Apple Pay（JCB/American Express/Diners Club）
// - `DIRECT_DEBIT`: 口座振替
// - `VIRTUAL_ACCOUNT`: 銀行振込（バーチャル口座）.
// Ref: #/components/schemas/PaymentProvider
type PaymentProvider string

const (
	PaymentProviderPAYSLE         PaymentProvider = "PAYSLE"
	PaymentProviderPAYPAY         PaymentProvider = "PAYPAY"
	PaymentProviderAPPLEPAYUC     PaymentProvider = "APPLE_PAY_UC"
	PaymentProviderAPPLEPAYJCB    PaymentProvider = "APPLE_PAY_JCB"
	PaymentProviderDIRECTDEBIT    PaymentProvider = "DIRECT_DEBIT"
	PaymentProviderVIRTUALACCOUNT PaymentProvider = "VIRTUAL_ACCOUNT"
)

// AllValues returns all PaymentProvider values.
func (PaymentProvider) AllValues() []PaymentProvider {
	return []PaymentProvider{
		PaymentProviderPAYSLE,
		PaymentProviderPAYPAY,
		PaymentProviderAPPLEPAYUC,
		PaymentProviderAPPLEPAYJCB,
		PaymentProviderDIRECTDEBIT,
		PaymentProviderVIRTUALACCOUNT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentProvider) MarshalText() ([]byte, error) {
	switch s {
	case PaymentProviderPAYSLE:
		return []byte(s), nil
	case PaymentProviderPAYPAY:
		return []byte(s), nil
	case PaymentProviderAPPLEPAYUC:
		return []byte(s), nil
	case PaymentProviderAPPLEPAYJCB:
		return []byte(s), nil
	case PaymentProviderDIRECTDEBIT:
		return []byte(s), nil
	case PaymentProviderVIRTUALACCOUNT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentProvider) UnmarshalText(data []byte) error {
	switch PaymentProvider(data) {
	case PaymentProviderPAYSLE:
		*s = PaymentProviderPAYSLE
		return nil
	case PaymentProviderPAYPAY:
		*s = PaymentProviderPAYPAY
		return nil
	case PaymentProviderAPPLEPAYUC:
		*s = PaymentProviderAPPLEPAYUC
		return nil
	case PaymentProviderAPPLEPAYJCB:
		*s = PaymentProviderAPPLEPAYJCB
		return nil
	case PaymentProviderDIRECTDEBIT:
		*s = PaymentProviderDIRECTDEBIT
		return nil
	case PaymentProviderVIRTUALACCOUNT:
		*s = PaymentProviderVIRTUALACCOUNT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Payment.Retrieving.QueryParams
type PaymentRetrievingQueryParams struct {
	PayType PayType `json:"pay_type"`
}

// GetPayType returns the value of PayType.
func (s *PaymentRetrievingQueryParams) GetPayType() PayType {
	return s.PayType
}

// SetPayType sets the value of PayType.
func (s *PaymentRetrievingQueryParams) SetPayType(val PayType) {
	s.PayType = val
}

// Ref: #/components/schemas/PaymentSession
type PaymentSession struct {
	// リダイレクト型決済URL ID.
	ID OptString `json:"id"`
	// リダイレクト型決済URL.
	LinkURL OptString `json:"link_url"`
	// 成功時リダイレクトURL\
	// `link_url`上で決済に成功すると、fincodeはこのURLにPOSTメソッドでリダイレクトします。.
	SuccessURL OptNilString `json:"success_url"`
	// キャンセル時リダイレクトURL\
	// `link_url`上で決済がキャンセルされると、fincodeはこのURLにPOSTメソッドでリダイレクトします。.
	CancelURL OptNilString            `json:"cancel_url"`
	Status    OptPaymentSessionStatus `json:"status"`
	// リダイレクト型決済URL 有効期限\
	// 形式： `yyyy/MM/dd HH:mm:ss.SSS`.
	Expire OptString `json:"expire"`
	// ショップ／サービス名\
	// 決済URL上で表示されるショップおよびサービスの名称です。\
	// \
	// デフォルトでは本番環境申請時に登録した「明細書表記」の値が設定されます。.
	ShopServiceName OptNilString `json:"shop_service_name"`
	// 購入メール 送信フラグ\
	// リダイレクト型決済URLをfincodeからのメール送信機能で送信したかどうかを示します。
	// - `0`：送信しなかった（デフォルト）
	// - `1`：送信した.
	GuideMailSendFlag OptPaymentSessionGuideMailSendFlag `json:"guide_mail_send_flag"`
	// 購入メール 送信先メールアドレス\
	// リダイレクト型決済URLをfincodeからのメール送信機能で送信する場合の送信先メールアドレスです。.
	ReceiverMail OptNilString `json:"receiver_mail"`
	// 購入メール 購入者の名前\
	// リダイレクト型決済URLをfincodeからのメール送信機能で送信する場合のメール中で用いられる購入者の名前です。\
	// \
	// fincodeが提供するデフォルトのメールテンプレートでは敬称がテンプレート側に含まれています。.
	MailCustomerName OptNilString `json:"mail_customer_name"`
	// 完了メール 送信フラグ\
	// 決済が完了した際に購入者に完了メールを送信するかどうかを示します。
	// - `0`：送信しない（デフォルト）
	// - `1`：送信する.
	ThanksMailSendFlag OptPaymentSessionThanksMailSendFlag `json:"thanks_mail_send_flag"`
	// メールテンプレートID\
	// メールテンプレートIDが設定されている場合、リダイレクト型決済URLの送信先メールアドレスに送信されるメールのテンプレートが変更されます。\
	// \
	// fincodeが提供するデフォルトのメールテンプレートを使用する場合は`null`を設定します。.
	ShopMailTemplateID OptNilString `json:"shop_mail_template_id"`
	// 決済共通項目\
	// 決済手段を問わず共通して使用される、決済に関するデータです。.
	Transaction OptPaymentSessionTransaction `json:"transaction"`
	Card        OptPaymentSessionCard        `json:"card"`
	Konbini     OptPaymentSessionKonbini     `json:"konbini"`
	Paypay      OptPaymentSessionPayPay      `json:"paypay"`
	Created     OptCreated                   `json:"created"`
	Updated     OptNilUpdated                `json:"updated"`
}

// GetID returns the value of ID.
func (s *PaymentSession) GetID() OptString {
	return s.ID
}

// GetLinkURL returns the value of LinkURL.
func (s *PaymentSession) GetLinkURL() OptString {
	return s.LinkURL
}

// GetSuccessURL returns the value of SuccessURL.
func (s *PaymentSession) GetSuccessURL() OptNilString {
	return s.SuccessURL
}

// GetCancelURL returns the value of CancelURL.
func (s *PaymentSession) GetCancelURL() OptNilString {
	return s.CancelURL
}

// GetStatus returns the value of Status.
func (s *PaymentSession) GetStatus() OptPaymentSessionStatus {
	return s.Status
}

// GetExpire returns the value of Expire.
func (s *PaymentSession) GetExpire() OptString {
	return s.Expire
}

// GetShopServiceName returns the value of ShopServiceName.
func (s *PaymentSession) GetShopServiceName() OptNilString {
	return s.ShopServiceName
}

// GetGuideMailSendFlag returns the value of GuideMailSendFlag.
func (s *PaymentSession) GetGuideMailSendFlag() OptPaymentSessionGuideMailSendFlag {
	return s.GuideMailSendFlag
}

// GetReceiverMail returns the value of ReceiverMail.
func (s *PaymentSession) GetReceiverMail() OptNilString {
	return s.ReceiverMail
}

// GetMailCustomerName returns the value of MailCustomerName.
func (s *PaymentSession) GetMailCustomerName() OptNilString {
	return s.MailCustomerName
}

// GetThanksMailSendFlag returns the value of ThanksMailSendFlag.
func (s *PaymentSession) GetThanksMailSendFlag() OptPaymentSessionThanksMailSendFlag {
	return s.ThanksMailSendFlag
}

// GetShopMailTemplateID returns the value of ShopMailTemplateID.
func (s *PaymentSession) GetShopMailTemplateID() OptNilString {
	return s.ShopMailTemplateID
}

// GetTransaction returns the value of Transaction.
func (s *PaymentSession) GetTransaction() OptPaymentSessionTransaction {
	return s.Transaction
}

// GetCard returns the value of Card.
func (s *PaymentSession) GetCard() OptPaymentSessionCard {
	return s.Card
}

// GetKonbini returns the value of Konbini.
func (s *PaymentSession) GetKonbini() OptPaymentSessionKonbini {
	return s.Konbini
}

// GetPaypay returns the value of Paypay.
func (s *PaymentSession) GetPaypay() OptPaymentSessionPayPay {
	return s.Paypay
}

// GetCreated returns the value of Created.
func (s *PaymentSession) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PaymentSession) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *PaymentSession) SetID(val OptString) {
	s.ID = val
}

// SetLinkURL sets the value of LinkURL.
func (s *PaymentSession) SetLinkURL(val OptString) {
	s.LinkURL = val
}

// SetSuccessURL sets the value of SuccessURL.
func (s *PaymentSession) SetSuccessURL(val OptNilString) {
	s.SuccessURL = val
}

// SetCancelURL sets the value of CancelURL.
func (s *PaymentSession) SetCancelURL(val OptNilString) {
	s.CancelURL = val
}

// SetStatus sets the value of Status.
func (s *PaymentSession) SetStatus(val OptPaymentSessionStatus) {
	s.Status = val
}

// SetExpire sets the value of Expire.
func (s *PaymentSession) SetExpire(val OptString) {
	s.Expire = val
}

// SetShopServiceName sets the value of ShopServiceName.
func (s *PaymentSession) SetShopServiceName(val OptNilString) {
	s.ShopServiceName = val
}

// SetGuideMailSendFlag sets the value of GuideMailSendFlag.
func (s *PaymentSession) SetGuideMailSendFlag(val OptPaymentSessionGuideMailSendFlag) {
	s.GuideMailSendFlag = val
}

// SetReceiverMail sets the value of ReceiverMail.
func (s *PaymentSession) SetReceiverMail(val OptNilString) {
	s.ReceiverMail = val
}

// SetMailCustomerName sets the value of MailCustomerName.
func (s *PaymentSession) SetMailCustomerName(val OptNilString) {
	s.MailCustomerName = val
}

// SetThanksMailSendFlag sets the value of ThanksMailSendFlag.
func (s *PaymentSession) SetThanksMailSendFlag(val OptPaymentSessionThanksMailSendFlag) {
	s.ThanksMailSendFlag = val
}

// SetShopMailTemplateID sets the value of ShopMailTemplateID.
func (s *PaymentSession) SetShopMailTemplateID(val OptNilString) {
	s.ShopMailTemplateID = val
}

// SetTransaction sets the value of Transaction.
func (s *PaymentSession) SetTransaction(val OptPaymentSessionTransaction) {
	s.Transaction = val
}

// SetCard sets the value of Card.
func (s *PaymentSession) SetCard(val OptPaymentSessionCard) {
	s.Card = val
}

// SetKonbini sets the value of Konbini.
func (s *PaymentSession) SetKonbini(val OptPaymentSessionKonbini) {
	s.Konbini = val
}

// SetPaypay sets the value of Paypay.
func (s *PaymentSession) SetPaypay(val OptPaymentSessionPayPay) {
	s.Paypay = val
}

// SetCreated sets the value of Created.
func (s *PaymentSession) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PaymentSession) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*PaymentSession) createPaymentSessionRes() {}

// Ref: #/components/schemas/PaymentSession.Card
type PaymentSessionCard struct {
	JobCode      OptCardPaymentSessionJobCode `json:"job_code"`
	TdsType      OptNilTdsType                `json:"tds_type"`
	TdTenantName OptTdTenantName              `json:"td_tenant_name"`
	Tds2Type     OptNilTds2Type               `json:"tds2_type"`
	// 商品コード\
	// ※ 通常は`null`.
	ItemCode OptNilString `json:"item_code"`
}

// GetJobCode returns the value of JobCode.
func (s *PaymentSessionCard) GetJobCode() OptCardPaymentSessionJobCode {
	return s.JobCode
}

// GetTdsType returns the value of TdsType.
func (s *PaymentSessionCard) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTdTenantName returns the value of TdTenantName.
func (s *PaymentSessionCard) GetTdTenantName() OptTdTenantName {
	return s.TdTenantName
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentSessionCard) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetItemCode returns the value of ItemCode.
func (s *PaymentSessionCard) GetItemCode() OptNilString {
	return s.ItemCode
}

// SetJobCode sets the value of JobCode.
func (s *PaymentSessionCard) SetJobCode(val OptCardPaymentSessionJobCode) {
	s.JobCode = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentSessionCard) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTdTenantName sets the value of TdTenantName.
func (s *PaymentSessionCard) SetTdTenantName(val OptTdTenantName) {
	s.TdTenantName = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentSessionCard) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetItemCode sets the value of ItemCode.
func (s *PaymentSessionCard) SetItemCode(val OptNilString) {
	s.ItemCode = val
}

// Ref: #/components/schemas/PaymentSession.Creating.Request
type PaymentSessionCreatingRequest struct {
	// 決済共通項目\
	// 決済手段を問わず共通して使用される決済に関するパラメータです。.
	Transaction PaymentSessionCreatingRequestTransaction `json:"transaction"`
	// カード決済パラメータ\
	// `pay_type`に`Card`を含めた場合に用いられる、カード決済に関するパラメータです。.
	Card OptNilPaymentSessionCreatingRequestCard `json:"card"`
	// コンビニ決済パラメータ\
	// `pay_type`に`Konbini`を含めた場合に用いられる、コンビニ決済に関するパラメータです。.
	Konbini OptNilPaymentSessionCreatingRequestKonbini `json:"konbini"`
	// PayPayパラメータ\
	// `pay_type`に`Paypay`を含めた場合に用いられる、PayPayによる決済に関するパラメータです。.
	Paypay             OptNilPaymentSessionCreatingRequestPaypay `json:"paypay"`
	SuccessURL         OptNilSuccessURL                          `json:"success_url"`
	CancelURL          OptNilCancelURL                           `json:"cancel_url"`
	Expire             OptPropertiesExpire                       `json:"expire"`
	ShopServiceName    OptNilShopServiceName                     `json:"shop_service_name"`
	GuideMailSendFlag  OptGuideMailSendFlag                      `json:"guide_mail_send_flag"`
	ReceiverMail       OptNilReceiverMail                        `json:"receiver_mail"`
	MailCustomerName   OptNilMailCustomerName                    `json:"mail_customer_name"`
	ThanksMailSendFlag OptThanksMailSendFlag                     `json:"thanks_mail_send_flag"`
	ShopMailTemplateID OptNilShopMailTemplateID                  `json:"shop_mail_template_id"`
}

// GetTransaction returns the value of Transaction.
func (s *PaymentSessionCreatingRequest) GetTransaction() PaymentSessionCreatingRequestTransaction {
	return s.Transaction
}

// GetCard returns the value of Card.
func (s *PaymentSessionCreatingRequest) GetCard() OptNilPaymentSessionCreatingRequestCard {
	return s.Card
}

// GetKonbini returns the value of Konbini.
func (s *PaymentSessionCreatingRequest) GetKonbini() OptNilPaymentSessionCreatingRequestKonbini {
	return s.Konbini
}

// GetPaypay returns the value of Paypay.
func (s *PaymentSessionCreatingRequest) GetPaypay() OptNilPaymentSessionCreatingRequestPaypay {
	return s.Paypay
}

// GetSuccessURL returns the value of SuccessURL.
func (s *PaymentSessionCreatingRequest) GetSuccessURL() OptNilSuccessURL {
	return s.SuccessURL
}

// GetCancelURL returns the value of CancelURL.
func (s *PaymentSessionCreatingRequest) GetCancelURL() OptNilCancelURL {
	return s.CancelURL
}

// GetExpire returns the value of Expire.
func (s *PaymentSessionCreatingRequest) GetExpire() OptPropertiesExpire {
	return s.Expire
}

// GetShopServiceName returns the value of ShopServiceName.
func (s *PaymentSessionCreatingRequest) GetShopServiceName() OptNilShopServiceName {
	return s.ShopServiceName
}

// GetGuideMailSendFlag returns the value of GuideMailSendFlag.
func (s *PaymentSessionCreatingRequest) GetGuideMailSendFlag() OptGuideMailSendFlag {
	return s.GuideMailSendFlag
}

// GetReceiverMail returns the value of ReceiverMail.
func (s *PaymentSessionCreatingRequest) GetReceiverMail() OptNilReceiverMail {
	return s.ReceiverMail
}

// GetMailCustomerName returns the value of MailCustomerName.
func (s *PaymentSessionCreatingRequest) GetMailCustomerName() OptNilMailCustomerName {
	return s.MailCustomerName
}

// GetThanksMailSendFlag returns the value of ThanksMailSendFlag.
func (s *PaymentSessionCreatingRequest) GetThanksMailSendFlag() OptThanksMailSendFlag {
	return s.ThanksMailSendFlag
}

// GetShopMailTemplateID returns the value of ShopMailTemplateID.
func (s *PaymentSessionCreatingRequest) GetShopMailTemplateID() OptNilShopMailTemplateID {
	return s.ShopMailTemplateID
}

// SetTransaction sets the value of Transaction.
func (s *PaymentSessionCreatingRequest) SetTransaction(val PaymentSessionCreatingRequestTransaction) {
	s.Transaction = val
}

// SetCard sets the value of Card.
func (s *PaymentSessionCreatingRequest) SetCard(val OptNilPaymentSessionCreatingRequestCard) {
	s.Card = val
}

// SetKonbini sets the value of Konbini.
func (s *PaymentSessionCreatingRequest) SetKonbini(val OptNilPaymentSessionCreatingRequestKonbini) {
	s.Konbini = val
}

// SetPaypay sets the value of Paypay.
func (s *PaymentSessionCreatingRequest) SetPaypay(val OptNilPaymentSessionCreatingRequestPaypay) {
	s.Paypay = val
}

// SetSuccessURL sets the value of SuccessURL.
func (s *PaymentSessionCreatingRequest) SetSuccessURL(val OptNilSuccessURL) {
	s.SuccessURL = val
}

// SetCancelURL sets the value of CancelURL.
func (s *PaymentSessionCreatingRequest) SetCancelURL(val OptNilCancelURL) {
	s.CancelURL = val
}

// SetExpire sets the value of Expire.
func (s *PaymentSessionCreatingRequest) SetExpire(val OptPropertiesExpire) {
	s.Expire = val
}

// SetShopServiceName sets the value of ShopServiceName.
func (s *PaymentSessionCreatingRequest) SetShopServiceName(val OptNilShopServiceName) {
	s.ShopServiceName = val
}

// SetGuideMailSendFlag sets the value of GuideMailSendFlag.
func (s *PaymentSessionCreatingRequest) SetGuideMailSendFlag(val OptGuideMailSendFlag) {
	s.GuideMailSendFlag = val
}

// SetReceiverMail sets the value of ReceiverMail.
func (s *PaymentSessionCreatingRequest) SetReceiverMail(val OptNilReceiverMail) {
	s.ReceiverMail = val
}

// SetMailCustomerName sets the value of MailCustomerName.
func (s *PaymentSessionCreatingRequest) SetMailCustomerName(val OptNilMailCustomerName) {
	s.MailCustomerName = val
}

// SetThanksMailSendFlag sets the value of ThanksMailSendFlag.
func (s *PaymentSessionCreatingRequest) SetThanksMailSendFlag(val OptThanksMailSendFlag) {
	s.ThanksMailSendFlag = val
}

// SetShopMailTemplateID sets the value of ShopMailTemplateID.
func (s *PaymentSessionCreatingRequest) SetShopMailTemplateID(val OptNilShopMailTemplateID) {
	s.ShopMailTemplateID = val
}

// カード決済パラメータ\
// `pay_type`に`Card`を含めた場合に用いられる、カード決済に関するパラメータです。.
type PaymentSessionCreatingRequestCard struct {
	JobCode                   CardPaymentSessionJobCode       `json:"job_code"`
	TdsType                   OptNilTdsType                   `json:"tds_type"`
	Tds2Type                  OptNilTds2Type                  `json:"tds2_type"`
	TdTenantName              OptTdTenantName                 `json:"td_tenant_name"`
	Tds2ChAccChange           OptNilTds2ChAccChange           `json:"tds2_ch_acc_change"`
	Tds2ChAccDate             OptNilTds2ChAccDate             `json:"tds2_ch_acc_date"`
	Tds2ChAccPwChange         OptNilTds2ChAccPwChange         `json:"tds2_ch_acc_pw_change"`
	Tds2NbPurchaseAccount     OptNilTds2NbPurchaseAccount     `json:"tds2_nb_purchase_account"`
	Tds2PaymentAccAge         OptNilTds2PaymentAccAge         `json:"tds2_payment_acc_age"`
	Tds2ProvisionAttemptsDay  OptNilTds2ProvisionAttemptsDay  `json:"tds2_provision_attempts_day"`
	Tds2ShipAddressUsage      OptNilTds2ShipAddressUsage      `json:"tds2_ship_address_usage"`
	Tds2ShipNameInd           OptNilTds2ShipNameInd           `json:"tds2_ship_name_ind"`
	Tds2SuspiciousAccActivity OptNilTds2SuspiciousAccActivity `json:"tds2_suspicious_acc_activity"`
	Tds2TxnActivityDay        OptNilTds2TxnActivityDay        `json:"tds2_txn_activity_day"`
	Tds2TxnActivityYear       OptNilTds2TxnActivityYear       `json:"tds2_txn_activity_year"`
	Tds2ThreeDsReqAuthData    OptNilTds2ThreeDsReqAuthData    `json:"tds2_three_ds_req_auth_data"`
	Tds2ThreeDsReqAuthMethod  OptNilTds2ThreeDsReqAuthMethod  `json:"tds2_three_ds_req_auth_method"`
	Tds2AddrMatch             OptNilTds2AddrMatch             `json:"tds2_addr_match"`
	Tds2BillAddrCountry       OptNilTds2BillAddrCountry       `json:"tds2_bill_addr_country"`
	Tds2BillAddrState         OptNilTds2BillAddrState         `json:"tds2_bill_addr_state"`
	Tds2BillAddrCity          OptNilTds2BillAddrCity          `json:"tds2_bill_addr_city"`
	Tds2BillAddrLine1         OptNilTds2BillAddrLine1         `json:"tds2_bill_addr_line_1"`
	Tds2BillAddrLine2         OptNilTds2BillAddrLine2         `json:"tds2_bill_addr_line_2"`
	Tds2BillAddrLine3         OptTds2BillAddrLine3            `json:"tds2_bill_addr_line_3"`
	Tds2BillAddrPostCode      OptNilTds2BillAddrPostCode      `json:"tds2_bill_addr_post_code"`
	Tds2ShipAddrCountry       OptNilTds2ShipAddrCountry       `json:"tds2_ship_addr_country"`
	Tds2ShipAddrState         OptNilTds2ShipAddrState         `json:"tds2_ship_addr_state"`
	Tds2ShipAddrCity          OptNilTds2ShipAddrCity          `json:"tds2_ship_addr_city"`
	Tds2ShipAddrLine1         OptNilTds2ShipAddrLine1         `json:"tds2_ship_addr_line_1"`
	Tds2ShipAddrLine2         OptNilTds2ShipAddrLine2         `json:"tds2_ship_addr_line_2"`
	Tds2ShipAddrLine3         OptNilTds2ShipAddrLine3         `json:"tds2_ship_addr_line_3"`
	Tds2ShipAddrPostCode      OptNilTds2ShipAddrPostCode      `json:"tds2_ship_addr_post_code"`
	Tds2ShipInd               OptNilTds2ShipInd               `json:"tds2_ship_ind"`
	Tds2DeliveryEmailAddress  OptNilTds2DeliveryEmailAddress  `json:"tds2_delivery_email_address"`
	Tds2HomePhoneCc           OptNilTds2HomePhoneCc           `json:"tds2_home_phone_cc"`
	Tds2HomePhoneNo           OptNilTds2HomePhoneNo           `json:"tds2_home_phone_no"`
	Tds2MobilePhoneCc         OptNilTds2MobilePhoneCc         `json:"tds2_mobile_phone_cc"`
	Tds2MobilePhoneNo         OptNilTds2MobilePhoneNo         `json:"tds2_mobile_phone_no"`
	Tds2WorkPhoneCc           OptNilTds2WorkPhoneCc           `json:"tds2_work_phone_cc"`
	Tds2WorkPhoneNo           OptNilTds2WorkPhoneNo           `json:"tds2_work_phone_no"`
	Tds2DeliveryTimeframe     OptNilTds2DeliveryTimeframe     `json:"tds2_delivery_timeframe"`
	Tds2PreOrderDate          OptNilTds2PreOrderDate          `json:"tds2_pre_order_date"`
	Tds2PreOrderPurchaseInd   OptNilTds2PreOrderPurchaseInd   `json:"tds2_pre_order_purchase_ind"`
	Tds2ReorderItemsInd       OptNilTds2ReorderItemsInd       `json:"tds2_reorder_items_ind"`
	Tds2RecurringExpiry       OptNilTds2RecurringExpiry       `json:"tds2_recurring_expiry"`
	Tds2RecurringFrequency    OptNilTds2RecurringFrequency    `json:"tds2_recurring_frequency"`
	Tds2GiftCardAmount        OptNilTds2GiftCardAmount        `json:"tds2_gift_card_amount"`
	Tds2GiftCardCount         OptNilTds2GiftCardCount         `json:"tds2_gift_card_count"`
	Tds2GiftCardCurr          OptNilTds2GiftCardCurr          `json:"tds2_gift_card_curr"`
}

// GetJobCode returns the value of JobCode.
func (s *PaymentSessionCreatingRequestCard) GetJobCode() CardPaymentSessionJobCode {
	return s.JobCode
}

// GetTdsType returns the value of TdsType.
func (s *PaymentSessionCreatingRequestCard) GetTdsType() OptNilTdsType {
	return s.TdsType
}

// GetTds2Type returns the value of Tds2Type.
func (s *PaymentSessionCreatingRequestCard) GetTds2Type() OptNilTds2Type {
	return s.Tds2Type
}

// GetTdTenantName returns the value of TdTenantName.
func (s *PaymentSessionCreatingRequestCard) GetTdTenantName() OptTdTenantName {
	return s.TdTenantName
}

// GetTds2ChAccChange returns the value of Tds2ChAccChange.
func (s *PaymentSessionCreatingRequestCard) GetTds2ChAccChange() OptNilTds2ChAccChange {
	return s.Tds2ChAccChange
}

// GetTds2ChAccDate returns the value of Tds2ChAccDate.
func (s *PaymentSessionCreatingRequestCard) GetTds2ChAccDate() OptNilTds2ChAccDate {
	return s.Tds2ChAccDate
}

// GetTds2ChAccPwChange returns the value of Tds2ChAccPwChange.
func (s *PaymentSessionCreatingRequestCard) GetTds2ChAccPwChange() OptNilTds2ChAccPwChange {
	return s.Tds2ChAccPwChange
}

// GetTds2NbPurchaseAccount returns the value of Tds2NbPurchaseAccount.
func (s *PaymentSessionCreatingRequestCard) GetTds2NbPurchaseAccount() OptNilTds2NbPurchaseAccount {
	return s.Tds2NbPurchaseAccount
}

// GetTds2PaymentAccAge returns the value of Tds2PaymentAccAge.
func (s *PaymentSessionCreatingRequestCard) GetTds2PaymentAccAge() OptNilTds2PaymentAccAge {
	return s.Tds2PaymentAccAge
}

// GetTds2ProvisionAttemptsDay returns the value of Tds2ProvisionAttemptsDay.
func (s *PaymentSessionCreatingRequestCard) GetTds2ProvisionAttemptsDay() OptNilTds2ProvisionAttemptsDay {
	return s.Tds2ProvisionAttemptsDay
}

// GetTds2ShipAddressUsage returns the value of Tds2ShipAddressUsage.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipAddressUsage() OptNilTds2ShipAddressUsage {
	return s.Tds2ShipAddressUsage
}

// GetTds2ShipNameInd returns the value of Tds2ShipNameInd.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipNameInd() OptNilTds2ShipNameInd {
	return s.Tds2ShipNameInd
}

// GetTds2SuspiciousAccActivity returns the value of Tds2SuspiciousAccActivity.
func (s *PaymentSessionCreatingRequestCard) GetTds2SuspiciousAccActivity() OptNilTds2SuspiciousAccActivity {
	return s.Tds2SuspiciousAccActivity
}

// GetTds2TxnActivityDay returns the value of Tds2TxnActivityDay.
func (s *PaymentSessionCreatingRequestCard) GetTds2TxnActivityDay() OptNilTds2TxnActivityDay {
	return s.Tds2TxnActivityDay
}

// GetTds2TxnActivityYear returns the value of Tds2TxnActivityYear.
func (s *PaymentSessionCreatingRequestCard) GetTds2TxnActivityYear() OptNilTds2TxnActivityYear {
	return s.Tds2TxnActivityYear
}

// GetTds2ThreeDsReqAuthData returns the value of Tds2ThreeDsReqAuthData.
func (s *PaymentSessionCreatingRequestCard) GetTds2ThreeDsReqAuthData() OptNilTds2ThreeDsReqAuthData {
	return s.Tds2ThreeDsReqAuthData
}

// GetTds2ThreeDsReqAuthMethod returns the value of Tds2ThreeDsReqAuthMethod.
func (s *PaymentSessionCreatingRequestCard) GetTds2ThreeDsReqAuthMethod() OptNilTds2ThreeDsReqAuthMethod {
	return s.Tds2ThreeDsReqAuthMethod
}

// GetTds2AddrMatch returns the value of Tds2AddrMatch.
func (s *PaymentSessionCreatingRequestCard) GetTds2AddrMatch() OptNilTds2AddrMatch {
	return s.Tds2AddrMatch
}

// GetTds2BillAddrCountry returns the value of Tds2BillAddrCountry.
func (s *PaymentSessionCreatingRequestCard) GetTds2BillAddrCountry() OptNilTds2BillAddrCountry {
	return s.Tds2BillAddrCountry
}

// GetTds2BillAddrState returns the value of Tds2BillAddrState.
func (s *PaymentSessionCreatingRequestCard) GetTds2BillAddrState() OptNilTds2BillAddrState {
	return s.Tds2BillAddrState
}

// GetTds2BillAddrCity returns the value of Tds2BillAddrCity.
func (s *PaymentSessionCreatingRequestCard) GetTds2BillAddrCity() OptNilTds2BillAddrCity {
	return s.Tds2BillAddrCity
}

// GetTds2BillAddrLine1 returns the value of Tds2BillAddrLine1.
func (s *PaymentSessionCreatingRequestCard) GetTds2BillAddrLine1() OptNilTds2BillAddrLine1 {
	return s.Tds2BillAddrLine1
}

// GetTds2BillAddrLine2 returns the value of Tds2BillAddrLine2.
func (s *PaymentSessionCreatingRequestCard) GetTds2BillAddrLine2() OptNilTds2BillAddrLine2 {
	return s.Tds2BillAddrLine2
}

// GetTds2BillAddrLine3 returns the value of Tds2BillAddrLine3.
func (s *PaymentSessionCreatingRequestCard) GetTds2BillAddrLine3() OptTds2BillAddrLine3 {
	return s.Tds2BillAddrLine3
}

// GetTds2BillAddrPostCode returns the value of Tds2BillAddrPostCode.
func (s *PaymentSessionCreatingRequestCard) GetTds2BillAddrPostCode() OptNilTds2BillAddrPostCode {
	return s.Tds2BillAddrPostCode
}

// GetTds2ShipAddrCountry returns the value of Tds2ShipAddrCountry.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipAddrCountry() OptNilTds2ShipAddrCountry {
	return s.Tds2ShipAddrCountry
}

// GetTds2ShipAddrState returns the value of Tds2ShipAddrState.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipAddrState() OptNilTds2ShipAddrState {
	return s.Tds2ShipAddrState
}

// GetTds2ShipAddrCity returns the value of Tds2ShipAddrCity.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipAddrCity() OptNilTds2ShipAddrCity {
	return s.Tds2ShipAddrCity
}

// GetTds2ShipAddrLine1 returns the value of Tds2ShipAddrLine1.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipAddrLine1() OptNilTds2ShipAddrLine1 {
	return s.Tds2ShipAddrLine1
}

// GetTds2ShipAddrLine2 returns the value of Tds2ShipAddrLine2.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipAddrLine2() OptNilTds2ShipAddrLine2 {
	return s.Tds2ShipAddrLine2
}

// GetTds2ShipAddrLine3 returns the value of Tds2ShipAddrLine3.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipAddrLine3() OptNilTds2ShipAddrLine3 {
	return s.Tds2ShipAddrLine3
}

// GetTds2ShipAddrPostCode returns the value of Tds2ShipAddrPostCode.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipAddrPostCode() OptNilTds2ShipAddrPostCode {
	return s.Tds2ShipAddrPostCode
}

// GetTds2ShipInd returns the value of Tds2ShipInd.
func (s *PaymentSessionCreatingRequestCard) GetTds2ShipInd() OptNilTds2ShipInd {
	return s.Tds2ShipInd
}

// GetTds2DeliveryEmailAddress returns the value of Tds2DeliveryEmailAddress.
func (s *PaymentSessionCreatingRequestCard) GetTds2DeliveryEmailAddress() OptNilTds2DeliveryEmailAddress {
	return s.Tds2DeliveryEmailAddress
}

// GetTds2HomePhoneCc returns the value of Tds2HomePhoneCc.
func (s *PaymentSessionCreatingRequestCard) GetTds2HomePhoneCc() OptNilTds2HomePhoneCc {
	return s.Tds2HomePhoneCc
}

// GetTds2HomePhoneNo returns the value of Tds2HomePhoneNo.
func (s *PaymentSessionCreatingRequestCard) GetTds2HomePhoneNo() OptNilTds2HomePhoneNo {
	return s.Tds2HomePhoneNo
}

// GetTds2MobilePhoneCc returns the value of Tds2MobilePhoneCc.
func (s *PaymentSessionCreatingRequestCard) GetTds2MobilePhoneCc() OptNilTds2MobilePhoneCc {
	return s.Tds2MobilePhoneCc
}

// GetTds2MobilePhoneNo returns the value of Tds2MobilePhoneNo.
func (s *PaymentSessionCreatingRequestCard) GetTds2MobilePhoneNo() OptNilTds2MobilePhoneNo {
	return s.Tds2MobilePhoneNo
}

// GetTds2WorkPhoneCc returns the value of Tds2WorkPhoneCc.
func (s *PaymentSessionCreatingRequestCard) GetTds2WorkPhoneCc() OptNilTds2WorkPhoneCc {
	return s.Tds2WorkPhoneCc
}

// GetTds2WorkPhoneNo returns the value of Tds2WorkPhoneNo.
func (s *PaymentSessionCreatingRequestCard) GetTds2WorkPhoneNo() OptNilTds2WorkPhoneNo {
	return s.Tds2WorkPhoneNo
}

// GetTds2DeliveryTimeframe returns the value of Tds2DeliveryTimeframe.
func (s *PaymentSessionCreatingRequestCard) GetTds2DeliveryTimeframe() OptNilTds2DeliveryTimeframe {
	return s.Tds2DeliveryTimeframe
}

// GetTds2PreOrderDate returns the value of Tds2PreOrderDate.
func (s *PaymentSessionCreatingRequestCard) GetTds2PreOrderDate() OptNilTds2PreOrderDate {
	return s.Tds2PreOrderDate
}

// GetTds2PreOrderPurchaseInd returns the value of Tds2PreOrderPurchaseInd.
func (s *PaymentSessionCreatingRequestCard) GetTds2PreOrderPurchaseInd() OptNilTds2PreOrderPurchaseInd {
	return s.Tds2PreOrderPurchaseInd
}

// GetTds2ReorderItemsInd returns the value of Tds2ReorderItemsInd.
func (s *PaymentSessionCreatingRequestCard) GetTds2ReorderItemsInd() OptNilTds2ReorderItemsInd {
	return s.Tds2ReorderItemsInd
}

// GetTds2RecurringExpiry returns the value of Tds2RecurringExpiry.
func (s *PaymentSessionCreatingRequestCard) GetTds2RecurringExpiry() OptNilTds2RecurringExpiry {
	return s.Tds2RecurringExpiry
}

// GetTds2RecurringFrequency returns the value of Tds2RecurringFrequency.
func (s *PaymentSessionCreatingRequestCard) GetTds2RecurringFrequency() OptNilTds2RecurringFrequency {
	return s.Tds2RecurringFrequency
}

// GetTds2GiftCardAmount returns the value of Tds2GiftCardAmount.
func (s *PaymentSessionCreatingRequestCard) GetTds2GiftCardAmount() OptNilTds2GiftCardAmount {
	return s.Tds2GiftCardAmount
}

// GetTds2GiftCardCount returns the value of Tds2GiftCardCount.
func (s *PaymentSessionCreatingRequestCard) GetTds2GiftCardCount() OptNilTds2GiftCardCount {
	return s.Tds2GiftCardCount
}

// GetTds2GiftCardCurr returns the value of Tds2GiftCardCurr.
func (s *PaymentSessionCreatingRequestCard) GetTds2GiftCardCurr() OptNilTds2GiftCardCurr {
	return s.Tds2GiftCardCurr
}

// SetJobCode sets the value of JobCode.
func (s *PaymentSessionCreatingRequestCard) SetJobCode(val CardPaymentSessionJobCode) {
	s.JobCode = val
}

// SetTdsType sets the value of TdsType.
func (s *PaymentSessionCreatingRequestCard) SetTdsType(val OptNilTdsType) {
	s.TdsType = val
}

// SetTds2Type sets the value of Tds2Type.
func (s *PaymentSessionCreatingRequestCard) SetTds2Type(val OptNilTds2Type) {
	s.Tds2Type = val
}

// SetTdTenantName sets the value of TdTenantName.
func (s *PaymentSessionCreatingRequestCard) SetTdTenantName(val OptTdTenantName) {
	s.TdTenantName = val
}

// SetTds2ChAccChange sets the value of Tds2ChAccChange.
func (s *PaymentSessionCreatingRequestCard) SetTds2ChAccChange(val OptNilTds2ChAccChange) {
	s.Tds2ChAccChange = val
}

// SetTds2ChAccDate sets the value of Tds2ChAccDate.
func (s *PaymentSessionCreatingRequestCard) SetTds2ChAccDate(val OptNilTds2ChAccDate) {
	s.Tds2ChAccDate = val
}

// SetTds2ChAccPwChange sets the value of Tds2ChAccPwChange.
func (s *PaymentSessionCreatingRequestCard) SetTds2ChAccPwChange(val OptNilTds2ChAccPwChange) {
	s.Tds2ChAccPwChange = val
}

// SetTds2NbPurchaseAccount sets the value of Tds2NbPurchaseAccount.
func (s *PaymentSessionCreatingRequestCard) SetTds2NbPurchaseAccount(val OptNilTds2NbPurchaseAccount) {
	s.Tds2NbPurchaseAccount = val
}

// SetTds2PaymentAccAge sets the value of Tds2PaymentAccAge.
func (s *PaymentSessionCreatingRequestCard) SetTds2PaymentAccAge(val OptNilTds2PaymentAccAge) {
	s.Tds2PaymentAccAge = val
}

// SetTds2ProvisionAttemptsDay sets the value of Tds2ProvisionAttemptsDay.
func (s *PaymentSessionCreatingRequestCard) SetTds2ProvisionAttemptsDay(val OptNilTds2ProvisionAttemptsDay) {
	s.Tds2ProvisionAttemptsDay = val
}

// SetTds2ShipAddressUsage sets the value of Tds2ShipAddressUsage.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipAddressUsage(val OptNilTds2ShipAddressUsage) {
	s.Tds2ShipAddressUsage = val
}

// SetTds2ShipNameInd sets the value of Tds2ShipNameInd.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipNameInd(val OptNilTds2ShipNameInd) {
	s.Tds2ShipNameInd = val
}

// SetTds2SuspiciousAccActivity sets the value of Tds2SuspiciousAccActivity.
func (s *PaymentSessionCreatingRequestCard) SetTds2SuspiciousAccActivity(val OptNilTds2SuspiciousAccActivity) {
	s.Tds2SuspiciousAccActivity = val
}

// SetTds2TxnActivityDay sets the value of Tds2TxnActivityDay.
func (s *PaymentSessionCreatingRequestCard) SetTds2TxnActivityDay(val OptNilTds2TxnActivityDay) {
	s.Tds2TxnActivityDay = val
}

// SetTds2TxnActivityYear sets the value of Tds2TxnActivityYear.
func (s *PaymentSessionCreatingRequestCard) SetTds2TxnActivityYear(val OptNilTds2TxnActivityYear) {
	s.Tds2TxnActivityYear = val
}

// SetTds2ThreeDsReqAuthData sets the value of Tds2ThreeDsReqAuthData.
func (s *PaymentSessionCreatingRequestCard) SetTds2ThreeDsReqAuthData(val OptNilTds2ThreeDsReqAuthData) {
	s.Tds2ThreeDsReqAuthData = val
}

// SetTds2ThreeDsReqAuthMethod sets the value of Tds2ThreeDsReqAuthMethod.
func (s *PaymentSessionCreatingRequestCard) SetTds2ThreeDsReqAuthMethod(val OptNilTds2ThreeDsReqAuthMethod) {
	s.Tds2ThreeDsReqAuthMethod = val
}

// SetTds2AddrMatch sets the value of Tds2AddrMatch.
func (s *PaymentSessionCreatingRequestCard) SetTds2AddrMatch(val OptNilTds2AddrMatch) {
	s.Tds2AddrMatch = val
}

// SetTds2BillAddrCountry sets the value of Tds2BillAddrCountry.
func (s *PaymentSessionCreatingRequestCard) SetTds2BillAddrCountry(val OptNilTds2BillAddrCountry) {
	s.Tds2BillAddrCountry = val
}

// SetTds2BillAddrState sets the value of Tds2BillAddrState.
func (s *PaymentSessionCreatingRequestCard) SetTds2BillAddrState(val OptNilTds2BillAddrState) {
	s.Tds2BillAddrState = val
}

// SetTds2BillAddrCity sets the value of Tds2BillAddrCity.
func (s *PaymentSessionCreatingRequestCard) SetTds2BillAddrCity(val OptNilTds2BillAddrCity) {
	s.Tds2BillAddrCity = val
}

// SetTds2BillAddrLine1 sets the value of Tds2BillAddrLine1.
func (s *PaymentSessionCreatingRequestCard) SetTds2BillAddrLine1(val OptNilTds2BillAddrLine1) {
	s.Tds2BillAddrLine1 = val
}

// SetTds2BillAddrLine2 sets the value of Tds2BillAddrLine2.
func (s *PaymentSessionCreatingRequestCard) SetTds2BillAddrLine2(val OptNilTds2BillAddrLine2) {
	s.Tds2BillAddrLine2 = val
}

// SetTds2BillAddrLine3 sets the value of Tds2BillAddrLine3.
func (s *PaymentSessionCreatingRequestCard) SetTds2BillAddrLine3(val OptTds2BillAddrLine3) {
	s.Tds2BillAddrLine3 = val
}

// SetTds2BillAddrPostCode sets the value of Tds2BillAddrPostCode.
func (s *PaymentSessionCreatingRequestCard) SetTds2BillAddrPostCode(val OptNilTds2BillAddrPostCode) {
	s.Tds2BillAddrPostCode = val
}

// SetTds2ShipAddrCountry sets the value of Tds2ShipAddrCountry.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipAddrCountry(val OptNilTds2ShipAddrCountry) {
	s.Tds2ShipAddrCountry = val
}

// SetTds2ShipAddrState sets the value of Tds2ShipAddrState.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipAddrState(val OptNilTds2ShipAddrState) {
	s.Tds2ShipAddrState = val
}

// SetTds2ShipAddrCity sets the value of Tds2ShipAddrCity.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipAddrCity(val OptNilTds2ShipAddrCity) {
	s.Tds2ShipAddrCity = val
}

// SetTds2ShipAddrLine1 sets the value of Tds2ShipAddrLine1.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipAddrLine1(val OptNilTds2ShipAddrLine1) {
	s.Tds2ShipAddrLine1 = val
}

// SetTds2ShipAddrLine2 sets the value of Tds2ShipAddrLine2.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipAddrLine2(val OptNilTds2ShipAddrLine2) {
	s.Tds2ShipAddrLine2 = val
}

// SetTds2ShipAddrLine3 sets the value of Tds2ShipAddrLine3.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipAddrLine3(val OptNilTds2ShipAddrLine3) {
	s.Tds2ShipAddrLine3 = val
}

// SetTds2ShipAddrPostCode sets the value of Tds2ShipAddrPostCode.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipAddrPostCode(val OptNilTds2ShipAddrPostCode) {
	s.Tds2ShipAddrPostCode = val
}

// SetTds2ShipInd sets the value of Tds2ShipInd.
func (s *PaymentSessionCreatingRequestCard) SetTds2ShipInd(val OptNilTds2ShipInd) {
	s.Tds2ShipInd = val
}

// SetTds2DeliveryEmailAddress sets the value of Tds2DeliveryEmailAddress.
func (s *PaymentSessionCreatingRequestCard) SetTds2DeliveryEmailAddress(val OptNilTds2DeliveryEmailAddress) {
	s.Tds2DeliveryEmailAddress = val
}

// SetTds2HomePhoneCc sets the value of Tds2HomePhoneCc.
func (s *PaymentSessionCreatingRequestCard) SetTds2HomePhoneCc(val OptNilTds2HomePhoneCc) {
	s.Tds2HomePhoneCc = val
}

// SetTds2HomePhoneNo sets the value of Tds2HomePhoneNo.
func (s *PaymentSessionCreatingRequestCard) SetTds2HomePhoneNo(val OptNilTds2HomePhoneNo) {
	s.Tds2HomePhoneNo = val
}

// SetTds2MobilePhoneCc sets the value of Tds2MobilePhoneCc.
func (s *PaymentSessionCreatingRequestCard) SetTds2MobilePhoneCc(val OptNilTds2MobilePhoneCc) {
	s.Tds2MobilePhoneCc = val
}

// SetTds2MobilePhoneNo sets the value of Tds2MobilePhoneNo.
func (s *PaymentSessionCreatingRequestCard) SetTds2MobilePhoneNo(val OptNilTds2MobilePhoneNo) {
	s.Tds2MobilePhoneNo = val
}

// SetTds2WorkPhoneCc sets the value of Tds2WorkPhoneCc.
func (s *PaymentSessionCreatingRequestCard) SetTds2WorkPhoneCc(val OptNilTds2WorkPhoneCc) {
	s.Tds2WorkPhoneCc = val
}

// SetTds2WorkPhoneNo sets the value of Tds2WorkPhoneNo.
func (s *PaymentSessionCreatingRequestCard) SetTds2WorkPhoneNo(val OptNilTds2WorkPhoneNo) {
	s.Tds2WorkPhoneNo = val
}

// SetTds2DeliveryTimeframe sets the value of Tds2DeliveryTimeframe.
func (s *PaymentSessionCreatingRequestCard) SetTds2DeliveryTimeframe(val OptNilTds2DeliveryTimeframe) {
	s.Tds2DeliveryTimeframe = val
}

// SetTds2PreOrderDate sets the value of Tds2PreOrderDate.
func (s *PaymentSessionCreatingRequestCard) SetTds2PreOrderDate(val OptNilTds2PreOrderDate) {
	s.Tds2PreOrderDate = val
}

// SetTds2PreOrderPurchaseInd sets the value of Tds2PreOrderPurchaseInd.
func (s *PaymentSessionCreatingRequestCard) SetTds2PreOrderPurchaseInd(val OptNilTds2PreOrderPurchaseInd) {
	s.Tds2PreOrderPurchaseInd = val
}

// SetTds2ReorderItemsInd sets the value of Tds2ReorderItemsInd.
func (s *PaymentSessionCreatingRequestCard) SetTds2ReorderItemsInd(val OptNilTds2ReorderItemsInd) {
	s.Tds2ReorderItemsInd = val
}

// SetTds2RecurringExpiry sets the value of Tds2RecurringExpiry.
func (s *PaymentSessionCreatingRequestCard) SetTds2RecurringExpiry(val OptNilTds2RecurringExpiry) {
	s.Tds2RecurringExpiry = val
}

// SetTds2RecurringFrequency sets the value of Tds2RecurringFrequency.
func (s *PaymentSessionCreatingRequestCard) SetTds2RecurringFrequency(val OptNilTds2RecurringFrequency) {
	s.Tds2RecurringFrequency = val
}

// SetTds2GiftCardAmount sets the value of Tds2GiftCardAmount.
func (s *PaymentSessionCreatingRequestCard) SetTds2GiftCardAmount(val OptNilTds2GiftCardAmount) {
	s.Tds2GiftCardAmount = val
}

// SetTds2GiftCardCount sets the value of Tds2GiftCardCount.
func (s *PaymentSessionCreatingRequestCard) SetTds2GiftCardCount(val OptNilTds2GiftCardCount) {
	s.Tds2GiftCardCount = val
}

// SetTds2GiftCardCurr sets the value of Tds2GiftCardCurr.
func (s *PaymentSessionCreatingRequestCard) SetTds2GiftCardCurr(val OptNilTds2GiftCardCurr) {
	s.Tds2GiftCardCurr = val
}

// コンビニ決済パラメータ\
// `pay_type`に`Konbini`を含めた場合に用いられる、コンビニ決済に関するパラメータです。.
type PaymentSessionCreatingRequestKonbini struct {
	PaymentTermDay               OptNilPropertiesPaymentTermDay `json:"payment_term_day"`
	KonbiniReceptionMailSendFlag KonbiniReceptionMailSendFlag   `json:"konbini_reception_mail_send_flag"`
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentSessionCreatingRequestKonbini) GetPaymentTermDay() OptNilPropertiesPaymentTermDay {
	return s.PaymentTermDay
}

// GetKonbiniReceptionMailSendFlag returns the value of KonbiniReceptionMailSendFlag.
func (s *PaymentSessionCreatingRequestKonbini) GetKonbiniReceptionMailSendFlag() KonbiniReceptionMailSendFlag {
	return s.KonbiniReceptionMailSendFlag
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentSessionCreatingRequestKonbini) SetPaymentTermDay(val OptNilPropertiesPaymentTermDay) {
	s.PaymentTermDay = val
}

// SetKonbiniReceptionMailSendFlag sets the value of KonbiniReceptionMailSendFlag.
func (s *PaymentSessionCreatingRequestKonbini) SetKonbiniReceptionMailSendFlag(val KonbiniReceptionMailSendFlag) {
	s.KonbiniReceptionMailSendFlag = val
}

// PayPayパラメータ\
// `pay_type`に`Paypay`を含めた場合に用いられる、PayPayによる決済に関するパラメータです。.
type PaymentSessionCreatingRequestPaypay struct {
	JobCode          PayPayPaymentJobCode             `json:"job_code"`
	OrderDescription OptNilPropertiesOrderDescription `json:"order_description"`
}

// GetJobCode returns the value of JobCode.
func (s *PaymentSessionCreatingRequestPaypay) GetJobCode() PayPayPaymentJobCode {
	return s.JobCode
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentSessionCreatingRequestPaypay) GetOrderDescription() OptNilPropertiesOrderDescription {
	return s.OrderDescription
}

// SetJobCode sets the value of JobCode.
func (s *PaymentSessionCreatingRequestPaypay) SetJobCode(val PayPayPaymentJobCode) {
	s.JobCode = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentSessionCreatingRequestPaypay) SetOrderDescription(val OptNilPropertiesOrderDescription) {
	s.OrderDescription = val
}

// 決済共通項目\
// 決済手段を問わず共通して使用される決済に関するパラメータです。.
type PaymentSessionCreatingRequestTransaction struct {
	PayType OptPayType `json:"pay_type"`
	// 決済金額\
	// 決済金額を指定します。\
	// \
	// 指定可能な金額の範囲は各決済手段ごとの制限事項に準じます。.
	Amount  string                 `json:"amount"`
	OrderID OptPaymentPropertiesID `json:"order_id"`
	// 税送料\
	// 税送料を指定します。\
	// \
	// 指定可能な金額の範囲は各決済手段ごとの制限事項に準じます。.
	Tax          OptNilString       `json:"tax"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
}

// GetPayType returns the value of PayType.
func (s *PaymentSessionCreatingRequestTransaction) GetPayType() OptPayType {
	return s.PayType
}

// GetAmount returns the value of Amount.
func (s *PaymentSessionCreatingRequestTransaction) GetAmount() string {
	return s.Amount
}

// GetOrderID returns the value of OrderID.
func (s *PaymentSessionCreatingRequestTransaction) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetTax returns the value of Tax.
func (s *PaymentSessionCreatingRequestTransaction) GetTax() OptNilString {
	return s.Tax
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentSessionCreatingRequestTransaction) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentSessionCreatingRequestTransaction) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentSessionCreatingRequestTransaction) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// SetPayType sets the value of PayType.
func (s *PaymentSessionCreatingRequestTransaction) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetAmount sets the value of Amount.
func (s *PaymentSessionCreatingRequestTransaction) SetAmount(val string) {
	s.Amount = val
}

// SetOrderID sets the value of OrderID.
func (s *PaymentSessionCreatingRequestTransaction) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetTax sets the value of Tax.
func (s *PaymentSessionCreatingRequestTransaction) SetTax(val OptNilString) {
	s.Tax = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentSessionCreatingRequestTransaction) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentSessionCreatingRequestTransaction) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentSessionCreatingRequestTransaction) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// 購入メール 送信フラグ\
// リダイレクト型決済URLをfincodeからのメール送信機能で送信したかどうかを示します。
// - `0`：送信しなかった（デフォルト）
// - `1`：送信した.
type PaymentSessionGuideMailSendFlag string

const (
	PaymentSessionGuideMailSendFlag0 PaymentSessionGuideMailSendFlag = "0"
	PaymentSessionGuideMailSendFlag1 PaymentSessionGuideMailSendFlag = "1"
)

// AllValues returns all PaymentSessionGuideMailSendFlag values.
func (PaymentSessionGuideMailSendFlag) AllValues() []PaymentSessionGuideMailSendFlag {
	return []PaymentSessionGuideMailSendFlag{
		PaymentSessionGuideMailSendFlag0,
		PaymentSessionGuideMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentSessionGuideMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentSessionGuideMailSendFlag0:
		return []byte(s), nil
	case PaymentSessionGuideMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentSessionGuideMailSendFlag) UnmarshalText(data []byte) error {
	switch PaymentSessionGuideMailSendFlag(data) {
	case PaymentSessionGuideMailSendFlag0:
		*s = PaymentSessionGuideMailSendFlag0
		return nil
	case PaymentSessionGuideMailSendFlag1:
		*s = PaymentSessionGuideMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PaymentSession.Konbini
type PaymentSessionKonbini struct {
	// コンビニ決済 支払い画面URL.
	KonbiniReceptionURL OptNilString `json:"konbini_reception_url"`
	// コンビニ決済 支払期限日数\
	// 店頭レジでの支払い期限日数です。.
	PaymentTermDay OptNilInt32 `json:"payment_term_day"`
	// コンビニ決済 支払い画面案内メール送信フラグ\
	// コンビニ決済の支払い画面案内メールを送信するかどうかを設定します。
	// - `0`：送信しない
	// - `1`：送信する.
	KonbiniReceptionMailSendFlag OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag `json:"konbini_reception_mail_send_flag"`
}

// GetKonbiniReceptionURL returns the value of KonbiniReceptionURL.
func (s *PaymentSessionKonbini) GetKonbiniReceptionURL() OptNilString {
	return s.KonbiniReceptionURL
}

// GetPaymentTermDay returns the value of PaymentTermDay.
func (s *PaymentSessionKonbini) GetPaymentTermDay() OptNilInt32 {
	return s.PaymentTermDay
}

// GetKonbiniReceptionMailSendFlag returns the value of KonbiniReceptionMailSendFlag.
func (s *PaymentSessionKonbini) GetKonbiniReceptionMailSendFlag() OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag {
	return s.KonbiniReceptionMailSendFlag
}

// SetKonbiniReceptionURL sets the value of KonbiniReceptionURL.
func (s *PaymentSessionKonbini) SetKonbiniReceptionURL(val OptNilString) {
	s.KonbiniReceptionURL = val
}

// SetPaymentTermDay sets the value of PaymentTermDay.
func (s *PaymentSessionKonbini) SetPaymentTermDay(val OptNilInt32) {
	s.PaymentTermDay = val
}

// SetKonbiniReceptionMailSendFlag sets the value of KonbiniReceptionMailSendFlag.
func (s *PaymentSessionKonbini) SetKonbiniReceptionMailSendFlag(val OptPaymentSessionKonbiniKonbiniReceptionMailSendFlag) {
	s.KonbiniReceptionMailSendFlag = val
}

// コンビニ決済 支払い画面案内メール送信フラグ\
// コンビニ決済の支払い画面案内メールを送信するかどうかを設定します。
// - `0`：送信しない
// - `1`：送信する.
type PaymentSessionKonbiniKonbiniReceptionMailSendFlag string

const (
	PaymentSessionKonbiniKonbiniReceptionMailSendFlag0 PaymentSessionKonbiniKonbiniReceptionMailSendFlag = "0"
	PaymentSessionKonbiniKonbiniReceptionMailSendFlag1 PaymentSessionKonbiniKonbiniReceptionMailSendFlag = "1"
)

// AllValues returns all PaymentSessionKonbiniKonbiniReceptionMailSendFlag values.
func (PaymentSessionKonbiniKonbiniReceptionMailSendFlag) AllValues() []PaymentSessionKonbiniKonbiniReceptionMailSendFlag {
	return []PaymentSessionKonbiniKonbiniReceptionMailSendFlag{
		PaymentSessionKonbiniKonbiniReceptionMailSendFlag0,
		PaymentSessionKonbiniKonbiniReceptionMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentSessionKonbiniKonbiniReceptionMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentSessionKonbiniKonbiniReceptionMailSendFlag0:
		return []byte(s), nil
	case PaymentSessionKonbiniKonbiniReceptionMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentSessionKonbiniKonbiniReceptionMailSendFlag) UnmarshalText(data []byte) error {
	switch PaymentSessionKonbiniKonbiniReceptionMailSendFlag(data) {
	case PaymentSessionKonbiniKonbiniReceptionMailSendFlag0:
		*s = PaymentSessionKonbiniKonbiniReceptionMailSendFlag0
		return nil
	case PaymentSessionKonbiniKonbiniReceptionMailSendFlag1:
		*s = PaymentSessionKonbiniKonbiniReceptionMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PaymentSession.PayPay
type PaymentSessionPayPay struct {
	JobCode OptPayPayPaymentJobCode `json:"job_code"`
	// 注文内容の説明\
	// PayPayアプリ上で注文内容として表示されます。.
	OrderDescription OptNilString `json:"order_description"`
}

// GetJobCode returns the value of JobCode.
func (s *PaymentSessionPayPay) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetOrderDescription returns the value of OrderDescription.
func (s *PaymentSessionPayPay) GetOrderDescription() OptNilString {
	return s.OrderDescription
}

// SetJobCode sets the value of JobCode.
func (s *PaymentSessionPayPay) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *PaymentSessionPayPay) SetOrderDescription(val OptNilString) {
	s.OrderDescription = val
}

// 決済方法\
// このリダイレクト型決済で利用できる決済方法です。\
// \
// - `Card`：カード決済\
// - `Konbini`：コンビニ決済\
// - `Paypay`：PayPay.
// Ref: #/components/schemas/PaymentSessionPayType
type PaymentSessionPayType string

const (
	PaymentSessionPayTypeCard    PaymentSessionPayType = "Card"
	PaymentSessionPayTypeKonbini PaymentSessionPayType = "Konbini"
	PaymentSessionPayTypePaypay  PaymentSessionPayType = "Paypay"
)

// AllValues returns all PaymentSessionPayType values.
func (PaymentSessionPayType) AllValues() []PaymentSessionPayType {
	return []PaymentSessionPayType{
		PaymentSessionPayTypeCard,
		PaymentSessionPayTypeKonbini,
		PaymentSessionPayTypePaypay,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentSessionPayType) MarshalText() ([]byte, error) {
	switch s {
	case PaymentSessionPayTypeCard:
		return []byte(s), nil
	case PaymentSessionPayTypeKonbini:
		return []byte(s), nil
	case PaymentSessionPayTypePaypay:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentSessionPayType) UnmarshalText(data []byte) error {
	switch PaymentSessionPayType(data) {
	case PaymentSessionPayTypeCard:
		*s = PaymentSessionPayTypeCard
		return nil
	case PaymentSessionPayTypeKonbini:
		*s = PaymentSessionPayTypeKonbini
		return nil
	case PaymentSessionPayTypePaypay:
		*s = PaymentSessionPayTypePaypay
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ステータス\
// リダイレクト型決済URLのステータスを表します。
// - `CREATE`：決済URLが作成された状態.
// Ref: #/components/schemas/PaymentSessionStatus
type PaymentSessionStatus string

const (
	PaymentSessionStatusCREATE PaymentSessionStatus = "CREATE"
)

// AllValues returns all PaymentSessionStatus values.
func (PaymentSessionStatus) AllValues() []PaymentSessionStatus {
	return []PaymentSessionStatus{
		PaymentSessionStatusCREATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentSessionStatus) MarshalText() ([]byte, error) {
	switch s {
	case PaymentSessionStatusCREATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentSessionStatus) UnmarshalText(data []byte) error {
	switch PaymentSessionStatus(data) {
	case PaymentSessionStatusCREATE:
		*s = PaymentSessionStatusCREATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 完了メール 送信フラグ\
// 決済が完了した際に購入者に完了メールを送信するかどうかを示します。
// - `0`：送信しない（デフォルト）
// - `1`：送信する.
type PaymentSessionThanksMailSendFlag string

const (
	PaymentSessionThanksMailSendFlag0 PaymentSessionThanksMailSendFlag = "0"
	PaymentSessionThanksMailSendFlag1 PaymentSessionThanksMailSendFlag = "1"
)

// AllValues returns all PaymentSessionThanksMailSendFlag values.
func (PaymentSessionThanksMailSendFlag) AllValues() []PaymentSessionThanksMailSendFlag {
	return []PaymentSessionThanksMailSendFlag{
		PaymentSessionThanksMailSendFlag0,
		PaymentSessionThanksMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentSessionThanksMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case PaymentSessionThanksMailSendFlag0:
		return []byte(s), nil
	case PaymentSessionThanksMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentSessionThanksMailSendFlag) UnmarshalText(data []byte) error {
	switch PaymentSessionThanksMailSendFlag(data) {
	case PaymentSessionThanksMailSendFlag0:
		*s = PaymentSessionThanksMailSendFlag0
		return nil
	case PaymentSessionThanksMailSendFlag1:
		*s = PaymentSessionThanksMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 決済共通項目\
// 決済手段を問わず共通して使用される、決済に関するデータです。.
type PaymentSessionTransaction struct {
	// 決済手段\
	// この決済URL上で使用できる決済手段を複数指定します。
	// - `Card`：カード決済
	// - `Konbini`：コンビニ決済
	// - `Paypay`：PayPay.
	PayType      []PaymentSessionPayType `json:"pay_type"`
	OrderID      OptPaymentPropertiesID  `json:"order_id"`
	Amount       OptPropertiesAmount     `json:"amount"`
	Tax          OptPropertiesTax        `json:"tax"`
	ClientField1 OptNilClientFieldN      `json:"client_field_1"`
	ClientField2 OptNilClientFieldN      `json:"client_field_2"`
	ClientField3 OptNilClientFieldN      `json:"client_field_3"`
}

// GetPayType returns the value of PayType.
func (s *PaymentSessionTransaction) GetPayType() []PaymentSessionPayType {
	return s.PayType
}

// GetOrderID returns the value of OrderID.
func (s *PaymentSessionTransaction) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetAmount returns the value of Amount.
func (s *PaymentSessionTransaction) GetAmount() OptPropertiesAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PaymentSessionTransaction) GetTax() OptPropertiesTax {
	return s.Tax
}

// GetClientField1 returns the value of ClientField1.
func (s *PaymentSessionTransaction) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *PaymentSessionTransaction) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *PaymentSessionTransaction) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// SetPayType sets the value of PayType.
func (s *PaymentSessionTransaction) SetPayType(val []PaymentSessionPayType) {
	s.PayType = val
}

// SetOrderID sets the value of OrderID.
func (s *PaymentSessionTransaction) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetAmount sets the value of Amount.
func (s *PaymentSessionTransaction) SetAmount(val OptPropertiesAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PaymentSessionTransaction) SetTax(val OptPropertiesTax) {
	s.Tax = val
}

// SetClientField1 sets the value of ClientField1.
func (s *PaymentSessionTransaction) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *PaymentSessionTransaction) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *PaymentSessionTransaction) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// 決済ステータス
// - `UNPROCESSED`: 未決済
// - `CHECKED`: 有効性チェック済み
// - `AUTHORIZED`: 仮売上
// - `AWAITING_CUSTOMER_PAYMENT`: 購入者の支払い待ち
// - `AWAITING_PAYMENT_APPROVAL`: 決済承認待ち
// - `CAPTURED`: 売上確定
// - `CANCELED`: キャンセル
// - `EXPIRED`: 決済の期限切れ
// - `AUTHENTICATED`: 未決済（3Dセキュア認証待ち）
// - `FAILED`: 決済失敗.
// Ref: #/components/schemas/PaymentStatus
type PaymentStatus string

const (
	PaymentStatusUNPROCESSED             PaymentStatus = "UNPROCESSED"
	PaymentStatusCHECKED                 PaymentStatus = "CHECKED"
	PaymentStatusAUTHORIZED              PaymentStatus = "AUTHORIZED"
	PaymentStatusAWAITINGCUSTOMERPAYMENT PaymentStatus = "AWAITING_CUSTOMER_PAYMENT"
	PaymentStatusAWAITINGPAYMENTAPPROVAL PaymentStatus = "AWAITING_PAYMENT_APPROVAL"
	PaymentStatusCAPTURED                PaymentStatus = "CAPTURED"
	PaymentStatusCANCELED                PaymentStatus = "CANCELED"
	PaymentStatusEXPIRED                 PaymentStatus = "EXPIRED"
	PaymentStatusAUTHENTICATED           PaymentStatus = "AUTHENTICATED"
	PaymentStatusFAILED                  PaymentStatus = "FAILED"
)

// AllValues returns all PaymentStatus values.
func (PaymentStatus) AllValues() []PaymentStatus {
	return []PaymentStatus{
		PaymentStatusUNPROCESSED,
		PaymentStatusCHECKED,
		PaymentStatusAUTHORIZED,
		PaymentStatusAWAITINGCUSTOMERPAYMENT,
		PaymentStatusAWAITINGPAYMENTAPPROVAL,
		PaymentStatusCAPTURED,
		PaymentStatusCANCELED,
		PaymentStatusEXPIRED,
		PaymentStatusAUTHENTICATED,
		PaymentStatusFAILED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentStatus) MarshalText() ([]byte, error) {
	switch s {
	case PaymentStatusUNPROCESSED:
		return []byte(s), nil
	case PaymentStatusCHECKED:
		return []byte(s), nil
	case PaymentStatusAUTHORIZED:
		return []byte(s), nil
	case PaymentStatusAWAITINGCUSTOMERPAYMENT:
		return []byte(s), nil
	case PaymentStatusAWAITINGPAYMENTAPPROVAL:
		return []byte(s), nil
	case PaymentStatusCAPTURED:
		return []byte(s), nil
	case PaymentStatusCANCELED:
		return []byte(s), nil
	case PaymentStatusEXPIRED:
		return []byte(s), nil
	case PaymentStatusAUTHENTICATED:
		return []byte(s), nil
	case PaymentStatusFAILED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentStatus) UnmarshalText(data []byte) error {
	switch PaymentStatus(data) {
	case PaymentStatusUNPROCESSED:
		*s = PaymentStatusUNPROCESSED
		return nil
	case PaymentStatusCHECKED:
		*s = PaymentStatusCHECKED
		return nil
	case PaymentStatusAUTHORIZED:
		*s = PaymentStatusAUTHORIZED
		return nil
	case PaymentStatusAWAITINGCUSTOMERPAYMENT:
		*s = PaymentStatusAWAITINGCUSTOMERPAYMENT
		return nil
	case PaymentStatusAWAITINGPAYMENTAPPROVAL:
		*s = PaymentStatusAWAITINGPAYMENTAPPROVAL
		return nil
	case PaymentStatusCAPTURED:
		*s = PaymentStatusCAPTURED
		return nil
	case PaymentStatusCANCELED:
		*s = PaymentStatusCANCELED
		return nil
	case PaymentStatusEXPIRED:
		*s = PaymentStatusEXPIRED
		return nil
	case PaymentStatusAUTHENTICATED:
		*s = PaymentStatusAUTHENTICATED
		return nil
	case PaymentStatusFAILED:
		*s = PaymentStatusFAILED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type PaymentTerm string

type PaymentTermDay string

// PayPay審査により決定されるPayPay商材カテゴリー。
// - `1`: 物販／サービスショップ
// - `2`: デジタルコンテンツショップ
// ※ PayPayのみ.
// Ref: #/components/schemas/paypay_content_category_type
type PaypayContentCategoryType string

const (
	PaypayContentCategoryType1 PaypayContentCategoryType = "1"
	PaypayContentCategoryType2 PaypayContentCategoryType = "2"
)

// AllValues returns all PaypayContentCategoryType values.
func (PaypayContentCategoryType) AllValues() []PaypayContentCategoryType {
	return []PaypayContentCategoryType{
		PaypayContentCategoryType1,
		PaypayContentCategoryType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaypayContentCategoryType) MarshalText() ([]byte, error) {
	switch s {
	case PaypayContentCategoryType1:
		return []byte(s), nil
	case PaypayContentCategoryType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaypayContentCategoryType) UnmarshalText(data []byte) error {
	switch PaypayContentCategoryType(data) {
	case PaypayContentCategoryType1:
		*s = PaypayContentCategoryType1
		return nil
	case PaypayContentCategoryType2:
		*s = PaypayContentCategoryType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type PhoneCc string

type PhoneNo string

type PixelRatio string

// Ref: #/components/schemas/Plan
type Plan struct {
	// プランID.
	ID OptString `json:"id"`
	// プラン名.
	PlanName OptString `json:"plan_name"`
	// プランの説明.
	Description OptNilString        `json:"description"`
	ShopID      OptShopPropertiesID `json:"shop_id"`
	// 利用金額.
	Amount OptInt64 `json:"amount"`
	// 税送料.
	Tax OptInt64 `json:"tax"`
	// 合計金額\
	// 利用金額と税送料の合計金額です。.
	TotalAmount OptInt64 `json:"total_amount"`
	// 課金間隔
	// - `month`：月
	// - `year`：年.
	IntervalPattern OptPlanIntervalPattern `json:"interval_pattern"`
	// 課金間隔数
	// - `1`：月次／年次の課金
	// - `2`：2ヶ月に1回の課金
	// - `3`：3ヶ月に1回の課金
	// - `6`：6ヶ月に1回の課金.
	IntervalCount OptPlanIntervalCount `json:"interval_count"`
	// 利用済みフラグ\
	// このプランを用いたサブスクリプション（解約含む）が1つ以上存在する場合`1`を返し、存在しない場合`0`を返します。
	// - `0`：このプランを用いたサブスクリプションはまだ存在しない
	// - `1`：このプランを用いたサブスクリプションが存在する.
	UsedFlag   OptPlanUsedFlag `json:"used_flag"`
	DeleteFlag OptDeleteFlag   `json:"delete_flag"`
	Created    OptCreated      `json:"created"`
	Updated    OptNilUpdated   `json:"updated"`
}

// GetID returns the value of ID.
func (s *Plan) GetID() OptString {
	return s.ID
}

// GetPlanName returns the value of PlanName.
func (s *Plan) GetPlanName() OptString {
	return s.PlanName
}

// GetDescription returns the value of Description.
func (s *Plan) GetDescription() OptNilString {
	return s.Description
}

// GetShopID returns the value of ShopID.
func (s *Plan) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetAmount returns the value of Amount.
func (s *Plan) GetAmount() OptInt64 {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *Plan) GetTax() OptInt64 {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *Plan) GetTotalAmount() OptInt64 {
	return s.TotalAmount
}

// GetIntervalPattern returns the value of IntervalPattern.
func (s *Plan) GetIntervalPattern() OptPlanIntervalPattern {
	return s.IntervalPattern
}

// GetIntervalCount returns the value of IntervalCount.
func (s *Plan) GetIntervalCount() OptPlanIntervalCount {
	return s.IntervalCount
}

// GetUsedFlag returns the value of UsedFlag.
func (s *Plan) GetUsedFlag() OptPlanUsedFlag {
	return s.UsedFlag
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *Plan) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// GetCreated returns the value of Created.
func (s *Plan) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *Plan) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *Plan) SetID(val OptString) {
	s.ID = val
}

// SetPlanName sets the value of PlanName.
func (s *Plan) SetPlanName(val OptString) {
	s.PlanName = val
}

// SetDescription sets the value of Description.
func (s *Plan) SetDescription(val OptNilString) {
	s.Description = val
}

// SetShopID sets the value of ShopID.
func (s *Plan) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetAmount sets the value of Amount.
func (s *Plan) SetAmount(val OptInt64) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *Plan) SetTax(val OptInt64) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *Plan) SetTotalAmount(val OptInt64) {
	s.TotalAmount = val
}

// SetIntervalPattern sets the value of IntervalPattern.
func (s *Plan) SetIntervalPattern(val OptPlanIntervalPattern) {
	s.IntervalPattern = val
}

// SetIntervalCount sets the value of IntervalCount.
func (s *Plan) SetIntervalCount(val OptPlanIntervalCount) {
	s.IntervalCount = val
}

// SetUsedFlag sets the value of UsedFlag.
func (s *Plan) SetUsedFlag(val OptPlanUsedFlag) {
	s.UsedFlag = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *Plan) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

// SetCreated sets the value of Created.
func (s *Plan) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *Plan) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*Plan) createPlanRes()   {}
func (*Plan) deletePlanRes()   {}
func (*Plan) retrievePlanRes() {}
func (*Plan) updatePlanRes()   {}

// Ref: #/components/schemas/Plan.Creating.Request
type PlanCreatingRequest struct {
	ID              OptPlanPropertiesID  `json:"id"`
	PlanName        PlanName             `json:"plan_name"`
	Description     OptNilDescription    `json:"description"`
	Amount          XReqPropertiesAmount `json:"amount"`
	Tax             OptXReqPropertiesTax `json:"tax"`
	IntervalPattern OptIntervalPattern   `json:"interval_pattern"`
	IntervalCount   OptIntervalCount     `json:"interval_count"`
}

// GetID returns the value of ID.
func (s *PlanCreatingRequest) GetID() OptPlanPropertiesID {
	return s.ID
}

// GetPlanName returns the value of PlanName.
func (s *PlanCreatingRequest) GetPlanName() PlanName {
	return s.PlanName
}

// GetDescription returns the value of Description.
func (s *PlanCreatingRequest) GetDescription() OptNilDescription {
	return s.Description
}

// GetAmount returns the value of Amount.
func (s *PlanCreatingRequest) GetAmount() XReqPropertiesAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PlanCreatingRequest) GetTax() OptXReqPropertiesTax {
	return s.Tax
}

// GetIntervalPattern returns the value of IntervalPattern.
func (s *PlanCreatingRequest) GetIntervalPattern() OptIntervalPattern {
	return s.IntervalPattern
}

// GetIntervalCount returns the value of IntervalCount.
func (s *PlanCreatingRequest) GetIntervalCount() OptIntervalCount {
	return s.IntervalCount
}

// SetID sets the value of ID.
func (s *PlanCreatingRequest) SetID(val OptPlanPropertiesID) {
	s.ID = val
}

// SetPlanName sets the value of PlanName.
func (s *PlanCreatingRequest) SetPlanName(val PlanName) {
	s.PlanName = val
}

// SetDescription sets the value of Description.
func (s *PlanCreatingRequest) SetDescription(val OptNilDescription) {
	s.Description = val
}

// SetAmount sets the value of Amount.
func (s *PlanCreatingRequest) SetAmount(val XReqPropertiesAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PlanCreatingRequest) SetTax(val OptXReqPropertiesTax) {
	s.Tax = val
}

// SetIntervalPattern sets the value of IntervalPattern.
func (s *PlanCreatingRequest) SetIntervalPattern(val OptIntervalPattern) {
	s.IntervalPattern = val
}

// SetIntervalCount sets the value of IntervalCount.
func (s *PlanCreatingRequest) SetIntervalCount(val OptIntervalCount) {
	s.IntervalCount = val
}

type PlanIdSchema string

// 課金間隔数
// - `1`：月次／年次の課金
// - `2`：2ヶ月に1回の課金
// - `3`：3ヶ月に1回の課金
// - `6`：6ヶ月に1回の課金.
type PlanIntervalCount float64

const (
	PlanIntervalCount1 PlanIntervalCount = 1
	PlanIntervalCount2 PlanIntervalCount = 2
	PlanIntervalCount3 PlanIntervalCount = 3
	PlanIntervalCount6 PlanIntervalCount = 6
)

// AllValues returns all PlanIntervalCount values.
func (PlanIntervalCount) AllValues() []PlanIntervalCount {
	return []PlanIntervalCount{
		PlanIntervalCount1,
		PlanIntervalCount2,
		PlanIntervalCount3,
		PlanIntervalCount6,
	}
}

// 課金間隔
// - `month`：月
// - `year`：年.
type PlanIntervalPattern string

const (
	PlanIntervalPatternMonth PlanIntervalPattern = "month"
	PlanIntervalPatternYear  PlanIntervalPattern = "year"
)

// AllValues returns all PlanIntervalPattern values.
func (PlanIntervalPattern) AllValues() []PlanIntervalPattern {
	return []PlanIntervalPattern{
		PlanIntervalPatternMonth,
		PlanIntervalPatternYear,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PlanIntervalPattern) MarshalText() ([]byte, error) {
	switch s {
	case PlanIntervalPatternMonth:
		return []byte(s), nil
	case PlanIntervalPatternYear:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PlanIntervalPattern) UnmarshalText(data []byte) error {
	switch PlanIntervalPattern(data) {
	case PlanIntervalPatternMonth:
		*s = PlanIntervalPatternMonth
		return nil
	case PlanIntervalPatternYear:
		*s = PlanIntervalPatternYear
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
// Ref: #/components/schemas/Plan.ListRetrieving.Response
type PlanListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString `json:"link_previous"`
	List         []Plan       `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PlanListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PlanListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PlanListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PlanListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PlanListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PlanListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PlanListRetrievingResponse) GetList() []Plan {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PlanListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PlanListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PlanListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PlanListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PlanListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PlanListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PlanListRetrievingResponse) SetList(val []Plan) {
	s.List = val
}

func (*PlanListRetrievingResponse) retrievePlanListRes() {}

type PlanName string

type PlanPropertiesAmount int64

type PlanPropertiesID string

type PlanPropertiesTax int64

// Ref: #/components/schemas/Plan.Updating.Request
type PlanUpdatingRequest struct {
	PlanName        OptPlanName             `json:"plan_name"`
	Description     OptNilDescription       `json:"description"`
	Amount          OptXReqPropertiesAmount `json:"amount"`
	Tax             OptXReqPropertiesTax    `json:"tax"`
	IntervalPattern OptIntervalPattern      `json:"interval_pattern"`
	IntervalCount   OptIntervalCount        `json:"interval_count"`
}

// GetPlanName returns the value of PlanName.
func (s *PlanUpdatingRequest) GetPlanName() OptPlanName {
	return s.PlanName
}

// GetDescription returns the value of Description.
func (s *PlanUpdatingRequest) GetDescription() OptNilDescription {
	return s.Description
}

// GetAmount returns the value of Amount.
func (s *PlanUpdatingRequest) GetAmount() OptXReqPropertiesAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *PlanUpdatingRequest) GetTax() OptXReqPropertiesTax {
	return s.Tax
}

// GetIntervalPattern returns the value of IntervalPattern.
func (s *PlanUpdatingRequest) GetIntervalPattern() OptIntervalPattern {
	return s.IntervalPattern
}

// GetIntervalCount returns the value of IntervalCount.
func (s *PlanUpdatingRequest) GetIntervalCount() OptIntervalCount {
	return s.IntervalCount
}

// SetPlanName sets the value of PlanName.
func (s *PlanUpdatingRequest) SetPlanName(val OptPlanName) {
	s.PlanName = val
}

// SetDescription sets the value of Description.
func (s *PlanUpdatingRequest) SetDescription(val OptNilDescription) {
	s.Description = val
}

// SetAmount sets the value of Amount.
func (s *PlanUpdatingRequest) SetAmount(val OptXReqPropertiesAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *PlanUpdatingRequest) SetTax(val OptXReqPropertiesTax) {
	s.Tax = val
}

// SetIntervalPattern sets the value of IntervalPattern.
func (s *PlanUpdatingRequest) SetIntervalPattern(val OptIntervalPattern) {
	s.IntervalPattern = val
}

// SetIntervalCount sets the value of IntervalCount.
func (s *PlanUpdatingRequest) SetIntervalCount(val OptIntervalCount) {
	s.IntervalCount = val
}

// 利用済みフラグ\
// このプランを用いたサブスクリプション（解約含む）が1つ以上存在する場合`1`を返し、存在しない場合`0`を返します。
// - `0`：このプランを用いたサブスクリプションはまだ存在しない
// - `1`：このプランを用いたサブスクリプションが存在する.
type PlanUsedFlag string

const (
	PlanUsedFlag0 PlanUsedFlag = "0"
	PlanUsedFlag1 PlanUsedFlag = "1"
)

// AllValues returns all PlanUsedFlag values.
func (PlanUsedFlag) AllValues() []PlanUsedFlag {
	return []PlanUsedFlag{
		PlanUsedFlag0,
		PlanUsedFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PlanUsedFlag) MarshalText() ([]byte, error) {
	switch s {
	case PlanUsedFlag0:
		return []byte(s), nil
	case PlanUsedFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PlanUsedFlag) UnmarshalText(data []byte) error {
	switch PlanUsedFlag(data) {
	case PlanUsedFlag0:
		*s = PlanUsedFlag0
		return nil
	case PlanUsedFlag1:
		*s = PlanUsedFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PlatformAccount
type PlatformAccount struct {
	// プラットフォーム利用料収入ID.
	ID OptString `json:"id"`
	// 精算ID.
	AccountID OptInt `json:"account_id"`
	// ショップID.
	ShopID OptString `json:"shop_id"`
	// プラットフォーム利用料収入 入金額\
	// \
	// プラットフォームショップに入金される（入金が予定されている）プラットフォーム利用料による売上金の額です。\
	// 精算金額（`settlement_amount`）から振込手数料（`bank_transfer_fee`）を引いた金額に一致します。.
	DepositAmount OptNilInt `json:"deposit_amount"`
	// プラットフォーム利用料収入 入金実績日\
	// 形式： `yyyy/MM/dd HH:MM`.
	DepositDate OptNilString `json:"deposit_date"`
	// プラットフォーム利用料収入 入金予定日\
	// 形式： `yyyy/MM/dd HH:MM`.
	ScheduledDepositDate OptNilString `json:"scheduled_deposit_date"`
	// プラットフォーム利用料収入 集計期間 開始日\
	// 形式： `yyyy/MM/dd HH:MM`.
	AggregateTermStart OptNilString `json:"aggregate_term_start"`
	// プラットフォーム利用料収入 集計期間 終了日\
	// 形式： `yyyy/MM/dd HH:MM`.
	AggregateTermEnd OptNilString `json:"aggregate_term_end"`
	// （請求が発生した場合）支払期限日\
	// 形式： `yyyy/MM/dd HH:MM`.
	PaymentDeadline OptNilString `json:"payment_deadline"`
	// （請求が発生した場合）請求日\
	// 形式： `yyyy/MM/dd HH:MM`.
	PaymentCompletionDate OptNilString         `json:"payment_completion_date"`
	StatusCode            OptDepositStatusCode `json:"status_code"`
	// このプラットフォーム利用料収入に含まれる決済の件数.
	Count OptNilInt `json:"count"`
	// 精算金額.
	SettlementAmount OptNilInt `json:"settlement_amount"`
	// 振込手数料.
	BankTransferFee OptNilInt `json:"bank_transfer_fee"`
	// このプラットフォーム利用料入金において精算の対象となった取引の総額。.
	TotalAmount OptNilInt `json:"total_amount"`
	// このプラットフォーム利用料入金において精算の対象となった取引にかかるfincodeへの手数料.
	FeeAmount OptNilInt `json:"fee_amount"`
	// 決済手数料 課税対象額.
	TaxableFeeAmount OptNilInt `json:"taxable_fee_amount"`
	// 決済手数料 非課税対象額.
	NontaxableFeeAmount OptNilInt `json:"nontaxable_fee_amount"`
	// 決済手数料 消費税額.
	TaxAmount OptNilInt `json:"tax_amount"`
	// このプラットフォーム利用料入金の精算期間中に発生した振替口座のWeb登録手数料\
	// ※ 口座振替のみ.
	WebRegistrationFeeAmount OptNilInt `json:"web_registration_fee_amount"`
	// このプラットフォーム利用料入金において精算の対象となった取引にかかるプラットフォーム利用料.
	PlatformFeeAmount OptNilInt `json:"platform_fee_amount"`
	// このプラットフォーム利用料入金において精算の対象となった取引にかかるプラットフォーム利用料の消費税.
	PlatformFeeTaxAmount OptNilInt `json:"platform_fee_tax_amount"`
	// このプラットフォーム利用料入金の精算期間中に発生した、プラットフォームが設定した振替口座のWeb登録手数料.
	PlatformWebRegistrationFeeAmount OptNilInt                       `json:"platform_web_registration_fee_amount"`
	Created                          OptCreated                      `json:"created"`
	Updated                          OptNilUpdated                   `json:"updated"`
	DepositDestination               OptDepositTargetBankAccountInfo `json:"deposit_destination"`
	// 検証確認フラグ.
	//
	// Deprecated: schema marks this property as deprecated.
	Verified OptBool `json:"verified"`
}

// GetID returns the value of ID.
func (s *PlatformAccount) GetID() OptString {
	return s.ID
}

// GetAccountID returns the value of AccountID.
func (s *PlatformAccount) GetAccountID() OptInt {
	return s.AccountID
}

// GetShopID returns the value of ShopID.
func (s *PlatformAccount) GetShopID() OptString {
	return s.ShopID
}

// GetDepositAmount returns the value of DepositAmount.
func (s *PlatformAccount) GetDepositAmount() OptNilInt {
	return s.DepositAmount
}

// GetDepositDate returns the value of DepositDate.
func (s *PlatformAccount) GetDepositDate() OptNilString {
	return s.DepositDate
}

// GetScheduledDepositDate returns the value of ScheduledDepositDate.
func (s *PlatformAccount) GetScheduledDepositDate() OptNilString {
	return s.ScheduledDepositDate
}

// GetAggregateTermStart returns the value of AggregateTermStart.
func (s *PlatformAccount) GetAggregateTermStart() OptNilString {
	return s.AggregateTermStart
}

// GetAggregateTermEnd returns the value of AggregateTermEnd.
func (s *PlatformAccount) GetAggregateTermEnd() OptNilString {
	return s.AggregateTermEnd
}

// GetPaymentDeadline returns the value of PaymentDeadline.
func (s *PlatformAccount) GetPaymentDeadline() OptNilString {
	return s.PaymentDeadline
}

// GetPaymentCompletionDate returns the value of PaymentCompletionDate.
func (s *PlatformAccount) GetPaymentCompletionDate() OptNilString {
	return s.PaymentCompletionDate
}

// GetStatusCode returns the value of StatusCode.
func (s *PlatformAccount) GetStatusCode() OptDepositStatusCode {
	return s.StatusCode
}

// GetCount returns the value of Count.
func (s *PlatformAccount) GetCount() OptNilInt {
	return s.Count
}

// GetSettlementAmount returns the value of SettlementAmount.
func (s *PlatformAccount) GetSettlementAmount() OptNilInt {
	return s.SettlementAmount
}

// GetBankTransferFee returns the value of BankTransferFee.
func (s *PlatformAccount) GetBankTransferFee() OptNilInt {
	return s.BankTransferFee
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PlatformAccount) GetTotalAmount() OptNilInt {
	return s.TotalAmount
}

// GetFeeAmount returns the value of FeeAmount.
func (s *PlatformAccount) GetFeeAmount() OptNilInt {
	return s.FeeAmount
}

// GetTaxableFeeAmount returns the value of TaxableFeeAmount.
func (s *PlatformAccount) GetTaxableFeeAmount() OptNilInt {
	return s.TaxableFeeAmount
}

// GetNontaxableFeeAmount returns the value of NontaxableFeeAmount.
func (s *PlatformAccount) GetNontaxableFeeAmount() OptNilInt {
	return s.NontaxableFeeAmount
}

// GetTaxAmount returns the value of TaxAmount.
func (s *PlatformAccount) GetTaxAmount() OptNilInt {
	return s.TaxAmount
}

// GetWebRegistrationFeeAmount returns the value of WebRegistrationFeeAmount.
func (s *PlatformAccount) GetWebRegistrationFeeAmount() OptNilInt {
	return s.WebRegistrationFeeAmount
}

// GetPlatformFeeAmount returns the value of PlatformFeeAmount.
func (s *PlatformAccount) GetPlatformFeeAmount() OptNilInt {
	return s.PlatformFeeAmount
}

// GetPlatformFeeTaxAmount returns the value of PlatformFeeTaxAmount.
func (s *PlatformAccount) GetPlatformFeeTaxAmount() OptNilInt {
	return s.PlatformFeeTaxAmount
}

// GetPlatformWebRegistrationFeeAmount returns the value of PlatformWebRegistrationFeeAmount.
func (s *PlatformAccount) GetPlatformWebRegistrationFeeAmount() OptNilInt {
	return s.PlatformWebRegistrationFeeAmount
}

// GetCreated returns the value of Created.
func (s *PlatformAccount) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PlatformAccount) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetDepositDestination returns the value of DepositDestination.
func (s *PlatformAccount) GetDepositDestination() OptDepositTargetBankAccountInfo {
	return s.DepositDestination
}

// GetVerified returns the value of Verified.
func (s *PlatformAccount) GetVerified() OptBool {
	return s.Verified
}

// SetID sets the value of ID.
func (s *PlatformAccount) SetID(val OptString) {
	s.ID = val
}

// SetAccountID sets the value of AccountID.
func (s *PlatformAccount) SetAccountID(val OptInt) {
	s.AccountID = val
}

// SetShopID sets the value of ShopID.
func (s *PlatformAccount) SetShopID(val OptString) {
	s.ShopID = val
}

// SetDepositAmount sets the value of DepositAmount.
func (s *PlatformAccount) SetDepositAmount(val OptNilInt) {
	s.DepositAmount = val
}

// SetDepositDate sets the value of DepositDate.
func (s *PlatformAccount) SetDepositDate(val OptNilString) {
	s.DepositDate = val
}

// SetScheduledDepositDate sets the value of ScheduledDepositDate.
func (s *PlatformAccount) SetScheduledDepositDate(val OptNilString) {
	s.ScheduledDepositDate = val
}

// SetAggregateTermStart sets the value of AggregateTermStart.
func (s *PlatformAccount) SetAggregateTermStart(val OptNilString) {
	s.AggregateTermStart = val
}

// SetAggregateTermEnd sets the value of AggregateTermEnd.
func (s *PlatformAccount) SetAggregateTermEnd(val OptNilString) {
	s.AggregateTermEnd = val
}

// SetPaymentDeadline sets the value of PaymentDeadline.
func (s *PlatformAccount) SetPaymentDeadline(val OptNilString) {
	s.PaymentDeadline = val
}

// SetPaymentCompletionDate sets the value of PaymentCompletionDate.
func (s *PlatformAccount) SetPaymentCompletionDate(val OptNilString) {
	s.PaymentCompletionDate = val
}

// SetStatusCode sets the value of StatusCode.
func (s *PlatformAccount) SetStatusCode(val OptDepositStatusCode) {
	s.StatusCode = val
}

// SetCount sets the value of Count.
func (s *PlatformAccount) SetCount(val OptNilInt) {
	s.Count = val
}

// SetSettlementAmount sets the value of SettlementAmount.
func (s *PlatformAccount) SetSettlementAmount(val OptNilInt) {
	s.SettlementAmount = val
}

// SetBankTransferFee sets the value of BankTransferFee.
func (s *PlatformAccount) SetBankTransferFee(val OptNilInt) {
	s.BankTransferFee = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PlatformAccount) SetTotalAmount(val OptNilInt) {
	s.TotalAmount = val
}

// SetFeeAmount sets the value of FeeAmount.
func (s *PlatformAccount) SetFeeAmount(val OptNilInt) {
	s.FeeAmount = val
}

// SetTaxableFeeAmount sets the value of TaxableFeeAmount.
func (s *PlatformAccount) SetTaxableFeeAmount(val OptNilInt) {
	s.TaxableFeeAmount = val
}

// SetNontaxableFeeAmount sets the value of NontaxableFeeAmount.
func (s *PlatformAccount) SetNontaxableFeeAmount(val OptNilInt) {
	s.NontaxableFeeAmount = val
}

// SetTaxAmount sets the value of TaxAmount.
func (s *PlatformAccount) SetTaxAmount(val OptNilInt) {
	s.TaxAmount = val
}

// SetWebRegistrationFeeAmount sets the value of WebRegistrationFeeAmount.
func (s *PlatformAccount) SetWebRegistrationFeeAmount(val OptNilInt) {
	s.WebRegistrationFeeAmount = val
}

// SetPlatformFeeAmount sets the value of PlatformFeeAmount.
func (s *PlatformAccount) SetPlatformFeeAmount(val OptNilInt) {
	s.PlatformFeeAmount = val
}

// SetPlatformFeeTaxAmount sets the value of PlatformFeeTaxAmount.
func (s *PlatformAccount) SetPlatformFeeTaxAmount(val OptNilInt) {
	s.PlatformFeeTaxAmount = val
}

// SetPlatformWebRegistrationFeeAmount sets the value of PlatformWebRegistrationFeeAmount.
func (s *PlatformAccount) SetPlatformWebRegistrationFeeAmount(val OptNilInt) {
	s.PlatformWebRegistrationFeeAmount = val
}

// SetCreated sets the value of Created.
func (s *PlatformAccount) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PlatformAccount) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetDepositDestination sets the value of DepositDestination.
func (s *PlatformAccount) SetDepositDestination(val OptDepositTargetBankAccountInfo) {
	s.DepositDestination = val
}

// SetVerified sets the value of Verified.
func (s *PlatformAccount) SetVerified(val OptBool) {
	s.Verified = val
}

func (*PlatformAccount) retrievePlatformAccountRes() {}

type PlatformAccountIdSchema string

// Ref: #/components/schemas/PlatformAccountListItem
type PlatformAccountListItem struct {
	ID                    OptPlatformAccountPropertiesID             `json:"id"`
	AccountID             OptPropertiesAccountID                     `json:"account_id"`
	ShopID                OptShopID                                  `json:"shop_id"`
	DepositAmount         OptNilPropertiesDepositAmount              `json:"deposit_amount"`
	DepositDate           OptNilPropertiesDepositDate                `json:"deposit_date"`
	ScheduledDepositDate  OptNilPropertiesScheduledDepositDate       `json:"scheduled_deposit_date"`
	AggregateTermStart    OptNilPropertiesAggregateTermStart         `json:"aggregate_term_start"`
	AggregateTermEnd      OptNilPropertiesAggregateTermEnd           `json:"aggregate_term_end"`
	PaymentDeadline       OptNilPaymentDeadline                      `json:"payment_deadline"`
	PaymentCompletionDate OptNilPaymentCompletionDate                `json:"payment_completion_date"`
	StatusCode            OptDepositStatusCode                       `json:"status_code"`
	Count                 OptNilPropertiesCount                      `json:"count"`
	SettlementAmount      OptNilSettlementAmount                     `json:"settlement_amount"`
	BankTransferFee       OptNilBankTransferFee                      `json:"bank_transfer_fee"`
	TotalAmount           OptNilPlatformAccountPropertiesTotalAmount `json:"total_amount"`
	FeeAmount             OptNilPropertiesFeeAmount                  `json:"fee_amount"`
	PlatformFeeAmount     OptNilPropertiesPlatformFeeAmount          `json:"platform_fee_amount"`
	PlatformFeeTaxAmount  OptNilPropertiesPlatformFeeAmount          `json:"platform_fee_tax_amount"`
	TaxAmount             OptNilTaxAmount                            `json:"tax_amount"`
	Created               OptCreated                                 `json:"created"`
	Updated               OptNilUpdated                              `json:"updated"`
	// Deprecated: schema marks this property as deprecated.
	Verified OptVerified `json:"verified"`
}

// GetID returns the value of ID.
func (s *PlatformAccountListItem) GetID() OptPlatformAccountPropertiesID {
	return s.ID
}

// GetAccountID returns the value of AccountID.
func (s *PlatformAccountListItem) GetAccountID() OptPropertiesAccountID {
	return s.AccountID
}

// GetShopID returns the value of ShopID.
func (s *PlatformAccountListItem) GetShopID() OptShopID {
	return s.ShopID
}

// GetDepositAmount returns the value of DepositAmount.
func (s *PlatformAccountListItem) GetDepositAmount() OptNilPropertiesDepositAmount {
	return s.DepositAmount
}

// GetDepositDate returns the value of DepositDate.
func (s *PlatformAccountListItem) GetDepositDate() OptNilPropertiesDepositDate {
	return s.DepositDate
}

// GetScheduledDepositDate returns the value of ScheduledDepositDate.
func (s *PlatformAccountListItem) GetScheduledDepositDate() OptNilPropertiesScheduledDepositDate {
	return s.ScheduledDepositDate
}

// GetAggregateTermStart returns the value of AggregateTermStart.
func (s *PlatformAccountListItem) GetAggregateTermStart() OptNilPropertiesAggregateTermStart {
	return s.AggregateTermStart
}

// GetAggregateTermEnd returns the value of AggregateTermEnd.
func (s *PlatformAccountListItem) GetAggregateTermEnd() OptNilPropertiesAggregateTermEnd {
	return s.AggregateTermEnd
}

// GetPaymentDeadline returns the value of PaymentDeadline.
func (s *PlatformAccountListItem) GetPaymentDeadline() OptNilPaymentDeadline {
	return s.PaymentDeadline
}

// GetPaymentCompletionDate returns the value of PaymentCompletionDate.
func (s *PlatformAccountListItem) GetPaymentCompletionDate() OptNilPaymentCompletionDate {
	return s.PaymentCompletionDate
}

// GetStatusCode returns the value of StatusCode.
func (s *PlatformAccountListItem) GetStatusCode() OptDepositStatusCode {
	return s.StatusCode
}

// GetCount returns the value of Count.
func (s *PlatformAccountListItem) GetCount() OptNilPropertiesCount {
	return s.Count
}

// GetSettlementAmount returns the value of SettlementAmount.
func (s *PlatformAccountListItem) GetSettlementAmount() OptNilSettlementAmount {
	return s.SettlementAmount
}

// GetBankTransferFee returns the value of BankTransferFee.
func (s *PlatformAccountListItem) GetBankTransferFee() OptNilBankTransferFee {
	return s.BankTransferFee
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PlatformAccountListItem) GetTotalAmount() OptNilPlatformAccountPropertiesTotalAmount {
	return s.TotalAmount
}

// GetFeeAmount returns the value of FeeAmount.
func (s *PlatformAccountListItem) GetFeeAmount() OptNilPropertiesFeeAmount {
	return s.FeeAmount
}

// GetPlatformFeeAmount returns the value of PlatformFeeAmount.
func (s *PlatformAccountListItem) GetPlatformFeeAmount() OptNilPropertiesPlatformFeeAmount {
	return s.PlatformFeeAmount
}

// GetPlatformFeeTaxAmount returns the value of PlatformFeeTaxAmount.
func (s *PlatformAccountListItem) GetPlatformFeeTaxAmount() OptNilPropertiesPlatformFeeAmount {
	return s.PlatformFeeTaxAmount
}

// GetTaxAmount returns the value of TaxAmount.
func (s *PlatformAccountListItem) GetTaxAmount() OptNilTaxAmount {
	return s.TaxAmount
}

// GetCreated returns the value of Created.
func (s *PlatformAccountListItem) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PlatformAccountListItem) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetVerified returns the value of Verified.
func (s *PlatformAccountListItem) GetVerified() OptVerified {
	return s.Verified
}

// SetID sets the value of ID.
func (s *PlatformAccountListItem) SetID(val OptPlatformAccountPropertiesID) {
	s.ID = val
}

// SetAccountID sets the value of AccountID.
func (s *PlatformAccountListItem) SetAccountID(val OptPropertiesAccountID) {
	s.AccountID = val
}

// SetShopID sets the value of ShopID.
func (s *PlatformAccountListItem) SetShopID(val OptShopID) {
	s.ShopID = val
}

// SetDepositAmount sets the value of DepositAmount.
func (s *PlatformAccountListItem) SetDepositAmount(val OptNilPropertiesDepositAmount) {
	s.DepositAmount = val
}

// SetDepositDate sets the value of DepositDate.
func (s *PlatformAccountListItem) SetDepositDate(val OptNilPropertiesDepositDate) {
	s.DepositDate = val
}

// SetScheduledDepositDate sets the value of ScheduledDepositDate.
func (s *PlatformAccountListItem) SetScheduledDepositDate(val OptNilPropertiesScheduledDepositDate) {
	s.ScheduledDepositDate = val
}

// SetAggregateTermStart sets the value of AggregateTermStart.
func (s *PlatformAccountListItem) SetAggregateTermStart(val OptNilPropertiesAggregateTermStart) {
	s.AggregateTermStart = val
}

// SetAggregateTermEnd sets the value of AggregateTermEnd.
func (s *PlatformAccountListItem) SetAggregateTermEnd(val OptNilPropertiesAggregateTermEnd) {
	s.AggregateTermEnd = val
}

// SetPaymentDeadline sets the value of PaymentDeadline.
func (s *PlatformAccountListItem) SetPaymentDeadline(val OptNilPaymentDeadline) {
	s.PaymentDeadline = val
}

// SetPaymentCompletionDate sets the value of PaymentCompletionDate.
func (s *PlatformAccountListItem) SetPaymentCompletionDate(val OptNilPaymentCompletionDate) {
	s.PaymentCompletionDate = val
}

// SetStatusCode sets the value of StatusCode.
func (s *PlatformAccountListItem) SetStatusCode(val OptDepositStatusCode) {
	s.StatusCode = val
}

// SetCount sets the value of Count.
func (s *PlatformAccountListItem) SetCount(val OptNilPropertiesCount) {
	s.Count = val
}

// SetSettlementAmount sets the value of SettlementAmount.
func (s *PlatformAccountListItem) SetSettlementAmount(val OptNilSettlementAmount) {
	s.SettlementAmount = val
}

// SetBankTransferFee sets the value of BankTransferFee.
func (s *PlatformAccountListItem) SetBankTransferFee(val OptNilBankTransferFee) {
	s.BankTransferFee = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PlatformAccountListItem) SetTotalAmount(val OptNilPlatformAccountPropertiesTotalAmount) {
	s.TotalAmount = val
}

// SetFeeAmount sets the value of FeeAmount.
func (s *PlatformAccountListItem) SetFeeAmount(val OptNilPropertiesFeeAmount) {
	s.FeeAmount = val
}

// SetPlatformFeeAmount sets the value of PlatformFeeAmount.
func (s *PlatformAccountListItem) SetPlatformFeeAmount(val OptNilPropertiesPlatformFeeAmount) {
	s.PlatformFeeAmount = val
}

// SetPlatformFeeTaxAmount sets the value of PlatformFeeTaxAmount.
func (s *PlatformAccountListItem) SetPlatformFeeTaxAmount(val OptNilPropertiesPlatformFeeAmount) {
	s.PlatformFeeTaxAmount = val
}

// SetTaxAmount sets the value of TaxAmount.
func (s *PlatformAccountListItem) SetTaxAmount(val OptNilTaxAmount) {
	s.TaxAmount = val
}

// SetCreated sets the value of Created.
func (s *PlatformAccountListItem) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PlatformAccountListItem) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetVerified sets the value of Verified.
func (s *PlatformAccountListItem) SetVerified(val OptVerified) {
	s.Verified = val
}

// Merged schema.
// Ref: #/components/schemas/PlatformAccount.ListRetrieving.Response
type PlatformAccountListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString `json:"link_previous"`
	// プラットフォーム利用料による売上入金情報のリスト.
	List []PlatformAccountListItem `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PlatformAccountListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PlatformAccountListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PlatformAccountListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PlatformAccountListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PlatformAccountListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PlatformAccountListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PlatformAccountListRetrievingResponse) GetList() []PlatformAccountListItem {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PlatformAccountListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PlatformAccountListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PlatformAccountListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PlatformAccountListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PlatformAccountListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PlatformAccountListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PlatformAccountListRetrievingResponse) SetList(val []PlatformAccountListItem) {
	s.List = val
}

func (*PlatformAccountListRetrievingResponse) retrievePlatformAccountListRes() {}

type PlatformAccountPropertiesID string

type PlatformAccountPropertiesTotalAmount int

// Ref: #/components/schemas/PlatformAccountSummary
type PlatformAccountSummary struct {
	// プラットフォーム利用料収入サマリーID.
	SummaryID                        OptInt                                     `json:"summary_id"`
	AccountID                        OptPropertiesAccountID                     `json:"account_id"`
	ShopID                           OptShopPropertiesID                        `json:"shop_id"`
	TenantShopID                     OptShopPropertiesID                        `json:"tenant_shop_id"`
	TenantShopName                   OptNilShopName                             `json:"tenant_shop_name"`
	DepositAmount                    OptNilPropertiesDepositAmount              `json:"deposit_amount"`
	AggregateTermStart               OptNilPropertiesAggregateTermStart         `json:"aggregate_term_start"`
	AggregateTermEnd                 OptNilPropertiesAggregateTermEnd           `json:"aggregate_term_end"`
	Count                            OptNilPropertiesCount                      `json:"count"`
	TotalAmount                      OptNilPlatformAccountPropertiesTotalAmount `json:"total_amount"`
	FeeAmount                        OptNilPropertiesFeeAmount                  `json:"fee_amount"`
	TaxableFeeAmount                 OptNilTaxableFeeAmount                     `json:"taxable_fee_amount"`
	NontaxableFeeAmount              OptNilNontaxableFeeAmount                  `json:"nontaxable_fee_amount"`
	TaxAmount                        OptNilTaxAmount                            `json:"tax_amount"`
	WebRegistrationFeeAmount         OptNilPropertiesWebRegistrationFeeAmount   `json:"web_registration_fee_amount"`
	PlatformWebRegistrationFeeAmount OptNilPlatformWebRegistrationFeeAmount     `json:"platform_web_registration_fee_amount"`
	PlatformFeeAmount                OptNilPropertiesPlatformFeeAmount          `json:"platform_fee_amount"`
	PlatformFeeTaxAmount             OptNilPropertiesPlatformFeeTaxAmount       `json:"platform_fee_tax_amount"`
	Created                          OptCreated                                 `json:"created"`
	Updated                          OptNilUpdated                              `json:"updated"`
	// テナントショップにおける、このサマリーの集計対象となった売上入金IDのリスト.
	TenantAccountProcessIDList []AccountPropertiesID `json:"tenant_account_process_id_list"`
}

// GetSummaryID returns the value of SummaryID.
func (s *PlatformAccountSummary) GetSummaryID() OptInt {
	return s.SummaryID
}

// GetAccountID returns the value of AccountID.
func (s *PlatformAccountSummary) GetAccountID() OptPropertiesAccountID {
	return s.AccountID
}

// GetShopID returns the value of ShopID.
func (s *PlatformAccountSummary) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetTenantShopID returns the value of TenantShopID.
func (s *PlatformAccountSummary) GetTenantShopID() OptShopPropertiesID {
	return s.TenantShopID
}

// GetTenantShopName returns the value of TenantShopName.
func (s *PlatformAccountSummary) GetTenantShopName() OptNilShopName {
	return s.TenantShopName
}

// GetDepositAmount returns the value of DepositAmount.
func (s *PlatformAccountSummary) GetDepositAmount() OptNilPropertiesDepositAmount {
	return s.DepositAmount
}

// GetAggregateTermStart returns the value of AggregateTermStart.
func (s *PlatformAccountSummary) GetAggregateTermStart() OptNilPropertiesAggregateTermStart {
	return s.AggregateTermStart
}

// GetAggregateTermEnd returns the value of AggregateTermEnd.
func (s *PlatformAccountSummary) GetAggregateTermEnd() OptNilPropertiesAggregateTermEnd {
	return s.AggregateTermEnd
}

// GetCount returns the value of Count.
func (s *PlatformAccountSummary) GetCount() OptNilPropertiesCount {
	return s.Count
}

// GetTotalAmount returns the value of TotalAmount.
func (s *PlatformAccountSummary) GetTotalAmount() OptNilPlatformAccountPropertiesTotalAmount {
	return s.TotalAmount
}

// GetFeeAmount returns the value of FeeAmount.
func (s *PlatformAccountSummary) GetFeeAmount() OptNilPropertiesFeeAmount {
	return s.FeeAmount
}

// GetTaxableFeeAmount returns the value of TaxableFeeAmount.
func (s *PlatformAccountSummary) GetTaxableFeeAmount() OptNilTaxableFeeAmount {
	return s.TaxableFeeAmount
}

// GetNontaxableFeeAmount returns the value of NontaxableFeeAmount.
func (s *PlatformAccountSummary) GetNontaxableFeeAmount() OptNilNontaxableFeeAmount {
	return s.NontaxableFeeAmount
}

// GetTaxAmount returns the value of TaxAmount.
func (s *PlatformAccountSummary) GetTaxAmount() OptNilTaxAmount {
	return s.TaxAmount
}

// GetWebRegistrationFeeAmount returns the value of WebRegistrationFeeAmount.
func (s *PlatformAccountSummary) GetWebRegistrationFeeAmount() OptNilPropertiesWebRegistrationFeeAmount {
	return s.WebRegistrationFeeAmount
}

// GetPlatformWebRegistrationFeeAmount returns the value of PlatformWebRegistrationFeeAmount.
func (s *PlatformAccountSummary) GetPlatformWebRegistrationFeeAmount() OptNilPlatformWebRegistrationFeeAmount {
	return s.PlatformWebRegistrationFeeAmount
}

// GetPlatformFeeAmount returns the value of PlatformFeeAmount.
func (s *PlatformAccountSummary) GetPlatformFeeAmount() OptNilPropertiesPlatformFeeAmount {
	return s.PlatformFeeAmount
}

// GetPlatformFeeTaxAmount returns the value of PlatformFeeTaxAmount.
func (s *PlatformAccountSummary) GetPlatformFeeTaxAmount() OptNilPropertiesPlatformFeeTaxAmount {
	return s.PlatformFeeTaxAmount
}

// GetCreated returns the value of Created.
func (s *PlatformAccountSummary) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *PlatformAccountSummary) GetUpdated() OptNilUpdated {
	return s.Updated
}

// GetTenantAccountProcessIDList returns the value of TenantAccountProcessIDList.
func (s *PlatformAccountSummary) GetTenantAccountProcessIDList() []AccountPropertiesID {
	return s.TenantAccountProcessIDList
}

// SetSummaryID sets the value of SummaryID.
func (s *PlatformAccountSummary) SetSummaryID(val OptInt) {
	s.SummaryID = val
}

// SetAccountID sets the value of AccountID.
func (s *PlatformAccountSummary) SetAccountID(val OptPropertiesAccountID) {
	s.AccountID = val
}

// SetShopID sets the value of ShopID.
func (s *PlatformAccountSummary) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetTenantShopID sets the value of TenantShopID.
func (s *PlatformAccountSummary) SetTenantShopID(val OptShopPropertiesID) {
	s.TenantShopID = val
}

// SetTenantShopName sets the value of TenantShopName.
func (s *PlatformAccountSummary) SetTenantShopName(val OptNilShopName) {
	s.TenantShopName = val
}

// SetDepositAmount sets the value of DepositAmount.
func (s *PlatformAccountSummary) SetDepositAmount(val OptNilPropertiesDepositAmount) {
	s.DepositAmount = val
}

// SetAggregateTermStart sets the value of AggregateTermStart.
func (s *PlatformAccountSummary) SetAggregateTermStart(val OptNilPropertiesAggregateTermStart) {
	s.AggregateTermStart = val
}

// SetAggregateTermEnd sets the value of AggregateTermEnd.
func (s *PlatformAccountSummary) SetAggregateTermEnd(val OptNilPropertiesAggregateTermEnd) {
	s.AggregateTermEnd = val
}

// SetCount sets the value of Count.
func (s *PlatformAccountSummary) SetCount(val OptNilPropertiesCount) {
	s.Count = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *PlatformAccountSummary) SetTotalAmount(val OptNilPlatformAccountPropertiesTotalAmount) {
	s.TotalAmount = val
}

// SetFeeAmount sets the value of FeeAmount.
func (s *PlatformAccountSummary) SetFeeAmount(val OptNilPropertiesFeeAmount) {
	s.FeeAmount = val
}

// SetTaxableFeeAmount sets the value of TaxableFeeAmount.
func (s *PlatformAccountSummary) SetTaxableFeeAmount(val OptNilTaxableFeeAmount) {
	s.TaxableFeeAmount = val
}

// SetNontaxableFeeAmount sets the value of NontaxableFeeAmount.
func (s *PlatformAccountSummary) SetNontaxableFeeAmount(val OptNilNontaxableFeeAmount) {
	s.NontaxableFeeAmount = val
}

// SetTaxAmount sets the value of TaxAmount.
func (s *PlatformAccountSummary) SetTaxAmount(val OptNilTaxAmount) {
	s.TaxAmount = val
}

// SetWebRegistrationFeeAmount sets the value of WebRegistrationFeeAmount.
func (s *PlatformAccountSummary) SetWebRegistrationFeeAmount(val OptNilPropertiesWebRegistrationFeeAmount) {
	s.WebRegistrationFeeAmount = val
}

// SetPlatformWebRegistrationFeeAmount sets the value of PlatformWebRegistrationFeeAmount.
func (s *PlatformAccountSummary) SetPlatformWebRegistrationFeeAmount(val OptNilPlatformWebRegistrationFeeAmount) {
	s.PlatformWebRegistrationFeeAmount = val
}

// SetPlatformFeeAmount sets the value of PlatformFeeAmount.
func (s *PlatformAccountSummary) SetPlatformFeeAmount(val OptNilPropertiesPlatformFeeAmount) {
	s.PlatformFeeAmount = val
}

// SetPlatformFeeTaxAmount sets the value of PlatformFeeTaxAmount.
func (s *PlatformAccountSummary) SetPlatformFeeTaxAmount(val OptNilPropertiesPlatformFeeTaxAmount) {
	s.PlatformFeeTaxAmount = val
}

// SetCreated sets the value of Created.
func (s *PlatformAccountSummary) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *PlatformAccountSummary) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// SetTenantAccountProcessIDList sets the value of TenantAccountProcessIDList.
func (s *PlatformAccountSummary) SetTenantAccountProcessIDList(val []AccountPropertiesID) {
	s.TenantAccountProcessIDList = val
}

// Merged schema.
// Ref: #/components/schemas/PlatformAccountSummary.ListRetrieving.Response
type PlatformAccountSummaryListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString `json:"link_previous"`
	// プラットフォーム利用料収入のサマリー情報のリスト.
	List []PlatformAccountSummary `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *PlatformAccountSummaryListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *PlatformAccountSummaryListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *PlatformAccountSummaryListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *PlatformAccountSummaryListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *PlatformAccountSummaryListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *PlatformAccountSummaryListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *PlatformAccountSummaryListRetrievingResponse) GetList() []PlatformAccountSummary {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *PlatformAccountSummaryListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *PlatformAccountSummaryListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *PlatformAccountSummaryListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *PlatformAccountSummaryListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *PlatformAccountSummaryListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *PlatformAccountSummaryListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *PlatformAccountSummaryListRetrievingResponse) SetList(val []PlatformAccountSummary) {
	s.List = val
}

func (*PlatformAccountSummaryListRetrievingResponse) retrievePlatformAccountSummaryListRes() {}

type PlatformFeeAmount int

type PlatformFeeTaxAmount int

type PlatformID string

type PlatformName string

type PlatformRate string

// Ref: #/components/schemas/PlatformRateConfig
type PlatformRateConfig struct {
	ID OptExaminationMasterId `json:"id"`
	// （標準）プラットフォーム利用料率。\
	// 個別のプラットフォーム利用料率が設定されていないテナントが`id`で指定した決済手段で決済を行うと、このプラットフォーム利用料率が適用されます。\
	// \
	// 特定のテナントに個別のプラットフォーム利用料を適用するには
	// テナントショップ 更新API を使用します。.
	PlatformRate OptNilFloat64 `json:"platform_rate"`
	// （標準）プラットフォーム利用料 最低料金。\
	// テナントが`id`で指定した決済手段で決済を行った際、`platform_rate`による利用料がこの最低料金を下回ると、この最低料金が適用されます。.
	FixedFee OptNilInt32 `json:"fixed_fee"`
	// （標準）プラットフォーム利用料 Web登録手数料。\
	// テナントにおいて、口座振替における振替用口座登録（Web登録）に成功した際に適用されるWeb登録手数料です。\
	// ※ 口座振替のみ.
	WebRegistrationFee OptNilFloat64 `json:"web_registration_fee"`
	// PayPay審査により決定されるPayPay商材カテゴリー。
	// - `1`: 物販／サービスショップ
	// - `2`: デジタルコンテンツショップ
	// ※ PayPayのみ.
	PaypayContentCategoryType OptNilPlatformRateConfigPaypayContentCategoryType `json:"paypay_content_category_type"`
}

// GetID returns the value of ID.
func (s *PlatformRateConfig) GetID() OptExaminationMasterId {
	return s.ID
}

// GetPlatformRate returns the value of PlatformRate.
func (s *PlatformRateConfig) GetPlatformRate() OptNilFloat64 {
	return s.PlatformRate
}

// GetFixedFee returns the value of FixedFee.
func (s *PlatformRateConfig) GetFixedFee() OptNilInt32 {
	return s.FixedFee
}

// GetWebRegistrationFee returns the value of WebRegistrationFee.
func (s *PlatformRateConfig) GetWebRegistrationFee() OptNilFloat64 {
	return s.WebRegistrationFee
}

// GetPaypayContentCategoryType returns the value of PaypayContentCategoryType.
func (s *PlatformRateConfig) GetPaypayContentCategoryType() OptNilPlatformRateConfigPaypayContentCategoryType {
	return s.PaypayContentCategoryType
}

// SetID sets the value of ID.
func (s *PlatformRateConfig) SetID(val OptExaminationMasterId) {
	s.ID = val
}

// SetPlatformRate sets the value of PlatformRate.
func (s *PlatformRateConfig) SetPlatformRate(val OptNilFloat64) {
	s.PlatformRate = val
}

// SetFixedFee sets the value of FixedFee.
func (s *PlatformRateConfig) SetFixedFee(val OptNilInt32) {
	s.FixedFee = val
}

// SetWebRegistrationFee sets the value of WebRegistrationFee.
func (s *PlatformRateConfig) SetWebRegistrationFee(val OptNilFloat64) {
	s.WebRegistrationFee = val
}

// SetPaypayContentCategoryType sets the value of PaypayContentCategoryType.
func (s *PlatformRateConfig) SetPaypayContentCategoryType(val OptNilPlatformRateConfigPaypayContentCategoryType) {
	s.PaypayContentCategoryType = val
}

// PayPay審査により決定されるPayPay商材カテゴリー。
// - `1`: 物販／サービスショップ
// - `2`: デジタルコンテンツショップ
// ※ PayPayのみ.
type PlatformRateConfigPaypayContentCategoryType int

const (
	PlatformRateConfigPaypayContentCategoryType1 PlatformRateConfigPaypayContentCategoryType = 1
	PlatformRateConfigPaypayContentCategoryType2 PlatformRateConfigPaypayContentCategoryType = 2
)

// AllValues returns all PlatformRateConfigPaypayContentCategoryType values.
func (PlatformRateConfigPaypayContentCategoryType) AllValues() []PlatformRateConfigPaypayContentCategoryType {
	return []PlatformRateConfigPaypayContentCategoryType{
		PlatformRateConfigPaypayContentCategoryType1,
		PlatformRateConfigPaypayContentCategoryType2,
	}
}

// Ref: #/components/schemas/PlatformShop.Updating.Request
type PlatformShopUpdatingRequest struct {
	ExaminationMasterID ExaminationMasterId      `json:"examination_master_id"`
	PlatformRate        OptNilPlatformRate       `json:"platform_rate"`
	FixedFee            OptNilFixedFee           `json:"fixed_fee"`
	WebRegistrationFee  OptNilWebRegistrationFee `json:"web_registration_fee"`
}

// GetExaminationMasterID returns the value of ExaminationMasterID.
func (s *PlatformShopUpdatingRequest) GetExaminationMasterID() ExaminationMasterId {
	return s.ExaminationMasterID
}

// GetPlatformRate returns the value of PlatformRate.
func (s *PlatformShopUpdatingRequest) GetPlatformRate() OptNilPlatformRate {
	return s.PlatformRate
}

// GetFixedFee returns the value of FixedFee.
func (s *PlatformShopUpdatingRequest) GetFixedFee() OptNilFixedFee {
	return s.FixedFee
}

// GetWebRegistrationFee returns the value of WebRegistrationFee.
func (s *PlatformShopUpdatingRequest) GetWebRegistrationFee() OptNilWebRegistrationFee {
	return s.WebRegistrationFee
}

// SetExaminationMasterID sets the value of ExaminationMasterID.
func (s *PlatformShopUpdatingRequest) SetExaminationMasterID(val ExaminationMasterId) {
	s.ExaminationMasterID = val
}

// SetPlatformRate sets the value of PlatformRate.
func (s *PlatformShopUpdatingRequest) SetPlatformRate(val OptNilPlatformRate) {
	s.PlatformRate = val
}

// SetFixedFee sets the value of FixedFee.
func (s *PlatformShopUpdatingRequest) SetFixedFee(val OptNilFixedFee) {
	s.FixedFee = val
}

// SetWebRegistrationFee sets the value of WebRegistrationFee.
func (s *PlatformShopUpdatingRequest) SetWebRegistrationFee(val OptNilWebRegistrationFee) {
	s.WebRegistrationFee = val
}

type PlatformWebRegistrationFeeAmount int

type PrepaidPoint bool

type ProcessDate string

type ProcessPlanDate string

type Product bool

type PropertiesAccountID int

type PropertiesAggregateTermEnd string

type PropertiesAggregateTermStart string

type PropertiesAmount int

type PropertiesCancelURL string

type PropertiesCount int

type PropertiesCustomerGroupID string

// デフォルトフラグ。\
// この決済手段が決済実行やサブスクリプション登録などで決済手段IDを指定しない場合に自動的に使用する決済手段かどうかを示すフラグです。\
// 顧客に対して、決済種別ごとに必ず1つのデフォルト決済手段が存在します。（決済手段が1つも登録されていない場合を除く）
// - `0`: デフォルト決済手段ではない
// - `1`: デフォルト決済手段.
// Ref: #/components/schemas/properties-default_flag
type PropertiesDefaultFlag string

const (
	PropertiesDefaultFlag0 PropertiesDefaultFlag = "0"
	PropertiesDefaultFlag1 PropertiesDefaultFlag = "1"
)

// AllValues returns all PropertiesDefaultFlag values.
func (PropertiesDefaultFlag) AllValues() []PropertiesDefaultFlag {
	return []PropertiesDefaultFlag{
		PropertiesDefaultFlag0,
		PropertiesDefaultFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PropertiesDefaultFlag) MarshalText() ([]byte, error) {
	switch s {
	case PropertiesDefaultFlag0:
		return []byte(s), nil
	case PropertiesDefaultFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PropertiesDefaultFlag) UnmarshalText(data []byte) error {
	switch PropertiesDefaultFlag(data) {
	case PropertiesDefaultFlag0:
		*s = PropertiesDefaultFlag0
		return nil
	case PropertiesDefaultFlag1:
		*s = PropertiesDefaultFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type PropertiesDepositAmount int

type PropertiesDepositDate string

type PropertiesExpire string

type PropertiesFeeAmount int

// カード登録メール 送信フラグ\
// リダイレクト型カード登録URLをfincodeからのメール送信機能で送信したかどうかを示します。
// - `0`：送信しなかった（デフォルト）
// - `1`：送信した.
// Ref: #/components/schemas/properties-guide_mail_send_flag
type PropertiesGuideMailSendFlag string

const (
	PropertiesGuideMailSendFlag0 PropertiesGuideMailSendFlag = "0"
	PropertiesGuideMailSendFlag1 PropertiesGuideMailSendFlag = "1"
)

// AllValues returns all PropertiesGuideMailSendFlag values.
func (PropertiesGuideMailSendFlag) AllValues() []PropertiesGuideMailSendFlag {
	return []PropertiesGuideMailSendFlag{
		PropertiesGuideMailSendFlag0,
		PropertiesGuideMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PropertiesGuideMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case PropertiesGuideMailSendFlag0:
		return []byte(s), nil
	case PropertiesGuideMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PropertiesGuideMailSendFlag) UnmarshalText(data []byte) error {
	switch PropertiesGuideMailSendFlag(data) {
	case PropertiesGuideMailSendFlag0:
		*s = PropertiesGuideMailSendFlag0
		return nil
	case PropertiesGuideMailSendFlag1:
		*s = PropertiesGuideMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type PropertiesID string

// 課金間隔数
// - `1`：月次／年次の課金
// - `2`：2ヶ月に1回の課金
// - `3`：3ヶ月に1回の課金
// - `6`：6ヶ月に1回の課金.
// Ref: #/components/schemas/properties-interval_count
type PropertiesIntervalCount float64

const (
	PropertiesIntervalCount1 PropertiesIntervalCount = 1
	PropertiesIntervalCount2 PropertiesIntervalCount = 2
	PropertiesIntervalCount3 PropertiesIntervalCount = 3
	PropertiesIntervalCount6 PropertiesIntervalCount = 6
)

// AllValues returns all PropertiesIntervalCount values.
func (PropertiesIntervalCount) AllValues() []PropertiesIntervalCount {
	return []PropertiesIntervalCount{
		PropertiesIntervalCount1,
		PropertiesIntervalCount2,
		PropertiesIntervalCount3,
		PropertiesIntervalCount6,
	}
}

// 課金間隔
// - `month`：月
// - `year`：年.
// Ref: #/components/schemas/properties-interval_pattern
type PropertiesIntervalPattern string

const (
	PropertiesIntervalPatternMonth PropertiesIntervalPattern = "month"
	PropertiesIntervalPatternYear  PropertiesIntervalPattern = "year"
)

// AllValues returns all PropertiesIntervalPattern values.
func (PropertiesIntervalPattern) AllValues() []PropertiesIntervalPattern {
	return []PropertiesIntervalPattern{
		PropertiesIntervalPatternMonth,
		PropertiesIntervalPatternYear,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PropertiesIntervalPattern) MarshalText() ([]byte, error) {
	switch s {
	case PropertiesIntervalPatternMonth:
		return []byte(s), nil
	case PropertiesIntervalPatternYear:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PropertiesIntervalPattern) UnmarshalText(data []byte) error {
	switch PropertiesIntervalPattern(data) {
	case PropertiesIntervalPatternMonth:
		*s = PropertiesIntervalPatternMonth
		return nil
	case PropertiesIntervalPatternYear:
		*s = PropertiesIntervalPatternYear
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type PropertiesMailCustomerName string

type PropertiesOrderDescription string

type PropertiesPaymentDate string

type PropertiesPaymentTermDay int32

type PropertiesPlatformFeeAmount int

type PropertiesPlatformFeeTaxAmount int

type PropertiesProcessDate string

type PropertiesReceiverMail string

type PropertiesScheduledDepositDate string

type PropertiesShopMailTemplateID string

type PropertiesShopName string

type PropertiesShopNameKana string

type PropertiesShopServiceName string

type PropertiesSuccessURL string

type PropertiesTax int

type PropertiesTotalAmount int64

type PropertiesURL url.URL

type PropertiesWebRegistrationFeeAmount int

type Provider []PaymentProvider

type PublicBearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *PublicBearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *PublicBearerAuth) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/3DS
type R3DS struct {
	Tds2TransResult       OptR3DS2TransactionResult       `json:"tds2_trans_result"`
	Tds2TransResultReason OptR3DS2TransactionResultReason `json:"tds2_trans_result_reason"`
}

// GetTds2TransResult returns the value of Tds2TransResult.
func (s *R3DS) GetTds2TransResult() OptR3DS2TransactionResult {
	return s.Tds2TransResult
}

// GetTds2TransResultReason returns the value of Tds2TransResultReason.
func (s *R3DS) GetTds2TransResultReason() OptR3DS2TransactionResultReason {
	return s.Tds2TransResultReason
}

// SetTds2TransResult sets the value of Tds2TransResult.
func (s *R3DS) SetTds2TransResult(val OptR3DS2TransactionResult) {
	s.Tds2TransResult = val
}

// SetTds2TransResultReason sets the value of Tds2TransResultReason.
func (s *R3DS) SetTds2TransResultReason(val OptR3DS2TransactionResultReason) {
	s.Tds2TransResultReason = val
}

func (*R3DS) confirm3DSecureAuthenticationRes() {}

// 3Dセキュア2.0認証処理 ステータス
// - `AUTHENTICATING`: 3Dセキュア認証処理中
// - `CHALLENGE`: チャレンジ認証の実施が必要
// - `AUTHENTICATED`: 3Dセキュア認証処理が完了.
// Ref: #/components/schemas/3DS2Status
type R3DS2Status string

const (
	R3DS2StatusAUTHENTICATING R3DS2Status = "AUTHENTICATING"
	R3DS2StatusCHALLENGE      R3DS2Status = "CHALLENGE"
	R3DS2StatusAUTHENTICATED  R3DS2Status = "AUTHENTICATED"
)

// AllValues returns all R3DS2Status values.
func (R3DS2Status) AllValues() []R3DS2Status {
	return []R3DS2Status{
		R3DS2StatusAUTHENTICATING,
		R3DS2StatusCHALLENGE,
		R3DS2StatusAUTHENTICATED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s R3DS2Status) MarshalText() ([]byte, error) {
	switch s {
	case R3DS2StatusAUTHENTICATING:
		return []byte(s), nil
	case R3DS2StatusCHALLENGE:
		return []byte(s), nil
	case R3DS2StatusAUTHENTICATED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *R3DS2Status) UnmarshalText(data []byte) error {
	switch R3DS2Status(data) {
	case R3DS2StatusAUTHENTICATING:
		*s = R3DS2StatusAUTHENTICATING
		return nil
	case R3DS2StatusCHALLENGE:
		*s = R3DS2StatusCHALLENGE
		return nil
	case R3DS2StatusAUTHENTICATED:
		*s = R3DS2StatusAUTHENTICATED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 3Dセキュア2.0認証処理 結果
// - `Y`: 認証に成功
// - `A`: 認証の試行が認められた<br><span class="smallText">認証 /
// 確認は行われなかったが、認証 /
// 確認を試行したことの証拠は提供されている</span>
// - `C`: 追加のチャレンジ認証が必要<br><span
// class="smallText">購入者による`challenge_url`上での追加認証が必要</span>
// - `N`: 取引拒否もしくは未認証・口座未確認
// - `R`: 認証・口座確認拒否<br><span
// class="smallText">カード発行会社が認証を拒否し、承認を試行しないよう要求している</span>
// - `U`: 認証・口座確認の実行失敗または技術的な問題.
// Ref: #/components/schemas/3DS2TransactionResult
type R3DS2TransactionResult string

const (
	R3DS2TransactionResultY R3DS2TransactionResult = "Y"
	R3DS2TransactionResultA R3DS2TransactionResult = "A"
	R3DS2TransactionResultC R3DS2TransactionResult = "C"
	R3DS2TransactionResultN R3DS2TransactionResult = "N"
	R3DS2TransactionResultU R3DS2TransactionResult = "U"
	R3DS2TransactionResultR R3DS2TransactionResult = "R"
)

// AllValues returns all R3DS2TransactionResult values.
func (R3DS2TransactionResult) AllValues() []R3DS2TransactionResult {
	return []R3DS2TransactionResult{
		R3DS2TransactionResultY,
		R3DS2TransactionResultA,
		R3DS2TransactionResultC,
		R3DS2TransactionResultN,
		R3DS2TransactionResultU,
		R3DS2TransactionResultR,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s R3DS2TransactionResult) MarshalText() ([]byte, error) {
	switch s {
	case R3DS2TransactionResultY:
		return []byte(s), nil
	case R3DS2TransactionResultA:
		return []byte(s), nil
	case R3DS2TransactionResultC:
		return []byte(s), nil
	case R3DS2TransactionResultN:
		return []byte(s), nil
	case R3DS2TransactionResultU:
		return []byte(s), nil
	case R3DS2TransactionResultR:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *R3DS2TransactionResult) UnmarshalText(data []byte) error {
	switch R3DS2TransactionResult(data) {
	case R3DS2TransactionResultY:
		*s = R3DS2TransactionResultY
		return nil
	case R3DS2TransactionResultA:
		*s = R3DS2TransactionResultA
		return nil
	case R3DS2TransactionResultC:
		*s = R3DS2TransactionResultC
		return nil
	case R3DS2TransactionResultN:
		*s = R3DS2TransactionResultN
		return nil
	case R3DS2TransactionResultU:
		*s = R3DS2TransactionResultU
		return nil
	case R3DS2TransactionResultR:
		*s = R3DS2TransactionResultR
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 3Dセキュア認証結果の理由コード\
// \
// 3Dセキュア認証2.0の結果（`tds2_trans_result`）の理由を示すコードです。
// - `01`: カード認証に失敗
// - `02`: 不明なデバイス
// - `03`: サポートされていないデバイス
// - `04`: 認証頻度の上限を超えた
// - `05`: 有効期限切れのカード
// - `06`: 無効なカード番号
// - `07`: 無効な取引
// - `08`: カードのレコードが存在しない
// - `09`: セキュリティ障害
// - `10`: 盗難カード
// - `11`: 不正の疑い
// - `12`: カード会員に取引が許可されていない
// - `13`: カード会員がサービスに登録されていない
// - `14`: 取引が3Dセキュア処理サービスでタイムアウトした
// - `15`: 信頼度が低い
// - `16`: 信頼度が中程度
// - `17`: 信頼度が高い
// - `18`: 信頼度が非常に高い
// - `19`: 3Dセキュア処理サービスの最大チャレンジを超える
// - `20`: 非決済取引はサポートされていません
// - `21`: 3RIトランザクションはサポートされていません
// - `22`: 3Dセキュア処理サービスの技術的な問題
// - `23`:
// 3Dセキュア処理サービスによってデカップルド認証が必要と判断されたが、3DSリクエスターからは要求されていない
// - `24`: 3DS Requestor Decoupled Max Timeを超過
// - `25`:
// デカップルド認証のためのカード会員を認証するのに十分な時間が与えられなかった
// - `26`: 認証は試行されたが、カード会員によって実行されなかった.
// Ref: #/components/schemas/3DS2TransactionResultReason
type R3DS2TransactionResultReason string

const (
	R3DS2TransactionResultReason01   R3DS2TransactionResultReason = "01"
	R3DS2TransactionResultReason02   R3DS2TransactionResultReason = "02"
	R3DS2TransactionResultReason03   R3DS2TransactionResultReason = "03"
	R3DS2TransactionResultReason04   R3DS2TransactionResultReason = "04"
	R3DS2TransactionResultReason05   R3DS2TransactionResultReason = "05"
	R3DS2TransactionResultReason06   R3DS2TransactionResultReason = "06"
	R3DS2TransactionResultReason07   R3DS2TransactionResultReason = "07"
	R3DS2TransactionResultReason08   R3DS2TransactionResultReason = "08"
	R3DS2TransactionResultReason09   R3DS2TransactionResultReason = "09"
	R3DS2TransactionResultReason11   R3DS2TransactionResultReason = "11"
	R3DS2TransactionResultReason12   R3DS2TransactionResultReason = "12"
	R3DS2TransactionResultReason13   R3DS2TransactionResultReason = "13"
	R3DS2TransactionResultReason14   R3DS2TransactionResultReason = "14"
	R3DS2TransactionResultReason15   R3DS2TransactionResultReason = "15"
	R3DS2TransactionResultReason16   R3DS2TransactionResultReason = "16"
	R3DS2TransactionResultReason17   R3DS2TransactionResultReason = "17"
	R3DS2TransactionResultReason18   R3DS2TransactionResultReason = "18"
	R3DS2TransactionResultReason19   R3DS2TransactionResultReason = "19"
	R3DS2TransactionResultReason20   R3DS2TransactionResultReason = "20"
	R3DS2TransactionResultReason21   R3DS2TransactionResultReason = "21"
	R3DS2TransactionResultReason22   R3DS2TransactionResultReason = "22"
	R3DS2TransactionResultReason23   R3DS2TransactionResultReason = "23"
	R3DS2TransactionResultReason24   R3DS2TransactionResultReason = "24"
	R3DS2TransactionResultReason25   R3DS2TransactionResultReason = "25"
	R3DS2TransactionResultReason26   R3DS2TransactionResultReason = "26"
	R3DS2TransactionResultReason8099 R3DS2TransactionResultReason = "80...99"
)

// AllValues returns all R3DS2TransactionResultReason values.
func (R3DS2TransactionResultReason) AllValues() []R3DS2TransactionResultReason {
	return []R3DS2TransactionResultReason{
		R3DS2TransactionResultReason01,
		R3DS2TransactionResultReason02,
		R3DS2TransactionResultReason03,
		R3DS2TransactionResultReason04,
		R3DS2TransactionResultReason05,
		R3DS2TransactionResultReason06,
		R3DS2TransactionResultReason07,
		R3DS2TransactionResultReason08,
		R3DS2TransactionResultReason09,
		R3DS2TransactionResultReason11,
		R3DS2TransactionResultReason12,
		R3DS2TransactionResultReason13,
		R3DS2TransactionResultReason14,
		R3DS2TransactionResultReason15,
		R3DS2TransactionResultReason16,
		R3DS2TransactionResultReason17,
		R3DS2TransactionResultReason18,
		R3DS2TransactionResultReason19,
		R3DS2TransactionResultReason20,
		R3DS2TransactionResultReason21,
		R3DS2TransactionResultReason22,
		R3DS2TransactionResultReason23,
		R3DS2TransactionResultReason24,
		R3DS2TransactionResultReason25,
		R3DS2TransactionResultReason26,
		R3DS2TransactionResultReason8099,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s R3DS2TransactionResultReason) MarshalText() ([]byte, error) {
	switch s {
	case R3DS2TransactionResultReason01:
		return []byte(s), nil
	case R3DS2TransactionResultReason02:
		return []byte(s), nil
	case R3DS2TransactionResultReason03:
		return []byte(s), nil
	case R3DS2TransactionResultReason04:
		return []byte(s), nil
	case R3DS2TransactionResultReason05:
		return []byte(s), nil
	case R3DS2TransactionResultReason06:
		return []byte(s), nil
	case R3DS2TransactionResultReason07:
		return []byte(s), nil
	case R3DS2TransactionResultReason08:
		return []byte(s), nil
	case R3DS2TransactionResultReason09:
		return []byte(s), nil
	case R3DS2TransactionResultReason11:
		return []byte(s), nil
	case R3DS2TransactionResultReason12:
		return []byte(s), nil
	case R3DS2TransactionResultReason13:
		return []byte(s), nil
	case R3DS2TransactionResultReason14:
		return []byte(s), nil
	case R3DS2TransactionResultReason15:
		return []byte(s), nil
	case R3DS2TransactionResultReason16:
		return []byte(s), nil
	case R3DS2TransactionResultReason17:
		return []byte(s), nil
	case R3DS2TransactionResultReason18:
		return []byte(s), nil
	case R3DS2TransactionResultReason19:
		return []byte(s), nil
	case R3DS2TransactionResultReason20:
		return []byte(s), nil
	case R3DS2TransactionResultReason21:
		return []byte(s), nil
	case R3DS2TransactionResultReason22:
		return []byte(s), nil
	case R3DS2TransactionResultReason23:
		return []byte(s), nil
	case R3DS2TransactionResultReason24:
		return []byte(s), nil
	case R3DS2TransactionResultReason25:
		return []byte(s), nil
	case R3DS2TransactionResultReason26:
		return []byte(s), nil
	case R3DS2TransactionResultReason8099:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *R3DS2TransactionResultReason) UnmarshalText(data []byte) error {
	switch R3DS2TransactionResultReason(data) {
	case R3DS2TransactionResultReason01:
		*s = R3DS2TransactionResultReason01
		return nil
	case R3DS2TransactionResultReason02:
		*s = R3DS2TransactionResultReason02
		return nil
	case R3DS2TransactionResultReason03:
		*s = R3DS2TransactionResultReason03
		return nil
	case R3DS2TransactionResultReason04:
		*s = R3DS2TransactionResultReason04
		return nil
	case R3DS2TransactionResultReason05:
		*s = R3DS2TransactionResultReason05
		return nil
	case R3DS2TransactionResultReason06:
		*s = R3DS2TransactionResultReason06
		return nil
	case R3DS2TransactionResultReason07:
		*s = R3DS2TransactionResultReason07
		return nil
	case R3DS2TransactionResultReason08:
		*s = R3DS2TransactionResultReason08
		return nil
	case R3DS2TransactionResultReason09:
		*s = R3DS2TransactionResultReason09
		return nil
	case R3DS2TransactionResultReason11:
		*s = R3DS2TransactionResultReason11
		return nil
	case R3DS2TransactionResultReason12:
		*s = R3DS2TransactionResultReason12
		return nil
	case R3DS2TransactionResultReason13:
		*s = R3DS2TransactionResultReason13
		return nil
	case R3DS2TransactionResultReason14:
		*s = R3DS2TransactionResultReason14
		return nil
	case R3DS2TransactionResultReason15:
		*s = R3DS2TransactionResultReason15
		return nil
	case R3DS2TransactionResultReason16:
		*s = R3DS2TransactionResultReason16
		return nil
	case R3DS2TransactionResultReason17:
		*s = R3DS2TransactionResultReason17
		return nil
	case R3DS2TransactionResultReason18:
		*s = R3DS2TransactionResultReason18
		return nil
	case R3DS2TransactionResultReason19:
		*s = R3DS2TransactionResultReason19
		return nil
	case R3DS2TransactionResultReason20:
		*s = R3DS2TransactionResultReason20
		return nil
	case R3DS2TransactionResultReason21:
		*s = R3DS2TransactionResultReason21
		return nil
	case R3DS2TransactionResultReason22:
		*s = R3DS2TransactionResultReason22
		return nil
	case R3DS2TransactionResultReason23:
		*s = R3DS2TransactionResultReason23
		return nil
	case R3DS2TransactionResultReason24:
		*s = R3DS2TransactionResultReason24
		return nil
	case R3DS2TransactionResultReason25:
		*s = R3DS2TransactionResultReason25
		return nil
	case R3DS2TransactionResultReason26:
		*s = R3DS2TransactionResultReason26
		return nil
	case R3DS2TransactionResultReason8099:
		*s = R3DS2TransactionResultReason8099
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/3DS.Authorizing.Request
type R3DSAuthorizingRequest struct {
	Param OptParam `json:"param"`
}

// GetParam returns the value of Param.
func (s *R3DSAuthorizingRequest) GetParam() OptParam {
	return s.Param
}

// SetParam sets the value of Param.
func (s *R3DSAuthorizingRequest) SetParam(val OptParam) {
	s.Param = val
}

// Merged schema.
// Ref: #/components/schemas/3DS.Authorizing.Response
type R3DSAuthorizingResponse struct {
	// 3Dセキュア2.0認証チャレンジURL\
	// \
	// 購入者による`acs_url`へのアクセス後、カード発行会社によって追加のチャレンジ認証が必要と判定された場合、このパラメータにURLが設定されて返却されます。.
	ChallengeURL          OptNilString                    `json:"challenge_url"`
	Tds2TransResult       OptR3DS2TransactionResult       `json:"tds2_trans_result"`
	Tds2TransResultReason OptR3DS2TransactionResultReason `json:"tds2_trans_result_reason"`
}

// GetChallengeURL returns the value of ChallengeURL.
func (s *R3DSAuthorizingResponse) GetChallengeURL() OptNilString {
	return s.ChallengeURL
}

// GetTds2TransResult returns the value of Tds2TransResult.
func (s *R3DSAuthorizingResponse) GetTds2TransResult() OptR3DS2TransactionResult {
	return s.Tds2TransResult
}

// GetTds2TransResultReason returns the value of Tds2TransResultReason.
func (s *R3DSAuthorizingResponse) GetTds2TransResultReason() OptR3DS2TransactionResultReason {
	return s.Tds2TransResultReason
}

// SetChallengeURL sets the value of ChallengeURL.
func (s *R3DSAuthorizingResponse) SetChallengeURL(val OptNilString) {
	s.ChallengeURL = val
}

// SetTds2TransResult sets the value of Tds2TransResult.
func (s *R3DSAuthorizingResponse) SetTds2TransResult(val OptR3DS2TransactionResult) {
	s.Tds2TransResult = val
}

// SetTds2TransResultReason sets the value of Tds2TransResultReason.
func (s *R3DSAuthorizingResponse) SetTds2TransResultReason(val OptR3DS2TransactionResultReason) {
	s.Tds2TransResultReason = val
}

func (*R3DSAuthorizingResponse) execute3DSecureAuthenticationRes() {}

// ReceiveWebhookOfApplePayPaymentBadRequest is response for ReceiveWebhookOfApplePayPayment operation.
type ReceiveWebhookOfApplePayPaymentBadRequest struct{}

func (*ReceiveWebhookOfApplePayPaymentBadRequest) receiveWebhookOfApplePayPaymentRes() {}

// ReceiveWebhookOfCardBadRequest is response for ReceiveWebhookOfCard operation.
type ReceiveWebhookOfCardBadRequest struct{}

func (*ReceiveWebhookOfCardBadRequest) receiveWebhookOfCardRes() {}

// ReceiveWebhookOfCardPaymentBadRequest is response for ReceiveWebhookOfCardPayment operation.
type ReceiveWebhookOfCardPaymentBadRequest struct{}

func (*ReceiveWebhookOfCardPaymentBadRequest) receiveWebhookOfCardPaymentRes() {}

// ReceiveWebhookOfCardPaymentBulkBatchBadRequest is response for ReceiveWebhookOfCardPaymentBulkBatch operation.
type ReceiveWebhookOfCardPaymentBulkBatchBadRequest struct{}

func (*ReceiveWebhookOfCardPaymentBulkBatchBadRequest) receiveWebhookOfCardPaymentBulkBatchRes() {}

// ReceiveWebhookOfCardRecurringBatchBadRequest is response for ReceiveWebhookOfCardRecurringBatch operation.
type ReceiveWebhookOfCardRecurringBatchBadRequest struct{}

func (*ReceiveWebhookOfCardRecurringBatchBadRequest) receiveWebhookOfCardRecurringBatchRes() {}

// ReceiveWebhookOfCardSubscriptionBadRequest is response for ReceiveWebhookOfCardSubscription operation.
type ReceiveWebhookOfCardSubscriptionBadRequest struct{}

func (*ReceiveWebhookOfCardSubscriptionBadRequest) receiveWebhookOfCardSubscriptionRes() {}

// ReceiveWebhookOfContractBadRequest is response for ReceiveWebhookOfContract operation.
type ReceiveWebhookOfContractBadRequest struct{}

func (*ReceiveWebhookOfContractBadRequest) receiveWebhookOfContractRes() {}

// ReceiveWebhookOfCustomerPaymentMethodBadRequest is response for ReceiveWebhookOfCustomerPaymentMethod operation.
type ReceiveWebhookOfCustomerPaymentMethodBadRequest struct{}

func (*ReceiveWebhookOfCustomerPaymentMethodBadRequest) receiveWebhookOfCustomerPaymentMethodRes() {}

// ReceiveWebhookOfDirectDebitPaymentBadRequest is response for ReceiveWebhookOfDirectDebitPayment operation.
type ReceiveWebhookOfDirectDebitPaymentBadRequest struct{}

func (*ReceiveWebhookOfDirectDebitPaymentBadRequest) receiveWebhookOfDirectDebitPaymentRes() {}

// ReceiveWebhookOfDirectDebitRecurringBatchBadRequest is response for ReceiveWebhookOfDirectDebitRecurringBatch operation.
type ReceiveWebhookOfDirectDebitRecurringBatchBadRequest struct{}

func (*ReceiveWebhookOfDirectDebitRecurringBatchBadRequest) receiveWebhookOfDirectDebitRecurringBatchRes() {
}

// ReceiveWebhookOfDirectDebitSubscriptionBadRequest is response for ReceiveWebhookOfDirectDebitSubscription operation.
type ReceiveWebhookOfDirectDebitSubscriptionBadRequest struct{}

func (*ReceiveWebhookOfDirectDebitSubscriptionBadRequest) receiveWebhookOfDirectDebitSubscriptionRes() {
}

// ReceiveWebhookOfKonbiniPaymentBadRequest is response for ReceiveWebhookOfKonbiniPayment operation.
type ReceiveWebhookOfKonbiniPaymentBadRequest struct{}

func (*ReceiveWebhookOfKonbiniPaymentBadRequest) receiveWebhookOfKonbiniPaymentRes() {}

// ReceiveWebhookOfPayPayPaymentBadRequest is response for ReceiveWebhookOfPayPayPayment operation.
type ReceiveWebhookOfPayPayPaymentBadRequest struct{}

func (*ReceiveWebhookOfPayPayPaymentBadRequest) receiveWebhookOfPayPayPaymentRes() {}

// ReceiveWebhookOfRegisteringCardPaymentBulkBadRequest is response for ReceiveWebhookOfRegisteringCardPaymentBulk operation.
type ReceiveWebhookOfRegisteringCardPaymentBulkBadRequest struct{}

func (*ReceiveWebhookOfRegisteringCardPaymentBulkBadRequest) receiveWebhookOfRegisteringCardPaymentBulkRes() {
}

type ReceiverMail string

// リダイレクト先種別\
// `redirect_url`の種別
// - `1`： Webページ／Webアプリケーション
// - `2`： ネイティブアプリ.
// Ref: #/components/schemas/redirect_type
type RedirectType string

const (
	RedirectType1 RedirectType = "1"
	RedirectType2 RedirectType = "2"
)

// AllValues returns all RedirectType values.
func (RedirectType) AllValues() []RedirectType {
	return []RedirectType{
		RedirectType1,
		RedirectType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RedirectType) MarshalText() ([]byte, error) {
	switch s {
	case RedirectType1:
		return []byte(s), nil
	case RedirectType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RedirectType) UnmarshalText(data []byte) error {
	switch RedirectType(data) {
	case RedirectType1:
		*s = RedirectType1
		return nil
	case RedirectType2:
		*s = RedirectType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type RedirectURL string

// Ref: #/components/schemas/RegistryCorporateInfo
type RegistryCorporateInfo struct {
	// 法人名.
	CompanyName OptNilString `json:"company_name"`
	// 法人名（カナ）.
	CompanyNameKana OptNilString `json:"company_name_kana"`
	// 法人種別（国税庁既定のコード定義に準拠）.
	CompanyKind OptNilString `json:"company_kind"`
	// 会社情報 郵便番号.
	CompanyPostalCode OptNilString `json:"company_postal_code"`
	// 会社情報 都道府県コード.
	CompanyPrefectureCode OptNilString `json:"company_prefecture_code"`
	// 会社情報 市区町村コード.
	CompanyCityCode OptNilString `json:"company_city_code"`
	// 会社情報 都道府県.
	CompanyPrefecture OptNilString `json:"company_prefecture"`
	// 会社情報 都道府県（カナ）.
	CompanyPrefectureKana OptNilString `json:"company_prefecture_kana"`
	// 会社情報 市区町村.
	CompanyCity OptNilString `json:"company_city"`
	// 会社情報 市区町村（カナ）.
	CompanyCityKana OptNilString `json:"company_city_kana"`
	// 会社情報 町域・丁目・番地.
	CompanyStreet OptNilString `json:"company_street"`
	// 会社情報 町域・丁目・番地（カナ）.
	CompanyStreetKana OptNilString `json:"company_street_kana"`
}

// GetCompanyName returns the value of CompanyName.
func (s *RegistryCorporateInfo) GetCompanyName() OptNilString {
	return s.CompanyName
}

// GetCompanyNameKana returns the value of CompanyNameKana.
func (s *RegistryCorporateInfo) GetCompanyNameKana() OptNilString {
	return s.CompanyNameKana
}

// GetCompanyKind returns the value of CompanyKind.
func (s *RegistryCorporateInfo) GetCompanyKind() OptNilString {
	return s.CompanyKind
}

// GetCompanyPostalCode returns the value of CompanyPostalCode.
func (s *RegistryCorporateInfo) GetCompanyPostalCode() OptNilString {
	return s.CompanyPostalCode
}

// GetCompanyPrefectureCode returns the value of CompanyPrefectureCode.
func (s *RegistryCorporateInfo) GetCompanyPrefectureCode() OptNilString {
	return s.CompanyPrefectureCode
}

// GetCompanyCityCode returns the value of CompanyCityCode.
func (s *RegistryCorporateInfo) GetCompanyCityCode() OptNilString {
	return s.CompanyCityCode
}

// GetCompanyPrefecture returns the value of CompanyPrefecture.
func (s *RegistryCorporateInfo) GetCompanyPrefecture() OptNilString {
	return s.CompanyPrefecture
}

// GetCompanyPrefectureKana returns the value of CompanyPrefectureKana.
func (s *RegistryCorporateInfo) GetCompanyPrefectureKana() OptNilString {
	return s.CompanyPrefectureKana
}

// GetCompanyCity returns the value of CompanyCity.
func (s *RegistryCorporateInfo) GetCompanyCity() OptNilString {
	return s.CompanyCity
}

// GetCompanyCityKana returns the value of CompanyCityKana.
func (s *RegistryCorporateInfo) GetCompanyCityKana() OptNilString {
	return s.CompanyCityKana
}

// GetCompanyStreet returns the value of CompanyStreet.
func (s *RegistryCorporateInfo) GetCompanyStreet() OptNilString {
	return s.CompanyStreet
}

// GetCompanyStreetKana returns the value of CompanyStreetKana.
func (s *RegistryCorporateInfo) GetCompanyStreetKana() OptNilString {
	return s.CompanyStreetKana
}

// SetCompanyName sets the value of CompanyName.
func (s *RegistryCorporateInfo) SetCompanyName(val OptNilString) {
	s.CompanyName = val
}

// SetCompanyNameKana sets the value of CompanyNameKana.
func (s *RegistryCorporateInfo) SetCompanyNameKana(val OptNilString) {
	s.CompanyNameKana = val
}

// SetCompanyKind sets the value of CompanyKind.
func (s *RegistryCorporateInfo) SetCompanyKind(val OptNilString) {
	s.CompanyKind = val
}

// SetCompanyPostalCode sets the value of CompanyPostalCode.
func (s *RegistryCorporateInfo) SetCompanyPostalCode(val OptNilString) {
	s.CompanyPostalCode = val
}

// SetCompanyPrefectureCode sets the value of CompanyPrefectureCode.
func (s *RegistryCorporateInfo) SetCompanyPrefectureCode(val OptNilString) {
	s.CompanyPrefectureCode = val
}

// SetCompanyCityCode sets the value of CompanyCityCode.
func (s *RegistryCorporateInfo) SetCompanyCityCode(val OptNilString) {
	s.CompanyCityCode = val
}

// SetCompanyPrefecture sets the value of CompanyPrefecture.
func (s *RegistryCorporateInfo) SetCompanyPrefecture(val OptNilString) {
	s.CompanyPrefecture = val
}

// SetCompanyPrefectureKana sets the value of CompanyPrefectureKana.
func (s *RegistryCorporateInfo) SetCompanyPrefectureKana(val OptNilString) {
	s.CompanyPrefectureKana = val
}

// SetCompanyCity sets the value of CompanyCity.
func (s *RegistryCorporateInfo) SetCompanyCity(val OptNilString) {
	s.CompanyCity = val
}

// SetCompanyCityKana sets the value of CompanyCityKana.
func (s *RegistryCorporateInfo) SetCompanyCityKana(val OptNilString) {
	s.CompanyCityKana = val
}

// SetCompanyStreet sets the value of CompanyStreet.
func (s *RegistryCorporateInfo) SetCompanyStreet(val OptNilString) {
	s.CompanyStreet = val
}

// SetCompanyStreetKana sets the value of CompanyStreetKana.
func (s *RegistryCorporateInfo) SetCompanyStreetKana(val OptNilString) {
	s.CompanyStreetKana = val
}

type Remarks string

type RepresentativeAddressChrome string

type RepresentativeAddressChromeKana string

type RepresentativeAddressMunicipality string

type RepresentativeAddressMunicipalityKana string

type RepresentativeAddressSection string

type RepresentativeAddressSectionKana string

type RepresentativeBirthday string

type RepresentativeFirstName string

type RepresentativeFirstNameKana string

// 代表者 性別
// - `0`: 男性
// - `1`: 女性.
// Ref: #/components/schemas/representative_gender
type RepresentativeGender int

const (
	RepresentativeGender0 RepresentativeGender = 0
	RepresentativeGender1 RepresentativeGender = 1
)

// AllValues returns all RepresentativeGender values.
func (RepresentativeGender) AllValues() []RepresentativeGender {
	return []RepresentativeGender{
		RepresentativeGender0,
		RepresentativeGender1,
	}
}

type RepresentativeLastName string

type RepresentativeLastNameKana string

type RepresentativePostalCode string

type RepresentativePrefecture string

type RepresentativePrefectureKana string

type RepresentativeTel string

type RequestAcceptEndDate string

// Merged schema.
type RetrieveAccountListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
	// 確定日（入金サイクルの締め日）を月単位で絞り込みます。\
	// 形式： `yyyy/MM`.
	Processed OptNilString `json:"processed"`
	// 入金ステータス\
	// カンマ区切りにすることで複数指定（OR検索）できます。
	// - `3001`: 金額確定前
	// - `3002`: 金額確定済み
	// - `3003`: 入金済み
	// - `3004`: 入金停止中
	// - `3005`: 入金エラー
	// - `3006`: 請求中
	// - `3007`: 請求エラー
	// - `3008`: 請求停止中
	// - `3009`: 支払済み
	// - `3010`: 本人確認書類未確認
	// - `3011`: 精算済み
	// - `3012`: 入金開始前
	// - `3013`: 契約不成立.
	Status OptDepositStatusCode `json:"status"`
	// 入金予定日の範囲指定（開始日）を指定します。\
	// この日付以降に入金が行われた売上入金情報を検索できます。\
	// 形式： `yyyy/MM/dd`.
	ScheduledFrom OptNilDate `json:"scheduled_from"`
	// 入金予定日の範囲指定（終了日）を指定します。\
	// この日付以前に入金が行われた売上入金情報を検索できます。\
	// 形式： `yyyy/MM/dd`.
	ScheduledTo OptNilDate `json:"scheduled_to"`
}

// GetPage returns the value of Page.
func (s *RetrieveAccountListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrieveAccountListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrieveAccountListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetProcessed returns the value of Processed.
func (s *RetrieveAccountListQuery) GetProcessed() OptNilString {
	return s.Processed
}

// GetStatus returns the value of Status.
func (s *RetrieveAccountListQuery) GetStatus() OptDepositStatusCode {
	return s.Status
}

// GetScheduledFrom returns the value of ScheduledFrom.
func (s *RetrieveAccountListQuery) GetScheduledFrom() OptNilDate {
	return s.ScheduledFrom
}

// GetScheduledTo returns the value of ScheduledTo.
func (s *RetrieveAccountListQuery) GetScheduledTo() OptNilDate {
	return s.ScheduledTo
}

// SetPage sets the value of Page.
func (s *RetrieveAccountListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrieveAccountListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrieveAccountListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetProcessed sets the value of Processed.
func (s *RetrieveAccountListQuery) SetProcessed(val OptNilString) {
	s.Processed = val
}

// SetStatus sets the value of Status.
func (s *RetrieveAccountListQuery) SetStatus(val OptDepositStatusCode) {
	s.Status = val
}

// SetScheduledFrom sets the value of ScheduledFrom.
func (s *RetrieveAccountListQuery) SetScheduledFrom(val OptNilDate) {
	s.ScheduledFrom = val
}

// SetScheduledTo sets the value of ScheduledTo.
func (s *RetrieveAccountListQuery) SetScheduledTo(val OptNilDate) {
	s.ScheduledTo = val
}

// Merged schema.
type RetrieveCustomerListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
	// 顧客ID.
	ID OptNilString `json:"id"`
	// 顧客名.
	Name OptNilString `json:"name"`
	// 顧客のメールアドレス.
	Email OptNilString `json:"email"`
	// 作成日の範囲指定 開始日\
	// この日付以降に作成された顧客情報を検索できます。\
	// 形式：`yyyy/MM/dd`.
	CreatedFrom OptNilString `json:"created_from"`
	// 作成日の範囲指定 終了日\
	// この日付以前に作成された顧客情報を検索できます。\
	// 形式：`yyyy/MM/dd`.
	CreatedTo OptNilString `json:"created_to"`
	Sort      OptSort      `json:"sort"`
}

// GetPage returns the value of Page.
func (s *RetrieveCustomerListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrieveCustomerListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrieveCustomerListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetID returns the value of ID.
func (s *RetrieveCustomerListQuery) GetID() OptNilString {
	return s.ID
}

// GetName returns the value of Name.
func (s *RetrieveCustomerListQuery) GetName() OptNilString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *RetrieveCustomerListQuery) GetEmail() OptNilString {
	return s.Email
}

// GetCreatedFrom returns the value of CreatedFrom.
func (s *RetrieveCustomerListQuery) GetCreatedFrom() OptNilString {
	return s.CreatedFrom
}

// GetCreatedTo returns the value of CreatedTo.
func (s *RetrieveCustomerListQuery) GetCreatedTo() OptNilString {
	return s.CreatedTo
}

// GetSort returns the value of Sort.
func (s *RetrieveCustomerListQuery) GetSort() OptSort {
	return s.Sort
}

// SetPage sets the value of Page.
func (s *RetrieveCustomerListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrieveCustomerListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrieveCustomerListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetID sets the value of ID.
func (s *RetrieveCustomerListQuery) SetID(val OptNilString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *RetrieveCustomerListQuery) SetName(val OptNilString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *RetrieveCustomerListQuery) SetEmail(val OptNilString) {
	s.Email = val
}

// SetCreatedFrom sets the value of CreatedFrom.
func (s *RetrieveCustomerListQuery) SetCreatedFrom(val OptNilString) {
	s.CreatedFrom = val
}

// SetCreatedTo sets the value of CreatedTo.
func (s *RetrieveCustomerListQuery) SetCreatedTo(val OptNilString) {
	s.CreatedTo = val
}

// SetSort sets the value of Sort.
func (s *RetrieveCustomerListQuery) SetSort(val OptSort) {
	s.Sort = val
}

// Merged schema.
type RetrievePaymentBulkDetailListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool                 `json:"count_only"`
	PayType   PaymentBulkPayType         `json:"pay_type"`
	OrderID   OptPaymentPropertiesID     `json:"order_id"`
	Status    OptPaymentBulkDetailStatus `json:"status"`
}

// GetPage returns the value of Page.
func (s *RetrievePaymentBulkDetailListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrievePaymentBulkDetailListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrievePaymentBulkDetailListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetPayType returns the value of PayType.
func (s *RetrievePaymentBulkDetailListQuery) GetPayType() PaymentBulkPayType {
	return s.PayType
}

// GetOrderID returns the value of OrderID.
func (s *RetrievePaymentBulkDetailListQuery) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetStatus returns the value of Status.
func (s *RetrievePaymentBulkDetailListQuery) GetStatus() OptPaymentBulkDetailStatus {
	return s.Status
}

// SetPage sets the value of Page.
func (s *RetrievePaymentBulkDetailListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrievePaymentBulkDetailListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrievePaymentBulkDetailListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetPayType sets the value of PayType.
func (s *RetrievePaymentBulkDetailListQuery) SetPayType(val PaymentBulkPayType) {
	s.PayType = val
}

// SetOrderID sets the value of OrderID.
func (s *RetrievePaymentBulkDetailListQuery) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetStatus sets the value of Status.
func (s *RetrievePaymentBulkDetailListQuery) SetStatus(val OptPaymentBulkDetailStatus) {
	s.Status = val
}

// Merged schema.
type RetrievePaymentBulkListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
	// 処理予定日の範囲指定（開始日）を指定します。\
	// 処理予定日（`process_plan_date`）を対象に範囲検索を行います。この日付以降に処理予定日が設定された一括決済情報を検索します。\
	// \
	// 形式： `yyyy/MM/dd`.
	ProcessPlanDateFrom OptNilString `json:"process_plan_date_from"`
	// 処理予定日の範囲指定（終了日）を指定します。\
	// 処理予定日（`process_plan_date`）を対象に範囲検索を行います。この日付以前に処理予定日が設定された一括決済情報を検索します。\
	// \
	// 形式： `yyyy/MM/dd`.
	ProcessPlanDateTo OptNilString          `json:"process_plan_date_to"`
	Status            OptPaymentBulkStatus  `json:"status"`
	PayType           OptPaymentBulkPayType `json:"pay_type"`
	FileName          OptFileName           `json:"file_name"`
	DeleteFlag        OptDeleteFlag         `json:"delete_flag"`
	// 作成日時の範囲指定（開始日）を指定します。\
	// 作成日時（`created`）を対象に範囲検索を行います。この日付以降に登録された一括決済情報を検索します。\
	// \
	// 形式： `yyyy/MM/dd`.
	CreatedFrom OptNilString `json:"created_from"`
	// 作成日時の範囲指定（終了日）を指定します。\
	// 作成日時（`created`）を対象に範囲検索を行います。この日付以前に登録された一括決済情報を検索します。\
	// \
	// 形式： `yyyy/MM/dd`.
	CreatedTo OptNilString `json:"created_to"`
	Sort      OptSort      `json:"sort"`
}

// GetPage returns the value of Page.
func (s *RetrievePaymentBulkListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrievePaymentBulkListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrievePaymentBulkListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetProcessPlanDateFrom returns the value of ProcessPlanDateFrom.
func (s *RetrievePaymentBulkListQuery) GetProcessPlanDateFrom() OptNilString {
	return s.ProcessPlanDateFrom
}

// GetProcessPlanDateTo returns the value of ProcessPlanDateTo.
func (s *RetrievePaymentBulkListQuery) GetProcessPlanDateTo() OptNilString {
	return s.ProcessPlanDateTo
}

// GetStatus returns the value of Status.
func (s *RetrievePaymentBulkListQuery) GetStatus() OptPaymentBulkStatus {
	return s.Status
}

// GetPayType returns the value of PayType.
func (s *RetrievePaymentBulkListQuery) GetPayType() OptPaymentBulkPayType {
	return s.PayType
}

// GetFileName returns the value of FileName.
func (s *RetrievePaymentBulkListQuery) GetFileName() OptFileName {
	return s.FileName
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *RetrievePaymentBulkListQuery) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// GetCreatedFrom returns the value of CreatedFrom.
func (s *RetrievePaymentBulkListQuery) GetCreatedFrom() OptNilString {
	return s.CreatedFrom
}

// GetCreatedTo returns the value of CreatedTo.
func (s *RetrievePaymentBulkListQuery) GetCreatedTo() OptNilString {
	return s.CreatedTo
}

// GetSort returns the value of Sort.
func (s *RetrievePaymentBulkListQuery) GetSort() OptSort {
	return s.Sort
}

// SetPage sets the value of Page.
func (s *RetrievePaymentBulkListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrievePaymentBulkListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrievePaymentBulkListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetProcessPlanDateFrom sets the value of ProcessPlanDateFrom.
func (s *RetrievePaymentBulkListQuery) SetProcessPlanDateFrom(val OptNilString) {
	s.ProcessPlanDateFrom = val
}

// SetProcessPlanDateTo sets the value of ProcessPlanDateTo.
func (s *RetrievePaymentBulkListQuery) SetProcessPlanDateTo(val OptNilString) {
	s.ProcessPlanDateTo = val
}

// SetStatus sets the value of Status.
func (s *RetrievePaymentBulkListQuery) SetStatus(val OptPaymentBulkStatus) {
	s.Status = val
}

// SetPayType sets the value of PayType.
func (s *RetrievePaymentBulkListQuery) SetPayType(val OptPaymentBulkPayType) {
	s.PayType = val
}

// SetFileName sets the value of FileName.
func (s *RetrievePaymentBulkListQuery) SetFileName(val OptFileName) {
	s.FileName = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *RetrievePaymentBulkListQuery) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

// SetCreatedFrom sets the value of CreatedFrom.
func (s *RetrievePaymentBulkListQuery) SetCreatedFrom(val OptNilString) {
	s.CreatedFrom = val
}

// SetCreatedTo sets the value of CreatedTo.
func (s *RetrievePaymentBulkListQuery) SetCreatedTo(val OptNilString) {
	s.CreatedTo = val
}

// SetSort sets the value of Sort.
func (s *RetrievePaymentBulkListQuery) SetSort(val OptSort) {
	s.Sort = val
}

// RetrievePaymentListOK represents sum type.
type RetrievePaymentListOK struct {
	Type                                     RetrievePaymentListOKType // switch on this field
	PaymentCardListRetrievingResponse        PaymentCardListRetrievingResponse
	PaymentApplePayListRetrievingResponse    PaymentApplePayListRetrievingResponse
	PaymentKonbiniListRetrievingResponse     PaymentKonbiniListRetrievingResponse
	PaymentPayPayListRetrievingResponse      PaymentPayPayListRetrievingResponse
	PaymentDirectDebitListRetrievingResponse PaymentDirectDebitListRetrievingResponse
}

// RetrievePaymentListOKType is oneOf type of RetrievePaymentListOK.
type RetrievePaymentListOKType string

// Possible values for RetrievePaymentListOKType.
const (
	PaymentCardListRetrievingResponseRetrievePaymentListOK        RetrievePaymentListOKType = "Card"
	PaymentApplePayListRetrievingResponseRetrievePaymentListOK    RetrievePaymentListOKType = "ApplePay"
	PaymentKonbiniListRetrievingResponseRetrievePaymentListOK     RetrievePaymentListOKType = "Konbini"
	PaymentPayPayListRetrievingResponseRetrievePaymentListOK      RetrievePaymentListOKType = "PayPay"
	PaymentDirectDebitListRetrievingResponseRetrievePaymentListOK RetrievePaymentListOKType = "DirectDebit"
)

// IsPaymentCardListRetrievingResponse reports whether RetrievePaymentListOK is PaymentCardListRetrievingResponse.
func (s RetrievePaymentListOK) IsPaymentCardListRetrievingResponse() bool {
	return s.Type == PaymentCardListRetrievingResponseRetrievePaymentListOK
}

// IsPaymentApplePayListRetrievingResponse reports whether RetrievePaymentListOK is PaymentApplePayListRetrievingResponse.
func (s RetrievePaymentListOK) IsPaymentApplePayListRetrievingResponse() bool {
	return s.Type == PaymentApplePayListRetrievingResponseRetrievePaymentListOK
}

// IsPaymentKonbiniListRetrievingResponse reports whether RetrievePaymentListOK is PaymentKonbiniListRetrievingResponse.
func (s RetrievePaymentListOK) IsPaymentKonbiniListRetrievingResponse() bool {
	return s.Type == PaymentKonbiniListRetrievingResponseRetrievePaymentListOK
}

// IsPaymentPayPayListRetrievingResponse reports whether RetrievePaymentListOK is PaymentPayPayListRetrievingResponse.
func (s RetrievePaymentListOK) IsPaymentPayPayListRetrievingResponse() bool {
	return s.Type == PaymentPayPayListRetrievingResponseRetrievePaymentListOK
}

// IsPaymentDirectDebitListRetrievingResponse reports whether RetrievePaymentListOK is PaymentDirectDebitListRetrievingResponse.
func (s RetrievePaymentListOK) IsPaymentDirectDebitListRetrievingResponse() bool {
	return s.Type == PaymentDirectDebitListRetrievingResponseRetrievePaymentListOK
}

// SetPaymentCardListRetrievingResponse sets RetrievePaymentListOK to PaymentCardListRetrievingResponse.
func (s *RetrievePaymentListOK) SetPaymentCardListRetrievingResponse(v PaymentCardListRetrievingResponse) {
	s.Type = PaymentCardListRetrievingResponseRetrievePaymentListOK
	s.PaymentCardListRetrievingResponse = v
}

// GetPaymentCardListRetrievingResponse returns PaymentCardListRetrievingResponse and true boolean if RetrievePaymentListOK is PaymentCardListRetrievingResponse.
func (s RetrievePaymentListOK) GetPaymentCardListRetrievingResponse() (v PaymentCardListRetrievingResponse, ok bool) {
	if !s.IsPaymentCardListRetrievingResponse() {
		return v, false
	}
	return s.PaymentCardListRetrievingResponse, true
}

// NewPaymentCardListRetrievingResponseRetrievePaymentListOK returns new RetrievePaymentListOK from PaymentCardListRetrievingResponse.
func NewPaymentCardListRetrievingResponseRetrievePaymentListOK(v PaymentCardListRetrievingResponse) RetrievePaymentListOK {
	var s RetrievePaymentListOK
	s.SetPaymentCardListRetrievingResponse(v)
	return s
}

// SetPaymentApplePayListRetrievingResponse sets RetrievePaymentListOK to PaymentApplePayListRetrievingResponse.
func (s *RetrievePaymentListOK) SetPaymentApplePayListRetrievingResponse(v PaymentApplePayListRetrievingResponse) {
	s.Type = PaymentApplePayListRetrievingResponseRetrievePaymentListOK
	s.PaymentApplePayListRetrievingResponse = v
}

// GetPaymentApplePayListRetrievingResponse returns PaymentApplePayListRetrievingResponse and true boolean if RetrievePaymentListOK is PaymentApplePayListRetrievingResponse.
func (s RetrievePaymentListOK) GetPaymentApplePayListRetrievingResponse() (v PaymentApplePayListRetrievingResponse, ok bool) {
	if !s.IsPaymentApplePayListRetrievingResponse() {
		return v, false
	}
	return s.PaymentApplePayListRetrievingResponse, true
}

// NewPaymentApplePayListRetrievingResponseRetrievePaymentListOK returns new RetrievePaymentListOK from PaymentApplePayListRetrievingResponse.
func NewPaymentApplePayListRetrievingResponseRetrievePaymentListOK(v PaymentApplePayListRetrievingResponse) RetrievePaymentListOK {
	var s RetrievePaymentListOK
	s.SetPaymentApplePayListRetrievingResponse(v)
	return s
}

// SetPaymentKonbiniListRetrievingResponse sets RetrievePaymentListOK to PaymentKonbiniListRetrievingResponse.
func (s *RetrievePaymentListOK) SetPaymentKonbiniListRetrievingResponse(v PaymentKonbiniListRetrievingResponse) {
	s.Type = PaymentKonbiniListRetrievingResponseRetrievePaymentListOK
	s.PaymentKonbiniListRetrievingResponse = v
}

// GetPaymentKonbiniListRetrievingResponse returns PaymentKonbiniListRetrievingResponse and true boolean if RetrievePaymentListOK is PaymentKonbiniListRetrievingResponse.
func (s RetrievePaymentListOK) GetPaymentKonbiniListRetrievingResponse() (v PaymentKonbiniListRetrievingResponse, ok bool) {
	if !s.IsPaymentKonbiniListRetrievingResponse() {
		return v, false
	}
	return s.PaymentKonbiniListRetrievingResponse, true
}

// NewPaymentKonbiniListRetrievingResponseRetrievePaymentListOK returns new RetrievePaymentListOK from PaymentKonbiniListRetrievingResponse.
func NewPaymentKonbiniListRetrievingResponseRetrievePaymentListOK(v PaymentKonbiniListRetrievingResponse) RetrievePaymentListOK {
	var s RetrievePaymentListOK
	s.SetPaymentKonbiniListRetrievingResponse(v)
	return s
}

// SetPaymentPayPayListRetrievingResponse sets RetrievePaymentListOK to PaymentPayPayListRetrievingResponse.
func (s *RetrievePaymentListOK) SetPaymentPayPayListRetrievingResponse(v PaymentPayPayListRetrievingResponse) {
	s.Type = PaymentPayPayListRetrievingResponseRetrievePaymentListOK
	s.PaymentPayPayListRetrievingResponse = v
}

// GetPaymentPayPayListRetrievingResponse returns PaymentPayPayListRetrievingResponse and true boolean if RetrievePaymentListOK is PaymentPayPayListRetrievingResponse.
func (s RetrievePaymentListOK) GetPaymentPayPayListRetrievingResponse() (v PaymentPayPayListRetrievingResponse, ok bool) {
	if !s.IsPaymentPayPayListRetrievingResponse() {
		return v, false
	}
	return s.PaymentPayPayListRetrievingResponse, true
}

// NewPaymentPayPayListRetrievingResponseRetrievePaymentListOK returns new RetrievePaymentListOK from PaymentPayPayListRetrievingResponse.
func NewPaymentPayPayListRetrievingResponseRetrievePaymentListOK(v PaymentPayPayListRetrievingResponse) RetrievePaymentListOK {
	var s RetrievePaymentListOK
	s.SetPaymentPayPayListRetrievingResponse(v)
	return s
}

// SetPaymentDirectDebitListRetrievingResponse sets RetrievePaymentListOK to PaymentDirectDebitListRetrievingResponse.
func (s *RetrievePaymentListOK) SetPaymentDirectDebitListRetrievingResponse(v PaymentDirectDebitListRetrievingResponse) {
	s.Type = PaymentDirectDebitListRetrievingResponseRetrievePaymentListOK
	s.PaymentDirectDebitListRetrievingResponse = v
}

// GetPaymentDirectDebitListRetrievingResponse returns PaymentDirectDebitListRetrievingResponse and true boolean if RetrievePaymentListOK is PaymentDirectDebitListRetrievingResponse.
func (s RetrievePaymentListOK) GetPaymentDirectDebitListRetrievingResponse() (v PaymentDirectDebitListRetrievingResponse, ok bool) {
	if !s.IsPaymentDirectDebitListRetrievingResponse() {
		return v, false
	}
	return s.PaymentDirectDebitListRetrievingResponse, true
}

// NewPaymentDirectDebitListRetrievingResponseRetrievePaymentListOK returns new RetrievePaymentListOK from PaymentDirectDebitListRetrievingResponse.
func NewPaymentDirectDebitListRetrievingResponseRetrievePaymentListOK(v PaymentDirectDebitListRetrievingResponse) RetrievePaymentListOK {
	var s RetrievePaymentListOK
	s.SetPaymentDirectDebitListRetrievingResponse(v)
	return s
}

func (*RetrievePaymentListOK) retrievePaymentListRes() {}

// RetrievePaymentListQuery represents sum type.
type RetrievePaymentListQuery struct {
	Type                                        RetrievePaymentListQueryType // switch on this field
	PaymentListRetrievingCardQueryParams        PaymentListRetrievingCardQueryParams
	PaymentListRetrievingApplePayQueryParams    PaymentListRetrievingApplePayQueryParams
	PaymentListRetrievingKonbiniQueryParams     PaymentListRetrievingKonbiniQueryParams
	PaymentListRetrievingPayPayQueryParams      PaymentListRetrievingPayPayQueryParams
	PaymentListRetrievingDirectDebitQueryParams PaymentListRetrievingDirectDebitQueryParams
}

// RetrievePaymentListQueryType is oneOf type of RetrievePaymentListQuery.
type RetrievePaymentListQueryType string

// Possible values for RetrievePaymentListQueryType.
const (
	PaymentListRetrievingCardQueryParamsRetrievePaymentListQuery        RetrievePaymentListQueryType = "Card"
	PaymentListRetrievingApplePayQueryParamsRetrievePaymentListQuery    RetrievePaymentListQueryType = "ApplePay"
	PaymentListRetrievingKonbiniQueryParamsRetrievePaymentListQuery     RetrievePaymentListQueryType = "Konbini"
	PaymentListRetrievingPayPayQueryParamsRetrievePaymentListQuery      RetrievePaymentListQueryType = "PayPay"
	PaymentListRetrievingDirectDebitQueryParamsRetrievePaymentListQuery RetrievePaymentListQueryType = "DirectDebit"
)

// IsPaymentListRetrievingCardQueryParams reports whether RetrievePaymentListQuery is PaymentListRetrievingCardQueryParams.
func (s RetrievePaymentListQuery) IsPaymentListRetrievingCardQueryParams() bool {
	return s.Type == PaymentListRetrievingCardQueryParamsRetrievePaymentListQuery
}

// IsPaymentListRetrievingApplePayQueryParams reports whether RetrievePaymentListQuery is PaymentListRetrievingApplePayQueryParams.
func (s RetrievePaymentListQuery) IsPaymentListRetrievingApplePayQueryParams() bool {
	return s.Type == PaymentListRetrievingApplePayQueryParamsRetrievePaymentListQuery
}

// IsPaymentListRetrievingKonbiniQueryParams reports whether RetrievePaymentListQuery is PaymentListRetrievingKonbiniQueryParams.
func (s RetrievePaymentListQuery) IsPaymentListRetrievingKonbiniQueryParams() bool {
	return s.Type == PaymentListRetrievingKonbiniQueryParamsRetrievePaymentListQuery
}

// IsPaymentListRetrievingPayPayQueryParams reports whether RetrievePaymentListQuery is PaymentListRetrievingPayPayQueryParams.
func (s RetrievePaymentListQuery) IsPaymentListRetrievingPayPayQueryParams() bool {
	return s.Type == PaymentListRetrievingPayPayQueryParamsRetrievePaymentListQuery
}

// IsPaymentListRetrievingDirectDebitQueryParams reports whether RetrievePaymentListQuery is PaymentListRetrievingDirectDebitQueryParams.
func (s RetrievePaymentListQuery) IsPaymentListRetrievingDirectDebitQueryParams() bool {
	return s.Type == PaymentListRetrievingDirectDebitQueryParamsRetrievePaymentListQuery
}

// SetPaymentListRetrievingCardQueryParams sets RetrievePaymentListQuery to PaymentListRetrievingCardQueryParams.
func (s *RetrievePaymentListQuery) SetPaymentListRetrievingCardQueryParams(v PaymentListRetrievingCardQueryParams) {
	s.Type = PaymentListRetrievingCardQueryParamsRetrievePaymentListQuery
	s.PaymentListRetrievingCardQueryParams = v
}

// GetPaymentListRetrievingCardQueryParams returns PaymentListRetrievingCardQueryParams and true boolean if RetrievePaymentListQuery is PaymentListRetrievingCardQueryParams.
func (s RetrievePaymentListQuery) GetPaymentListRetrievingCardQueryParams() (v PaymentListRetrievingCardQueryParams, ok bool) {
	if !s.IsPaymentListRetrievingCardQueryParams() {
		return v, false
	}
	return s.PaymentListRetrievingCardQueryParams, true
}

// NewPaymentListRetrievingCardQueryParamsRetrievePaymentListQuery returns new RetrievePaymentListQuery from PaymentListRetrievingCardQueryParams.
func NewPaymentListRetrievingCardQueryParamsRetrievePaymentListQuery(v PaymentListRetrievingCardQueryParams) RetrievePaymentListQuery {
	var s RetrievePaymentListQuery
	s.SetPaymentListRetrievingCardQueryParams(v)
	return s
}

// SetPaymentListRetrievingApplePayQueryParams sets RetrievePaymentListQuery to PaymentListRetrievingApplePayQueryParams.
func (s *RetrievePaymentListQuery) SetPaymentListRetrievingApplePayQueryParams(v PaymentListRetrievingApplePayQueryParams) {
	s.Type = PaymentListRetrievingApplePayQueryParamsRetrievePaymentListQuery
	s.PaymentListRetrievingApplePayQueryParams = v
}

// GetPaymentListRetrievingApplePayQueryParams returns PaymentListRetrievingApplePayQueryParams and true boolean if RetrievePaymentListQuery is PaymentListRetrievingApplePayQueryParams.
func (s RetrievePaymentListQuery) GetPaymentListRetrievingApplePayQueryParams() (v PaymentListRetrievingApplePayQueryParams, ok bool) {
	if !s.IsPaymentListRetrievingApplePayQueryParams() {
		return v, false
	}
	return s.PaymentListRetrievingApplePayQueryParams, true
}

// NewPaymentListRetrievingApplePayQueryParamsRetrievePaymentListQuery returns new RetrievePaymentListQuery from PaymentListRetrievingApplePayQueryParams.
func NewPaymentListRetrievingApplePayQueryParamsRetrievePaymentListQuery(v PaymentListRetrievingApplePayQueryParams) RetrievePaymentListQuery {
	var s RetrievePaymentListQuery
	s.SetPaymentListRetrievingApplePayQueryParams(v)
	return s
}

// SetPaymentListRetrievingKonbiniQueryParams sets RetrievePaymentListQuery to PaymentListRetrievingKonbiniQueryParams.
func (s *RetrievePaymentListQuery) SetPaymentListRetrievingKonbiniQueryParams(v PaymentListRetrievingKonbiniQueryParams) {
	s.Type = PaymentListRetrievingKonbiniQueryParamsRetrievePaymentListQuery
	s.PaymentListRetrievingKonbiniQueryParams = v
}

// GetPaymentListRetrievingKonbiniQueryParams returns PaymentListRetrievingKonbiniQueryParams and true boolean if RetrievePaymentListQuery is PaymentListRetrievingKonbiniQueryParams.
func (s RetrievePaymentListQuery) GetPaymentListRetrievingKonbiniQueryParams() (v PaymentListRetrievingKonbiniQueryParams, ok bool) {
	if !s.IsPaymentListRetrievingKonbiniQueryParams() {
		return v, false
	}
	return s.PaymentListRetrievingKonbiniQueryParams, true
}

// NewPaymentListRetrievingKonbiniQueryParamsRetrievePaymentListQuery returns new RetrievePaymentListQuery from PaymentListRetrievingKonbiniQueryParams.
func NewPaymentListRetrievingKonbiniQueryParamsRetrievePaymentListQuery(v PaymentListRetrievingKonbiniQueryParams) RetrievePaymentListQuery {
	var s RetrievePaymentListQuery
	s.SetPaymentListRetrievingKonbiniQueryParams(v)
	return s
}

// SetPaymentListRetrievingPayPayQueryParams sets RetrievePaymentListQuery to PaymentListRetrievingPayPayQueryParams.
func (s *RetrievePaymentListQuery) SetPaymentListRetrievingPayPayQueryParams(v PaymentListRetrievingPayPayQueryParams) {
	s.Type = PaymentListRetrievingPayPayQueryParamsRetrievePaymentListQuery
	s.PaymentListRetrievingPayPayQueryParams = v
}

// GetPaymentListRetrievingPayPayQueryParams returns PaymentListRetrievingPayPayQueryParams and true boolean if RetrievePaymentListQuery is PaymentListRetrievingPayPayQueryParams.
func (s RetrievePaymentListQuery) GetPaymentListRetrievingPayPayQueryParams() (v PaymentListRetrievingPayPayQueryParams, ok bool) {
	if !s.IsPaymentListRetrievingPayPayQueryParams() {
		return v, false
	}
	return s.PaymentListRetrievingPayPayQueryParams, true
}

// NewPaymentListRetrievingPayPayQueryParamsRetrievePaymentListQuery returns new RetrievePaymentListQuery from PaymentListRetrievingPayPayQueryParams.
func NewPaymentListRetrievingPayPayQueryParamsRetrievePaymentListQuery(v PaymentListRetrievingPayPayQueryParams) RetrievePaymentListQuery {
	var s RetrievePaymentListQuery
	s.SetPaymentListRetrievingPayPayQueryParams(v)
	return s
}

// SetPaymentListRetrievingDirectDebitQueryParams sets RetrievePaymentListQuery to PaymentListRetrievingDirectDebitQueryParams.
func (s *RetrievePaymentListQuery) SetPaymentListRetrievingDirectDebitQueryParams(v PaymentListRetrievingDirectDebitQueryParams) {
	s.Type = PaymentListRetrievingDirectDebitQueryParamsRetrievePaymentListQuery
	s.PaymentListRetrievingDirectDebitQueryParams = v
}

// GetPaymentListRetrievingDirectDebitQueryParams returns PaymentListRetrievingDirectDebitQueryParams and true boolean if RetrievePaymentListQuery is PaymentListRetrievingDirectDebitQueryParams.
func (s RetrievePaymentListQuery) GetPaymentListRetrievingDirectDebitQueryParams() (v PaymentListRetrievingDirectDebitQueryParams, ok bool) {
	if !s.IsPaymentListRetrievingDirectDebitQueryParams() {
		return v, false
	}
	return s.PaymentListRetrievingDirectDebitQueryParams, true
}

// NewPaymentListRetrievingDirectDebitQueryParamsRetrievePaymentListQuery returns new RetrievePaymentListQuery from PaymentListRetrievingDirectDebitQueryParams.
func NewPaymentListRetrievingDirectDebitQueryParamsRetrievePaymentListQuery(v PaymentListRetrievingDirectDebitQueryParams) RetrievePaymentListQuery {
	var s RetrievePaymentListQuery
	s.SetPaymentListRetrievingDirectDebitQueryParams(v)
	return s
}

// RetrievePaymentOK represents sum type.
type RetrievePaymentOK struct {
	Type                                 RetrievePaymentOKType // switch on this field
	PaymentCardRetrievingResponse        PaymentCardRetrievingResponse
	PaymentApplePayRetrievingResponse    PaymentApplePayRetrievingResponse
	PaymentKonbiniRetrievingResponse     PaymentKonbiniRetrievingResponse
	PaymentPayPayRetrievingResponse      PaymentPayPayRetrievingResponse
	PaymentDirectDebitRetrievingResponse PaymentDirectDebitRetrievingResponse
}

// RetrievePaymentOKType is oneOf type of RetrievePaymentOK.
type RetrievePaymentOKType string

// Possible values for RetrievePaymentOKType.
const (
	PaymentCardRetrievingResponseRetrievePaymentOK        RetrievePaymentOKType = "PaymentCardRetrievingResponse"
	PaymentApplePayRetrievingResponseRetrievePaymentOK    RetrievePaymentOKType = "PaymentApplePayRetrievingResponse"
	PaymentKonbiniRetrievingResponseRetrievePaymentOK     RetrievePaymentOKType = "PaymentKonbiniRetrievingResponse"
	PaymentPayPayRetrievingResponseRetrievePaymentOK      RetrievePaymentOKType = "PaymentPayPayRetrievingResponse"
	PaymentDirectDebitRetrievingResponseRetrievePaymentOK RetrievePaymentOKType = "PaymentDirectDebitRetrievingResponse"
)

// IsPaymentCardRetrievingResponse reports whether RetrievePaymentOK is PaymentCardRetrievingResponse.
func (s RetrievePaymentOK) IsPaymentCardRetrievingResponse() bool {
	return s.Type == PaymentCardRetrievingResponseRetrievePaymentOK
}

// IsPaymentApplePayRetrievingResponse reports whether RetrievePaymentOK is PaymentApplePayRetrievingResponse.
func (s RetrievePaymentOK) IsPaymentApplePayRetrievingResponse() bool {
	return s.Type == PaymentApplePayRetrievingResponseRetrievePaymentOK
}

// IsPaymentKonbiniRetrievingResponse reports whether RetrievePaymentOK is PaymentKonbiniRetrievingResponse.
func (s RetrievePaymentOK) IsPaymentKonbiniRetrievingResponse() bool {
	return s.Type == PaymentKonbiniRetrievingResponseRetrievePaymentOK
}

// IsPaymentPayPayRetrievingResponse reports whether RetrievePaymentOK is PaymentPayPayRetrievingResponse.
func (s RetrievePaymentOK) IsPaymentPayPayRetrievingResponse() bool {
	return s.Type == PaymentPayPayRetrievingResponseRetrievePaymentOK
}

// IsPaymentDirectDebitRetrievingResponse reports whether RetrievePaymentOK is PaymentDirectDebitRetrievingResponse.
func (s RetrievePaymentOK) IsPaymentDirectDebitRetrievingResponse() bool {
	return s.Type == PaymentDirectDebitRetrievingResponseRetrievePaymentOK
}

// SetPaymentCardRetrievingResponse sets RetrievePaymentOK to PaymentCardRetrievingResponse.
func (s *RetrievePaymentOK) SetPaymentCardRetrievingResponse(v PaymentCardRetrievingResponse) {
	s.Type = PaymentCardRetrievingResponseRetrievePaymentOK
	s.PaymentCardRetrievingResponse = v
}

// GetPaymentCardRetrievingResponse returns PaymentCardRetrievingResponse and true boolean if RetrievePaymentOK is PaymentCardRetrievingResponse.
func (s RetrievePaymentOK) GetPaymentCardRetrievingResponse() (v PaymentCardRetrievingResponse, ok bool) {
	if !s.IsPaymentCardRetrievingResponse() {
		return v, false
	}
	return s.PaymentCardRetrievingResponse, true
}

// NewPaymentCardRetrievingResponseRetrievePaymentOK returns new RetrievePaymentOK from PaymentCardRetrievingResponse.
func NewPaymentCardRetrievingResponseRetrievePaymentOK(v PaymentCardRetrievingResponse) RetrievePaymentOK {
	var s RetrievePaymentOK
	s.SetPaymentCardRetrievingResponse(v)
	return s
}

// SetPaymentApplePayRetrievingResponse sets RetrievePaymentOK to PaymentApplePayRetrievingResponse.
func (s *RetrievePaymentOK) SetPaymentApplePayRetrievingResponse(v PaymentApplePayRetrievingResponse) {
	s.Type = PaymentApplePayRetrievingResponseRetrievePaymentOK
	s.PaymentApplePayRetrievingResponse = v
}

// GetPaymentApplePayRetrievingResponse returns PaymentApplePayRetrievingResponse and true boolean if RetrievePaymentOK is PaymentApplePayRetrievingResponse.
func (s RetrievePaymentOK) GetPaymentApplePayRetrievingResponse() (v PaymentApplePayRetrievingResponse, ok bool) {
	if !s.IsPaymentApplePayRetrievingResponse() {
		return v, false
	}
	return s.PaymentApplePayRetrievingResponse, true
}

// NewPaymentApplePayRetrievingResponseRetrievePaymentOK returns new RetrievePaymentOK from PaymentApplePayRetrievingResponse.
func NewPaymentApplePayRetrievingResponseRetrievePaymentOK(v PaymentApplePayRetrievingResponse) RetrievePaymentOK {
	var s RetrievePaymentOK
	s.SetPaymentApplePayRetrievingResponse(v)
	return s
}

// SetPaymentKonbiniRetrievingResponse sets RetrievePaymentOK to PaymentKonbiniRetrievingResponse.
func (s *RetrievePaymentOK) SetPaymentKonbiniRetrievingResponse(v PaymentKonbiniRetrievingResponse) {
	s.Type = PaymentKonbiniRetrievingResponseRetrievePaymentOK
	s.PaymentKonbiniRetrievingResponse = v
}

// GetPaymentKonbiniRetrievingResponse returns PaymentKonbiniRetrievingResponse and true boolean if RetrievePaymentOK is PaymentKonbiniRetrievingResponse.
func (s RetrievePaymentOK) GetPaymentKonbiniRetrievingResponse() (v PaymentKonbiniRetrievingResponse, ok bool) {
	if !s.IsPaymentKonbiniRetrievingResponse() {
		return v, false
	}
	return s.PaymentKonbiniRetrievingResponse, true
}

// NewPaymentKonbiniRetrievingResponseRetrievePaymentOK returns new RetrievePaymentOK from PaymentKonbiniRetrievingResponse.
func NewPaymentKonbiniRetrievingResponseRetrievePaymentOK(v PaymentKonbiniRetrievingResponse) RetrievePaymentOK {
	var s RetrievePaymentOK
	s.SetPaymentKonbiniRetrievingResponse(v)
	return s
}

// SetPaymentPayPayRetrievingResponse sets RetrievePaymentOK to PaymentPayPayRetrievingResponse.
func (s *RetrievePaymentOK) SetPaymentPayPayRetrievingResponse(v PaymentPayPayRetrievingResponse) {
	s.Type = PaymentPayPayRetrievingResponseRetrievePaymentOK
	s.PaymentPayPayRetrievingResponse = v
}

// GetPaymentPayPayRetrievingResponse returns PaymentPayPayRetrievingResponse and true boolean if RetrievePaymentOK is PaymentPayPayRetrievingResponse.
func (s RetrievePaymentOK) GetPaymentPayPayRetrievingResponse() (v PaymentPayPayRetrievingResponse, ok bool) {
	if !s.IsPaymentPayPayRetrievingResponse() {
		return v, false
	}
	return s.PaymentPayPayRetrievingResponse, true
}

// NewPaymentPayPayRetrievingResponseRetrievePaymentOK returns new RetrievePaymentOK from PaymentPayPayRetrievingResponse.
func NewPaymentPayPayRetrievingResponseRetrievePaymentOK(v PaymentPayPayRetrievingResponse) RetrievePaymentOK {
	var s RetrievePaymentOK
	s.SetPaymentPayPayRetrievingResponse(v)
	return s
}

// SetPaymentDirectDebitRetrievingResponse sets RetrievePaymentOK to PaymentDirectDebitRetrievingResponse.
func (s *RetrievePaymentOK) SetPaymentDirectDebitRetrievingResponse(v PaymentDirectDebitRetrievingResponse) {
	s.Type = PaymentDirectDebitRetrievingResponseRetrievePaymentOK
	s.PaymentDirectDebitRetrievingResponse = v
}

// GetPaymentDirectDebitRetrievingResponse returns PaymentDirectDebitRetrievingResponse and true boolean if RetrievePaymentOK is PaymentDirectDebitRetrievingResponse.
func (s RetrievePaymentOK) GetPaymentDirectDebitRetrievingResponse() (v PaymentDirectDebitRetrievingResponse, ok bool) {
	if !s.IsPaymentDirectDebitRetrievingResponse() {
		return v, false
	}
	return s.PaymentDirectDebitRetrievingResponse, true
}

// NewPaymentDirectDebitRetrievingResponseRetrievePaymentOK returns new RetrievePaymentOK from PaymentDirectDebitRetrievingResponse.
func NewPaymentDirectDebitRetrievingResponseRetrievePaymentOK(v PaymentDirectDebitRetrievingResponse) RetrievePaymentOK {
	var s RetrievePaymentOK
	s.SetPaymentDirectDebitRetrievingResponse(v)
	return s
}

func (*RetrievePaymentOK) retrievePaymentRes() {}

// Merged schema.
type RetrievePlanListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
	// 合計金額（始値）\
	// 利用金額と税送料の合計額（`total_amount`）を対象に範囲検索を行います。この値以上の合計金額を持つプラン情報を取得します。.
	TotalAmountMin OptInt64 `json:"total_amount_min"`
	// 合計金額（終値）\
	// 利用金額と税送料の合計額（`total_amount`）を対象に範囲検索を行います。この値以下の合計金額を持つプラン情報を取得します。.
	TotalAmountMax OptInt64 `json:"total_amount_max"`
	// 課金間隔
	// - `month`: 月
	// - `year`: 年.
	IntervalPattern OptRetrievePlanListQueryIntervalPattern `json:"interval_pattern"`
	// 更新日時（始値）\
	// 更新日時（`updated`）を対象に範囲検索を行います。この日付以降に更新された決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	UpdateDateFrom OptString `json:"update_date_from"`
	// 更新日時（終値）\
	// 更新日時（`updated`）を対象に範囲検索を行います。この日付以前に更新された決済情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	UpdateDateTo OptString `json:"update_date_to"`
	// プラン名\
	// `plan_name`に対する部分一致検索を行います。.
	PlanName OptNilString `json:"plan_name"`
	// 削除済みフラグ.
	DeleteFlag OptNilRetrievePlanListQueryDeleteFlag `json:"delete_flag"`
	Sort       OptSort                               `json:"sort"`
}

// GetPage returns the value of Page.
func (s *RetrievePlanListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrievePlanListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrievePlanListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetTotalAmountMin returns the value of TotalAmountMin.
func (s *RetrievePlanListQuery) GetTotalAmountMin() OptInt64 {
	return s.TotalAmountMin
}

// GetTotalAmountMax returns the value of TotalAmountMax.
func (s *RetrievePlanListQuery) GetTotalAmountMax() OptInt64 {
	return s.TotalAmountMax
}

// GetIntervalPattern returns the value of IntervalPattern.
func (s *RetrievePlanListQuery) GetIntervalPattern() OptRetrievePlanListQueryIntervalPattern {
	return s.IntervalPattern
}

// GetUpdateDateFrom returns the value of UpdateDateFrom.
func (s *RetrievePlanListQuery) GetUpdateDateFrom() OptString {
	return s.UpdateDateFrom
}

// GetUpdateDateTo returns the value of UpdateDateTo.
func (s *RetrievePlanListQuery) GetUpdateDateTo() OptString {
	return s.UpdateDateTo
}

// GetPlanName returns the value of PlanName.
func (s *RetrievePlanListQuery) GetPlanName() OptNilString {
	return s.PlanName
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *RetrievePlanListQuery) GetDeleteFlag() OptNilRetrievePlanListQueryDeleteFlag {
	return s.DeleteFlag
}

// GetSort returns the value of Sort.
func (s *RetrievePlanListQuery) GetSort() OptSort {
	return s.Sort
}

// SetPage sets the value of Page.
func (s *RetrievePlanListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrievePlanListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrievePlanListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetTotalAmountMin sets the value of TotalAmountMin.
func (s *RetrievePlanListQuery) SetTotalAmountMin(val OptInt64) {
	s.TotalAmountMin = val
}

// SetTotalAmountMax sets the value of TotalAmountMax.
func (s *RetrievePlanListQuery) SetTotalAmountMax(val OptInt64) {
	s.TotalAmountMax = val
}

// SetIntervalPattern sets the value of IntervalPattern.
func (s *RetrievePlanListQuery) SetIntervalPattern(val OptRetrievePlanListQueryIntervalPattern) {
	s.IntervalPattern = val
}

// SetUpdateDateFrom sets the value of UpdateDateFrom.
func (s *RetrievePlanListQuery) SetUpdateDateFrom(val OptString) {
	s.UpdateDateFrom = val
}

// SetUpdateDateTo sets the value of UpdateDateTo.
func (s *RetrievePlanListQuery) SetUpdateDateTo(val OptString) {
	s.UpdateDateTo = val
}

// SetPlanName sets the value of PlanName.
func (s *RetrievePlanListQuery) SetPlanName(val OptNilString) {
	s.PlanName = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *RetrievePlanListQuery) SetDeleteFlag(val OptNilRetrievePlanListQueryDeleteFlag) {
	s.DeleteFlag = val
}

// SetSort sets the value of Sort.
func (s *RetrievePlanListQuery) SetSort(val OptSort) {
	s.Sort = val
}

// 削除済みフラグ.
type RetrievePlanListQueryDeleteFlag string

const (
	RetrievePlanListQueryDeleteFlag0 RetrievePlanListQueryDeleteFlag = "0"
	RetrievePlanListQueryDeleteFlag1 RetrievePlanListQueryDeleteFlag = "1"
)

// AllValues returns all RetrievePlanListQueryDeleteFlag values.
func (RetrievePlanListQueryDeleteFlag) AllValues() []RetrievePlanListQueryDeleteFlag {
	return []RetrievePlanListQueryDeleteFlag{
		RetrievePlanListQueryDeleteFlag0,
		RetrievePlanListQueryDeleteFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RetrievePlanListQueryDeleteFlag) MarshalText() ([]byte, error) {
	switch s {
	case RetrievePlanListQueryDeleteFlag0:
		return []byte(s), nil
	case RetrievePlanListQueryDeleteFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RetrievePlanListQueryDeleteFlag) UnmarshalText(data []byte) error {
	switch RetrievePlanListQueryDeleteFlag(data) {
	case RetrievePlanListQueryDeleteFlag0:
		*s = RetrievePlanListQueryDeleteFlag0
		return nil
	case RetrievePlanListQueryDeleteFlag1:
		*s = RetrievePlanListQueryDeleteFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 課金間隔
// - `month`: 月
// - `year`: 年.
type RetrievePlanListQueryIntervalPattern string

const (
	RetrievePlanListQueryIntervalPatternMonth RetrievePlanListQueryIntervalPattern = "month"
	RetrievePlanListQueryIntervalPatternYear  RetrievePlanListQueryIntervalPattern = "year"
)

// AllValues returns all RetrievePlanListQueryIntervalPattern values.
func (RetrievePlanListQueryIntervalPattern) AllValues() []RetrievePlanListQueryIntervalPattern {
	return []RetrievePlanListQueryIntervalPattern{
		RetrievePlanListQueryIntervalPatternMonth,
		RetrievePlanListQueryIntervalPatternYear,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RetrievePlanListQueryIntervalPattern) MarshalText() ([]byte, error) {
	switch s {
	case RetrievePlanListQueryIntervalPatternMonth:
		return []byte(s), nil
	case RetrievePlanListQueryIntervalPatternYear:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RetrievePlanListQueryIntervalPattern) UnmarshalText(data []byte) error {
	switch RetrievePlanListQueryIntervalPattern(data) {
	case RetrievePlanListQueryIntervalPatternMonth:
		*s = RetrievePlanListQueryIntervalPatternMonth
		return nil
	case RetrievePlanListQueryIntervalPatternYear:
		*s = RetrievePlanListQueryIntervalPatternYear
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
type RetrievePlatformAccountListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
	// 確定日（入金サイクルの締め日）を月単位で絞り込みます。\
	// 形式： `yyyy/MM`.
	Processed OptNilString `json:"processed"`
	// 入金ステータス\
	// カンマ区切りにすることで複数指定（OR検索）できます。
	// - `3001`: 金額確定前
	// - `3002`: 金額確定済み
	// - `3003`: 入金済み
	// - `3004`: 入金停止中
	// - `3005`: 入金エラー
	// - `3006`: 請求中
	// - `3007`: 請求エラー
	// - `3008`: 請求停止中
	// - `3009`: 支払済み
	// - `3010`: 本人確認書類未確認
	// - `3011`: 精算済み
	// - `3012`: 入金開始前
	// - `3013`: 契約不成立.
	Status OptDepositStatusCode `json:"status"`
	// 入金予定日の範囲指定（開始日）を指定します。\
	// この日付以降に入金が行われた売上入金情報を検索できます。\
	// 形式： `yyyy/MM/dd`.
	ScheduledFrom OptNilDate `json:"scheduled_from"`
	// 入金予定日の範囲指定（終了日）を指定します。\
	// この日付以前に入金が行われた売上入金情報を検索できます。\
	// 形式： `yyyy/MM/dd`.
	ScheduledTo OptNilDate `json:"scheduled_to"`
}

// GetPage returns the value of Page.
func (s *RetrievePlatformAccountListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrievePlatformAccountListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrievePlatformAccountListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetProcessed returns the value of Processed.
func (s *RetrievePlatformAccountListQuery) GetProcessed() OptNilString {
	return s.Processed
}

// GetStatus returns the value of Status.
func (s *RetrievePlatformAccountListQuery) GetStatus() OptDepositStatusCode {
	return s.Status
}

// GetScheduledFrom returns the value of ScheduledFrom.
func (s *RetrievePlatformAccountListQuery) GetScheduledFrom() OptNilDate {
	return s.ScheduledFrom
}

// GetScheduledTo returns the value of ScheduledTo.
func (s *RetrievePlatformAccountListQuery) GetScheduledTo() OptNilDate {
	return s.ScheduledTo
}

// SetPage sets the value of Page.
func (s *RetrievePlatformAccountListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrievePlatformAccountListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrievePlatformAccountListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetProcessed sets the value of Processed.
func (s *RetrievePlatformAccountListQuery) SetProcessed(val OptNilString) {
	s.Processed = val
}

// SetStatus sets the value of Status.
func (s *RetrievePlatformAccountListQuery) SetStatus(val OptDepositStatusCode) {
	s.Status = val
}

// SetScheduledFrom sets the value of ScheduledFrom.
func (s *RetrievePlatformAccountListQuery) SetScheduledFrom(val OptNilDate) {
	s.ScheduledFrom = val
}

// SetScheduledTo sets the value of ScheduledTo.
func (s *RetrievePlatformAccountListQuery) SetScheduledTo(val OptNilDate) {
	s.ScheduledTo = val
}

// Merged schema.
type RetrievePlatformAccountSummaryListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
	// 入金予定日の範囲指定（開始日）を指定します。\
	// この日付以降に入金が行われた売上入金情報を検索できます。\
	// 形式： `yyyy/MM/dd`.
	ScheduledFrom OptNilDate `json:"scheduled_from"`
	// 入金予定日の範囲指定（終了日）を指定します。\
	// この日付以前に入金が行われた売上入金情報を検索できます。\
	// 形式： `yyyy/MM/dd`.
	ScheduledTo OptNilDate `json:"scheduled_to"`
}

// GetPage returns the value of Page.
func (s *RetrievePlatformAccountSummaryListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrievePlatformAccountSummaryListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrievePlatformAccountSummaryListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetScheduledFrom returns the value of ScheduledFrom.
func (s *RetrievePlatformAccountSummaryListQuery) GetScheduledFrom() OptNilDate {
	return s.ScheduledFrom
}

// GetScheduledTo returns the value of ScheduledTo.
func (s *RetrievePlatformAccountSummaryListQuery) GetScheduledTo() OptNilDate {
	return s.ScheduledTo
}

// SetPage sets the value of Page.
func (s *RetrievePlatformAccountSummaryListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrievePlatformAccountSummaryListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrievePlatformAccountSummaryListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetScheduledFrom sets the value of ScheduledFrom.
func (s *RetrievePlatformAccountSummaryListQuery) SetScheduledFrom(val OptNilDate) {
	s.ScheduledFrom = val
}

// SetScheduledTo sets the value of ScheduledTo.
func (s *RetrievePlatformAccountSummaryListQuery) SetScheduledTo(val OptNilDate) {
	s.ScheduledTo = val
}

// Merged schema.
type RetrievePlatformShopListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
	// ショップID.
	ID OptNilString `json:"id"`
	// ショップ名.
	ShopName OptNilString `json:"shop_name"`
	// ショップメールアドレス.
	ShopMailAddress OptNilString `json:"shop_mail_address"`
	// 作成日の範囲指定 開始日\
	// この日付以降に作成されたショップを検索できます。\
	// 形式：`yyyy/MM/dd`.
	CreatedFrom OptNilString `json:"created_from"`
	// 作成日の範囲指定 終了日\
	// この日付以前に作成されたショップを検索できます。\
	// 形式：`yyyy/MM/dd`.
	CreatedTo OptNilString `json:"created_to"`
	Sort      OptSort      `json:"sort"`
}

// GetPage returns the value of Page.
func (s *RetrievePlatformShopListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrievePlatformShopListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrievePlatformShopListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetID returns the value of ID.
func (s *RetrievePlatformShopListQuery) GetID() OptNilString {
	return s.ID
}

// GetShopName returns the value of ShopName.
func (s *RetrievePlatformShopListQuery) GetShopName() OptNilString {
	return s.ShopName
}

// GetShopMailAddress returns the value of ShopMailAddress.
func (s *RetrievePlatformShopListQuery) GetShopMailAddress() OptNilString {
	return s.ShopMailAddress
}

// GetCreatedFrom returns the value of CreatedFrom.
func (s *RetrievePlatformShopListQuery) GetCreatedFrom() OptNilString {
	return s.CreatedFrom
}

// GetCreatedTo returns the value of CreatedTo.
func (s *RetrievePlatformShopListQuery) GetCreatedTo() OptNilString {
	return s.CreatedTo
}

// GetSort returns the value of Sort.
func (s *RetrievePlatformShopListQuery) GetSort() OptSort {
	return s.Sort
}

// SetPage sets the value of Page.
func (s *RetrievePlatformShopListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrievePlatformShopListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrievePlatformShopListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetID sets the value of ID.
func (s *RetrievePlatformShopListQuery) SetID(val OptNilString) {
	s.ID = val
}

// SetShopName sets the value of ShopName.
func (s *RetrievePlatformShopListQuery) SetShopName(val OptNilString) {
	s.ShopName = val
}

// SetShopMailAddress sets the value of ShopMailAddress.
func (s *RetrievePlatformShopListQuery) SetShopMailAddress(val OptNilString) {
	s.ShopMailAddress = val
}

// SetCreatedFrom sets the value of CreatedFrom.
func (s *RetrievePlatformShopListQuery) SetCreatedFrom(val OptNilString) {
	s.CreatedFrom = val
}

// SetCreatedTo sets the value of CreatedTo.
func (s *RetrievePlatformShopListQuery) SetCreatedTo(val OptNilString) {
	s.CreatedTo = val
}

// SetSort sets the value of Sort.
func (s *RetrievePlatformShopListQuery) SetSort(val OptSort) {
	s.Sort = val
}

// Merged schema.
type RetrieveSubscriptionListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly       OptNilBool                   `json:"count_only"`
	PayType         SubscriptionPayType          `json:"pay_type"`
	ID              OptSubscriptionPropertiesID  `json:"id"`
	CustomerID      OptID                        `json:"customer_id"`
	PlanID          OptPlanPropertiesID          `json:"plan_id"`
	Status          OptSubscriptionStatus        `json:"status"`
	TotalAmountMin  OptTotalAmount               `json:"total_amount_min"`
	TotalAmountMax  OptTotalAmount               `json:"total_amount_max"`
	IntervalPattern OptPropertiesIntervalPattern `json:"interval_pattern"`
	// 課金開始日（始値）\
	// 課金開始日（`start_date`）を対象に範囲検索を行います。この日付以降に課金開始されたサブスクリプション情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	StartDateFrom OptString `json:"start_date_from"`
	// 課金開始日（終値）\
	// 課金開始日（`start_date`）を対象に範囲検索を行います。この日付以前に課金開始されたサブスクリプション情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	StartDateTo OptString `json:"start_date_to"`
	// 課金停止日（始値）\
	// 課金停止日（`stop_date`）を対象に範囲検索を行います。この日付以降に課金停止されたサブスクリプション情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	StopDateFrom OptString `json:"stop_date_from"`
	// 課金停止日（終値）\
	// 課金停止日（`stop_date`）を対象に範囲検索を行います。この日付以前に課金停止されたサブスクリプション情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	StopDateTo OptString `json:"stop_date_to"`
	// 次回課金日（始値）\
	// 次回課金日（`next_charge_date`）を対象に範囲検索を行います。この日付以降に次回課金されるサブスクリプション情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	NextChargeDateFrom OptString `json:"next_charge_date_from"`
	// 次回課金日（終値）\
	// 次回課金日（`next_charge_date`）を対象に範囲検索を行います。この日付以前に次回課金されるサブスクリプション情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	NextChargeDateTo OptString `json:"next_charge_date_to"`
	// 更新日時（始値）\
	// 更新日時（`updated`）を対象に範囲検索を行います。この日付以降に更新されたサブスクリプション情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	UpdateDateFrom OptString `json:"update_date_from"`
	// 更新日時（終値）\
	// 更新日時（`updated`）を対象に範囲検索を行います。この日付以前に更新されたサブスクリプション情報を取得します。\
	// \
	// 形式：`yyyy/MM/dd`.
	UpdateDateTo OptString `json:"update_date_to"`
	Sort         OptSort   `json:"sort"`
}

// GetPage returns the value of Page.
func (s *RetrieveSubscriptionListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrieveSubscriptionListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrieveSubscriptionListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetPayType returns the value of PayType.
func (s *RetrieveSubscriptionListQuery) GetPayType() SubscriptionPayType {
	return s.PayType
}

// GetID returns the value of ID.
func (s *RetrieveSubscriptionListQuery) GetID() OptSubscriptionPropertiesID {
	return s.ID
}

// GetCustomerID returns the value of CustomerID.
func (s *RetrieveSubscriptionListQuery) GetCustomerID() OptID {
	return s.CustomerID
}

// GetPlanID returns the value of PlanID.
func (s *RetrieveSubscriptionListQuery) GetPlanID() OptPlanPropertiesID {
	return s.PlanID
}

// GetStatus returns the value of Status.
func (s *RetrieveSubscriptionListQuery) GetStatus() OptSubscriptionStatus {
	return s.Status
}

// GetTotalAmountMin returns the value of TotalAmountMin.
func (s *RetrieveSubscriptionListQuery) GetTotalAmountMin() OptTotalAmount {
	return s.TotalAmountMin
}

// GetTotalAmountMax returns the value of TotalAmountMax.
func (s *RetrieveSubscriptionListQuery) GetTotalAmountMax() OptTotalAmount {
	return s.TotalAmountMax
}

// GetIntervalPattern returns the value of IntervalPattern.
func (s *RetrieveSubscriptionListQuery) GetIntervalPattern() OptPropertiesIntervalPattern {
	return s.IntervalPattern
}

// GetStartDateFrom returns the value of StartDateFrom.
func (s *RetrieveSubscriptionListQuery) GetStartDateFrom() OptString {
	return s.StartDateFrom
}

// GetStartDateTo returns the value of StartDateTo.
func (s *RetrieveSubscriptionListQuery) GetStartDateTo() OptString {
	return s.StartDateTo
}

// GetStopDateFrom returns the value of StopDateFrom.
func (s *RetrieveSubscriptionListQuery) GetStopDateFrom() OptString {
	return s.StopDateFrom
}

// GetStopDateTo returns the value of StopDateTo.
func (s *RetrieveSubscriptionListQuery) GetStopDateTo() OptString {
	return s.StopDateTo
}

// GetNextChargeDateFrom returns the value of NextChargeDateFrom.
func (s *RetrieveSubscriptionListQuery) GetNextChargeDateFrom() OptString {
	return s.NextChargeDateFrom
}

// GetNextChargeDateTo returns the value of NextChargeDateTo.
func (s *RetrieveSubscriptionListQuery) GetNextChargeDateTo() OptString {
	return s.NextChargeDateTo
}

// GetUpdateDateFrom returns the value of UpdateDateFrom.
func (s *RetrieveSubscriptionListQuery) GetUpdateDateFrom() OptString {
	return s.UpdateDateFrom
}

// GetUpdateDateTo returns the value of UpdateDateTo.
func (s *RetrieveSubscriptionListQuery) GetUpdateDateTo() OptString {
	return s.UpdateDateTo
}

// GetSort returns the value of Sort.
func (s *RetrieveSubscriptionListQuery) GetSort() OptSort {
	return s.Sort
}

// SetPage sets the value of Page.
func (s *RetrieveSubscriptionListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrieveSubscriptionListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrieveSubscriptionListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetPayType sets the value of PayType.
func (s *RetrieveSubscriptionListQuery) SetPayType(val SubscriptionPayType) {
	s.PayType = val
}

// SetID sets the value of ID.
func (s *RetrieveSubscriptionListQuery) SetID(val OptSubscriptionPropertiesID) {
	s.ID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *RetrieveSubscriptionListQuery) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetPlanID sets the value of PlanID.
func (s *RetrieveSubscriptionListQuery) SetPlanID(val OptPlanPropertiesID) {
	s.PlanID = val
}

// SetStatus sets the value of Status.
func (s *RetrieveSubscriptionListQuery) SetStatus(val OptSubscriptionStatus) {
	s.Status = val
}

// SetTotalAmountMin sets the value of TotalAmountMin.
func (s *RetrieveSubscriptionListQuery) SetTotalAmountMin(val OptTotalAmount) {
	s.TotalAmountMin = val
}

// SetTotalAmountMax sets the value of TotalAmountMax.
func (s *RetrieveSubscriptionListQuery) SetTotalAmountMax(val OptTotalAmount) {
	s.TotalAmountMax = val
}

// SetIntervalPattern sets the value of IntervalPattern.
func (s *RetrieveSubscriptionListQuery) SetIntervalPattern(val OptPropertiesIntervalPattern) {
	s.IntervalPattern = val
}

// SetStartDateFrom sets the value of StartDateFrom.
func (s *RetrieveSubscriptionListQuery) SetStartDateFrom(val OptString) {
	s.StartDateFrom = val
}

// SetStartDateTo sets the value of StartDateTo.
func (s *RetrieveSubscriptionListQuery) SetStartDateTo(val OptString) {
	s.StartDateTo = val
}

// SetStopDateFrom sets the value of StopDateFrom.
func (s *RetrieveSubscriptionListQuery) SetStopDateFrom(val OptString) {
	s.StopDateFrom = val
}

// SetStopDateTo sets the value of StopDateTo.
func (s *RetrieveSubscriptionListQuery) SetStopDateTo(val OptString) {
	s.StopDateTo = val
}

// SetNextChargeDateFrom sets the value of NextChargeDateFrom.
func (s *RetrieveSubscriptionListQuery) SetNextChargeDateFrom(val OptString) {
	s.NextChargeDateFrom = val
}

// SetNextChargeDateTo sets the value of NextChargeDateTo.
func (s *RetrieveSubscriptionListQuery) SetNextChargeDateTo(val OptString) {
	s.NextChargeDateTo = val
}

// SetUpdateDateFrom sets the value of UpdateDateFrom.
func (s *RetrieveSubscriptionListQuery) SetUpdateDateFrom(val OptString) {
	s.UpdateDateFrom = val
}

// SetUpdateDateTo sets the value of UpdateDateTo.
func (s *RetrieveSubscriptionListQuery) SetUpdateDateTo(val OptString) {
	s.UpdateDateTo = val
}

// SetSort sets the value of Sort.
func (s *RetrieveSubscriptionListQuery) SetSort(val OptSort) {
	s.Sort = val
}

// Merged schema.
type RetrieveSubscriptionResultListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool          `json:"count_only"`
	PayType   SubscriptionPayType `json:"pay_type"`
	Sort      OptSort             `json:"sort"`
}

// GetPage returns the value of Page.
func (s *RetrieveSubscriptionResultListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrieveSubscriptionResultListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrieveSubscriptionResultListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetPayType returns the value of PayType.
func (s *RetrieveSubscriptionResultListQuery) GetPayType() SubscriptionPayType {
	return s.PayType
}

// GetSort returns the value of Sort.
func (s *RetrieveSubscriptionResultListQuery) GetSort() OptSort {
	return s.Sort
}

// SetPage sets the value of Page.
func (s *RetrieveSubscriptionResultListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrieveSubscriptionResultListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrieveSubscriptionResultListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetPayType sets the value of PayType.
func (s *RetrieveSubscriptionResultListQuery) SetPayType(val SubscriptionPayType) {
	s.PayType = val
}

// SetSort sets the value of Sort.
func (s *RetrieveSubscriptionResultListQuery) SetSort(val OptSort) {
	s.Sort = val
}

// Merged schema.
type RetrieveTenantShopListQuery struct {
	// ページ番号.
	Page OptNilInt `json:"page"`
	// 1回で取得するデータの最大件数.
	Limit OptNilInt `json:"limit"`
	// 総件数のみ取得するか。\
	// `true`を指定した場合、検索結果の総件数（`total_count`）のみ取得します。.
	CountOnly OptNilBool `json:"count_only"`
	// ショップID.
	ID OptNilString `json:"id"`
	// ショップ名.
	ShopName OptNilString `json:"shop_name"`
	// ショップメールアドレス.
	ShopMailAddress OptNilString `json:"shop_mail_address"`
	// 作成日の範囲指定 開始日\
	// この日付以降に作成されたショップを検索できます。\
	// 形式：`yyyy/MM/dd`.
	CreatedFrom OptNilString `json:"created_from"`
	// 作成日の範囲指定 終了日\
	// この日付以前に作成されたショップを検索できます。\
	// 形式：`yyyy/MM/dd`.
	CreatedTo OptNilString `json:"created_to"`
	Sort      OptSort      `json:"sort"`
}

// GetPage returns the value of Page.
func (s *RetrieveTenantShopListQuery) GetPage() OptNilInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *RetrieveTenantShopListQuery) GetLimit() OptNilInt {
	return s.Limit
}

// GetCountOnly returns the value of CountOnly.
func (s *RetrieveTenantShopListQuery) GetCountOnly() OptNilBool {
	return s.CountOnly
}

// GetID returns the value of ID.
func (s *RetrieveTenantShopListQuery) GetID() OptNilString {
	return s.ID
}

// GetShopName returns the value of ShopName.
func (s *RetrieveTenantShopListQuery) GetShopName() OptNilString {
	return s.ShopName
}

// GetShopMailAddress returns the value of ShopMailAddress.
func (s *RetrieveTenantShopListQuery) GetShopMailAddress() OptNilString {
	return s.ShopMailAddress
}

// GetCreatedFrom returns the value of CreatedFrom.
func (s *RetrieveTenantShopListQuery) GetCreatedFrom() OptNilString {
	return s.CreatedFrom
}

// GetCreatedTo returns the value of CreatedTo.
func (s *RetrieveTenantShopListQuery) GetCreatedTo() OptNilString {
	return s.CreatedTo
}

// GetSort returns the value of Sort.
func (s *RetrieveTenantShopListQuery) GetSort() OptSort {
	return s.Sort
}

// SetPage sets the value of Page.
func (s *RetrieveTenantShopListQuery) SetPage(val OptNilInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *RetrieveTenantShopListQuery) SetLimit(val OptNilInt) {
	s.Limit = val
}

// SetCountOnly sets the value of CountOnly.
func (s *RetrieveTenantShopListQuery) SetCountOnly(val OptNilBool) {
	s.CountOnly = val
}

// SetID sets the value of ID.
func (s *RetrieveTenantShopListQuery) SetID(val OptNilString) {
	s.ID = val
}

// SetShopName sets the value of ShopName.
func (s *RetrieveTenantShopListQuery) SetShopName(val OptNilString) {
	s.ShopName = val
}

// SetShopMailAddress sets the value of ShopMailAddress.
func (s *RetrieveTenantShopListQuery) SetShopMailAddress(val OptNilString) {
	s.ShopMailAddress = val
}

// SetCreatedFrom sets the value of CreatedFrom.
func (s *RetrieveTenantShopListQuery) SetCreatedFrom(val OptNilString) {
	s.CreatedFrom = val
}

// SetCreatedTo sets the value of CreatedTo.
func (s *RetrieveTenantShopListQuery) SetCreatedTo(val OptNilString) {
	s.CreatedTo = val
}

// SetSort sets the value of Sort.
func (s *RetrieveTenantShopListQuery) SetSort(val OptSort) {
	s.Sort = val
}

type ReturnURL string

type ReturnURLOnFailure string

type RolePropertiesID int

type ScheduledDepositDate string

type Schema string

type SecretBasicAuth struct {
	Username string
	Password string
}

// GetUsername returns the value of Username.
func (s *SecretBasicAuth) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *SecretBasicAuth) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *SecretBasicAuth) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *SecretBasicAuth) SetPassword(val string) {
	s.Password = val
}

type SecretBearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *SecretBearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *SecretBearerAuth) SetToken(val string) {
	s.Token = val
}

type SendMailAddress string

type SendURL string

type Service bool

type SettlementAmount int

// 顧客情報共有フラグ
// - `0`: 顧客情報を共有しない<br /><span
// class="smallText">顧客情報は各テナントごとに管理され、各テナントは自ショップに登録された顧客に対してのみ決済を行えます。</span>
// - `1`: 顧客情報を共有する<br /><span
// class="smallText">顧客情報はプラットフォーム全体で共有され、いずれのテナントもいずれの顧客に対し決済を行えます。</span>.
// Ref: #/components/schemas/shared_customer_flag
type SharedCustomerFlag string

const (
	SharedCustomerFlag0 SharedCustomerFlag = "0"
	SharedCustomerFlag1 SharedCustomerFlag = "1"
)

// AllValues returns all SharedCustomerFlag values.
func (SharedCustomerFlag) AllValues() []SharedCustomerFlag {
	return []SharedCustomerFlag{
		SharedCustomerFlag0,
		SharedCustomerFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SharedCustomerFlag) MarshalText() ([]byte, error) {
	switch s {
	case SharedCustomerFlag0:
		return []byte(s), nil
	case SharedCustomerFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SharedCustomerFlag) UnmarshalText(data []byte) error {
	switch SharedCustomerFlag(data) {
	case SharedCustomerFlag0:
		*s = SharedCustomerFlag0
		return nil
	case SharedCustomerFlag1:
		*s = SharedCustomerFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Shop
type Shop struct {
	// ショップID.
	ID OptString `json:"id"`
	// ショップ名.
	ShopName OptNilString `json:"shop_name"`
	// ショップ名（カナ）.
	ShopNameKana OptNilString   `json:"shop_name_kana"`
	ShopType     OptNilShopType `json:"shop_type"`
	// プラットフォームID.
	PlatformID OptString `json:"platform_id"`
	// プラットフォーム名.
	PlatformName OptNilString `json:"platform_name"`
	// 顧客情報共有フラグ
	// - `0`: 顧客情報を共有しない<br /><span
	// class="smallText">顧客情報は各テナントごとに管理され、各テナントは自ショップに登録された顧客に対してのみ決済を行えます。</span>
	// - `1`: 顧客情報を共有する<br /><span
	// class="smallText">顧客情報はプラットフォーム全体で共有され、いずれのテナントもいずれの顧客に対し決済を行えます。</span>.
	SharedCustomerFlag OptNilShopSharedCustomerFlag `json:"shared_customer_flag"`
	// 顧客情報共有グループID\
	// fincodeは同じ顧客情報共有グループIDを持つショップ間で顧客情報を共有します。.
	CustomerGroupID OptNilString `json:"customer_group_id"`
	// 決済手段ごとに存在するプラットフォーム手数料設定のリスト.
	PlatformRateList []PlatformRateConfig `json:"platform_rate_list"`
	// 通知先メールアドレス.
	SendMailAddress OptNilString `json:"send_mail_address"`
	// ショップメールアドレス.
	ShopMailAddress OptNilString `json:"shop_mail_address"`
	// ログ保存日数.
	LogKeepDays OptNilString `json:"log_keep_days"`
	// APIバージョン.
	APIVersion OptNilString `json:"api_version"`
	// 管理画面におけるAPIキー表示フラグ。
	// - `0`: 表示しない
	// - `1`: 表示する.
	APIKeyDisplayFlag OptNilShopAPIKeyDisplayFlag `json:"api_key_display_flag"`
	Created           OptCreated                  `json:"created"`
	Updated           OptNilUpdated               `json:"updated"`
}

// GetID returns the value of ID.
func (s *Shop) GetID() OptString {
	return s.ID
}

// GetShopName returns the value of ShopName.
func (s *Shop) GetShopName() OptNilString {
	return s.ShopName
}

// GetShopNameKana returns the value of ShopNameKana.
func (s *Shop) GetShopNameKana() OptNilString {
	return s.ShopNameKana
}

// GetShopType returns the value of ShopType.
func (s *Shop) GetShopType() OptNilShopType {
	return s.ShopType
}

// GetPlatformID returns the value of PlatformID.
func (s *Shop) GetPlatformID() OptString {
	return s.PlatformID
}

// GetPlatformName returns the value of PlatformName.
func (s *Shop) GetPlatformName() OptNilString {
	return s.PlatformName
}

// GetSharedCustomerFlag returns the value of SharedCustomerFlag.
func (s *Shop) GetSharedCustomerFlag() OptNilShopSharedCustomerFlag {
	return s.SharedCustomerFlag
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *Shop) GetCustomerGroupID() OptNilString {
	return s.CustomerGroupID
}

// GetPlatformRateList returns the value of PlatformRateList.
func (s *Shop) GetPlatformRateList() []PlatformRateConfig {
	return s.PlatformRateList
}

// GetSendMailAddress returns the value of SendMailAddress.
func (s *Shop) GetSendMailAddress() OptNilString {
	return s.SendMailAddress
}

// GetShopMailAddress returns the value of ShopMailAddress.
func (s *Shop) GetShopMailAddress() OptNilString {
	return s.ShopMailAddress
}

// GetLogKeepDays returns the value of LogKeepDays.
func (s *Shop) GetLogKeepDays() OptNilString {
	return s.LogKeepDays
}

// GetAPIVersion returns the value of APIVersion.
func (s *Shop) GetAPIVersion() OptNilString {
	return s.APIVersion
}

// GetAPIKeyDisplayFlag returns the value of APIKeyDisplayFlag.
func (s *Shop) GetAPIKeyDisplayFlag() OptNilShopAPIKeyDisplayFlag {
	return s.APIKeyDisplayFlag
}

// GetCreated returns the value of Created.
func (s *Shop) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *Shop) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *Shop) SetID(val OptString) {
	s.ID = val
}

// SetShopName sets the value of ShopName.
func (s *Shop) SetShopName(val OptNilString) {
	s.ShopName = val
}

// SetShopNameKana sets the value of ShopNameKana.
func (s *Shop) SetShopNameKana(val OptNilString) {
	s.ShopNameKana = val
}

// SetShopType sets the value of ShopType.
func (s *Shop) SetShopType(val OptNilShopType) {
	s.ShopType = val
}

// SetPlatformID sets the value of PlatformID.
func (s *Shop) SetPlatformID(val OptString) {
	s.PlatformID = val
}

// SetPlatformName sets the value of PlatformName.
func (s *Shop) SetPlatformName(val OptNilString) {
	s.PlatformName = val
}

// SetSharedCustomerFlag sets the value of SharedCustomerFlag.
func (s *Shop) SetSharedCustomerFlag(val OptNilShopSharedCustomerFlag) {
	s.SharedCustomerFlag = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *Shop) SetCustomerGroupID(val OptNilString) {
	s.CustomerGroupID = val
}

// SetPlatformRateList sets the value of PlatformRateList.
func (s *Shop) SetPlatformRateList(val []PlatformRateConfig) {
	s.PlatformRateList = val
}

// SetSendMailAddress sets the value of SendMailAddress.
func (s *Shop) SetSendMailAddress(val OptNilString) {
	s.SendMailAddress = val
}

// SetShopMailAddress sets the value of ShopMailAddress.
func (s *Shop) SetShopMailAddress(val OptNilString) {
	s.ShopMailAddress = val
}

// SetLogKeepDays sets the value of LogKeepDays.
func (s *Shop) SetLogKeepDays(val OptNilString) {
	s.LogKeepDays = val
}

// SetAPIVersion sets the value of APIVersion.
func (s *Shop) SetAPIVersion(val OptNilString) {
	s.APIVersion = val
}

// SetAPIKeyDisplayFlag sets the value of APIKeyDisplayFlag.
func (s *Shop) SetAPIKeyDisplayFlag(val OptNilShopAPIKeyDisplayFlag) {
	s.APIKeyDisplayFlag = val
}

// SetCreated sets the value of Created.
func (s *Shop) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *Shop) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*Shop) retrievePlatformShopRes() {}
func (*Shop) retrieveTenantShopRes()   {}
func (*Shop) updatePlatformShopRes()   {}
func (*Shop) updateTenantShopRes()     {}

// 管理画面におけるAPIキー表示フラグ。
// - `0`: 表示しない
// - `1`: 表示する.
type ShopAPIKeyDisplayFlag string

const (
	ShopAPIKeyDisplayFlag0 ShopAPIKeyDisplayFlag = "0"
	ShopAPIKeyDisplayFlag1 ShopAPIKeyDisplayFlag = "1"
)

// AllValues returns all ShopAPIKeyDisplayFlag values.
func (ShopAPIKeyDisplayFlag) AllValues() []ShopAPIKeyDisplayFlag {
	return []ShopAPIKeyDisplayFlag{
		ShopAPIKeyDisplayFlag0,
		ShopAPIKeyDisplayFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ShopAPIKeyDisplayFlag) MarshalText() ([]byte, error) {
	switch s {
	case ShopAPIKeyDisplayFlag0:
		return []byte(s), nil
	case ShopAPIKeyDisplayFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ShopAPIKeyDisplayFlag) UnmarshalText(data []byte) error {
	switch ShopAPIKeyDisplayFlag(data) {
	case ShopAPIKeyDisplayFlag0:
		*s = ShopAPIKeyDisplayFlag0
		return nil
	case ShopAPIKeyDisplayFlag1:
		*s = ShopAPIKeyDisplayFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ShopID string

// Ref: #/components/schemas/ShopInfo.V2
type ShopInfoV2 struct {
	// Fincodeにおけるショップ名.
	ShopName string `json:"shop_name"`
	// Fincodeにおけるショップ名（カナ）.
	ShopNameKana string `json:"shop_name_kana"`
	// Fincodeにおけるショップ名（英語）.
	ShopNameEn string `json:"shop_name_en"`
	// 購入者向けサポート窓口 メールアドレス\
	// 形式： RFC 5322.
	SupportMail NilString `json:"support_mail"`
	// 購入者向けサポート窓口 電話番号\
	// 形式： 電話番号（ハイフンなし）.
	SupportTel NilString `json:"support_tel"`
	// 1回の決済における金額（単価）\
	// \
	// 例： `1000`（1000円）.
	UnitPrice OptNilFloat64 `json:"unit_price"`
	// Fincode審査に時間がかかるコンテンツを取り扱うかどうかの表明
	// - `true`: fincode審査に時間がかかるコンテンツを取り扱う
	// - `false`: fincode審査に時間がかかるコンテンツを取り扱わない
	// 以下の商材を取り扱う場合は`true`を指定する必要があります。
	// - 呉服
	// - コンサルディングサービス
	// - エステ、美容サロン、美容医療
	// - スポーツ施設・フィットネスクラブ
	// - カルチャースクール・通信講座
	// - データ販売
	// - 情報詳細（情報の内容自体が商品となるもの）
	// - 占い
	// - サプリメント・健康食品
	// - 美容品・化粧品
	// - カツラ
	// - 旅行業に該当するサービス
	// - タバコ・CBD
	// - 寄付金.
	DealsLongApplyContent NilBool `json:"deals_long_apply_content"`
	// Fincodeで取扱不可の商材を取り扱わないことの表明
	// - `true`: 取扱不可の商材を取り扱う予定はない
	// - `false`: 取扱不可の商材を取り扱う予定がある
	// fincodeの禁止商材は以下の通りです。
	// - 金融行為（クレジットカードショッピング枠の現金化等）
	// -
	// 仮想通貨取引、金券（印紙、切手等含む）、商品券、プリペイドカード、有価証券
	// - 賭博、ギャンブル
	// - RMT（リアルマネートレーディング）
	// - ペット等の生き物全般（※標本・剥製も含む）
	// - お布施
	// - 危険ドラッグ、デザイナーズドラッグ
	// -
	// 処方箋なしで購入できる処方薬（ルミガン・ラディース・クラッシュビスタ・ケアプロスト等）
	// - 第三者の著作権・肖像権・知的所有権等を侵害する恐れがあるもの
	// - 公序良俗に反するもの（アダルト、出会い系サイトを含む）
	// -
	// 法律・法令の定めに違反するもの（銃刀法・麻薬取締法・ワシントン条約・薬事法）.
	DealsInsecureContent NilBool `json:"deals_insecure_content"`
	// 改正割賦販売法に基づく訴訟敗訴歴があるかどうかの表明
	// - `true`: 改正割賦販売法に基づく訴訟敗訴歴がある
	// - `false`: 改正割賦販売法に基づく訴訟敗訴歴はない.
	LostTrial    NilBool                `json:"lost_trial"`
	UseOfFincode ShopInfoV2UseOfFincode `json:"use_of_fincode"`
	// Webサイトの公開状況\
	// \
	// fincode審査時点で決済機能を提供するWebサイトが閲覧可能かどうかを示します。\
	// `usage_of_fincode.used_on_web`が`true`の場合、指定必須です。
	// - `true`: fincode審査チームがサイトを閲覧可能
	// - `false`: fincode審査チームがサイトを閲覧不可能.
	SitePublished OptNilBool `json:"site_published"`
	// Webサイト情報\
	// \
	// fincode審査チームが審査上確認をする、fincodeによる決済を行うWebサイトの情報.
	SiteInfo OptShopInfoV2SiteInfo `json:"site_info"`
	// プリペイドポイントの有無\
	// \
	// ショップがプリペイドポイントを導入しているかどうか.
	PrepaidPoint     OptNilBool                    `json:"prepaid_point"`
	PrepaidPointInfo OptShopInfoV2PrepaidPointInfo `json:"prepaid_point_info"`
	// 商材情報.
	Provides ShopInfoV2Provides `json:"provides"`
	// 取扱商材の説明\
	// \
	// ショップの提供する商材についての説明.
	ContentDescription NilString `json:"content_description"`
	// 物販商材 商材説明.
	ProductContentInfo OptContentInfoV2 `json:"product_content_info"`
	// サービス商材 商材説明.
	ServiceContentInfo OptContentInfoV2 `json:"service_content_info"`
	// デジタルコンテンツ 商材説明.
	DigitalContentInfo OptContentInfoV2 `json:"digital_content_info"`
	// 追加提出情報\
	// \
	// 審査開始時点でショップのWebサイトが公開されていない場合（`use_of_fincode.used_on_web`が`false`または`site_published`が`false`の場合）、追加で提供する情報です。\
	// 特定商取引法に基づく表示情報を基に値を設定してください。.
	AdditionalInfo OptNilShopInfoV2AdditionalInfo `json:"additional_info"`
}

// GetShopName returns the value of ShopName.
func (s *ShopInfoV2) GetShopName() string {
	return s.ShopName
}

// GetShopNameKana returns the value of ShopNameKana.
func (s *ShopInfoV2) GetShopNameKana() string {
	return s.ShopNameKana
}

// GetShopNameEn returns the value of ShopNameEn.
func (s *ShopInfoV2) GetShopNameEn() string {
	return s.ShopNameEn
}

// GetSupportMail returns the value of SupportMail.
func (s *ShopInfoV2) GetSupportMail() NilString {
	return s.SupportMail
}

// GetSupportTel returns the value of SupportTel.
func (s *ShopInfoV2) GetSupportTel() NilString {
	return s.SupportTel
}

// GetUnitPrice returns the value of UnitPrice.
func (s *ShopInfoV2) GetUnitPrice() OptNilFloat64 {
	return s.UnitPrice
}

// GetDealsLongApplyContent returns the value of DealsLongApplyContent.
func (s *ShopInfoV2) GetDealsLongApplyContent() NilBool {
	return s.DealsLongApplyContent
}

// GetDealsInsecureContent returns the value of DealsInsecureContent.
func (s *ShopInfoV2) GetDealsInsecureContent() NilBool {
	return s.DealsInsecureContent
}

// GetLostTrial returns the value of LostTrial.
func (s *ShopInfoV2) GetLostTrial() NilBool {
	return s.LostTrial
}

// GetUseOfFincode returns the value of UseOfFincode.
func (s *ShopInfoV2) GetUseOfFincode() ShopInfoV2UseOfFincode {
	return s.UseOfFincode
}

// GetSitePublished returns the value of SitePublished.
func (s *ShopInfoV2) GetSitePublished() OptNilBool {
	return s.SitePublished
}

// GetSiteInfo returns the value of SiteInfo.
func (s *ShopInfoV2) GetSiteInfo() OptShopInfoV2SiteInfo {
	return s.SiteInfo
}

// GetPrepaidPoint returns the value of PrepaidPoint.
func (s *ShopInfoV2) GetPrepaidPoint() OptNilBool {
	return s.PrepaidPoint
}

// GetPrepaidPointInfo returns the value of PrepaidPointInfo.
func (s *ShopInfoV2) GetPrepaidPointInfo() OptShopInfoV2PrepaidPointInfo {
	return s.PrepaidPointInfo
}

// GetProvides returns the value of Provides.
func (s *ShopInfoV2) GetProvides() ShopInfoV2Provides {
	return s.Provides
}

// GetContentDescription returns the value of ContentDescription.
func (s *ShopInfoV2) GetContentDescription() NilString {
	return s.ContentDescription
}

// GetProductContentInfo returns the value of ProductContentInfo.
func (s *ShopInfoV2) GetProductContentInfo() OptContentInfoV2 {
	return s.ProductContentInfo
}

// GetServiceContentInfo returns the value of ServiceContentInfo.
func (s *ShopInfoV2) GetServiceContentInfo() OptContentInfoV2 {
	return s.ServiceContentInfo
}

// GetDigitalContentInfo returns the value of DigitalContentInfo.
func (s *ShopInfoV2) GetDigitalContentInfo() OptContentInfoV2 {
	return s.DigitalContentInfo
}

// GetAdditionalInfo returns the value of AdditionalInfo.
func (s *ShopInfoV2) GetAdditionalInfo() OptNilShopInfoV2AdditionalInfo {
	return s.AdditionalInfo
}

// SetShopName sets the value of ShopName.
func (s *ShopInfoV2) SetShopName(val string) {
	s.ShopName = val
}

// SetShopNameKana sets the value of ShopNameKana.
func (s *ShopInfoV2) SetShopNameKana(val string) {
	s.ShopNameKana = val
}

// SetShopNameEn sets the value of ShopNameEn.
func (s *ShopInfoV2) SetShopNameEn(val string) {
	s.ShopNameEn = val
}

// SetSupportMail sets the value of SupportMail.
func (s *ShopInfoV2) SetSupportMail(val NilString) {
	s.SupportMail = val
}

// SetSupportTel sets the value of SupportTel.
func (s *ShopInfoV2) SetSupportTel(val NilString) {
	s.SupportTel = val
}

// SetUnitPrice sets the value of UnitPrice.
func (s *ShopInfoV2) SetUnitPrice(val OptNilFloat64) {
	s.UnitPrice = val
}

// SetDealsLongApplyContent sets the value of DealsLongApplyContent.
func (s *ShopInfoV2) SetDealsLongApplyContent(val NilBool) {
	s.DealsLongApplyContent = val
}

// SetDealsInsecureContent sets the value of DealsInsecureContent.
func (s *ShopInfoV2) SetDealsInsecureContent(val NilBool) {
	s.DealsInsecureContent = val
}

// SetLostTrial sets the value of LostTrial.
func (s *ShopInfoV2) SetLostTrial(val NilBool) {
	s.LostTrial = val
}

// SetUseOfFincode sets the value of UseOfFincode.
func (s *ShopInfoV2) SetUseOfFincode(val ShopInfoV2UseOfFincode) {
	s.UseOfFincode = val
}

// SetSitePublished sets the value of SitePublished.
func (s *ShopInfoV2) SetSitePublished(val OptNilBool) {
	s.SitePublished = val
}

// SetSiteInfo sets the value of SiteInfo.
func (s *ShopInfoV2) SetSiteInfo(val OptShopInfoV2SiteInfo) {
	s.SiteInfo = val
}

// SetPrepaidPoint sets the value of PrepaidPoint.
func (s *ShopInfoV2) SetPrepaidPoint(val OptNilBool) {
	s.PrepaidPoint = val
}

// SetPrepaidPointInfo sets the value of PrepaidPointInfo.
func (s *ShopInfoV2) SetPrepaidPointInfo(val OptShopInfoV2PrepaidPointInfo) {
	s.PrepaidPointInfo = val
}

// SetProvides sets the value of Provides.
func (s *ShopInfoV2) SetProvides(val ShopInfoV2Provides) {
	s.Provides = val
}

// SetContentDescription sets the value of ContentDescription.
func (s *ShopInfoV2) SetContentDescription(val NilString) {
	s.ContentDescription = val
}

// SetProductContentInfo sets the value of ProductContentInfo.
func (s *ShopInfoV2) SetProductContentInfo(val OptContentInfoV2) {
	s.ProductContentInfo = val
}

// SetServiceContentInfo sets the value of ServiceContentInfo.
func (s *ShopInfoV2) SetServiceContentInfo(val OptContentInfoV2) {
	s.ServiceContentInfo = val
}

// SetDigitalContentInfo sets the value of DigitalContentInfo.
func (s *ShopInfoV2) SetDigitalContentInfo(val OptContentInfoV2) {
	s.DigitalContentInfo = val
}

// SetAdditionalInfo sets the value of AdditionalInfo.
func (s *ShopInfoV2) SetAdditionalInfo(val OptNilShopInfoV2AdditionalInfo) {
	s.AdditionalInfo = val
}

// 追加提出情報\
// \
// 審査開始時点でショップのWebサイトが公開されていない場合（`use_of_fincode.used_on_web`が`false`または`site_published`が`false`の場合）、追加で提供する情報です。\
// 特定商取引法に基づく表示情報を基に値を設定してください。.
type ShopInfoV2AdditionalInfo struct {
	// 販売責任者氏名\
	// \
	// ショップの販売責任者の氏名.
	ShopSalesManagerName OptNilString `json:"shop_sales_manager_name"`
	// 屋号・サービス名\
	// \
	// ショップのサービスの名称.
	ShopServoceName NilString `json:"shop_servoce_name"`
	// 支払い方法\
	// \
	// ショップで利用可能な支払い方法.
	ShopHowToPay NilString `json:"shop_how_to_pay"`
	// 商品代金以外の料金の説明\
	// \
	// 送料、手数料、消費税などの商品代金以外の料金についての説明.
	ShopChargeDescription OptNilString `json:"shop_charge_description"`
	// 商品の引き渡し時期\
	// \
	// 商品の引き渡し時期についての説明.
	ShopProductDeliveryTime NilString `json:"shop_product_delivery_time"`
	// 返品・交換に関する条件\
	// \
	// 返品・交換に関する条件についての説明.
	ShopReturnGoodsHandingConditions NilString `json:"shop_return_goods_handing_conditions"`
}

// GetShopSalesManagerName returns the value of ShopSalesManagerName.
func (s *ShopInfoV2AdditionalInfo) GetShopSalesManagerName() OptNilString {
	return s.ShopSalesManagerName
}

// GetShopServoceName returns the value of ShopServoceName.
func (s *ShopInfoV2AdditionalInfo) GetShopServoceName() NilString {
	return s.ShopServoceName
}

// GetShopHowToPay returns the value of ShopHowToPay.
func (s *ShopInfoV2AdditionalInfo) GetShopHowToPay() NilString {
	return s.ShopHowToPay
}

// GetShopChargeDescription returns the value of ShopChargeDescription.
func (s *ShopInfoV2AdditionalInfo) GetShopChargeDescription() OptNilString {
	return s.ShopChargeDescription
}

// GetShopProductDeliveryTime returns the value of ShopProductDeliveryTime.
func (s *ShopInfoV2AdditionalInfo) GetShopProductDeliveryTime() NilString {
	return s.ShopProductDeliveryTime
}

// GetShopReturnGoodsHandingConditions returns the value of ShopReturnGoodsHandingConditions.
func (s *ShopInfoV2AdditionalInfo) GetShopReturnGoodsHandingConditions() NilString {
	return s.ShopReturnGoodsHandingConditions
}

// SetShopSalesManagerName sets the value of ShopSalesManagerName.
func (s *ShopInfoV2AdditionalInfo) SetShopSalesManagerName(val OptNilString) {
	s.ShopSalesManagerName = val
}

// SetShopServoceName sets the value of ShopServoceName.
func (s *ShopInfoV2AdditionalInfo) SetShopServoceName(val NilString) {
	s.ShopServoceName = val
}

// SetShopHowToPay sets the value of ShopHowToPay.
func (s *ShopInfoV2AdditionalInfo) SetShopHowToPay(val NilString) {
	s.ShopHowToPay = val
}

// SetShopChargeDescription sets the value of ShopChargeDescription.
func (s *ShopInfoV2AdditionalInfo) SetShopChargeDescription(val OptNilString) {
	s.ShopChargeDescription = val
}

// SetShopProductDeliveryTime sets the value of ShopProductDeliveryTime.
func (s *ShopInfoV2AdditionalInfo) SetShopProductDeliveryTime(val NilString) {
	s.ShopProductDeliveryTime = val
}

// SetShopReturnGoodsHandingConditions sets the value of ShopReturnGoodsHandingConditions.
func (s *ShopInfoV2AdditionalInfo) SetShopReturnGoodsHandingConditions(val NilString) {
	s.ShopReturnGoodsHandingConditions = val
}

type ShopInfoV2PrepaidPointInfo struct {
	// ポイント利用方法\
	// \
	// プリペイドポイントの利用方法.
	HowToUse OptNilString `json:"how_to_use"`
	// ポイント有効期限について\
	// \
	// プリペイドポイントの有効期限について.
	AboutExpiration OptNilString `json:"about_expiration"`
}

// GetHowToUse returns the value of HowToUse.
func (s *ShopInfoV2PrepaidPointInfo) GetHowToUse() OptNilString {
	return s.HowToUse
}

// GetAboutExpiration returns the value of AboutExpiration.
func (s *ShopInfoV2PrepaidPointInfo) GetAboutExpiration() OptNilString {
	return s.AboutExpiration
}

// SetHowToUse sets the value of HowToUse.
func (s *ShopInfoV2PrepaidPointInfo) SetHowToUse(val OptNilString) {
	s.HowToUse = val
}

// SetAboutExpiration sets the value of AboutExpiration.
func (s *ShopInfoV2PrepaidPointInfo) SetAboutExpiration(val OptNilString) {
	s.AboutExpiration = val
}

// 商材情報.
type ShopInfoV2Provides struct {
	// 物販商材 提供有無\
	// \
	// ショップが物品販売を行うかどうか.
	Product OptNilBool `json:"product"`
	// サービス商材 提供有無\
	// \
	// ショップがサービス提供を行うかどうか.
	Service OptNilBool `json:"service"`
	// デジタルコンテンツ 提供有無\
	// \
	// ショップがデジタルコンテンツ販売を行うかどうか.
	DigitalContent OptNilBool `json:"digital_content"`
}

// GetProduct returns the value of Product.
func (s *ShopInfoV2Provides) GetProduct() OptNilBool {
	return s.Product
}

// GetService returns the value of Service.
func (s *ShopInfoV2Provides) GetService() OptNilBool {
	return s.Service
}

// GetDigitalContent returns the value of DigitalContent.
func (s *ShopInfoV2Provides) GetDigitalContent() OptNilBool {
	return s.DigitalContent
}

// SetProduct sets the value of Product.
func (s *ShopInfoV2Provides) SetProduct(val OptNilBool) {
	s.Product = val
}

// SetService sets the value of Service.
func (s *ShopInfoV2Provides) SetService(val OptNilBool) {
	s.Service = val
}

// SetDigitalContent sets the value of DigitalContent.
func (s *ShopInfoV2Provides) SetDigitalContent(val OptNilBool) {
	s.DigitalContent = val
}

// Webサイト情報\
// \
// fincode審査チームが審査上確認をする、fincodeによる決済を行うWebサイトの情報.
type ShopInfoV2SiteInfo struct {
	// WebサイトURL\
	// \
	// fincode審査チームがサイトを閲覧するためのURL.
	URL NilString `json:"url"`
	// ログイン情報\
	// \
	// fincode審査チームがサイトを閲覧するためのログイン情報.
	Credential OptNilString `json:"credential"`
}

// GetURL returns the value of URL.
func (s *ShopInfoV2SiteInfo) GetURL() NilString {
	return s.URL
}

// GetCredential returns the value of Credential.
func (s *ShopInfoV2SiteInfo) GetCredential() OptNilString {
	return s.Credential
}

// SetURL sets the value of URL.
func (s *ShopInfoV2SiteInfo) SetURL(val NilString) {
	s.URL = val
}

// SetCredential sets the value of Credential.
func (s *ShopInfoV2SiteInfo) SetCredential(val OptNilString) {
	s.Credential = val
}

type ShopInfoV2UseOfFincode struct {
	// Webサイト利用有無\
	// \
	// Webサイト/Webアプリでfincodeを使用するかどうか
	// - `true`: Webサイト/Webアプリでfincodeを使用する.
	UsedOnWeb OptNilBool `json:"used_on_web"`
	// ネイティブアプリ利用有無\
	// \
	// ネイティブアプリでfincodeを使用するかどうか
	// - `true`: ネイティブアプリでfincodeを使用する.
	UsedOnApp OptNilBool `json:"used_on_app"`
}

// GetUsedOnWeb returns the value of UsedOnWeb.
func (s *ShopInfoV2UseOfFincode) GetUsedOnWeb() OptNilBool {
	return s.UsedOnWeb
}

// GetUsedOnApp returns the value of UsedOnApp.
func (s *ShopInfoV2UseOfFincode) GetUsedOnApp() OptNilBool {
	return s.UsedOnApp
}

// SetUsedOnWeb sets the value of UsedOnWeb.
func (s *ShopInfoV2UseOfFincode) SetUsedOnWeb(val OptNilBool) {
	s.UsedOnWeb = val
}

// SetUsedOnApp sets the value of UsedOnApp.
func (s *ShopInfoV2UseOfFincode) SetUsedOnApp(val OptNilBool) {
	s.UsedOnApp = val
}

// Ref: #/components/schemas/Shop.list
type ShopList struct {
	List []Shop `json:"list"`
}

// GetList returns the value of List.
func (s *ShopList) GetList() []Shop {
	return s.List
}

// SetList sets the value of List.
func (s *ShopList) SetList(val []Shop) {
	s.List = val
}

func (*ShopList) retrievePlatformShopListRes() {}
func (*ShopList) retrieveTenantShopListRes()   {}

type ShopMailAddress string

type ShopMailTemplateID string

type ShopName string

type ShopNameEn string

type ShopNameKana string

// 支払い方法\
// \
// キャンセル金額の超過などによりfincodeへの支払が発生した場合の支払い方法
// - `0`: クレジットカード
// - `1`: 銀行口座.
// Ref: #/components/schemas/ShopPaymentMethod
type ShopPaymentMethod float64

const (
	ShopPaymentMethod0 ShopPaymentMethod = 0
	ShopPaymentMethod1 ShopPaymentMethod = 1
)

// AllValues returns all ShopPaymentMethod values.
func (ShopPaymentMethod) AllValues() []ShopPaymentMethod {
	return []ShopPaymentMethod{
		ShopPaymentMethod0,
		ShopPaymentMethod1,
	}
}

type ShopPropertiesID string

type ShopServiceName string

// 顧客情報共有フラグ
// - `0`: 顧客情報を共有しない<br /><span
// class="smallText">顧客情報は各テナントごとに管理され、各テナントは自ショップに登録された顧客に対してのみ決済を行えます。</span>
// - `1`: 顧客情報を共有する<br /><span
// class="smallText">顧客情報はプラットフォーム全体で共有され、いずれのテナントもいずれの顧客に対し決済を行えます。</span>.
type ShopSharedCustomerFlag string

const (
	ShopSharedCustomerFlag0 ShopSharedCustomerFlag = "0"
	ShopSharedCustomerFlag1 ShopSharedCustomerFlag = "1"
)

// AllValues returns all ShopSharedCustomerFlag values.
func (ShopSharedCustomerFlag) AllValues() []ShopSharedCustomerFlag {
	return []ShopSharedCustomerFlag{
		ShopSharedCustomerFlag0,
		ShopSharedCustomerFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ShopSharedCustomerFlag) MarshalText() ([]byte, error) {
	switch s {
	case ShopSharedCustomerFlag0:
		return []byte(s), nil
	case ShopSharedCustomerFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ShopSharedCustomerFlag) UnmarshalText(data []byte) error {
	switch ShopSharedCustomerFlag(data) {
	case ShopSharedCustomerFlag0:
		*s = ShopSharedCustomerFlag0
		return nil
	case ShopSharedCustomerFlag1:
		*s = ShopSharedCustomerFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ショップタイプ。
// - `(null)`: スタンダードショップ
// - `platform`: プラットフォームショップ
// - `tenant`: テナントショップ.
// Ref: #/components/schemas/ShopType
type ShopType string

const (
	ShopTypePlatform ShopType = "platform"
	ShopTypeTenant   ShopType = "tenant"
)

// AllValues returns all ShopType values.
func (ShopType) AllValues() []ShopType {
	return []ShopType{
		ShopTypePlatform,
		ShopTypeTenant,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ShopType) MarshalText() ([]byte, error) {
	switch s {
	case ShopTypePlatform:
		return []byte(s), nil
	case ShopTypeTenant:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ShopType) UnmarshalText(data []byte) error {
	switch ShopType(data) {
	case ShopTypePlatform:
		*s = ShopTypePlatform
		return nil
	case ShopTypeTenant:
		*s = ShopTypeTenant
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Signature string

type Sort string

type Staff1FirstName string

type Staff1FirstNameKana string

type Staff1LastName string

type Staff1LastNameKana string

type Staff1Mail string

type Staff1Tel string

type Staff2FirstName string

type Staff2FirstNameKana string

type Staff2LastName string

type Staff2LastNameKana string

type Staff2Mail string

type Staff2Tel string

type StartDate string

type StopDate string

// Ref: #/components/schemas/Subscription
type Subscription struct {
	// サブスクリプションID.
	ID              OptString                    `json:"id"`
	ShopID          OptShopPropertiesID          `json:"shop_id"`
	PayType         OptSubscriptionPayType       `json:"pay_type"`
	PlanID          OptPlanPropertiesID          `json:"plan_id"`
	PlanName        OptPlanName                  `json:"plan_name"`
	CustomerID      OptID                        `json:"customer_id"`
	CardID          OptPropertiesID              `json:"card_id"`
	PaymentMethodID OptPaymentMethodPropertiesID `json:"payment_method_id"`
	Amount          OptPlanPropertiesAmount      `json:"amount"`
	Tax             OptPlanPropertiesTax         `json:"tax"`
	TotalAmount     OptTotalAmount               `json:"total_amount"`
	// 初回利用金額\
	// \
	// この値が設定されているとき、このサブスクリプションは初回の課金のみこの金額で課金し、2回目以降はプラン情報がもつ`amount`の金額で課金します。.
	InitialAmount OptInt `json:"initial_amount"`
	// 初回税送料\
	// \
	// この値が設定されているとき、このサブスクリプションは初回の課金のみこの金額で課金し、2回目以降はプラン情報がもつ`tax`の金額で課金します。.
	InitialTax OptInt `json:"initial_tax"`
	// 初回合計金額\
	// \
	// `initial_amount`と`initial_tax`の合計金額です。.
	InitialTotalAmount OptInt                `json:"initial_total_amount"`
	Status             OptSubscriptionStatus `json:"status"`
	// 課金開始日\
	// サブスクリプションの開始日です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	StartDate OptString `json:"start_date"`
	// 次回課金日\
	// サブスクリプションの次回課金日です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	NextChargeDate OptString `json:"next_charge_date"`
	// 課金停止日\
	// サブスクリプションの停止日です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	StopDate OptNilString `json:"stop_date"`
	// 月末課金フラグ
	// - `0`：月末課金を行わない
	// - `1`：月末課金を行う.
	EndMonthFlag OptSubscriptionEndMonthFlag `json:"end_month_flag"`
	// ※ 閉塞機能.
	SendURL      OptNilString       `json:"send_url"`
	ErrorCode    OptErrorCode       `json:"error_code"`
	ClientField1 OptNilClientFieldN `json:"client_field_1"`
	ClientField2 OptNilClientFieldN `json:"client_field_2"`
	ClientField3 OptNilClientFieldN `json:"client_field_3"`
	Remarks      OptNilRemarks      `json:"remarks"`
	Created      OptCreated         `json:"created"`
	Updated      OptNilUpdated      `json:"updated"`
}

// GetID returns the value of ID.
func (s *Subscription) GetID() OptString {
	return s.ID
}

// GetShopID returns the value of ShopID.
func (s *Subscription) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetPayType returns the value of PayType.
func (s *Subscription) GetPayType() OptSubscriptionPayType {
	return s.PayType
}

// GetPlanID returns the value of PlanID.
func (s *Subscription) GetPlanID() OptPlanPropertiesID {
	return s.PlanID
}

// GetPlanName returns the value of PlanName.
func (s *Subscription) GetPlanName() OptPlanName {
	return s.PlanName
}

// GetCustomerID returns the value of CustomerID.
func (s *Subscription) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCardID returns the value of CardID.
func (s *Subscription) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *Subscription) GetPaymentMethodID() OptPaymentMethodPropertiesID {
	return s.PaymentMethodID
}

// GetAmount returns the value of Amount.
func (s *Subscription) GetAmount() OptPlanPropertiesAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *Subscription) GetTax() OptPlanPropertiesTax {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *Subscription) GetTotalAmount() OptTotalAmount {
	return s.TotalAmount
}

// GetInitialAmount returns the value of InitialAmount.
func (s *Subscription) GetInitialAmount() OptInt {
	return s.InitialAmount
}

// GetInitialTax returns the value of InitialTax.
func (s *Subscription) GetInitialTax() OptInt {
	return s.InitialTax
}

// GetInitialTotalAmount returns the value of InitialTotalAmount.
func (s *Subscription) GetInitialTotalAmount() OptInt {
	return s.InitialTotalAmount
}

// GetStatus returns the value of Status.
func (s *Subscription) GetStatus() OptSubscriptionStatus {
	return s.Status
}

// GetStartDate returns the value of StartDate.
func (s *Subscription) GetStartDate() OptString {
	return s.StartDate
}

// GetNextChargeDate returns the value of NextChargeDate.
func (s *Subscription) GetNextChargeDate() OptString {
	return s.NextChargeDate
}

// GetStopDate returns the value of StopDate.
func (s *Subscription) GetStopDate() OptNilString {
	return s.StopDate
}

// GetEndMonthFlag returns the value of EndMonthFlag.
func (s *Subscription) GetEndMonthFlag() OptSubscriptionEndMonthFlag {
	return s.EndMonthFlag
}

// GetSendURL returns the value of SendURL.
func (s *Subscription) GetSendURL() OptNilString {
	return s.SendURL
}

// GetErrorCode returns the value of ErrorCode.
func (s *Subscription) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetClientField1 returns the value of ClientField1.
func (s *Subscription) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *Subscription) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *Subscription) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetRemarks returns the value of Remarks.
func (s *Subscription) GetRemarks() OptNilRemarks {
	return s.Remarks
}

// GetCreated returns the value of Created.
func (s *Subscription) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *Subscription) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *Subscription) SetID(val OptString) {
	s.ID = val
}

// SetShopID sets the value of ShopID.
func (s *Subscription) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetPayType sets the value of PayType.
func (s *Subscription) SetPayType(val OptSubscriptionPayType) {
	s.PayType = val
}

// SetPlanID sets the value of PlanID.
func (s *Subscription) SetPlanID(val OptPlanPropertiesID) {
	s.PlanID = val
}

// SetPlanName sets the value of PlanName.
func (s *Subscription) SetPlanName(val OptPlanName) {
	s.PlanName = val
}

// SetCustomerID sets the value of CustomerID.
func (s *Subscription) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCardID sets the value of CardID.
func (s *Subscription) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *Subscription) SetPaymentMethodID(val OptPaymentMethodPropertiesID) {
	s.PaymentMethodID = val
}

// SetAmount sets the value of Amount.
func (s *Subscription) SetAmount(val OptPlanPropertiesAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *Subscription) SetTax(val OptPlanPropertiesTax) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *Subscription) SetTotalAmount(val OptTotalAmount) {
	s.TotalAmount = val
}

// SetInitialAmount sets the value of InitialAmount.
func (s *Subscription) SetInitialAmount(val OptInt) {
	s.InitialAmount = val
}

// SetInitialTax sets the value of InitialTax.
func (s *Subscription) SetInitialTax(val OptInt) {
	s.InitialTax = val
}

// SetInitialTotalAmount sets the value of InitialTotalAmount.
func (s *Subscription) SetInitialTotalAmount(val OptInt) {
	s.InitialTotalAmount = val
}

// SetStatus sets the value of Status.
func (s *Subscription) SetStatus(val OptSubscriptionStatus) {
	s.Status = val
}

// SetStartDate sets the value of StartDate.
func (s *Subscription) SetStartDate(val OptString) {
	s.StartDate = val
}

// SetNextChargeDate sets the value of NextChargeDate.
func (s *Subscription) SetNextChargeDate(val OptString) {
	s.NextChargeDate = val
}

// SetStopDate sets the value of StopDate.
func (s *Subscription) SetStopDate(val OptNilString) {
	s.StopDate = val
}

// SetEndMonthFlag sets the value of EndMonthFlag.
func (s *Subscription) SetEndMonthFlag(val OptSubscriptionEndMonthFlag) {
	s.EndMonthFlag = val
}

// SetSendURL sets the value of SendURL.
func (s *Subscription) SetSendURL(val OptNilString) {
	s.SendURL = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *Subscription) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetClientField1 sets the value of ClientField1.
func (s *Subscription) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *Subscription) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *Subscription) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetRemarks sets the value of Remarks.
func (s *Subscription) SetRemarks(val OptNilRemarks) {
	s.Remarks = val
}

// SetCreated sets the value of Created.
func (s *Subscription) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *Subscription) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*Subscription) createSubscriptionRes()   {}
func (*Subscription) deleteSubscriptionRes()   {}
func (*Subscription) retrieveSubscriptionRes() {}
func (*Subscription) updateSubscriptionRes()   {}

// Ref: #/components/schemas/Subscription.Creating.Request
type SubscriptionCreatingRequest struct {
	ID              OptSubscriptionPropertiesID  `json:"id"`
	PayType         SubscriptionPayType          `json:"pay_type"`
	PlanID          PlanPropertiesID             `json:"plan_id"`
	CustomerID      ID                           `json:"customer_id"`
	CardID          OptPropertiesID              `json:"card_id"`
	PaymentMethodID OptPaymentMethodPropertiesID `json:"payment_method_id"`
	StartDate       StartDate                    `json:"start_date"`
	StopDate        OptNilStopDate               `json:"stop_date"`
	EndMonthFlag    OptEndMonthFlag              `json:"end_month_flag"`
	InitialAmount   OptInitialAmount             `json:"initial_amount"`
	InitialTax      OptInitialTax                `json:"initial_tax"`
	Remarks         OptNilRemarks                `json:"remarks"`
	ClientField1    OptNilClientFieldN           `json:"client_field_1"`
	ClientField2    OptNilClientFieldN           `json:"client_field_2"`
	ClientField3    OptNilClientFieldN           `json:"client_field_3"`
	// Deprecated: schema marks this property as deprecated.
	SendURL OptNilSendURL `json:"send_url"`
}

// GetID returns the value of ID.
func (s *SubscriptionCreatingRequest) GetID() OptSubscriptionPropertiesID {
	return s.ID
}

// GetPayType returns the value of PayType.
func (s *SubscriptionCreatingRequest) GetPayType() SubscriptionPayType {
	return s.PayType
}

// GetPlanID returns the value of PlanID.
func (s *SubscriptionCreatingRequest) GetPlanID() PlanPropertiesID {
	return s.PlanID
}

// GetCustomerID returns the value of CustomerID.
func (s *SubscriptionCreatingRequest) GetCustomerID() ID {
	return s.CustomerID
}

// GetCardID returns the value of CardID.
func (s *SubscriptionCreatingRequest) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *SubscriptionCreatingRequest) GetPaymentMethodID() OptPaymentMethodPropertiesID {
	return s.PaymentMethodID
}

// GetStartDate returns the value of StartDate.
func (s *SubscriptionCreatingRequest) GetStartDate() StartDate {
	return s.StartDate
}

// GetStopDate returns the value of StopDate.
func (s *SubscriptionCreatingRequest) GetStopDate() OptNilStopDate {
	return s.StopDate
}

// GetEndMonthFlag returns the value of EndMonthFlag.
func (s *SubscriptionCreatingRequest) GetEndMonthFlag() OptEndMonthFlag {
	return s.EndMonthFlag
}

// GetInitialAmount returns the value of InitialAmount.
func (s *SubscriptionCreatingRequest) GetInitialAmount() OptInitialAmount {
	return s.InitialAmount
}

// GetInitialTax returns the value of InitialTax.
func (s *SubscriptionCreatingRequest) GetInitialTax() OptInitialTax {
	return s.InitialTax
}

// GetRemarks returns the value of Remarks.
func (s *SubscriptionCreatingRequest) GetRemarks() OptNilRemarks {
	return s.Remarks
}

// GetClientField1 returns the value of ClientField1.
func (s *SubscriptionCreatingRequest) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *SubscriptionCreatingRequest) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *SubscriptionCreatingRequest) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetSendURL returns the value of SendURL.
func (s *SubscriptionCreatingRequest) GetSendURL() OptNilSendURL {
	return s.SendURL
}

// SetID sets the value of ID.
func (s *SubscriptionCreatingRequest) SetID(val OptSubscriptionPropertiesID) {
	s.ID = val
}

// SetPayType sets the value of PayType.
func (s *SubscriptionCreatingRequest) SetPayType(val SubscriptionPayType) {
	s.PayType = val
}

// SetPlanID sets the value of PlanID.
func (s *SubscriptionCreatingRequest) SetPlanID(val PlanPropertiesID) {
	s.PlanID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *SubscriptionCreatingRequest) SetCustomerID(val ID) {
	s.CustomerID = val
}

// SetCardID sets the value of CardID.
func (s *SubscriptionCreatingRequest) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *SubscriptionCreatingRequest) SetPaymentMethodID(val OptPaymentMethodPropertiesID) {
	s.PaymentMethodID = val
}

// SetStartDate sets the value of StartDate.
func (s *SubscriptionCreatingRequest) SetStartDate(val StartDate) {
	s.StartDate = val
}

// SetStopDate sets the value of StopDate.
func (s *SubscriptionCreatingRequest) SetStopDate(val OptNilStopDate) {
	s.StopDate = val
}

// SetEndMonthFlag sets the value of EndMonthFlag.
func (s *SubscriptionCreatingRequest) SetEndMonthFlag(val OptEndMonthFlag) {
	s.EndMonthFlag = val
}

// SetInitialAmount sets the value of InitialAmount.
func (s *SubscriptionCreatingRequest) SetInitialAmount(val OptInitialAmount) {
	s.InitialAmount = val
}

// SetInitialTax sets the value of InitialTax.
func (s *SubscriptionCreatingRequest) SetInitialTax(val OptInitialTax) {
	s.InitialTax = val
}

// SetRemarks sets the value of Remarks.
func (s *SubscriptionCreatingRequest) SetRemarks(val OptNilRemarks) {
	s.Remarks = val
}

// SetClientField1 sets the value of ClientField1.
func (s *SubscriptionCreatingRequest) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *SubscriptionCreatingRequest) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *SubscriptionCreatingRequest) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetSendURL sets the value of SendURL.
func (s *SubscriptionCreatingRequest) SetSendURL(val OptNilSendURL) {
	s.SendURL = val
}

// 月末課金フラグ
// - `0`：月末課金を行わない
// - `1`：月末課金を行う.
type SubscriptionEndMonthFlag string

const (
	SubscriptionEndMonthFlag0 SubscriptionEndMonthFlag = "0"
	SubscriptionEndMonthFlag1 SubscriptionEndMonthFlag = "1"
)

// AllValues returns all SubscriptionEndMonthFlag values.
func (SubscriptionEndMonthFlag) AllValues() []SubscriptionEndMonthFlag {
	return []SubscriptionEndMonthFlag{
		SubscriptionEndMonthFlag0,
		SubscriptionEndMonthFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionEndMonthFlag) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionEndMonthFlag0:
		return []byte(s), nil
	case SubscriptionEndMonthFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionEndMonthFlag) UnmarshalText(data []byte) error {
	switch SubscriptionEndMonthFlag(data) {
	case SubscriptionEndMonthFlag0:
		*s = SubscriptionEndMonthFlag0
		return nil
	case SubscriptionEndMonthFlag1:
		*s = SubscriptionEndMonthFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SubscriptionIdSchema string

// Ref: #/components/schemas/Subscription.list
type SubscriptionList struct {
	List []Subscription `json:"list"`
}

// GetList returns the value of List.
func (s *SubscriptionList) GetList() []Subscription {
	return s.List
}

// SetList sets the value of List.
func (s *SubscriptionList) SetList(val []Subscription) {
	s.List = val
}

func (*SubscriptionList) retrieveSubscriptionListRes() {}

// 決済種別（サブスクリプションに対応しているもの）
// - `Card`: クレジットカード/デビットカード/プリペイドカード
// - `Directdebit`: 口座振替.
// Ref: #/components/schemas/SubscriptionPayType
type SubscriptionPayType string

const (
	SubscriptionPayTypeCard        SubscriptionPayType = "Card"
	SubscriptionPayTypeDirectdebit SubscriptionPayType = "Directdebit"
)

// AllValues returns all SubscriptionPayType values.
func (SubscriptionPayType) AllValues() []SubscriptionPayType {
	return []SubscriptionPayType{
		SubscriptionPayTypeCard,
		SubscriptionPayTypeDirectdebit,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionPayType) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionPayTypeCard:
		return []byte(s), nil
	case SubscriptionPayTypeDirectdebit:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionPayType) UnmarshalText(data []byte) error {
	switch SubscriptionPayType(data) {
	case SubscriptionPayTypeCard:
		*s = SubscriptionPayTypeCard
		return nil
	case SubscriptionPayTypeDirectdebit:
		*s = SubscriptionPayTypeDirectdebit
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SubscriptionPropertiesID string

// Ref: #/components/schemas/SubscriptionResult
type SubscriptionResult struct {
	ID              OptSubscriptionPropertiesID  `json:"id"`
	PayType         OptSubscriptionPayType       `json:"pay_type"`
	Status          OptSubscriptionResultStatus  `json:"status"`
	ProcessDate     OptNilProcessDate            `json:"process_date"`
	PlanID          OptPlanPropertiesID          `json:"plan_id"`
	Amount          OptPlanPropertiesAmount      `json:"amount"`
	Tax             OptPlanPropertiesTax         `json:"tax"`
	TotalAmount     OptTotalAmount               `json:"total_amount"`
	CustomerID      OptID                        `json:"customer_id"`
	PaymentMethodID OptPaymentMethodPropertiesID `json:"payment_method_id"`
	CardID          OptPropertiesID              `json:"card_id"`
	CardNo          OptCardNo                    `json:"card_no"`
	ShopID          OptShopPropertiesID          `json:"shop_id"`
	AccessID        OptAccessID                  `json:"access_id"`
	// ※ 閉塞機能.
	//
	// Deprecated: schema marks this property as deprecated.
	SendURL         OptNilString                 `json:"send_url"`
	ClientField1    OptNilClientFieldN           `json:"client_field_1"`
	ClientField2    OptNilClientFieldN           `json:"client_field_2"`
	ClientField3    OptNilClientFieldN           `json:"client_field_3"`
	IntervalPattern OptPropertiesIntervalPattern `json:"interval_pattern"`
	IntervalCount   OptPropertiesIntervalCount   `json:"interval_count"`
	// ご利用明細表示内容\
	// デフォルト：ショップ名カナの先頭9文字.
	Remarks   OptNilString `json:"remarks"`
	ErrorCode OptErrorCode `json:"error_code"`
	Created   OptCreated   `json:"created"`
}

// GetID returns the value of ID.
func (s *SubscriptionResult) GetID() OptSubscriptionPropertiesID {
	return s.ID
}

// GetPayType returns the value of PayType.
func (s *SubscriptionResult) GetPayType() OptSubscriptionPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *SubscriptionResult) GetStatus() OptSubscriptionResultStatus {
	return s.Status
}

// GetProcessDate returns the value of ProcessDate.
func (s *SubscriptionResult) GetProcessDate() OptNilProcessDate {
	return s.ProcessDate
}

// GetPlanID returns the value of PlanID.
func (s *SubscriptionResult) GetPlanID() OptPlanPropertiesID {
	return s.PlanID
}

// GetAmount returns the value of Amount.
func (s *SubscriptionResult) GetAmount() OptPlanPropertiesAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *SubscriptionResult) GetTax() OptPlanPropertiesTax {
	return s.Tax
}

// GetTotalAmount returns the value of TotalAmount.
func (s *SubscriptionResult) GetTotalAmount() OptTotalAmount {
	return s.TotalAmount
}

// GetCustomerID returns the value of CustomerID.
func (s *SubscriptionResult) GetCustomerID() OptID {
	return s.CustomerID
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *SubscriptionResult) GetPaymentMethodID() OptPaymentMethodPropertiesID {
	return s.PaymentMethodID
}

// GetCardID returns the value of CardID.
func (s *SubscriptionResult) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetCardNo returns the value of CardNo.
func (s *SubscriptionResult) GetCardNo() OptCardNo {
	return s.CardNo
}

// GetShopID returns the value of ShopID.
func (s *SubscriptionResult) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetAccessID returns the value of AccessID.
func (s *SubscriptionResult) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetSendURL returns the value of SendURL.
func (s *SubscriptionResult) GetSendURL() OptNilString {
	return s.SendURL
}

// GetClientField1 returns the value of ClientField1.
func (s *SubscriptionResult) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *SubscriptionResult) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *SubscriptionResult) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetIntervalPattern returns the value of IntervalPattern.
func (s *SubscriptionResult) GetIntervalPattern() OptPropertiesIntervalPattern {
	return s.IntervalPattern
}

// GetIntervalCount returns the value of IntervalCount.
func (s *SubscriptionResult) GetIntervalCount() OptPropertiesIntervalCount {
	return s.IntervalCount
}

// GetRemarks returns the value of Remarks.
func (s *SubscriptionResult) GetRemarks() OptNilString {
	return s.Remarks
}

// GetErrorCode returns the value of ErrorCode.
func (s *SubscriptionResult) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetCreated returns the value of Created.
func (s *SubscriptionResult) GetCreated() OptCreated {
	return s.Created
}

// SetID sets the value of ID.
func (s *SubscriptionResult) SetID(val OptSubscriptionPropertiesID) {
	s.ID = val
}

// SetPayType sets the value of PayType.
func (s *SubscriptionResult) SetPayType(val OptSubscriptionPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *SubscriptionResult) SetStatus(val OptSubscriptionResultStatus) {
	s.Status = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *SubscriptionResult) SetProcessDate(val OptNilProcessDate) {
	s.ProcessDate = val
}

// SetPlanID sets the value of PlanID.
func (s *SubscriptionResult) SetPlanID(val OptPlanPropertiesID) {
	s.PlanID = val
}

// SetAmount sets the value of Amount.
func (s *SubscriptionResult) SetAmount(val OptPlanPropertiesAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *SubscriptionResult) SetTax(val OptPlanPropertiesTax) {
	s.Tax = val
}

// SetTotalAmount sets the value of TotalAmount.
func (s *SubscriptionResult) SetTotalAmount(val OptTotalAmount) {
	s.TotalAmount = val
}

// SetCustomerID sets the value of CustomerID.
func (s *SubscriptionResult) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *SubscriptionResult) SetPaymentMethodID(val OptPaymentMethodPropertiesID) {
	s.PaymentMethodID = val
}

// SetCardID sets the value of CardID.
func (s *SubscriptionResult) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetCardNo sets the value of CardNo.
func (s *SubscriptionResult) SetCardNo(val OptCardNo) {
	s.CardNo = val
}

// SetShopID sets the value of ShopID.
func (s *SubscriptionResult) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetAccessID sets the value of AccessID.
func (s *SubscriptionResult) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetSendURL sets the value of SendURL.
func (s *SubscriptionResult) SetSendURL(val OptNilString) {
	s.SendURL = val
}

// SetClientField1 sets the value of ClientField1.
func (s *SubscriptionResult) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *SubscriptionResult) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *SubscriptionResult) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetIntervalPattern sets the value of IntervalPattern.
func (s *SubscriptionResult) SetIntervalPattern(val OptPropertiesIntervalPattern) {
	s.IntervalPattern = val
}

// SetIntervalCount sets the value of IntervalCount.
func (s *SubscriptionResult) SetIntervalCount(val OptPropertiesIntervalCount) {
	s.IntervalCount = val
}

// SetRemarks sets the value of Remarks.
func (s *SubscriptionResult) SetRemarks(val OptNilString) {
	s.Remarks = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *SubscriptionResult) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetCreated sets the value of Created.
func (s *SubscriptionResult) SetCreated(val OptCreated) {
	s.Created = val
}

// Merged schema.
// Ref: #/components/schemas/SubscriptionResult.ListRetrieving.Response
type SubscriptionResultListRetrievingResponse struct {
	// 総件数.
	TotalCount OptInt `json:"total_count"`
	// 最後のページのページ数.
	LastPage OptInt `json:"last_page"`
	// 現在のページのページ数.
	CurrentPage OptInt `json:"current_page"`
	// 1ページの最大件数.
	Limit OptInt `json:"limit"`
	// 次のページのコンテンツを取得するためのURL.
	LinkNext OptNilString `json:"link_next"`
	// 前のページのコンテンツを取得するためのURL.
	LinkPrevious OptNilString         `json:"link_previous"`
	List         []SubscriptionResult `json:"list"`
}

// GetTotalCount returns the value of TotalCount.
func (s *SubscriptionResultListRetrievingResponse) GetTotalCount() OptInt {
	return s.TotalCount
}

// GetLastPage returns the value of LastPage.
func (s *SubscriptionResultListRetrievingResponse) GetLastPage() OptInt {
	return s.LastPage
}

// GetCurrentPage returns the value of CurrentPage.
func (s *SubscriptionResultListRetrievingResponse) GetCurrentPage() OptInt {
	return s.CurrentPage
}

// GetLimit returns the value of Limit.
func (s *SubscriptionResultListRetrievingResponse) GetLimit() OptInt {
	return s.Limit
}

// GetLinkNext returns the value of LinkNext.
func (s *SubscriptionResultListRetrievingResponse) GetLinkNext() OptNilString {
	return s.LinkNext
}

// GetLinkPrevious returns the value of LinkPrevious.
func (s *SubscriptionResultListRetrievingResponse) GetLinkPrevious() OptNilString {
	return s.LinkPrevious
}

// GetList returns the value of List.
func (s *SubscriptionResultListRetrievingResponse) GetList() []SubscriptionResult {
	return s.List
}

// SetTotalCount sets the value of TotalCount.
func (s *SubscriptionResultListRetrievingResponse) SetTotalCount(val OptInt) {
	s.TotalCount = val
}

// SetLastPage sets the value of LastPage.
func (s *SubscriptionResultListRetrievingResponse) SetLastPage(val OptInt) {
	s.LastPage = val
}

// SetCurrentPage sets the value of CurrentPage.
func (s *SubscriptionResultListRetrievingResponse) SetCurrentPage(val OptInt) {
	s.CurrentPage = val
}

// SetLimit sets the value of Limit.
func (s *SubscriptionResultListRetrievingResponse) SetLimit(val OptInt) {
	s.Limit = val
}

// SetLinkNext sets the value of LinkNext.
func (s *SubscriptionResultListRetrievingResponse) SetLinkNext(val OptNilString) {
	s.LinkNext = val
}

// SetLinkPrevious sets the value of LinkPrevious.
func (s *SubscriptionResultListRetrievingResponse) SetLinkPrevious(val OptNilString) {
	s.LinkPrevious = val
}

// SetList sets the value of List.
func (s *SubscriptionResultListRetrievingResponse) SetList(val []SubscriptionResult) {
	s.List = val
}

func (*SubscriptionResultListRetrievingResponse) retrieveSubscriptionResultListRes() {}

// ステータス\
// サブスクリプション課金のステータス（結果）です。
// - `CHECKED`：有効性チェックに成功
// - `SUCCEEDED`：課金成功
// - `FAILED`：課金失敗.
// Ref: #/components/schemas/SubscriptionResultStatus
type SubscriptionResultStatus string

const (
	SubscriptionResultStatusCHECKED   SubscriptionResultStatus = "CHECKED"
	SubscriptionResultStatusSUCCEEDED SubscriptionResultStatus = "SUCCEEDED"
	SubscriptionResultStatusFAILED    SubscriptionResultStatus = "FAILED"
)

// AllValues returns all SubscriptionResultStatus values.
func (SubscriptionResultStatus) AllValues() []SubscriptionResultStatus {
	return []SubscriptionResultStatus{
		SubscriptionResultStatusCHECKED,
		SubscriptionResultStatusSUCCEEDED,
		SubscriptionResultStatusFAILED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionResultStatus) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionResultStatusCHECKED:
		return []byte(s), nil
	case SubscriptionResultStatusSUCCEEDED:
		return []byte(s), nil
	case SubscriptionResultStatusFAILED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionResultStatus) UnmarshalText(data []byte) error {
	switch SubscriptionResultStatus(data) {
	case SubscriptionResultStatusCHECKED:
		*s = SubscriptionResultStatusCHECKED
		return nil
	case SubscriptionResultStatusSUCCEEDED:
		*s = SubscriptionResultStatusSUCCEEDED
		return nil
	case SubscriptionResultStatusFAILED:
		*s = SubscriptionResultStatusFAILED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ステータス
// - `ACTIVE`: サブスクリプションが有効<br /><span
// class="smallText">設定した課金日に顧客に対して課金が行われます。</span>
// - `RUNNING`: 課金処理中
// - `CANCELED`: 解約済み<br /><span
// class="smallText">顧客に対して課金は行われません。</span>
// - `INCOMPLETE`: 登録失敗<br /><span
// class="smallText">何らかの理由により登録に失敗しました。顧客に対して課金は行われません。</span>.
// Ref: #/components/schemas/SubscriptionStatus
type SubscriptionStatus string

const (
	SubscriptionStatusACTIVE     SubscriptionStatus = "ACTIVE"
	SubscriptionStatusRUNNING    SubscriptionStatus = "RUNNING"
	SubscriptionStatusCANCELED   SubscriptionStatus = "CANCELED"
	SubscriptionStatusINCOMPLETE SubscriptionStatus = "INCOMPLETE"
)

// AllValues returns all SubscriptionStatus values.
func (SubscriptionStatus) AllValues() []SubscriptionStatus {
	return []SubscriptionStatus{
		SubscriptionStatusACTIVE,
		SubscriptionStatusRUNNING,
		SubscriptionStatusCANCELED,
		SubscriptionStatusINCOMPLETE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SubscriptionStatus) MarshalText() ([]byte, error) {
	switch s {
	case SubscriptionStatusACTIVE:
		return []byte(s), nil
	case SubscriptionStatusRUNNING:
		return []byte(s), nil
	case SubscriptionStatusCANCELED:
		return []byte(s), nil
	case SubscriptionStatusINCOMPLETE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SubscriptionStatus) UnmarshalText(data []byte) error {
	switch SubscriptionStatus(data) {
	case SubscriptionStatusACTIVE:
		*s = SubscriptionStatusACTIVE
		return nil
	case SubscriptionStatusRUNNING:
		*s = SubscriptionStatusRUNNING
		return nil
	case SubscriptionStatusCANCELED:
		*s = SubscriptionStatusCANCELED
		return nil
	case SubscriptionStatusINCOMPLETE:
		*s = SubscriptionStatusINCOMPLETE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Subscription.Updating.Request
type SubscriptionUpdatingRequest struct {
	PayType       SubscriptionPayType `json:"pay_type"`
	PlanID        OptPlanPropertiesID `json:"plan_id"`
	StartDate     OptStartDate        `json:"start_date"`
	StopDate      OptNilStopDate      `json:"stop_date"`
	EndMonthFlag  OptEndMonthFlag     `json:"end_month_flag"`
	InitialAmount OptInitialAmount    `json:"initial_amount"`
	InitialTax    OptInitialTax       `json:"initial_tax"`
	Remarks       OptNilRemarks       `json:"remarks"`
	ClientField1  OptNilClientFieldN  `json:"client_field_1"`
	ClientField2  OptNilClientFieldN  `json:"client_field_2"`
	ClientField3  OptNilClientFieldN  `json:"client_field_3"`
}

// GetPayType returns the value of PayType.
func (s *SubscriptionUpdatingRequest) GetPayType() SubscriptionPayType {
	return s.PayType
}

// GetPlanID returns the value of PlanID.
func (s *SubscriptionUpdatingRequest) GetPlanID() OptPlanPropertiesID {
	return s.PlanID
}

// GetStartDate returns the value of StartDate.
func (s *SubscriptionUpdatingRequest) GetStartDate() OptStartDate {
	return s.StartDate
}

// GetStopDate returns the value of StopDate.
func (s *SubscriptionUpdatingRequest) GetStopDate() OptNilStopDate {
	return s.StopDate
}

// GetEndMonthFlag returns the value of EndMonthFlag.
func (s *SubscriptionUpdatingRequest) GetEndMonthFlag() OptEndMonthFlag {
	return s.EndMonthFlag
}

// GetInitialAmount returns the value of InitialAmount.
func (s *SubscriptionUpdatingRequest) GetInitialAmount() OptInitialAmount {
	return s.InitialAmount
}

// GetInitialTax returns the value of InitialTax.
func (s *SubscriptionUpdatingRequest) GetInitialTax() OptInitialTax {
	return s.InitialTax
}

// GetRemarks returns the value of Remarks.
func (s *SubscriptionUpdatingRequest) GetRemarks() OptNilRemarks {
	return s.Remarks
}

// GetClientField1 returns the value of ClientField1.
func (s *SubscriptionUpdatingRequest) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *SubscriptionUpdatingRequest) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *SubscriptionUpdatingRequest) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// SetPayType sets the value of PayType.
func (s *SubscriptionUpdatingRequest) SetPayType(val SubscriptionPayType) {
	s.PayType = val
}

// SetPlanID sets the value of PlanID.
func (s *SubscriptionUpdatingRequest) SetPlanID(val OptPlanPropertiesID) {
	s.PlanID = val
}

// SetStartDate sets the value of StartDate.
func (s *SubscriptionUpdatingRequest) SetStartDate(val OptStartDate) {
	s.StartDate = val
}

// SetStopDate sets the value of StopDate.
func (s *SubscriptionUpdatingRequest) SetStopDate(val OptNilStopDate) {
	s.StopDate = val
}

// SetEndMonthFlag sets the value of EndMonthFlag.
func (s *SubscriptionUpdatingRequest) SetEndMonthFlag(val OptEndMonthFlag) {
	s.EndMonthFlag = val
}

// SetInitialAmount sets the value of InitialAmount.
func (s *SubscriptionUpdatingRequest) SetInitialAmount(val OptInitialAmount) {
	s.InitialAmount = val
}

// SetInitialTax sets the value of InitialTax.
func (s *SubscriptionUpdatingRequest) SetInitialTax(val OptInitialTax) {
	s.InitialTax = val
}

// SetRemarks sets the value of Remarks.
func (s *SubscriptionUpdatingRequest) SetRemarks(val OptNilRemarks) {
	s.Remarks = val
}

// SetClientField1 sets the value of ClientField1.
func (s *SubscriptionUpdatingRequest) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *SubscriptionUpdatingRequest) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *SubscriptionUpdatingRequest) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

type SuccessURL string

type SupportMail string

type SupportTel string

type TargetDate string

type Tax string

type TaxAmount int

type TaxableFeeAmount int

type TdTenantName string

// <span class="smallText color--blue-400">[3Dセキュア認証パラメータ]</span>\
// 請求先住所と配送先住所が一致しているか否か
// - `Y`: 住所は一致している
// - `N`: 住所は一致していない.
// Ref: #/components/schemas/tds2_addr_match
type Tds2AddrMatch string

const (
	Tds2AddrMatchY Tds2AddrMatch = "Y"
	Tds2AddrMatchN Tds2AddrMatch = "N"
)

// AllValues returns all Tds2AddrMatch values.
func (Tds2AddrMatch) AllValues() []Tds2AddrMatch {
	return []Tds2AddrMatch{
		Tds2AddrMatchY,
		Tds2AddrMatchN,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2AddrMatch) MarshalText() ([]byte, error) {
	switch s {
	case Tds2AddrMatchY:
		return []byte(s), nil
	case Tds2AddrMatchN:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2AddrMatch) UnmarshalText(data []byte) error {
	switch Tds2AddrMatch(data) {
	case Tds2AddrMatchY:
		*s = Tds2AddrMatchY
		return nil
	case Tds2AddrMatchN:
		*s = Tds2AddrMatchN
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Tds2BillAddrCity string

type Tds2BillAddrCountry string

type Tds2BillAddrLine1 string

type Tds2BillAddrLine2 string

type Tds2BillAddrLine3 string

type Tds2BillAddrPostCode string

type Tds2BillAddrState string

type Tds2ChAccChange string

type Tds2ChAccDate string

type Tds2ChAccPwChange string

type Tds2DeliveryEmailAddress string

// <span class="smallText color--blue-400">[3Dセキュア認証パラメータ]</span>\
// 商品納品時間枠
// - `01`: 電子デリバリー
// - `02`: 当日出荷
// - `03`: 翌日出荷
// - `04`: 2日目以降の出荷.
// Ref: #/components/schemas/tds2_delivery_timeframe
type Tds2DeliveryTimeframe string

const (
	Tds2DeliveryTimeframe01 Tds2DeliveryTimeframe = "01"
	Tds2DeliveryTimeframe02 Tds2DeliveryTimeframe = "02"
	Tds2DeliveryTimeframe03 Tds2DeliveryTimeframe = "03"
	Tds2DeliveryTimeframe04 Tds2DeliveryTimeframe = "04"
)

// AllValues returns all Tds2DeliveryTimeframe values.
func (Tds2DeliveryTimeframe) AllValues() []Tds2DeliveryTimeframe {
	return []Tds2DeliveryTimeframe{
		Tds2DeliveryTimeframe01,
		Tds2DeliveryTimeframe02,
		Tds2DeliveryTimeframe03,
		Tds2DeliveryTimeframe04,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2DeliveryTimeframe) MarshalText() ([]byte, error) {
	switch s {
	case Tds2DeliveryTimeframe01:
		return []byte(s), nil
	case Tds2DeliveryTimeframe02:
		return []byte(s), nil
	case Tds2DeliveryTimeframe03:
		return []byte(s), nil
	case Tds2DeliveryTimeframe04:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2DeliveryTimeframe) UnmarshalText(data []byte) error {
	switch Tds2DeliveryTimeframe(data) {
	case Tds2DeliveryTimeframe01:
		*s = Tds2DeliveryTimeframe01
		return nil
	case Tds2DeliveryTimeframe02:
		*s = Tds2DeliveryTimeframe02
		return nil
	case Tds2DeliveryTimeframe03:
		*s = Tds2DeliveryTimeframe03
		return nil
	case Tds2DeliveryTimeframe04:
		*s = Tds2DeliveryTimeframe04
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Tds2GiftCardAmount string

type Tds2GiftCardCount string

type Tds2GiftCardCurr string

type Tds2HomePhoneCc string

type Tds2HomePhoneNo string

type Tds2MobilePhoneCc string

type Tds2MobilePhoneNo string

type Tds2NbPurchaseAccount string

type Tds2PaymentAccAge string

type Tds2PreOrderDate string

// <span class="smallText color--blue-400">[3Dセキュア認証パラメータ]</span>\
// 商品の販売時期情報
// - `01`: 発売済み商品
// - `02`: 先行予約商品.
// Ref: #/components/schemas/tds2_pre_order_purchase_ind
type Tds2PreOrderPurchaseInd string

const (
	Tds2PreOrderPurchaseInd01 Tds2PreOrderPurchaseInd = "01"
	Tds2PreOrderPurchaseInd02 Tds2PreOrderPurchaseInd = "02"
)

// AllValues returns all Tds2PreOrderPurchaseInd values.
func (Tds2PreOrderPurchaseInd) AllValues() []Tds2PreOrderPurchaseInd {
	return []Tds2PreOrderPurchaseInd{
		Tds2PreOrderPurchaseInd01,
		Tds2PreOrderPurchaseInd02,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2PreOrderPurchaseInd) MarshalText() ([]byte, error) {
	switch s {
	case Tds2PreOrderPurchaseInd01:
		return []byte(s), nil
	case Tds2PreOrderPurchaseInd02:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2PreOrderPurchaseInd) UnmarshalText(data []byte) error {
	switch Tds2PreOrderPurchaseInd(data) {
	case Tds2PreOrderPurchaseInd01:
		*s = Tds2PreOrderPurchaseInd01
		return nil
	case Tds2PreOrderPurchaseInd02:
		*s = Tds2PreOrderPurchaseInd02
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Tds2ProvisionAttemptsDay string

type Tds2RecurringExpiry string

type Tds2RecurringFrequency string

// <span class="smallText color--blue-400">[3Dセキュア認証パラメータ]</span>\
// 商品の注文が初回か再注文か
// - `01`: 初回注文
// - `02`: 再注文.
// Ref: #/components/schemas/tds2_reorder_items_ind
type Tds2ReorderItemsInd string

const (
	Tds2ReorderItemsInd01 Tds2ReorderItemsInd = "01"
	Tds2ReorderItemsInd02 Tds2ReorderItemsInd = "02"
)

// AllValues returns all Tds2ReorderItemsInd values.
func (Tds2ReorderItemsInd) AllValues() []Tds2ReorderItemsInd {
	return []Tds2ReorderItemsInd{
		Tds2ReorderItemsInd01,
		Tds2ReorderItemsInd02,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2ReorderItemsInd) MarshalText() ([]byte, error) {
	switch s {
	case Tds2ReorderItemsInd01:
		return []byte(s), nil
	case Tds2ReorderItemsInd02:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2ReorderItemsInd) UnmarshalText(data []byte) error {
	switch Tds2ReorderItemsInd(data) {
	case Tds2ReorderItemsInd01:
		*s = Tds2ReorderItemsInd01
		return nil
	case Tds2ReorderItemsInd02:
		*s = Tds2ReorderItemsInd02
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Tds2RetURL string

type Tds2ShipAddrCity string

type Tds2ShipAddrCountry string

type Tds2ShipAddrLine1 string

type Tds2ShipAddrLine2 string

type Tds2ShipAddrLine3 string

type Tds2ShipAddrPostCode string

type Tds2ShipAddrState string

type Tds2ShipAddressUsage string

// <span class="smallText color--blue-400">[3Dセキュア認証パラメータ]</span>\
// 取引商品の配送方法
// - `01`: カード顧客の請求先住所に配送
// - `02`: 加盟店が保持している確認済み住所（請求先住所でない）に配送
// - `03`: カード顧客の請求先住所と異なる住所に配送
// - `04`: 店舗への配送（店舗の住所は配送先住所で指定）
// - `05`:
// デジタル商品（オンラインサービス、電子ギフトカードおよび償還コードを含む）
// - `06`: 配送なし（旅行およびイベントのチケット）
// - `07`:
// その他（ゲーム、配送されないデジタルサービス、電子メディアの購読料など）.
// Ref: #/components/schemas/tds2_ship_ind
type Tds2ShipInd string

const (
	Tds2ShipInd01 Tds2ShipInd = "01"
	Tds2ShipInd02 Tds2ShipInd = "02"
	Tds2ShipInd03 Tds2ShipInd = "03"
	Tds2ShipInd04 Tds2ShipInd = "04"
	Tds2ShipInd05 Tds2ShipInd = "05"
	Tds2ShipInd06 Tds2ShipInd = "06"
	Tds2ShipInd07 Tds2ShipInd = "07"
)

// AllValues returns all Tds2ShipInd values.
func (Tds2ShipInd) AllValues() []Tds2ShipInd {
	return []Tds2ShipInd{
		Tds2ShipInd01,
		Tds2ShipInd02,
		Tds2ShipInd03,
		Tds2ShipInd04,
		Tds2ShipInd05,
		Tds2ShipInd06,
		Tds2ShipInd07,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2ShipInd) MarshalText() ([]byte, error) {
	switch s {
	case Tds2ShipInd01:
		return []byte(s), nil
	case Tds2ShipInd02:
		return []byte(s), nil
	case Tds2ShipInd03:
		return []byte(s), nil
	case Tds2ShipInd04:
		return []byte(s), nil
	case Tds2ShipInd05:
		return []byte(s), nil
	case Tds2ShipInd06:
		return []byte(s), nil
	case Tds2ShipInd07:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2ShipInd) UnmarshalText(data []byte) error {
	switch Tds2ShipInd(data) {
	case Tds2ShipInd01:
		*s = Tds2ShipInd01
		return nil
	case Tds2ShipInd02:
		*s = Tds2ShipInd02
		return nil
	case Tds2ShipInd03:
		*s = Tds2ShipInd03
		return nil
	case Tds2ShipInd04:
		*s = Tds2ShipInd04
		return nil
	case Tds2ShipInd05:
		*s = Tds2ShipInd05
		return nil
	case Tds2ShipInd06:
		*s = Tds2ShipInd06
		return nil
	case Tds2ShipInd07:
		*s = Tds2ShipInd07
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// <span class="smallText color--blue-400">[3Dセキュア認証パラメータ]</span>\
// カード顧客名と出荷先名が一致しているか否か\
// カード顧客の顧客名と登録に使用される配送先名の一致/不一致を設定
// - `01`: カード顧客名と出荷先名が一致
// - `02`: カード顧客名と出荷先名が不一致.
// Ref: #/components/schemas/tds2_ship_name_ind
type Tds2ShipNameInd string

const (
	Tds2ShipNameInd01 Tds2ShipNameInd = "01"
	Tds2ShipNameInd02 Tds2ShipNameInd = "02"
)

// AllValues returns all Tds2ShipNameInd values.
func (Tds2ShipNameInd) AllValues() []Tds2ShipNameInd {
	return []Tds2ShipNameInd{
		Tds2ShipNameInd01,
		Tds2ShipNameInd02,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2ShipNameInd) MarshalText() ([]byte, error) {
	switch s {
	case Tds2ShipNameInd01:
		return []byte(s), nil
	case Tds2ShipNameInd02:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2ShipNameInd) UnmarshalText(data []byte) error {
	switch Tds2ShipNameInd(data) {
	case Tds2ShipNameInd01:
		*s = Tds2ShipNameInd01
		return nil
	case Tds2ShipNameInd02:
		*s = Tds2ShipNameInd02
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 3Dセキュア2.0認証ステータス
// - `AUTHENTICATING`: 3Dセキュア認証処理中
// - `CHALLENGE`: 3Dセキュア認証が必要
// - `ACTIVATED`: 有効化済み
// - `AUTHENTICATED`: 3Dセキュア認証済み.
// Ref: #/components/schemas/Tds2Status
type Tds2Status string

const (
	Tds2StatusAUTHENTICATING Tds2Status = "AUTHENTICATING"
	Tds2StatusCHALLENGE      Tds2Status = "CHALLENGE"
	Tds2StatusACTIVATED      Tds2Status = "ACTIVATED"
	Tds2StatusAUTHENTICATED  Tds2Status = "AUTHENTICATED"
)

// AllValues returns all Tds2Status values.
func (Tds2Status) AllValues() []Tds2Status {
	return []Tds2Status{
		Tds2StatusAUTHENTICATING,
		Tds2StatusCHALLENGE,
		Tds2StatusACTIVATED,
		Tds2StatusAUTHENTICATED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2Status) MarshalText() ([]byte, error) {
	switch s {
	case Tds2StatusAUTHENTICATING:
		return []byte(s), nil
	case Tds2StatusCHALLENGE:
		return []byte(s), nil
	case Tds2StatusACTIVATED:
		return []byte(s), nil
	case Tds2StatusAUTHENTICATED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2Status) UnmarshalText(data []byte) error {
	switch Tds2Status(data) {
	case Tds2StatusAUTHENTICATING:
		*s = Tds2StatusAUTHENTICATING
		return nil
	case Tds2StatusCHALLENGE:
		*s = Tds2StatusCHALLENGE
		return nil
	case Tds2StatusACTIVATED:
		*s = Tds2StatusACTIVATED
		return nil
	case Tds2StatusAUTHENTICATED:
		*s = Tds2StatusAUTHENTICATED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// <span class="smallText color--blue-400">[3Dセキュア認証パラメータ]</span>\
// アカウントの不審行為情報\
// カード顧客で、不審な行動（過去の不正行為を含む）を加盟店様が発見したかどうかを設定
// - `01`: 不審な行動なし
// - `02`: 不審な行動あり.
// Ref: #/components/schemas/tds2_suspicious_acc_activity
type Tds2SuspiciousAccActivity string

const (
	Tds2SuspiciousAccActivity01 Tds2SuspiciousAccActivity = "01"
	Tds2SuspiciousAccActivity02 Tds2SuspiciousAccActivity = "02"
)

// AllValues returns all Tds2SuspiciousAccActivity values.
func (Tds2SuspiciousAccActivity) AllValues() []Tds2SuspiciousAccActivity {
	return []Tds2SuspiciousAccActivity{
		Tds2SuspiciousAccActivity01,
		Tds2SuspiciousAccActivity02,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2SuspiciousAccActivity) MarshalText() ([]byte, error) {
	switch s {
	case Tds2SuspiciousAccActivity01:
		return []byte(s), nil
	case Tds2SuspiciousAccActivity02:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2SuspiciousAccActivity) UnmarshalText(data []byte) error {
	switch Tds2SuspiciousAccActivity(data) {
	case Tds2SuspiciousAccActivity01:
		*s = Tds2SuspiciousAccActivity01
		return nil
	case Tds2SuspiciousAccActivity02:
		*s = Tds2SuspiciousAccActivity02
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Tds2ThreeDsReqAuthData string

// <span class="smallText color--blue-400">[3Dセキュア認証パラメータ]</span>\
// ログイン方法\
// ログイン方法を設定する場合、ログイン証跡とログイン日時の設定が必要です。
// - `01`: 認証なし（ゲストとしてログイン）
// - `02`: 加盟店様自身の認証情報
// - `03`: SSO(シングルサインオン)
// - `04`: イシュアーの認証情報
// - `05`: サードパーティ認証
// - `06`: FIDO認証.
// Ref: #/components/schemas/tds2_three_ds_req_auth_method
type Tds2ThreeDsReqAuthMethod string

const (
	Tds2ThreeDsReqAuthMethod01 Tds2ThreeDsReqAuthMethod = "01"
	Tds2ThreeDsReqAuthMethod02 Tds2ThreeDsReqAuthMethod = "02"
	Tds2ThreeDsReqAuthMethod03 Tds2ThreeDsReqAuthMethod = "03"
	Tds2ThreeDsReqAuthMethod04 Tds2ThreeDsReqAuthMethod = "04"
	Tds2ThreeDsReqAuthMethod05 Tds2ThreeDsReqAuthMethod = "05"
	Tds2ThreeDsReqAuthMethod06 Tds2ThreeDsReqAuthMethod = "06"
)

// AllValues returns all Tds2ThreeDsReqAuthMethod values.
func (Tds2ThreeDsReqAuthMethod) AllValues() []Tds2ThreeDsReqAuthMethod {
	return []Tds2ThreeDsReqAuthMethod{
		Tds2ThreeDsReqAuthMethod01,
		Tds2ThreeDsReqAuthMethod02,
		Tds2ThreeDsReqAuthMethod03,
		Tds2ThreeDsReqAuthMethod04,
		Tds2ThreeDsReqAuthMethod05,
		Tds2ThreeDsReqAuthMethod06,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2ThreeDsReqAuthMethod) MarshalText() ([]byte, error) {
	switch s {
	case Tds2ThreeDsReqAuthMethod01:
		return []byte(s), nil
	case Tds2ThreeDsReqAuthMethod02:
		return []byte(s), nil
	case Tds2ThreeDsReqAuthMethod03:
		return []byte(s), nil
	case Tds2ThreeDsReqAuthMethod04:
		return []byte(s), nil
	case Tds2ThreeDsReqAuthMethod05:
		return []byte(s), nil
	case Tds2ThreeDsReqAuthMethod06:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2ThreeDsReqAuthMethod) UnmarshalText(data []byte) error {
	switch Tds2ThreeDsReqAuthMethod(data) {
	case Tds2ThreeDsReqAuthMethod01:
		*s = Tds2ThreeDsReqAuthMethod01
		return nil
	case Tds2ThreeDsReqAuthMethod02:
		*s = Tds2ThreeDsReqAuthMethod02
		return nil
	case Tds2ThreeDsReqAuthMethod03:
		*s = Tds2ThreeDsReqAuthMethod03
		return nil
	case Tds2ThreeDsReqAuthMethod04:
		*s = Tds2ThreeDsReqAuthMethod04
		return nil
	case Tds2ThreeDsReqAuthMethod05:
		*s = Tds2ThreeDsReqAuthMethod05
		return nil
	case Tds2ThreeDsReqAuthMethod06:
		*s = Tds2ThreeDsReqAuthMethod06
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Tds2TxnActivityDay string

type Tds2TxnActivityYear string

// 3Dセキュア2.0非対応時の挙動設定\
// 購入者がこの決済に利用したカードが3Dセキュア2.
// 0に非対応である場合の後続処理を設定します。
// - `2`: エラーをレスポンスし、処理を終了する。（デフォルト）
// - `3`: 3Dセキュア認証なしで処理を継続する。.
// Ref: #/components/schemas/tds2_type
type Tds2Type string

const (
	Tds2Type2 Tds2Type = "2"
	Tds2Type3 Tds2Type = "3"
)

// AllValues returns all Tds2Type values.
func (Tds2Type) AllValues() []Tds2Type {
	return []Tds2Type{
		Tds2Type2,
		Tds2Type3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Tds2Type) MarshalText() ([]byte, error) {
	switch s {
	case Tds2Type2:
		return []byte(s), nil
	case Tds2Type3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Tds2Type) UnmarshalText(data []byte) error {
	switch Tds2Type(data) {
	case Tds2Type2:
		*s = Tds2Type2
		return nil
	case Tds2Type3:
		*s = Tds2Type3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Tds2WorkPhoneCc string

type Tds2WorkPhoneNo string

// 3Dセキュア認証を利用するか。
// - `0`: 3Dセキュア認証を利用しない（デフォルト）
// - `2`: 3Dセキュア2.0認証を利用する.
// Ref: #/components/schemas/tds_type
type TdsType string

const (
	TdsType0 TdsType = "0"
	TdsType2 TdsType = "2"
)

// AllValues returns all TdsType values.
func (TdsType) AllValues() []TdsType {
	return []TdsType{
		TdsType0,
		TdsType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TdsType) MarshalText() ([]byte, error) {
	switch s {
	case TdsType0:
		return []byte(s), nil
	case TdsType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TdsType) UnmarshalText(data []byte) error {
	switch TdsType(data) {
	case TdsType0:
		*s = TdsType0
		return nil
	case TdsType2:
		*s = TdsType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/TenantShop.Updating.Request
type TenantShopUpdatingRequest struct {
	ExaminationMasterID       OptExaminationMasterId          `json:"examination_master_id"`
	PlatformRate              OptNilPlatformRate              `json:"platform_rate"`
	FixedFee                  OptNilFixedFee                  `json:"fixed_fee"`
	WebRegistrationFee        OptNilWebRegistrationFee        `json:"web_registration_fee"`
	PaypayContentCategoryType OptNilPaypayContentCategoryType `json:"paypay_content_category_type"`
	APIKeyDisplayFlag         OptNilAPIKeyDisplayFlag         `json:"api_key_display_flag"`
}

// GetExaminationMasterID returns the value of ExaminationMasterID.
func (s *TenantShopUpdatingRequest) GetExaminationMasterID() OptExaminationMasterId {
	return s.ExaminationMasterID
}

// GetPlatformRate returns the value of PlatformRate.
func (s *TenantShopUpdatingRequest) GetPlatformRate() OptNilPlatformRate {
	return s.PlatformRate
}

// GetFixedFee returns the value of FixedFee.
func (s *TenantShopUpdatingRequest) GetFixedFee() OptNilFixedFee {
	return s.FixedFee
}

// GetWebRegistrationFee returns the value of WebRegistrationFee.
func (s *TenantShopUpdatingRequest) GetWebRegistrationFee() OptNilWebRegistrationFee {
	return s.WebRegistrationFee
}

// GetPaypayContentCategoryType returns the value of PaypayContentCategoryType.
func (s *TenantShopUpdatingRequest) GetPaypayContentCategoryType() OptNilPaypayContentCategoryType {
	return s.PaypayContentCategoryType
}

// GetAPIKeyDisplayFlag returns the value of APIKeyDisplayFlag.
func (s *TenantShopUpdatingRequest) GetAPIKeyDisplayFlag() OptNilAPIKeyDisplayFlag {
	return s.APIKeyDisplayFlag
}

// SetExaminationMasterID sets the value of ExaminationMasterID.
func (s *TenantShopUpdatingRequest) SetExaminationMasterID(val OptExaminationMasterId) {
	s.ExaminationMasterID = val
}

// SetPlatformRate sets the value of PlatformRate.
func (s *TenantShopUpdatingRequest) SetPlatformRate(val OptNilPlatformRate) {
	s.PlatformRate = val
}

// SetFixedFee sets the value of FixedFee.
func (s *TenantShopUpdatingRequest) SetFixedFee(val OptNilFixedFee) {
	s.FixedFee = val
}

// SetWebRegistrationFee sets the value of WebRegistrationFee.
func (s *TenantShopUpdatingRequest) SetWebRegistrationFee(val OptNilWebRegistrationFee) {
	s.WebRegistrationFee = val
}

// SetPaypayContentCategoryType sets the value of PaypayContentCategoryType.
func (s *TenantShopUpdatingRequest) SetPaypayContentCategoryType(val OptNilPaypayContentCategoryType) {
	s.PaypayContentCategoryType = val
}

// SetAPIKeyDisplayFlag sets the value of APIKeyDisplayFlag.
func (s *TenantShopUpdatingRequest) SetAPIKeyDisplayFlag(val OptNilAPIKeyDisplayFlag) {
	s.APIKeyDisplayFlag = val
}

type TenantURLID string

// 完了メール 送信フラグ\
// 決済が完了した際に購入者に完了メールを送信するかどうかを示します。
// - `0`：送信しない（デフォルト）
// - `1`：送信する.
// Ref: #/components/schemas/thanks_mail_send_flag
type ThanksMailSendFlag string

const (
	ThanksMailSendFlag0 ThanksMailSendFlag = "0"
	ThanksMailSendFlag1 ThanksMailSendFlag = "1"
)

// AllValues returns all ThanksMailSendFlag values.
func (ThanksMailSendFlag) AllValues() []ThanksMailSendFlag {
	return []ThanksMailSendFlag{
		ThanksMailSendFlag0,
		ThanksMailSendFlag1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ThanksMailSendFlag) MarshalText() ([]byte, error) {
	switch s {
	case ThanksMailSendFlag0:
		return []byte(s), nil
	case ThanksMailSendFlag1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ThanksMailSendFlag) UnmarshalText(data []byte) error {
	switch ThanksMailSendFlag(data) {
	case ThanksMailSendFlag0:
		*s = ThanksMailSendFlag0
		return nil
	case ThanksMailSendFlag1:
		*s = ThanksMailSendFlag1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Token string

type TotalAmount int64

type TransactionID string

type TransferReturnDate string

type URL string

type UnitPrice float64

type UpdateBankAccount bool

type UpdateContractDetail bool

type UpdateDepositCycle bool

type UpdateDescription string

type UpdateShop bool

type Updated string

type UsedOnApp bool

type UsedOnWeb bool

// Ref: #/components/schemas/User
type User struct {
	// ユーザーID.
	ID            OptString           `json:"id"`
	DefaultShopID OptShopPropertiesID `json:"default_shop_id"`
	RoleID        OptRolePropertiesID `json:"role_id"`
	// ユーザー名.
	Name OptString `json:"name"`
	// メールアドレス.
	Email OptString `json:"email"`
	// ユーザー種別
	// - `01`: ショップユーザー.
	Type OptUserType `json:"type"`
	// 二要素認証ステータス
	// - `00`: 未設定\
	// - `01`: 設定済み.
	TwoFactorAuthStatus OptUserTwoFactorAuthStatus `json:"two_factor_auth_status"`
	// メールアドレス認証ステータス
	// - `00`: 未設定\
	// - `01`: 設定済み.
	MailAuthStatus OptUserMailAuthStatus `json:"mail_auth_status"`
	// パスワードロックステータス
	// - `00`: ロックされていない\
	// - `01`: ロック中.
	PasswordLockStatus OptUserPasswordLockStatus `json:"password_lock_status"`
	// 最終ログイン日時\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	LastLoginDate OptNilString `json:"last_login_date"`
	// ログイン失敗日時\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	LoginFailureDate OptNilString `json:"login_failure_date"`
	// ログイン失敗回数.
	LoginFailureTimes OptInt `json:"login_failure_times"`
	// パスワード有効期限\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	PasswordExpire OptNilString `json:"password_expire"`
	// アカウントステータス
	// - `00`: 有効
	// - `01`: 無効.
	AccountStatus OptUserAccountStatus `json:"account_status"`
	// 招待ステータス
	// - `01`: 招待中
	// - `02`: 参加済み.
	InviteStatus OptUserInviteStatus `json:"invite_status"`
	Created      OptCreated          `json:"created"`
	Updated      OptNilUpdated       `json:"updated"`
}

// GetID returns the value of ID.
func (s *User) GetID() OptString {
	return s.ID
}

// GetDefaultShopID returns the value of DefaultShopID.
func (s *User) GetDefaultShopID() OptShopPropertiesID {
	return s.DefaultShopID
}

// GetRoleID returns the value of RoleID.
func (s *User) GetRoleID() OptRolePropertiesID {
	return s.RoleID
}

// GetName returns the value of Name.
func (s *User) GetName() OptString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() OptString {
	return s.Email
}

// GetType returns the value of Type.
func (s *User) GetType() OptUserType {
	return s.Type
}

// GetTwoFactorAuthStatus returns the value of TwoFactorAuthStatus.
func (s *User) GetTwoFactorAuthStatus() OptUserTwoFactorAuthStatus {
	return s.TwoFactorAuthStatus
}

// GetMailAuthStatus returns the value of MailAuthStatus.
func (s *User) GetMailAuthStatus() OptUserMailAuthStatus {
	return s.MailAuthStatus
}

// GetPasswordLockStatus returns the value of PasswordLockStatus.
func (s *User) GetPasswordLockStatus() OptUserPasswordLockStatus {
	return s.PasswordLockStatus
}

// GetLastLoginDate returns the value of LastLoginDate.
func (s *User) GetLastLoginDate() OptNilString {
	return s.LastLoginDate
}

// GetLoginFailureDate returns the value of LoginFailureDate.
func (s *User) GetLoginFailureDate() OptNilString {
	return s.LoginFailureDate
}

// GetLoginFailureTimes returns the value of LoginFailureTimes.
func (s *User) GetLoginFailureTimes() OptInt {
	return s.LoginFailureTimes
}

// GetPasswordExpire returns the value of PasswordExpire.
func (s *User) GetPasswordExpire() OptNilString {
	return s.PasswordExpire
}

// GetAccountStatus returns the value of AccountStatus.
func (s *User) GetAccountStatus() OptUserAccountStatus {
	return s.AccountStatus
}

// GetInviteStatus returns the value of InviteStatus.
func (s *User) GetInviteStatus() OptUserInviteStatus {
	return s.InviteStatus
}

// GetCreated returns the value of Created.
func (s *User) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *User) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *User) SetID(val OptString) {
	s.ID = val
}

// SetDefaultShopID sets the value of DefaultShopID.
func (s *User) SetDefaultShopID(val OptShopPropertiesID) {
	s.DefaultShopID = val
}

// SetRoleID sets the value of RoleID.
func (s *User) SetRoleID(val OptRolePropertiesID) {
	s.RoleID = val
}

// SetName sets the value of Name.
func (s *User) SetName(val OptString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val OptString) {
	s.Email = val
}

// SetType sets the value of Type.
func (s *User) SetType(val OptUserType) {
	s.Type = val
}

// SetTwoFactorAuthStatus sets the value of TwoFactorAuthStatus.
func (s *User) SetTwoFactorAuthStatus(val OptUserTwoFactorAuthStatus) {
	s.TwoFactorAuthStatus = val
}

// SetMailAuthStatus sets the value of MailAuthStatus.
func (s *User) SetMailAuthStatus(val OptUserMailAuthStatus) {
	s.MailAuthStatus = val
}

// SetPasswordLockStatus sets the value of PasswordLockStatus.
func (s *User) SetPasswordLockStatus(val OptUserPasswordLockStatus) {
	s.PasswordLockStatus = val
}

// SetLastLoginDate sets the value of LastLoginDate.
func (s *User) SetLastLoginDate(val OptNilString) {
	s.LastLoginDate = val
}

// SetLoginFailureDate sets the value of LoginFailureDate.
func (s *User) SetLoginFailureDate(val OptNilString) {
	s.LoginFailureDate = val
}

// SetLoginFailureTimes sets the value of LoginFailureTimes.
func (s *User) SetLoginFailureTimes(val OptInt) {
	s.LoginFailureTimes = val
}

// SetPasswordExpire sets the value of PasswordExpire.
func (s *User) SetPasswordExpire(val OptNilString) {
	s.PasswordExpire = val
}

// SetAccountStatus sets the value of AccountStatus.
func (s *User) SetAccountStatus(val OptUserAccountStatus) {
	s.AccountStatus = val
}

// SetInviteStatus sets the value of InviteStatus.
func (s *User) SetInviteStatus(val OptUserInviteStatus) {
	s.InviteStatus = val
}

// SetCreated sets the value of Created.
func (s *User) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *User) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

// アカウントステータス
// - `00`: 有効
// - `01`: 無効.
type UserAccountStatus string

const (
	UserAccountStatus00 UserAccountStatus = "00"
	UserAccountStatus01 UserAccountStatus = "01"
)

// AllValues returns all UserAccountStatus values.
func (UserAccountStatus) AllValues() []UserAccountStatus {
	return []UserAccountStatus{
		UserAccountStatus00,
		UserAccountStatus01,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserAccountStatus) MarshalText() ([]byte, error) {
	switch s {
	case UserAccountStatus00:
		return []byte(s), nil
	case UserAccountStatus01:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserAccountStatus) UnmarshalText(data []byte) error {
	switch UserAccountStatus(data) {
	case UserAccountStatus00:
		*s = UserAccountStatus00
		return nil
	case UserAccountStatus01:
		*s = UserAccountStatus01
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UserAgent string

// 招待ステータス
// - `01`: 招待中
// - `02`: 参加済み.
type UserInviteStatus string

const (
	UserInviteStatus01 UserInviteStatus = "01"
	UserInviteStatus02 UserInviteStatus = "02"
)

// AllValues returns all UserInviteStatus values.
func (UserInviteStatus) AllValues() []UserInviteStatus {
	return []UserInviteStatus{
		UserInviteStatus01,
		UserInviteStatus02,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserInviteStatus) MarshalText() ([]byte, error) {
	switch s {
	case UserInviteStatus01:
		return []byte(s), nil
	case UserInviteStatus02:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserInviteStatus) UnmarshalText(data []byte) error {
	switch UserInviteStatus(data) {
	case UserInviteStatus01:
		*s = UserInviteStatus01
		return nil
	case UserInviteStatus02:
		*s = UserInviteStatus02
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// メールアドレス認証ステータス
// - `00`: 未設定\
// - `01`: 設定済み.
type UserMailAuthStatus string

const (
	UserMailAuthStatus00 UserMailAuthStatus = "00"
	UserMailAuthStatus01 UserMailAuthStatus = "01"
)

// AllValues returns all UserMailAuthStatus values.
func (UserMailAuthStatus) AllValues() []UserMailAuthStatus {
	return []UserMailAuthStatus{
		UserMailAuthStatus00,
		UserMailAuthStatus01,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserMailAuthStatus) MarshalText() ([]byte, error) {
	switch s {
	case UserMailAuthStatus00:
		return []byte(s), nil
	case UserMailAuthStatus01:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserMailAuthStatus) UnmarshalText(data []byte) error {
	switch UserMailAuthStatus(data) {
	case UserMailAuthStatus00:
		*s = UserMailAuthStatus00
		return nil
	case UserMailAuthStatus01:
		*s = UserMailAuthStatus01
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// パスワードロックステータス
// - `00`: ロックされていない\
// - `01`: ロック中.
type UserPasswordLockStatus string

const (
	UserPasswordLockStatus00 UserPasswordLockStatus = "00"
	UserPasswordLockStatus01 UserPasswordLockStatus = "01"
)

// AllValues returns all UserPasswordLockStatus values.
func (UserPasswordLockStatus) AllValues() []UserPasswordLockStatus {
	return []UserPasswordLockStatus{
		UserPasswordLockStatus00,
		UserPasswordLockStatus01,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserPasswordLockStatus) MarshalText() ([]byte, error) {
	switch s {
	case UserPasswordLockStatus00:
		return []byte(s), nil
	case UserPasswordLockStatus01:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserPasswordLockStatus) UnmarshalText(data []byte) error {
	switch UserPasswordLockStatus(data) {
	case UserPasswordLockStatus00:
		*s = UserPasswordLockStatus00
		return nil
	case UserPasswordLockStatus01:
		*s = UserPasswordLockStatus01
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 二要素認証ステータス
// - `00`: 未設定\
// - `01`: 設定済み.
type UserTwoFactorAuthStatus string

const (
	UserTwoFactorAuthStatus00 UserTwoFactorAuthStatus = "00"
	UserTwoFactorAuthStatus01 UserTwoFactorAuthStatus = "01"
)

// AllValues returns all UserTwoFactorAuthStatus values.
func (UserTwoFactorAuthStatus) AllValues() []UserTwoFactorAuthStatus {
	return []UserTwoFactorAuthStatus{
		UserTwoFactorAuthStatus00,
		UserTwoFactorAuthStatus01,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserTwoFactorAuthStatus) MarshalText() ([]byte, error) {
	switch s {
	case UserTwoFactorAuthStatus00:
		return []byte(s), nil
	case UserTwoFactorAuthStatus01:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserTwoFactorAuthStatus) UnmarshalText(data []byte) error {
	switch UserTwoFactorAuthStatus(data) {
	case UserTwoFactorAuthStatus00:
		*s = UserTwoFactorAuthStatus00
		return nil
	case UserTwoFactorAuthStatus01:
		*s = UserTwoFactorAuthStatus01
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ユーザー種別
// - `01`: ショップユーザー.
type UserType string

const (
	UserType01 UserType = "01"
)

// AllValues returns all UserType values.
func (UserType) AllValues() []UserType {
	return []UserType{
		UserType01,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserType) MarshalText() ([]byte, error) {
	switch s {
	case UserType01:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserType) UnmarshalText(data []byte) error {
	switch UserType(data) {
	case UserType01:
		*s = UserType01
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Verified bool

type WebRegistrationFee string

type WebRegistrationFeeAmount int

// Ref: #/components/schemas/WebhookEvent.Card
type WebhookEventCard struct {
	ShopID          OptShopPropertiesID             `json:"shop_id"`
	CustomerID      OptID                           `json:"customer_id"`
	CustomerGroupID OptNilPropertiesCustomerGroupID `json:"customer_group_id"`
	CardID          OptPropertiesID                 `json:"card_id"`
	DefaultFlag     OptDefaultFlag                  `json:"default_flag"`
	CardNoDisplay   OptCardNo                       `json:"card_no_display"`
	ExpireDisplay   OptNilExpire                    `json:"expire_display"`
	// 処理日時.
	ProcessDate OptString `json:"process_date"`
	// 処理タイプ
	// - `I`: 登録
	// - `U`: 更新.
	ProcessType OptWebhookEventCardProcessType `json:"process_type"`
	// 決済種別.
	PayType OptWebhookEventCardPayType `json:"pay_type"`
	Forward OptNilForward              `json:"forward"`
	Event   OptFincodeEvent            `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventCard) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventCard) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCustomerGroupID returns the value of CustomerGroupID.
func (s *WebhookEventCard) GetCustomerGroupID() OptNilPropertiesCustomerGroupID {
	return s.CustomerGroupID
}

// GetCardID returns the value of CardID.
func (s *WebhookEventCard) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetDefaultFlag returns the value of DefaultFlag.
func (s *WebhookEventCard) GetDefaultFlag() OptDefaultFlag {
	return s.DefaultFlag
}

// GetCardNoDisplay returns the value of CardNoDisplay.
func (s *WebhookEventCard) GetCardNoDisplay() OptCardNo {
	return s.CardNoDisplay
}

// GetExpireDisplay returns the value of ExpireDisplay.
func (s *WebhookEventCard) GetExpireDisplay() OptNilExpire {
	return s.ExpireDisplay
}

// GetProcessDate returns the value of ProcessDate.
func (s *WebhookEventCard) GetProcessDate() OptString {
	return s.ProcessDate
}

// GetProcessType returns the value of ProcessType.
func (s *WebhookEventCard) GetProcessType() OptWebhookEventCardProcessType {
	return s.ProcessType
}

// GetPayType returns the value of PayType.
func (s *WebhookEventCard) GetPayType() OptWebhookEventCardPayType {
	return s.PayType
}

// GetForward returns the value of Forward.
func (s *WebhookEventCard) GetForward() OptNilForward {
	return s.Forward
}

// GetEvent returns the value of Event.
func (s *WebhookEventCard) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventCard) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventCard) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCustomerGroupID sets the value of CustomerGroupID.
func (s *WebhookEventCard) SetCustomerGroupID(val OptNilPropertiesCustomerGroupID) {
	s.CustomerGroupID = val
}

// SetCardID sets the value of CardID.
func (s *WebhookEventCard) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetDefaultFlag sets the value of DefaultFlag.
func (s *WebhookEventCard) SetDefaultFlag(val OptDefaultFlag) {
	s.DefaultFlag = val
}

// SetCardNoDisplay sets the value of CardNoDisplay.
func (s *WebhookEventCard) SetCardNoDisplay(val OptCardNo) {
	s.CardNoDisplay = val
}

// SetExpireDisplay sets the value of ExpireDisplay.
func (s *WebhookEventCard) SetExpireDisplay(val OptNilExpire) {
	s.ExpireDisplay = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *WebhookEventCard) SetProcessDate(val OptString) {
	s.ProcessDate = val
}

// SetProcessType sets the value of ProcessType.
func (s *WebhookEventCard) SetProcessType(val OptWebhookEventCardProcessType) {
	s.ProcessType = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventCard) SetPayType(val OptWebhookEventCardPayType) {
	s.PayType = val
}

// SetForward sets the value of Forward.
func (s *WebhookEventCard) SetForward(val OptNilForward) {
	s.Forward = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventCard) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// 決済種別.
type WebhookEventCardPayType string

const (
	WebhookEventCardPayTypeCard WebhookEventCardPayType = "Card"
)

// AllValues returns all WebhookEventCardPayType values.
func (WebhookEventCardPayType) AllValues() []WebhookEventCardPayType {
	return []WebhookEventCardPayType{
		WebhookEventCardPayTypeCard,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s WebhookEventCardPayType) MarshalText() ([]byte, error) {
	switch s {
	case WebhookEventCardPayTypeCard:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *WebhookEventCardPayType) UnmarshalText(data []byte) error {
	switch WebhookEventCardPayType(data) {
	case WebhookEventCardPayTypeCard:
		*s = WebhookEventCardPayTypeCard
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// 処理タイプ
// - `I`: 登録
// - `U`: 更新.
type WebhookEventCardProcessType string

const (
	WebhookEventCardProcessTypeI WebhookEventCardProcessType = "I"
	WebhookEventCardProcessTypeU WebhookEventCardProcessType = "U"
)

// AllValues returns all WebhookEventCardProcessType values.
func (WebhookEventCardProcessType) AllValues() []WebhookEventCardProcessType {
	return []WebhookEventCardProcessType{
		WebhookEventCardProcessTypeI,
		WebhookEventCardProcessTypeU,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s WebhookEventCardProcessType) MarshalText() ([]byte, error) {
	switch s {
	case WebhookEventCardProcessTypeI:
		return []byte(s), nil
	case WebhookEventCardProcessTypeU:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *WebhookEventCardProcessType) UnmarshalText(data []byte) error {
	switch WebhookEventCardProcessType(data) {
	case WebhookEventCardProcessTypeI:
		*s = WebhookEventCardProcessTypeI
		return nil
	case WebhookEventCardProcessTypeU:
		*s = WebhookEventCardProcessTypeU
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/WebhookEvent.Contract
type WebhookEventContract struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	Event  OptFincodeEvent     `json:"event"`
	// 決済手段 契約状況リスト\
	// \
	// 決済手段の種別とその契約ステータスを含むオブジェクトの配列です。.
	Body []WebhookEventContractBodyItem `json:"body"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventContract) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetEvent returns the value of Event.
func (s *WebhookEventContract) GetEvent() OptFincodeEvent {
	return s.Event
}

// GetBody returns the value of Body.
func (s *WebhookEventContract) GetBody() []WebhookEventContractBodyItem {
	return s.Body
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventContract) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventContract) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// SetBody sets the value of Body.
func (s *WebhookEventContract) SetBody(val []WebhookEventContractBodyItem) {
	s.Body = val
}

type WebhookEventContractBodyItem struct {
	Acquirer OptAcquirer `json:"acquirer"`
	// 審査対象（和名）
	// - `決済事業者審査: VISA/MASTER-UC`
	// - `決済事業者審査: VISA/MASTER-TFC`
	// - `決済事業者審査: JCB/AMEX`
	// - `決済事業者審査: DINERS`
	// - `決済事業者審査: ApplePay-UC`
	// - `決済事業者審査: ApplePay-JCB/AMEX`
	// - `決済事業者審査: コンビニ決済`
	// - `決済事業者審査: PayPay決済`
	// - `決済事業者審査: 口座振替決済`.
	ExaminationTask OptString                 `json:"examination_task"`
	StatusCode      OptAcquirerContractStatus `json:"status_code"`
	// 決済事業者 契約ステータス（和名）
	// - `申込なし`
	// - `審査受付`
	// - `審査待ち`
	// - `審査中`
	// - `審査保留中`
	// - `審査OK`
	// - `利用可能`
	// - `審査NG`
	// - `申込中止`.
	Status OptString `json:"status"`
	// 更新の有無\
	// \
	// 更新があった場合は `true`になります。.
	IsUpdated OptBool `json:"is_updated"`
}

// GetAcquirer returns the value of Acquirer.
func (s *WebhookEventContractBodyItem) GetAcquirer() OptAcquirer {
	return s.Acquirer
}

// GetExaminationTask returns the value of ExaminationTask.
func (s *WebhookEventContractBodyItem) GetExaminationTask() OptString {
	return s.ExaminationTask
}

// GetStatusCode returns the value of StatusCode.
func (s *WebhookEventContractBodyItem) GetStatusCode() OptAcquirerContractStatus {
	return s.StatusCode
}

// GetStatus returns the value of Status.
func (s *WebhookEventContractBodyItem) GetStatus() OptString {
	return s.Status
}

// GetIsUpdated returns the value of IsUpdated.
func (s *WebhookEventContractBodyItem) GetIsUpdated() OptBool {
	return s.IsUpdated
}

// SetAcquirer sets the value of Acquirer.
func (s *WebhookEventContractBodyItem) SetAcquirer(val OptAcquirer) {
	s.Acquirer = val
}

// SetExaminationTask sets the value of ExaminationTask.
func (s *WebhookEventContractBodyItem) SetExaminationTask(val OptString) {
	s.ExaminationTask = val
}

// SetStatusCode sets the value of StatusCode.
func (s *WebhookEventContractBodyItem) SetStatusCode(val OptAcquirerContractStatus) {
	s.StatusCode = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventContractBodyItem) SetStatus(val OptString) {
	s.Status = val
}

// SetIsUpdated sets the value of IsUpdated.
func (s *WebhookEventContractBodyItem) SetIsUpdated(val OptBool) {
	s.IsUpdated = val
}

// Ref: #/components/schemas/WebhookEvent.CustomerPaymentMethod
type WebhookEventCustomerPaymentMethod struct {
	ShopID          OptShopPropertiesID              `json:"shop_id"`
	CustomerID      OptID                            `json:"customer_id"`
	PaymentMethodID OptPaymentMethodPropertiesID     `json:"payment_method_id"`
	PayType         OptPaymentMethodPayType          `json:"pay_type"`
	Status          OptPaymentMethodStatus           `json:"status"`
	ClientField1    OptNilClientFieldN               `json:"client_field_1"`
	ClientField2    OptNilClientFieldN               `json:"client_field_2"`
	ClientField3    OptNilClientFieldN               `json:"client_field_3"`
	ApplicationType OptNilDirectDebitApplicationType `json:"application_type"`
	Event           OptFincodeEvent                  `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventCustomerPaymentMethod) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventCustomerPaymentMethod) GetCustomerID() OptID {
	return s.CustomerID
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *WebhookEventCustomerPaymentMethod) GetPaymentMethodID() OptPaymentMethodPropertiesID {
	return s.PaymentMethodID
}

// GetPayType returns the value of PayType.
func (s *WebhookEventCustomerPaymentMethod) GetPayType() OptPaymentMethodPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *WebhookEventCustomerPaymentMethod) GetStatus() OptPaymentMethodStatus {
	return s.Status
}

// GetClientField1 returns the value of ClientField1.
func (s *WebhookEventCustomerPaymentMethod) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *WebhookEventCustomerPaymentMethod) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *WebhookEventCustomerPaymentMethod) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetApplicationType returns the value of ApplicationType.
func (s *WebhookEventCustomerPaymentMethod) GetApplicationType() OptNilDirectDebitApplicationType {
	return s.ApplicationType
}

// GetEvent returns the value of Event.
func (s *WebhookEventCustomerPaymentMethod) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventCustomerPaymentMethod) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventCustomerPaymentMethod) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *WebhookEventCustomerPaymentMethod) SetPaymentMethodID(val OptPaymentMethodPropertiesID) {
	s.PaymentMethodID = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventCustomerPaymentMethod) SetPayType(val OptPaymentMethodPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventCustomerPaymentMethod) SetStatus(val OptPaymentMethodStatus) {
	s.Status = val
}

// SetClientField1 sets the value of ClientField1.
func (s *WebhookEventCustomerPaymentMethod) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *WebhookEventCustomerPaymentMethod) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *WebhookEventCustomerPaymentMethod) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetApplicationType sets the value of ApplicationType.
func (s *WebhookEventCustomerPaymentMethod) SetApplicationType(val OptNilDirectDebitApplicationType) {
	s.ApplicationType = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventCustomerPaymentMethod) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.Payment.ApplePay
type WebhookEventPaymentApplePay struct {
	ShopID        OptShopPropertiesID       `json:"shop_id"`
	OrderID       OptPaymentPropertiesID    `json:"order_id"`
	AccessID      OptAccessID               `json:"access_id"`
	PayType       OptPayType                `json:"pay_type"`
	Status        OptPaymentStatus          `json:"status"`
	CustomerID    OptID                     `json:"customer_id"`
	Method        OptCardPayMethod          `json:"method"`
	ClientField1  OptNilClientFieldN        `json:"client_field_1"`
	ClientField2  OptNilClientFieldN        `json:"client_field_2"`
	ClientField3  OptNilClientFieldN        `json:"client_field_3"`
	Amount        OptAmount                 `json:"amount"`
	Tax           OptTax                    `json:"tax"`
	Currency      OptCurrencyCode           `json:"currency"`
	JobCode       OptApplePayPaymentJobCode `json:"job_code"`
	Forward       OptNilForward             `json:"forward"`
	TransactionID OptNilTransactionID       `json:"transaction_id"`
	// 決済 処理日時.
	TransactionDate OptNilString    `json:"transaction_date"`
	Approve         OptNilApprove   `json:"approve"`
	ErrorCode       OptErrorCode    `json:"error_code"`
	Event           OptFincodeEvent `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventPaymentApplePay) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetOrderID returns the value of OrderID.
func (s *WebhookEventPaymentApplePay) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetAccessID returns the value of AccessID.
func (s *WebhookEventPaymentApplePay) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetPayType returns the value of PayType.
func (s *WebhookEventPaymentApplePay) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *WebhookEventPaymentApplePay) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventPaymentApplePay) GetCustomerID() OptID {
	return s.CustomerID
}

// GetMethod returns the value of Method.
func (s *WebhookEventPaymentApplePay) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetClientField1 returns the value of ClientField1.
func (s *WebhookEventPaymentApplePay) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *WebhookEventPaymentApplePay) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *WebhookEventPaymentApplePay) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetAmount returns the value of Amount.
func (s *WebhookEventPaymentApplePay) GetAmount() OptAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *WebhookEventPaymentApplePay) GetTax() OptTax {
	return s.Tax
}

// GetCurrency returns the value of Currency.
func (s *WebhookEventPaymentApplePay) GetCurrency() OptCurrencyCode {
	return s.Currency
}

// GetJobCode returns the value of JobCode.
func (s *WebhookEventPaymentApplePay) GetJobCode() OptApplePayPaymentJobCode {
	return s.JobCode
}

// GetForward returns the value of Forward.
func (s *WebhookEventPaymentApplePay) GetForward() OptNilForward {
	return s.Forward
}

// GetTransactionID returns the value of TransactionID.
func (s *WebhookEventPaymentApplePay) GetTransactionID() OptNilTransactionID {
	return s.TransactionID
}

// GetTransactionDate returns the value of TransactionDate.
func (s *WebhookEventPaymentApplePay) GetTransactionDate() OptNilString {
	return s.TransactionDate
}

// GetApprove returns the value of Approve.
func (s *WebhookEventPaymentApplePay) GetApprove() OptNilApprove {
	return s.Approve
}

// GetErrorCode returns the value of ErrorCode.
func (s *WebhookEventPaymentApplePay) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetEvent returns the value of Event.
func (s *WebhookEventPaymentApplePay) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventPaymentApplePay) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetOrderID sets the value of OrderID.
func (s *WebhookEventPaymentApplePay) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetAccessID sets the value of AccessID.
func (s *WebhookEventPaymentApplePay) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventPaymentApplePay) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventPaymentApplePay) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventPaymentApplePay) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetMethod sets the value of Method.
func (s *WebhookEventPaymentApplePay) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetClientField1 sets the value of ClientField1.
func (s *WebhookEventPaymentApplePay) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *WebhookEventPaymentApplePay) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *WebhookEventPaymentApplePay) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetAmount sets the value of Amount.
func (s *WebhookEventPaymentApplePay) SetAmount(val OptAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *WebhookEventPaymentApplePay) SetTax(val OptTax) {
	s.Tax = val
}

// SetCurrency sets the value of Currency.
func (s *WebhookEventPaymentApplePay) SetCurrency(val OptCurrencyCode) {
	s.Currency = val
}

// SetJobCode sets the value of JobCode.
func (s *WebhookEventPaymentApplePay) SetJobCode(val OptApplePayPaymentJobCode) {
	s.JobCode = val
}

// SetForward sets the value of Forward.
func (s *WebhookEventPaymentApplePay) SetForward(val OptNilForward) {
	s.Forward = val
}

// SetTransactionID sets the value of TransactionID.
func (s *WebhookEventPaymentApplePay) SetTransactionID(val OptNilTransactionID) {
	s.TransactionID = val
}

// SetTransactionDate sets the value of TransactionDate.
func (s *WebhookEventPaymentApplePay) SetTransactionDate(val OptNilString) {
	s.TransactionDate = val
}

// SetApprove sets the value of Approve.
func (s *WebhookEventPaymentApplePay) SetApprove(val OptNilApprove) {
	s.Approve = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *WebhookEventPaymentApplePay) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventPaymentApplePay) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.PaymentBulk.Batch.Card
type WebhookEventPaymentBulkBatchCard struct {
	ShopID        OptShopPropertiesID        `json:"shop_id"`
	BulkPaymentID OptPaymentBulkPropertiesID `json:"bulk_payment_id"`
	FileName      OptFileName                `json:"file_name"`
	Status        OptPaymentBulkStatus       `json:"status"`
	// 成功件数\
	// \
	// 今回の一括決済課金において成功した決済の件数です。.
	SucceededCount OptString `json:"succeeded_count"`
	// 失敗件数\
	// \
	// 今回の一括決済課金において失敗した決済の件数です。.
	FailedCount OptString `json:"failed_count"`
	// 合計件数\
	// \
	// 今回の一括決済課金において発生した決済の合計件数です。.
	TotalCount OptString             `json:"total_count"`
	PayType    OptPaymentBulkPayType `json:"pay_type"`
	Event      OptFincodeEvent       `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventPaymentBulkBatchCard) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetBulkPaymentID returns the value of BulkPaymentID.
func (s *WebhookEventPaymentBulkBatchCard) GetBulkPaymentID() OptPaymentBulkPropertiesID {
	return s.BulkPaymentID
}

// GetFileName returns the value of FileName.
func (s *WebhookEventPaymentBulkBatchCard) GetFileName() OptFileName {
	return s.FileName
}

// GetStatus returns the value of Status.
func (s *WebhookEventPaymentBulkBatchCard) GetStatus() OptPaymentBulkStatus {
	return s.Status
}

// GetSucceededCount returns the value of SucceededCount.
func (s *WebhookEventPaymentBulkBatchCard) GetSucceededCount() OptString {
	return s.SucceededCount
}

// GetFailedCount returns the value of FailedCount.
func (s *WebhookEventPaymentBulkBatchCard) GetFailedCount() OptString {
	return s.FailedCount
}

// GetTotalCount returns the value of TotalCount.
func (s *WebhookEventPaymentBulkBatchCard) GetTotalCount() OptString {
	return s.TotalCount
}

// GetPayType returns the value of PayType.
func (s *WebhookEventPaymentBulkBatchCard) GetPayType() OptPaymentBulkPayType {
	return s.PayType
}

// GetEvent returns the value of Event.
func (s *WebhookEventPaymentBulkBatchCard) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventPaymentBulkBatchCard) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetBulkPaymentID sets the value of BulkPaymentID.
func (s *WebhookEventPaymentBulkBatchCard) SetBulkPaymentID(val OptPaymentBulkPropertiesID) {
	s.BulkPaymentID = val
}

// SetFileName sets the value of FileName.
func (s *WebhookEventPaymentBulkBatchCard) SetFileName(val OptFileName) {
	s.FileName = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventPaymentBulkBatchCard) SetStatus(val OptPaymentBulkStatus) {
	s.Status = val
}

// SetSucceededCount sets the value of SucceededCount.
func (s *WebhookEventPaymentBulkBatchCard) SetSucceededCount(val OptString) {
	s.SucceededCount = val
}

// SetFailedCount sets the value of FailedCount.
func (s *WebhookEventPaymentBulkBatchCard) SetFailedCount(val OptString) {
	s.FailedCount = val
}

// SetTotalCount sets the value of TotalCount.
func (s *WebhookEventPaymentBulkBatchCard) SetTotalCount(val OptString) {
	s.TotalCount = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventPaymentBulkBatchCard) SetPayType(val OptPaymentBulkPayType) {
	s.PayType = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventPaymentBulkBatchCard) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.PaymentBulk.Regist.Card
type WebhookEventPaymentBulkRegistCard struct {
	ShopID        OptShopPropertiesID        `json:"shop_id"`
	BulkPaymentID OptPaymentBulkPropertiesID `json:"bulk_payment_id"`
	FileName      OptFileName                `json:"file_name"`
	Status        OptPaymentBulkStatus       `json:"status"`
	// 総件数\
	// \
	// この一括決済に登録された決済の件数です。.
	RegistTotalCount OptString `json:"regist_total_count"`
	// エラー件数\
	// \
	// この一括決済においてエラーが発生した決済の件数です。.
	ErrorTotalCount OptString             `json:"error_total_count"`
	PayType         OptPaymentBulkPayType `json:"pay_type"`
	// この一括決済の一括決済 詳細情報一覧取得APIのURLです。.
	BulkSearchURL OptString       `json:"bulk_search_url"`
	ErrorCode     OptErrorCode    `json:"error_code"`
	Event         OptFincodeEvent `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventPaymentBulkRegistCard) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetBulkPaymentID returns the value of BulkPaymentID.
func (s *WebhookEventPaymentBulkRegistCard) GetBulkPaymentID() OptPaymentBulkPropertiesID {
	return s.BulkPaymentID
}

// GetFileName returns the value of FileName.
func (s *WebhookEventPaymentBulkRegistCard) GetFileName() OptFileName {
	return s.FileName
}

// GetStatus returns the value of Status.
func (s *WebhookEventPaymentBulkRegistCard) GetStatus() OptPaymentBulkStatus {
	return s.Status
}

// GetRegistTotalCount returns the value of RegistTotalCount.
func (s *WebhookEventPaymentBulkRegistCard) GetRegistTotalCount() OptString {
	return s.RegistTotalCount
}

// GetErrorTotalCount returns the value of ErrorTotalCount.
func (s *WebhookEventPaymentBulkRegistCard) GetErrorTotalCount() OptString {
	return s.ErrorTotalCount
}

// GetPayType returns the value of PayType.
func (s *WebhookEventPaymentBulkRegistCard) GetPayType() OptPaymentBulkPayType {
	return s.PayType
}

// GetBulkSearchURL returns the value of BulkSearchURL.
func (s *WebhookEventPaymentBulkRegistCard) GetBulkSearchURL() OptString {
	return s.BulkSearchURL
}

// GetErrorCode returns the value of ErrorCode.
func (s *WebhookEventPaymentBulkRegistCard) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetEvent returns the value of Event.
func (s *WebhookEventPaymentBulkRegistCard) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventPaymentBulkRegistCard) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetBulkPaymentID sets the value of BulkPaymentID.
func (s *WebhookEventPaymentBulkRegistCard) SetBulkPaymentID(val OptPaymentBulkPropertiesID) {
	s.BulkPaymentID = val
}

// SetFileName sets the value of FileName.
func (s *WebhookEventPaymentBulkRegistCard) SetFileName(val OptFileName) {
	s.FileName = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventPaymentBulkRegistCard) SetStatus(val OptPaymentBulkStatus) {
	s.Status = val
}

// SetRegistTotalCount sets the value of RegistTotalCount.
func (s *WebhookEventPaymentBulkRegistCard) SetRegistTotalCount(val OptString) {
	s.RegistTotalCount = val
}

// SetErrorTotalCount sets the value of ErrorTotalCount.
func (s *WebhookEventPaymentBulkRegistCard) SetErrorTotalCount(val OptString) {
	s.ErrorTotalCount = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventPaymentBulkRegistCard) SetPayType(val OptPaymentBulkPayType) {
	s.PayType = val
}

// SetBulkSearchURL sets the value of BulkSearchURL.
func (s *WebhookEventPaymentBulkRegistCard) SetBulkSearchURL(val OptString) {
	s.BulkSearchURL = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *WebhookEventPaymentBulkRegistCard) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventPaymentBulkRegistCard) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.Payment.Card
type WebhookEventPaymentCard struct {
	ShopID         OptShopPropertiesID         `json:"shop_id"`
	OrderID        OptPaymentPropertiesID      `json:"order_id"`
	AccessID       OptAccessID                 `json:"access_id"`
	PayType        OptPayType                  `json:"pay_type"`
	Status         OptPaymentStatus            `json:"status"`
	CustomerID     OptID                       `json:"customer_id"`
	Method         OptCardPayMethod            `json:"method"`
	ClientField1   OptNilClientFieldN          `json:"client_field_1"`
	ClientField2   OptNilClientFieldN          `json:"client_field_2"`
	ClientField3   OptNilClientFieldN          `json:"client_field_3"`
	Amount         OptAmount                   `json:"amount"`
	Tax            OptTax                      `json:"tax"`
	Currency       OptCurrencyCode             `json:"currency"`
	JobCode        OptCardPaymentJobCode       `json:"job_code"`
	SubscriptionID OptSubscriptionPropertiesID `json:"subscription_id"`
	BulkPaymentID  OptPaymentBulkPropertiesID  `json:"bulk_payment_id"`
	Forward        OptNilForward               `json:"forward"`
	TransactionID  OptNilTransactionID         `json:"transaction_id"`
	// 決済 処理日時.
	TransactionDate OptNilString    `json:"transaction_date"`
	Approve         OptNilApprove   `json:"approve"`
	ErrorCode       OptErrorCode    `json:"error_code"`
	Event           OptFincodeEvent `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventPaymentCard) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetOrderID returns the value of OrderID.
func (s *WebhookEventPaymentCard) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetAccessID returns the value of AccessID.
func (s *WebhookEventPaymentCard) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetPayType returns the value of PayType.
func (s *WebhookEventPaymentCard) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *WebhookEventPaymentCard) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventPaymentCard) GetCustomerID() OptID {
	return s.CustomerID
}

// GetMethod returns the value of Method.
func (s *WebhookEventPaymentCard) GetMethod() OptCardPayMethod {
	return s.Method
}

// GetClientField1 returns the value of ClientField1.
func (s *WebhookEventPaymentCard) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *WebhookEventPaymentCard) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *WebhookEventPaymentCard) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetAmount returns the value of Amount.
func (s *WebhookEventPaymentCard) GetAmount() OptAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *WebhookEventPaymentCard) GetTax() OptTax {
	return s.Tax
}

// GetCurrency returns the value of Currency.
func (s *WebhookEventPaymentCard) GetCurrency() OptCurrencyCode {
	return s.Currency
}

// GetJobCode returns the value of JobCode.
func (s *WebhookEventPaymentCard) GetJobCode() OptCardPaymentJobCode {
	return s.JobCode
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *WebhookEventPaymentCard) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetBulkPaymentID returns the value of BulkPaymentID.
func (s *WebhookEventPaymentCard) GetBulkPaymentID() OptPaymentBulkPropertiesID {
	return s.BulkPaymentID
}

// GetForward returns the value of Forward.
func (s *WebhookEventPaymentCard) GetForward() OptNilForward {
	return s.Forward
}

// GetTransactionID returns the value of TransactionID.
func (s *WebhookEventPaymentCard) GetTransactionID() OptNilTransactionID {
	return s.TransactionID
}

// GetTransactionDate returns the value of TransactionDate.
func (s *WebhookEventPaymentCard) GetTransactionDate() OptNilString {
	return s.TransactionDate
}

// GetApprove returns the value of Approve.
func (s *WebhookEventPaymentCard) GetApprove() OptNilApprove {
	return s.Approve
}

// GetErrorCode returns the value of ErrorCode.
func (s *WebhookEventPaymentCard) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetEvent returns the value of Event.
func (s *WebhookEventPaymentCard) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventPaymentCard) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetOrderID sets the value of OrderID.
func (s *WebhookEventPaymentCard) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetAccessID sets the value of AccessID.
func (s *WebhookEventPaymentCard) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventPaymentCard) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventPaymentCard) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventPaymentCard) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetMethod sets the value of Method.
func (s *WebhookEventPaymentCard) SetMethod(val OptCardPayMethod) {
	s.Method = val
}

// SetClientField1 sets the value of ClientField1.
func (s *WebhookEventPaymentCard) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *WebhookEventPaymentCard) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *WebhookEventPaymentCard) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetAmount sets the value of Amount.
func (s *WebhookEventPaymentCard) SetAmount(val OptAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *WebhookEventPaymentCard) SetTax(val OptTax) {
	s.Tax = val
}

// SetCurrency sets the value of Currency.
func (s *WebhookEventPaymentCard) SetCurrency(val OptCurrencyCode) {
	s.Currency = val
}

// SetJobCode sets the value of JobCode.
func (s *WebhookEventPaymentCard) SetJobCode(val OptCardPaymentJobCode) {
	s.JobCode = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *WebhookEventPaymentCard) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetBulkPaymentID sets the value of BulkPaymentID.
func (s *WebhookEventPaymentCard) SetBulkPaymentID(val OptPaymentBulkPropertiesID) {
	s.BulkPaymentID = val
}

// SetForward sets the value of Forward.
func (s *WebhookEventPaymentCard) SetForward(val OptNilForward) {
	s.Forward = val
}

// SetTransactionID sets the value of TransactionID.
func (s *WebhookEventPaymentCard) SetTransactionID(val OptNilTransactionID) {
	s.TransactionID = val
}

// SetTransactionDate sets the value of TransactionDate.
func (s *WebhookEventPaymentCard) SetTransactionDate(val OptNilString) {
	s.TransactionDate = val
}

// SetApprove sets the value of Approve.
func (s *WebhookEventPaymentCard) SetApprove(val OptNilApprove) {
	s.Approve = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *WebhookEventPaymentCard) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventPaymentCard) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.Payment.DirectDebit
type WebhookEventPaymentDirectDebit struct {
	ShopID               OptShopPropertiesID          `json:"shop_id"`
	OrderID              OptPaymentPropertiesID       `json:"order_id"`
	AccessID             OptAccessID                  `json:"access_id"`
	PayType              OptPayType                   `json:"pay_type"`
	Status               OptPaymentStatus             `json:"status"`
	CustomerID           OptID                        `json:"customer_id"`
	PaymentMethodID      OptPaymentMethodPropertiesID `json:"payment_method_id"`
	ResultCode           OptDirectDebitResultCode     `json:"result_code"`
	ClientField1         OptNilClientFieldN           `json:"client_field_1"`
	ClientField2         OptNilClientFieldN           `json:"client_field_2"`
	ClientField3         OptNilClientFieldN           `json:"client_field_3"`
	Amount               OptAmount                    `json:"amount"`
	Tax                  OptTax                       `json:"tax"`
	ProcessDate          OptPropertiesProcessDate     `json:"process_date"`
	TargetDate           OptNilTargetDate             `json:"target_date"`
	WithdrawalDate       OptNilWithdrawalDate         `json:"withdrawal_date"`
	RequestAcceptEndDate OptNilRequestAcceptEndDate   `json:"request_accept_end_date"`
	TransferReturnDate   OptNilTransferReturnDate     `json:"transfer_return_date"`
	Remarks              OptNilRemarks                `json:"remarks"`
	SubscriptionID       OptSubscriptionPropertiesID  `json:"subscription_id"`
	ErrorCode            OptErrorCode                 `json:"error_code"`
	Event                OptFincodeEvent              `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventPaymentDirectDebit) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetOrderID returns the value of OrderID.
func (s *WebhookEventPaymentDirectDebit) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetAccessID returns the value of AccessID.
func (s *WebhookEventPaymentDirectDebit) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetPayType returns the value of PayType.
func (s *WebhookEventPaymentDirectDebit) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *WebhookEventPaymentDirectDebit) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventPaymentDirectDebit) GetCustomerID() OptID {
	return s.CustomerID
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *WebhookEventPaymentDirectDebit) GetPaymentMethodID() OptPaymentMethodPropertiesID {
	return s.PaymentMethodID
}

// GetResultCode returns the value of ResultCode.
func (s *WebhookEventPaymentDirectDebit) GetResultCode() OptDirectDebitResultCode {
	return s.ResultCode
}

// GetClientField1 returns the value of ClientField1.
func (s *WebhookEventPaymentDirectDebit) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *WebhookEventPaymentDirectDebit) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *WebhookEventPaymentDirectDebit) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetAmount returns the value of Amount.
func (s *WebhookEventPaymentDirectDebit) GetAmount() OptAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *WebhookEventPaymentDirectDebit) GetTax() OptTax {
	return s.Tax
}

// GetProcessDate returns the value of ProcessDate.
func (s *WebhookEventPaymentDirectDebit) GetProcessDate() OptPropertiesProcessDate {
	return s.ProcessDate
}

// GetTargetDate returns the value of TargetDate.
func (s *WebhookEventPaymentDirectDebit) GetTargetDate() OptNilTargetDate {
	return s.TargetDate
}

// GetWithdrawalDate returns the value of WithdrawalDate.
func (s *WebhookEventPaymentDirectDebit) GetWithdrawalDate() OptNilWithdrawalDate {
	return s.WithdrawalDate
}

// GetRequestAcceptEndDate returns the value of RequestAcceptEndDate.
func (s *WebhookEventPaymentDirectDebit) GetRequestAcceptEndDate() OptNilRequestAcceptEndDate {
	return s.RequestAcceptEndDate
}

// GetTransferReturnDate returns the value of TransferReturnDate.
func (s *WebhookEventPaymentDirectDebit) GetTransferReturnDate() OptNilTransferReturnDate {
	return s.TransferReturnDate
}

// GetRemarks returns the value of Remarks.
func (s *WebhookEventPaymentDirectDebit) GetRemarks() OptNilRemarks {
	return s.Remarks
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *WebhookEventPaymentDirectDebit) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetErrorCode returns the value of ErrorCode.
func (s *WebhookEventPaymentDirectDebit) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetEvent returns the value of Event.
func (s *WebhookEventPaymentDirectDebit) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventPaymentDirectDebit) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetOrderID sets the value of OrderID.
func (s *WebhookEventPaymentDirectDebit) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetAccessID sets the value of AccessID.
func (s *WebhookEventPaymentDirectDebit) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventPaymentDirectDebit) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventPaymentDirectDebit) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventPaymentDirectDebit) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *WebhookEventPaymentDirectDebit) SetPaymentMethodID(val OptPaymentMethodPropertiesID) {
	s.PaymentMethodID = val
}

// SetResultCode sets the value of ResultCode.
func (s *WebhookEventPaymentDirectDebit) SetResultCode(val OptDirectDebitResultCode) {
	s.ResultCode = val
}

// SetClientField1 sets the value of ClientField1.
func (s *WebhookEventPaymentDirectDebit) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *WebhookEventPaymentDirectDebit) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *WebhookEventPaymentDirectDebit) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetAmount sets the value of Amount.
func (s *WebhookEventPaymentDirectDebit) SetAmount(val OptAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *WebhookEventPaymentDirectDebit) SetTax(val OptTax) {
	s.Tax = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *WebhookEventPaymentDirectDebit) SetProcessDate(val OptPropertiesProcessDate) {
	s.ProcessDate = val
}

// SetTargetDate sets the value of TargetDate.
func (s *WebhookEventPaymentDirectDebit) SetTargetDate(val OptNilTargetDate) {
	s.TargetDate = val
}

// SetWithdrawalDate sets the value of WithdrawalDate.
func (s *WebhookEventPaymentDirectDebit) SetWithdrawalDate(val OptNilWithdrawalDate) {
	s.WithdrawalDate = val
}

// SetRequestAcceptEndDate sets the value of RequestAcceptEndDate.
func (s *WebhookEventPaymentDirectDebit) SetRequestAcceptEndDate(val OptNilRequestAcceptEndDate) {
	s.RequestAcceptEndDate = val
}

// SetTransferReturnDate sets the value of TransferReturnDate.
func (s *WebhookEventPaymentDirectDebit) SetTransferReturnDate(val OptNilTransferReturnDate) {
	s.TransferReturnDate = val
}

// SetRemarks sets the value of Remarks.
func (s *WebhookEventPaymentDirectDebit) SetRemarks(val OptNilRemarks) {
	s.Remarks = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *WebhookEventPaymentDirectDebit) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *WebhookEventPaymentDirectDebit) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventPaymentDirectDebit) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.Payment.Konbini
type WebhookEventPaymentKonbini struct {
	ShopID                OptShopPropertiesID      `json:"shop_id"`
	OrderID               OptPaymentPropertiesID   `json:"order_id"`
	AccessID              OptAccessID              `json:"access_id"`
	PayType               OptPayType               `json:"pay_type"`
	Status                OptPaymentStatus         `json:"status"`
	CustomerID            OptID                    `json:"customer_id"`
	OverpaymentFlag       OptOverpaymentFlag       `json:"overpayment_flag"`
	CancelOverpaymentFlag OptCancelOverpaymentFlag `json:"cancel_overpayment_flag"`
	PaymentDate           OptNilPaymentDate        `json:"payment_date"`
	PaymentTerm           OptNilPaymentTerm        `json:"payment_term"`
	ProcessDate           OptPropertiesProcessDate `json:"process_date"`
	ClientField1          OptNilClientFieldN       `json:"client_field_1"`
	ClientField2          OptNilClientFieldN       `json:"client_field_2"`
	ClientField3          OptNilClientFieldN       `json:"client_field_3"`
	Amount                OptAmount                `json:"amount"`
	Tax                   OptTax                   `json:"tax"`
	KonbiniCode           OptKonbiniCode           `json:"konbini_code"`
	KonbiniStoreCode      KonbiniStoreCode         `json:"konbini_store_code"`
	OrderSerial           OptNilOrderSerial        `json:"order_serial"`
	InvoiceID             OptNilInvoiceID          `json:"invoice_id"`
	ErrorCode             OptErrorCode             `json:"error_code"`
	Event                 OptFincodeEvent          `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventPaymentKonbini) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetOrderID returns the value of OrderID.
func (s *WebhookEventPaymentKonbini) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetAccessID returns the value of AccessID.
func (s *WebhookEventPaymentKonbini) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetPayType returns the value of PayType.
func (s *WebhookEventPaymentKonbini) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *WebhookEventPaymentKonbini) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventPaymentKonbini) GetCustomerID() OptID {
	return s.CustomerID
}

// GetOverpaymentFlag returns the value of OverpaymentFlag.
func (s *WebhookEventPaymentKonbini) GetOverpaymentFlag() OptOverpaymentFlag {
	return s.OverpaymentFlag
}

// GetCancelOverpaymentFlag returns the value of CancelOverpaymentFlag.
func (s *WebhookEventPaymentKonbini) GetCancelOverpaymentFlag() OptCancelOverpaymentFlag {
	return s.CancelOverpaymentFlag
}

// GetPaymentDate returns the value of PaymentDate.
func (s *WebhookEventPaymentKonbini) GetPaymentDate() OptNilPaymentDate {
	return s.PaymentDate
}

// GetPaymentTerm returns the value of PaymentTerm.
func (s *WebhookEventPaymentKonbini) GetPaymentTerm() OptNilPaymentTerm {
	return s.PaymentTerm
}

// GetProcessDate returns the value of ProcessDate.
func (s *WebhookEventPaymentKonbini) GetProcessDate() OptPropertiesProcessDate {
	return s.ProcessDate
}

// GetClientField1 returns the value of ClientField1.
func (s *WebhookEventPaymentKonbini) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *WebhookEventPaymentKonbini) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *WebhookEventPaymentKonbini) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetAmount returns the value of Amount.
func (s *WebhookEventPaymentKonbini) GetAmount() OptAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *WebhookEventPaymentKonbini) GetTax() OptTax {
	return s.Tax
}

// GetKonbiniCode returns the value of KonbiniCode.
func (s *WebhookEventPaymentKonbini) GetKonbiniCode() OptKonbiniCode {
	return s.KonbiniCode
}

// GetKonbiniStoreCode returns the value of KonbiniStoreCode.
func (s *WebhookEventPaymentKonbini) GetKonbiniStoreCode() KonbiniStoreCode {
	return s.KonbiniStoreCode
}

// GetOrderSerial returns the value of OrderSerial.
func (s *WebhookEventPaymentKonbini) GetOrderSerial() OptNilOrderSerial {
	return s.OrderSerial
}

// GetInvoiceID returns the value of InvoiceID.
func (s *WebhookEventPaymentKonbini) GetInvoiceID() OptNilInvoiceID {
	return s.InvoiceID
}

// GetErrorCode returns the value of ErrorCode.
func (s *WebhookEventPaymentKonbini) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetEvent returns the value of Event.
func (s *WebhookEventPaymentKonbini) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventPaymentKonbini) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetOrderID sets the value of OrderID.
func (s *WebhookEventPaymentKonbini) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetAccessID sets the value of AccessID.
func (s *WebhookEventPaymentKonbini) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventPaymentKonbini) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventPaymentKonbini) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventPaymentKonbini) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetOverpaymentFlag sets the value of OverpaymentFlag.
func (s *WebhookEventPaymentKonbini) SetOverpaymentFlag(val OptOverpaymentFlag) {
	s.OverpaymentFlag = val
}

// SetCancelOverpaymentFlag sets the value of CancelOverpaymentFlag.
func (s *WebhookEventPaymentKonbini) SetCancelOverpaymentFlag(val OptCancelOverpaymentFlag) {
	s.CancelOverpaymentFlag = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *WebhookEventPaymentKonbini) SetPaymentDate(val OptNilPaymentDate) {
	s.PaymentDate = val
}

// SetPaymentTerm sets the value of PaymentTerm.
func (s *WebhookEventPaymentKonbini) SetPaymentTerm(val OptNilPaymentTerm) {
	s.PaymentTerm = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *WebhookEventPaymentKonbini) SetProcessDate(val OptPropertiesProcessDate) {
	s.ProcessDate = val
}

// SetClientField1 sets the value of ClientField1.
func (s *WebhookEventPaymentKonbini) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *WebhookEventPaymentKonbini) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *WebhookEventPaymentKonbini) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetAmount sets the value of Amount.
func (s *WebhookEventPaymentKonbini) SetAmount(val OptAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *WebhookEventPaymentKonbini) SetTax(val OptTax) {
	s.Tax = val
}

// SetKonbiniCode sets the value of KonbiniCode.
func (s *WebhookEventPaymentKonbini) SetKonbiniCode(val OptKonbiniCode) {
	s.KonbiniCode = val
}

// SetKonbiniStoreCode sets the value of KonbiniStoreCode.
func (s *WebhookEventPaymentKonbini) SetKonbiniStoreCode(val KonbiniStoreCode) {
	s.KonbiniStoreCode = val
}

// SetOrderSerial sets the value of OrderSerial.
func (s *WebhookEventPaymentKonbini) SetOrderSerial(val OptNilOrderSerial) {
	s.OrderSerial = val
}

// SetInvoiceID sets the value of InvoiceID.
func (s *WebhookEventPaymentKonbini) SetInvoiceID(val OptNilInvoiceID) {
	s.InvoiceID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *WebhookEventPaymentKonbini) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventPaymentKonbini) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.Payment.PayPay
type WebhookEventPaymentPayPay struct {
	ShopID            OptShopPropertiesID         `json:"shop_id"`
	OrderID           OptPaymentPropertiesID      `json:"order_id"`
	AccessID          OptAccessID                 `json:"access_id"`
	PayType           OptPayType                  `json:"pay_type"`
	Status            OptPaymentStatus            `json:"status"`
	CustomerID        OptID                       `json:"customer_id"`
	ProcessDate       OptPropertiesProcessDate    `json:"process_date"`
	JobCode           OptPayPayPaymentJobCode     `json:"job_code"`
	ClientField1      OptNilClientFieldN          `json:"client_field_1"`
	ClientField2      OptNilClientFieldN          `json:"client_field_2"`
	ClientField3      OptNilClientFieldN          `json:"client_field_3"`
	Amount            OptAmount                   `json:"amount"`
	Tax               OptTax                      `json:"tax"`
	CodeExpiryDate    OptNilCodeExpiryDate        `json:"code_expiry_date"`
	AuthMaxDate       OptNilAuthMaxDate           `json:"auth_max_date"`
	OrderDescription  OptNilOrderDescription      `json:"order_description"`
	CodeID            OptNilCodeID                `json:"code_id"`
	PaymentID         OptNilPaymentID             `json:"payment_id"`
	PaymentDate       OptNilPropertiesPaymentDate `json:"payment_date"`
	MerchantPaymentID OptNilMerchantPaymentID     `json:"merchant_payment_id"`
	MerchantUpdateID  OptNilMerchantUpdateID      `json:"merchant_update_id"`
	MerchantRevertID  OptNilMerchantRevertID      `json:"merchant_revert_id"`
	MerchantRefundID  OptNilMerchantRefundID      `json:"merchant_refund_id"`
	ErrorCode         OptErrorCode                `json:"error_code"`
	Event             OptFincodeEvent             `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventPaymentPayPay) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetOrderID returns the value of OrderID.
func (s *WebhookEventPaymentPayPay) GetOrderID() OptPaymentPropertiesID {
	return s.OrderID
}

// GetAccessID returns the value of AccessID.
func (s *WebhookEventPaymentPayPay) GetAccessID() OptAccessID {
	return s.AccessID
}

// GetPayType returns the value of PayType.
func (s *WebhookEventPaymentPayPay) GetPayType() OptPayType {
	return s.PayType
}

// GetStatus returns the value of Status.
func (s *WebhookEventPaymentPayPay) GetStatus() OptPaymentStatus {
	return s.Status
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventPaymentPayPay) GetCustomerID() OptID {
	return s.CustomerID
}

// GetProcessDate returns the value of ProcessDate.
func (s *WebhookEventPaymentPayPay) GetProcessDate() OptPropertiesProcessDate {
	return s.ProcessDate
}

// GetJobCode returns the value of JobCode.
func (s *WebhookEventPaymentPayPay) GetJobCode() OptPayPayPaymentJobCode {
	return s.JobCode
}

// GetClientField1 returns the value of ClientField1.
func (s *WebhookEventPaymentPayPay) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *WebhookEventPaymentPayPay) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *WebhookEventPaymentPayPay) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetAmount returns the value of Amount.
func (s *WebhookEventPaymentPayPay) GetAmount() OptAmount {
	return s.Amount
}

// GetTax returns the value of Tax.
func (s *WebhookEventPaymentPayPay) GetTax() OptTax {
	return s.Tax
}

// GetCodeExpiryDate returns the value of CodeExpiryDate.
func (s *WebhookEventPaymentPayPay) GetCodeExpiryDate() OptNilCodeExpiryDate {
	return s.CodeExpiryDate
}

// GetAuthMaxDate returns the value of AuthMaxDate.
func (s *WebhookEventPaymentPayPay) GetAuthMaxDate() OptNilAuthMaxDate {
	return s.AuthMaxDate
}

// GetOrderDescription returns the value of OrderDescription.
func (s *WebhookEventPaymentPayPay) GetOrderDescription() OptNilOrderDescription {
	return s.OrderDescription
}

// GetCodeID returns the value of CodeID.
func (s *WebhookEventPaymentPayPay) GetCodeID() OptNilCodeID {
	return s.CodeID
}

// GetPaymentID returns the value of PaymentID.
func (s *WebhookEventPaymentPayPay) GetPaymentID() OptNilPaymentID {
	return s.PaymentID
}

// GetPaymentDate returns the value of PaymentDate.
func (s *WebhookEventPaymentPayPay) GetPaymentDate() OptNilPropertiesPaymentDate {
	return s.PaymentDate
}

// GetMerchantPaymentID returns the value of MerchantPaymentID.
func (s *WebhookEventPaymentPayPay) GetMerchantPaymentID() OptNilMerchantPaymentID {
	return s.MerchantPaymentID
}

// GetMerchantUpdateID returns the value of MerchantUpdateID.
func (s *WebhookEventPaymentPayPay) GetMerchantUpdateID() OptNilMerchantUpdateID {
	return s.MerchantUpdateID
}

// GetMerchantRevertID returns the value of MerchantRevertID.
func (s *WebhookEventPaymentPayPay) GetMerchantRevertID() OptNilMerchantRevertID {
	return s.MerchantRevertID
}

// GetMerchantRefundID returns the value of MerchantRefundID.
func (s *WebhookEventPaymentPayPay) GetMerchantRefundID() OptNilMerchantRefundID {
	return s.MerchantRefundID
}

// GetErrorCode returns the value of ErrorCode.
func (s *WebhookEventPaymentPayPay) GetErrorCode() OptErrorCode {
	return s.ErrorCode
}

// GetEvent returns the value of Event.
func (s *WebhookEventPaymentPayPay) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventPaymentPayPay) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetOrderID sets the value of OrderID.
func (s *WebhookEventPaymentPayPay) SetOrderID(val OptPaymentPropertiesID) {
	s.OrderID = val
}

// SetAccessID sets the value of AccessID.
func (s *WebhookEventPaymentPayPay) SetAccessID(val OptAccessID) {
	s.AccessID = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventPaymentPayPay) SetPayType(val OptPayType) {
	s.PayType = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventPaymentPayPay) SetStatus(val OptPaymentStatus) {
	s.Status = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventPaymentPayPay) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *WebhookEventPaymentPayPay) SetProcessDate(val OptPropertiesProcessDate) {
	s.ProcessDate = val
}

// SetJobCode sets the value of JobCode.
func (s *WebhookEventPaymentPayPay) SetJobCode(val OptPayPayPaymentJobCode) {
	s.JobCode = val
}

// SetClientField1 sets the value of ClientField1.
func (s *WebhookEventPaymentPayPay) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *WebhookEventPaymentPayPay) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *WebhookEventPaymentPayPay) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetAmount sets the value of Amount.
func (s *WebhookEventPaymentPayPay) SetAmount(val OptAmount) {
	s.Amount = val
}

// SetTax sets the value of Tax.
func (s *WebhookEventPaymentPayPay) SetTax(val OptTax) {
	s.Tax = val
}

// SetCodeExpiryDate sets the value of CodeExpiryDate.
func (s *WebhookEventPaymentPayPay) SetCodeExpiryDate(val OptNilCodeExpiryDate) {
	s.CodeExpiryDate = val
}

// SetAuthMaxDate sets the value of AuthMaxDate.
func (s *WebhookEventPaymentPayPay) SetAuthMaxDate(val OptNilAuthMaxDate) {
	s.AuthMaxDate = val
}

// SetOrderDescription sets the value of OrderDescription.
func (s *WebhookEventPaymentPayPay) SetOrderDescription(val OptNilOrderDescription) {
	s.OrderDescription = val
}

// SetCodeID sets the value of CodeID.
func (s *WebhookEventPaymentPayPay) SetCodeID(val OptNilCodeID) {
	s.CodeID = val
}

// SetPaymentID sets the value of PaymentID.
func (s *WebhookEventPaymentPayPay) SetPaymentID(val OptNilPaymentID) {
	s.PaymentID = val
}

// SetPaymentDate sets the value of PaymentDate.
func (s *WebhookEventPaymentPayPay) SetPaymentDate(val OptNilPropertiesPaymentDate) {
	s.PaymentDate = val
}

// SetMerchantPaymentID sets the value of MerchantPaymentID.
func (s *WebhookEventPaymentPayPay) SetMerchantPaymentID(val OptNilMerchantPaymentID) {
	s.MerchantPaymentID = val
}

// SetMerchantUpdateID sets the value of MerchantUpdateID.
func (s *WebhookEventPaymentPayPay) SetMerchantUpdateID(val OptNilMerchantUpdateID) {
	s.MerchantUpdateID = val
}

// SetMerchantRevertID sets the value of MerchantRevertID.
func (s *WebhookEventPaymentPayPay) SetMerchantRevertID(val OptNilMerchantRevertID) {
	s.MerchantRevertID = val
}

// SetMerchantRefundID sets the value of MerchantRefundID.
func (s *WebhookEventPaymentPayPay) SetMerchantRefundID(val OptNilMerchantRefundID) {
	s.MerchantRefundID = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *WebhookEventPaymentPayPay) SetErrorCode(val OptErrorCode) {
	s.ErrorCode = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventPaymentPayPay) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.RecurringBatch.Card
type WebhookEventRecurringBatchCard struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// 成功件数\
	// \
	// 今回のサブスクリプション課金において成功した決済の件数です。.
	Succeeded OptString `json:"succeeded"`
	// 失敗件数\
	// \
	// 今回のサブスクリプション課金において失敗した決済の件数です。.
	Failed OptString `json:"failed"`
	// 合計件数\
	// \
	// 今回のサブスクリプション課金において発生した決済の合計件数です。.
	Total       OptString                `json:"total"`
	ProcessDate OptPropertiesProcessDate `json:"process_date"`
	// 課金日\
	// 今回のサブスクリプションの課金日です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	ChargeDate OptString              `json:"charge_date"`
	PayType    OptSubscriptionPayType `json:"pay_type"`
	Event      OptFincodeEvent        `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventRecurringBatchCard) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetSucceeded returns the value of Succeeded.
func (s *WebhookEventRecurringBatchCard) GetSucceeded() OptString {
	return s.Succeeded
}

// GetFailed returns the value of Failed.
func (s *WebhookEventRecurringBatchCard) GetFailed() OptString {
	return s.Failed
}

// GetTotal returns the value of Total.
func (s *WebhookEventRecurringBatchCard) GetTotal() OptString {
	return s.Total
}

// GetProcessDate returns the value of ProcessDate.
func (s *WebhookEventRecurringBatchCard) GetProcessDate() OptPropertiesProcessDate {
	return s.ProcessDate
}

// GetChargeDate returns the value of ChargeDate.
func (s *WebhookEventRecurringBatchCard) GetChargeDate() OptString {
	return s.ChargeDate
}

// GetPayType returns the value of PayType.
func (s *WebhookEventRecurringBatchCard) GetPayType() OptSubscriptionPayType {
	return s.PayType
}

// GetEvent returns the value of Event.
func (s *WebhookEventRecurringBatchCard) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventRecurringBatchCard) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetSucceeded sets the value of Succeeded.
func (s *WebhookEventRecurringBatchCard) SetSucceeded(val OptString) {
	s.Succeeded = val
}

// SetFailed sets the value of Failed.
func (s *WebhookEventRecurringBatchCard) SetFailed(val OptString) {
	s.Failed = val
}

// SetTotal sets the value of Total.
func (s *WebhookEventRecurringBatchCard) SetTotal(val OptString) {
	s.Total = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *WebhookEventRecurringBatchCard) SetProcessDate(val OptPropertiesProcessDate) {
	s.ProcessDate = val
}

// SetChargeDate sets the value of ChargeDate.
func (s *WebhookEventRecurringBatchCard) SetChargeDate(val OptString) {
	s.ChargeDate = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventRecurringBatchCard) SetPayType(val OptSubscriptionPayType) {
	s.PayType = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventRecurringBatchCard) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.RecurringBatch.DirectDebit
type WebhookEventRecurringBatchDirectDebit struct {
	ShopID OptShopPropertiesID `json:"shop_id"`
	// 成功件数\
	// \
	// 今回のサブスクリプション課金において成功した決済の件数です。.
	Succeeded OptString `json:"succeeded"`
	// 失敗件数\
	// \
	// 今回のサブスクリプション課金において失敗した決済の件数です。.
	Failed OptString `json:"failed"`
	// 合計件数\
	// \
	// 今回のサブスクリプション課金において発生した決済の合計件数です。.
	Total       OptString                `json:"total"`
	ProcessDate OptPropertiesProcessDate `json:"process_date"`
	// 課金日\
	// 今回のサブスクリプションの課金日です。\
	// \
	// 形式：`yyyy/MM/dd HH:mm:ss.SSS`.
	ChargeDate OptString              `json:"charge_date"`
	PayType    OptSubscriptionPayType `json:"pay_type"`
	Event      OptFincodeEvent        `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventRecurringBatchDirectDebit) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetSucceeded returns the value of Succeeded.
func (s *WebhookEventRecurringBatchDirectDebit) GetSucceeded() OptString {
	return s.Succeeded
}

// GetFailed returns the value of Failed.
func (s *WebhookEventRecurringBatchDirectDebit) GetFailed() OptString {
	return s.Failed
}

// GetTotal returns the value of Total.
func (s *WebhookEventRecurringBatchDirectDebit) GetTotal() OptString {
	return s.Total
}

// GetProcessDate returns the value of ProcessDate.
func (s *WebhookEventRecurringBatchDirectDebit) GetProcessDate() OptPropertiesProcessDate {
	return s.ProcessDate
}

// GetChargeDate returns the value of ChargeDate.
func (s *WebhookEventRecurringBatchDirectDebit) GetChargeDate() OptString {
	return s.ChargeDate
}

// GetPayType returns the value of PayType.
func (s *WebhookEventRecurringBatchDirectDebit) GetPayType() OptSubscriptionPayType {
	return s.PayType
}

// GetEvent returns the value of Event.
func (s *WebhookEventRecurringBatchDirectDebit) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventRecurringBatchDirectDebit) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetSucceeded sets the value of Succeeded.
func (s *WebhookEventRecurringBatchDirectDebit) SetSucceeded(val OptString) {
	s.Succeeded = val
}

// SetFailed sets the value of Failed.
func (s *WebhookEventRecurringBatchDirectDebit) SetFailed(val OptString) {
	s.Failed = val
}

// SetTotal sets the value of Total.
func (s *WebhookEventRecurringBatchDirectDebit) SetTotal(val OptString) {
	s.Total = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *WebhookEventRecurringBatchDirectDebit) SetProcessDate(val OptPropertiesProcessDate) {
	s.ProcessDate = val
}

// SetChargeDate sets the value of ChargeDate.
func (s *WebhookEventRecurringBatchDirectDebit) SetChargeDate(val OptString) {
	s.ChargeDate = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventRecurringBatchDirectDebit) SetPayType(val OptSubscriptionPayType) {
	s.PayType = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventRecurringBatchDirectDebit) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.Subscription.Card
type WebhookEventSubscriptionCard struct {
	ShopID          OptShopPropertiesID         `json:"shop_id"`
	SubscriptionID  OptSubscriptionPropertiesID `json:"subscription_id"`
	PlanID          OptPlanPropertiesID         `json:"plan_id"`
	CustomerID      OptID                       `json:"customer_id"`
	CardID          OptPropertiesID             `json:"card_id"`
	DefaultCardFlag OptDefaultFlag              `json:"default_card_flag"`
	Status          OptSubscriptionStatus       `json:"status"`
	ClientField1    OptNilClientFieldN          `json:"client_field_1"`
	ClientField2    OptNilClientFieldN          `json:"client_field_2"`
	ClientField3    OptNilClientFieldN          `json:"client_field_3"`
	ProcessDate     OptPropertiesProcessDate    `json:"process_date"`
	StartDate       OptStartDate                `json:"start_date"`
	StopDate        OptNilStopDate              `json:"stop_date"`
	NextChargeDate  OptNextChargeDate           `json:"next_charge_date"`
	EndMonthFlag    OptEndMonthFlag             `json:"end_month_flag"`
	PayType         OptSubscriptionPayType      `json:"pay_type"`
	Event           OptFincodeEvent             `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventSubscriptionCard) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *WebhookEventSubscriptionCard) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetPlanID returns the value of PlanID.
func (s *WebhookEventSubscriptionCard) GetPlanID() OptPlanPropertiesID {
	return s.PlanID
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventSubscriptionCard) GetCustomerID() OptID {
	return s.CustomerID
}

// GetCardID returns the value of CardID.
func (s *WebhookEventSubscriptionCard) GetCardID() OptPropertiesID {
	return s.CardID
}

// GetDefaultCardFlag returns the value of DefaultCardFlag.
func (s *WebhookEventSubscriptionCard) GetDefaultCardFlag() OptDefaultFlag {
	return s.DefaultCardFlag
}

// GetStatus returns the value of Status.
func (s *WebhookEventSubscriptionCard) GetStatus() OptSubscriptionStatus {
	return s.Status
}

// GetClientField1 returns the value of ClientField1.
func (s *WebhookEventSubscriptionCard) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *WebhookEventSubscriptionCard) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *WebhookEventSubscriptionCard) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetProcessDate returns the value of ProcessDate.
func (s *WebhookEventSubscriptionCard) GetProcessDate() OptPropertiesProcessDate {
	return s.ProcessDate
}

// GetStartDate returns the value of StartDate.
func (s *WebhookEventSubscriptionCard) GetStartDate() OptStartDate {
	return s.StartDate
}

// GetStopDate returns the value of StopDate.
func (s *WebhookEventSubscriptionCard) GetStopDate() OptNilStopDate {
	return s.StopDate
}

// GetNextChargeDate returns the value of NextChargeDate.
func (s *WebhookEventSubscriptionCard) GetNextChargeDate() OptNextChargeDate {
	return s.NextChargeDate
}

// GetEndMonthFlag returns the value of EndMonthFlag.
func (s *WebhookEventSubscriptionCard) GetEndMonthFlag() OptEndMonthFlag {
	return s.EndMonthFlag
}

// GetPayType returns the value of PayType.
func (s *WebhookEventSubscriptionCard) GetPayType() OptSubscriptionPayType {
	return s.PayType
}

// GetEvent returns the value of Event.
func (s *WebhookEventSubscriptionCard) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventSubscriptionCard) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *WebhookEventSubscriptionCard) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetPlanID sets the value of PlanID.
func (s *WebhookEventSubscriptionCard) SetPlanID(val OptPlanPropertiesID) {
	s.PlanID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventSubscriptionCard) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetCardID sets the value of CardID.
func (s *WebhookEventSubscriptionCard) SetCardID(val OptPropertiesID) {
	s.CardID = val
}

// SetDefaultCardFlag sets the value of DefaultCardFlag.
func (s *WebhookEventSubscriptionCard) SetDefaultCardFlag(val OptDefaultFlag) {
	s.DefaultCardFlag = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventSubscriptionCard) SetStatus(val OptSubscriptionStatus) {
	s.Status = val
}

// SetClientField1 sets the value of ClientField1.
func (s *WebhookEventSubscriptionCard) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *WebhookEventSubscriptionCard) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *WebhookEventSubscriptionCard) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetProcessDate sets the value of ProcessDate.
func (s *WebhookEventSubscriptionCard) SetProcessDate(val OptPropertiesProcessDate) {
	s.ProcessDate = val
}

// SetStartDate sets the value of StartDate.
func (s *WebhookEventSubscriptionCard) SetStartDate(val OptStartDate) {
	s.StartDate = val
}

// SetStopDate sets the value of StopDate.
func (s *WebhookEventSubscriptionCard) SetStopDate(val OptNilStopDate) {
	s.StopDate = val
}

// SetNextChargeDate sets the value of NextChargeDate.
func (s *WebhookEventSubscriptionCard) SetNextChargeDate(val OptNextChargeDate) {
	s.NextChargeDate = val
}

// SetEndMonthFlag sets the value of EndMonthFlag.
func (s *WebhookEventSubscriptionCard) SetEndMonthFlag(val OptEndMonthFlag) {
	s.EndMonthFlag = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventSubscriptionCard) SetPayType(val OptSubscriptionPayType) {
	s.PayType = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventSubscriptionCard) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookEvent.Subscription.DirectDebit
type WebhookEventSubscriptionDirectDebit struct {
	ShopID          OptShopPropertiesID          `json:"shop_id"`
	SubscriptionID  OptSubscriptionPropertiesID  `json:"subscription_id"`
	PlanID          OptPlanPropertiesID          `json:"plan_id"`
	CustomerID      OptID                        `json:"customer_id"`
	PaymentMethodID OptPaymentMethodPropertiesID `json:"payment_method_id"`
	DefaultFlag     OptPropertiesDefaultFlag     `json:"default_flag"`
	Status          OptSubscriptionStatus        `json:"status"`
	ClientField1    OptNilClientFieldN           `json:"client_field_1"`
	ClientField2    OptNilClientFieldN           `json:"client_field_2"`
	ClientField3    OptNilClientFieldN           `json:"client_field_3"`
	Remarks         OptNilRemarks                `json:"remarks"`
	StartDate       OptStartDate                 `json:"start_date"`
	StopDate        OptNilStopDate               `json:"stop_date"`
	NextChargeDate  OptNextChargeDate            `json:"next_charge_date"`
	EndMonthFlag    OptEndMonthFlag              `json:"end_month_flag"`
	PayType         OptSubscriptionPayType       `json:"pay_type"`
	Event           OptFincodeEvent              `json:"event"`
}

// GetShopID returns the value of ShopID.
func (s *WebhookEventSubscriptionDirectDebit) GetShopID() OptShopPropertiesID {
	return s.ShopID
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *WebhookEventSubscriptionDirectDebit) GetSubscriptionID() OptSubscriptionPropertiesID {
	return s.SubscriptionID
}

// GetPlanID returns the value of PlanID.
func (s *WebhookEventSubscriptionDirectDebit) GetPlanID() OptPlanPropertiesID {
	return s.PlanID
}

// GetCustomerID returns the value of CustomerID.
func (s *WebhookEventSubscriptionDirectDebit) GetCustomerID() OptID {
	return s.CustomerID
}

// GetPaymentMethodID returns the value of PaymentMethodID.
func (s *WebhookEventSubscriptionDirectDebit) GetPaymentMethodID() OptPaymentMethodPropertiesID {
	return s.PaymentMethodID
}

// GetDefaultFlag returns the value of DefaultFlag.
func (s *WebhookEventSubscriptionDirectDebit) GetDefaultFlag() OptPropertiesDefaultFlag {
	return s.DefaultFlag
}

// GetStatus returns the value of Status.
func (s *WebhookEventSubscriptionDirectDebit) GetStatus() OptSubscriptionStatus {
	return s.Status
}

// GetClientField1 returns the value of ClientField1.
func (s *WebhookEventSubscriptionDirectDebit) GetClientField1() OptNilClientFieldN {
	return s.ClientField1
}

// GetClientField2 returns the value of ClientField2.
func (s *WebhookEventSubscriptionDirectDebit) GetClientField2() OptNilClientFieldN {
	return s.ClientField2
}

// GetClientField3 returns the value of ClientField3.
func (s *WebhookEventSubscriptionDirectDebit) GetClientField3() OptNilClientFieldN {
	return s.ClientField3
}

// GetRemarks returns the value of Remarks.
func (s *WebhookEventSubscriptionDirectDebit) GetRemarks() OptNilRemarks {
	return s.Remarks
}

// GetStartDate returns the value of StartDate.
func (s *WebhookEventSubscriptionDirectDebit) GetStartDate() OptStartDate {
	return s.StartDate
}

// GetStopDate returns the value of StopDate.
func (s *WebhookEventSubscriptionDirectDebit) GetStopDate() OptNilStopDate {
	return s.StopDate
}

// GetNextChargeDate returns the value of NextChargeDate.
func (s *WebhookEventSubscriptionDirectDebit) GetNextChargeDate() OptNextChargeDate {
	return s.NextChargeDate
}

// GetEndMonthFlag returns the value of EndMonthFlag.
func (s *WebhookEventSubscriptionDirectDebit) GetEndMonthFlag() OptEndMonthFlag {
	return s.EndMonthFlag
}

// GetPayType returns the value of PayType.
func (s *WebhookEventSubscriptionDirectDebit) GetPayType() OptSubscriptionPayType {
	return s.PayType
}

// GetEvent returns the value of Event.
func (s *WebhookEventSubscriptionDirectDebit) GetEvent() OptFincodeEvent {
	return s.Event
}

// SetShopID sets the value of ShopID.
func (s *WebhookEventSubscriptionDirectDebit) SetShopID(val OptShopPropertiesID) {
	s.ShopID = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *WebhookEventSubscriptionDirectDebit) SetSubscriptionID(val OptSubscriptionPropertiesID) {
	s.SubscriptionID = val
}

// SetPlanID sets the value of PlanID.
func (s *WebhookEventSubscriptionDirectDebit) SetPlanID(val OptPlanPropertiesID) {
	s.PlanID = val
}

// SetCustomerID sets the value of CustomerID.
func (s *WebhookEventSubscriptionDirectDebit) SetCustomerID(val OptID) {
	s.CustomerID = val
}

// SetPaymentMethodID sets the value of PaymentMethodID.
func (s *WebhookEventSubscriptionDirectDebit) SetPaymentMethodID(val OptPaymentMethodPropertiesID) {
	s.PaymentMethodID = val
}

// SetDefaultFlag sets the value of DefaultFlag.
func (s *WebhookEventSubscriptionDirectDebit) SetDefaultFlag(val OptPropertiesDefaultFlag) {
	s.DefaultFlag = val
}

// SetStatus sets the value of Status.
func (s *WebhookEventSubscriptionDirectDebit) SetStatus(val OptSubscriptionStatus) {
	s.Status = val
}

// SetClientField1 sets the value of ClientField1.
func (s *WebhookEventSubscriptionDirectDebit) SetClientField1(val OptNilClientFieldN) {
	s.ClientField1 = val
}

// SetClientField2 sets the value of ClientField2.
func (s *WebhookEventSubscriptionDirectDebit) SetClientField2(val OptNilClientFieldN) {
	s.ClientField2 = val
}

// SetClientField3 sets the value of ClientField3.
func (s *WebhookEventSubscriptionDirectDebit) SetClientField3(val OptNilClientFieldN) {
	s.ClientField3 = val
}

// SetRemarks sets the value of Remarks.
func (s *WebhookEventSubscriptionDirectDebit) SetRemarks(val OptNilRemarks) {
	s.Remarks = val
}

// SetStartDate sets the value of StartDate.
func (s *WebhookEventSubscriptionDirectDebit) SetStartDate(val OptStartDate) {
	s.StartDate = val
}

// SetStopDate sets the value of StopDate.
func (s *WebhookEventSubscriptionDirectDebit) SetStopDate(val OptNilStopDate) {
	s.StopDate = val
}

// SetNextChargeDate sets the value of NextChargeDate.
func (s *WebhookEventSubscriptionDirectDebit) SetNextChargeDate(val OptNextChargeDate) {
	s.NextChargeDate = val
}

// SetEndMonthFlag sets the value of EndMonthFlag.
func (s *WebhookEventSubscriptionDirectDebit) SetEndMonthFlag(val OptEndMonthFlag) {
	s.EndMonthFlag = val
}

// SetPayType sets the value of PayType.
func (s *WebhookEventSubscriptionDirectDebit) SetPayType(val OptSubscriptionPayType) {
	s.PayType = val
}

// SetEvent sets the value of Event.
func (s *WebhookEventSubscriptionDirectDebit) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// Ref: #/components/schemas/WebhookResponse
type WebhookResponse struct {
	// Webhook通知受信\
	// \
	// Webhookの受信が正常に完了したかどうかをfincodeにレスポンスします。
	// - `0`: 受信成功<br /><span
	// class="smallText">fincodeは受信に成功したと判断し、通知を終了します。</span>
	// - `1`: 受信失敗<br /><span
	// class="smallText">fincodeは受信に失敗したと判断します。Webhookの受信に失敗した場合は、fincodeはリトライを行います。</span>.
	Receive OptWebhookResponseReceive `json:"receive"`
}

// GetReceive returns the value of Receive.
func (s *WebhookResponse) GetReceive() OptWebhookResponseReceive {
	return s.Receive
}

// SetReceive sets the value of Receive.
func (s *WebhookResponse) SetReceive(val OptWebhookResponseReceive) {
	s.Receive = val
}

func (*WebhookResponse) receiveWebhookOfApplePayPaymentRes()            {}
func (*WebhookResponse) receiveWebhookOfCardPaymentBulkBatchRes()       {}
func (*WebhookResponse) receiveWebhookOfCardPaymentRes()                {}
func (*WebhookResponse) receiveWebhookOfCardRecurringBatchRes()         {}
func (*WebhookResponse) receiveWebhookOfCardRes()                       {}
func (*WebhookResponse) receiveWebhookOfCardSubscriptionRes()           {}
func (*WebhookResponse) receiveWebhookOfContractRes()                   {}
func (*WebhookResponse) receiveWebhookOfCustomerPaymentMethodRes()      {}
func (*WebhookResponse) receiveWebhookOfDirectDebitPaymentRes()         {}
func (*WebhookResponse) receiveWebhookOfDirectDebitRecurringBatchRes()  {}
func (*WebhookResponse) receiveWebhookOfDirectDebitSubscriptionRes()    {}
func (*WebhookResponse) receiveWebhookOfKonbiniPaymentRes()             {}
func (*WebhookResponse) receiveWebhookOfPayPayPaymentRes()              {}
func (*WebhookResponse) receiveWebhookOfRegisteringCardPaymentBulkRes() {}

// Webhook通知受信\
// \
// Webhookの受信が正常に完了したかどうかをfincodeにレスポンスします。
// - `0`: 受信成功<br /><span
// class="smallText">fincodeは受信に成功したと判断し、通知を終了します。</span>
// - `1`: 受信失敗<br /><span
// class="smallText">fincodeは受信に失敗したと判断します。Webhookの受信に失敗した場合は、fincodeはリトライを行います。</span>.
type WebhookResponseReceive string

const (
	WebhookResponseReceive0 WebhookResponseReceive = "0"
	WebhookResponseReceive1 WebhookResponseReceive = "1"
)

// AllValues returns all WebhookResponseReceive values.
func (WebhookResponseReceive) AllValues() []WebhookResponseReceive {
	return []WebhookResponseReceive{
		WebhookResponseReceive0,
		WebhookResponseReceive1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s WebhookResponseReceive) MarshalText() ([]byte, error) {
	switch s {
	case WebhookResponseReceive0:
		return []byte(s), nil
	case WebhookResponseReceive1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *WebhookResponseReceive) UnmarshalText(data []byte) error {
	switch WebhookResponseReceive(data) {
	case WebhookResponseReceive0:
		*s = WebhookResponseReceive0
		return nil
	case WebhookResponseReceive1:
		*s = WebhookResponseReceive1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/WebhookSetting
type WebhookSetting struct {
	// Webhook設定ID.
	ID OptString `json:"id"`
	// Webhook通知先 URL\
	// \
	// Webhookの通知先URLを指定します。\
	// fincodeのWebhookはHTTPS通信かつ443ポートでのみ受信可能です。.
	URL   OptURI          `json:"url"`
	Event OptFincodeEvent `json:"event"`
	// 署名\
	// \
	// このWebhookがfincodeから送信されたことを確認するための署名です。\
	// fincodeからのWebhook通知において`Fincode-Signature`ヘッダーにこの値が含まれます。.
	Signature OptString     `json:"signature"`
	Created   OptCreated    `json:"created"`
	Updated   OptNilUpdated `json:"updated"`
}

// GetID returns the value of ID.
func (s *WebhookSetting) GetID() OptString {
	return s.ID
}

// GetURL returns the value of URL.
func (s *WebhookSetting) GetURL() OptURI {
	return s.URL
}

// GetEvent returns the value of Event.
func (s *WebhookSetting) GetEvent() OptFincodeEvent {
	return s.Event
}

// GetSignature returns the value of Signature.
func (s *WebhookSetting) GetSignature() OptString {
	return s.Signature
}

// GetCreated returns the value of Created.
func (s *WebhookSetting) GetCreated() OptCreated {
	return s.Created
}

// GetUpdated returns the value of Updated.
func (s *WebhookSetting) GetUpdated() OptNilUpdated {
	return s.Updated
}

// SetID sets the value of ID.
func (s *WebhookSetting) SetID(val OptString) {
	s.ID = val
}

// SetURL sets the value of URL.
func (s *WebhookSetting) SetURL(val OptURI) {
	s.URL = val
}

// SetEvent sets the value of Event.
func (s *WebhookSetting) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// SetSignature sets the value of Signature.
func (s *WebhookSetting) SetSignature(val OptString) {
	s.Signature = val
}

// SetCreated sets the value of Created.
func (s *WebhookSetting) SetCreated(val OptCreated) {
	s.Created = val
}

// SetUpdated sets the value of Updated.
func (s *WebhookSetting) SetUpdated(val OptNilUpdated) {
	s.Updated = val
}

func (*WebhookSetting) createWebhookSettingRes()   {}
func (*WebhookSetting) retrieveWebhookSettingRes() {}
func (*WebhookSetting) updateWebhookSettingRes()   {}

// Ref: #/components/schemas/WebhookSetting.Creating.Request
type WebhookSettingCreatingRequest struct {
	ID        OptWebhookSettingPropertiesID `json:"id"`
	URL       OptPropertiesURL              `json:"url"`
	Event     FincodeEvent                  `json:"event"`
	Signature OptSignature                  `json:"signature"`
}

// GetID returns the value of ID.
func (s *WebhookSettingCreatingRequest) GetID() OptWebhookSettingPropertiesID {
	return s.ID
}

// GetURL returns the value of URL.
func (s *WebhookSettingCreatingRequest) GetURL() OptPropertiesURL {
	return s.URL
}

// GetEvent returns the value of Event.
func (s *WebhookSettingCreatingRequest) GetEvent() FincodeEvent {
	return s.Event
}

// GetSignature returns the value of Signature.
func (s *WebhookSettingCreatingRequest) GetSignature() OptSignature {
	return s.Signature
}

// SetID sets the value of ID.
func (s *WebhookSettingCreatingRequest) SetID(val OptWebhookSettingPropertiesID) {
	s.ID = val
}

// SetURL sets the value of URL.
func (s *WebhookSettingCreatingRequest) SetURL(val OptPropertiesURL) {
	s.URL = val
}

// SetEvent sets the value of Event.
func (s *WebhookSettingCreatingRequest) SetEvent(val FincodeEvent) {
	s.Event = val
}

// SetSignature sets the value of Signature.
func (s *WebhookSettingCreatingRequest) SetSignature(val OptSignature) {
	s.Signature = val
}

// Ref: #/components/schemas/WebhookSetting.Deleting.Response
type WebhookSettingDeletingResponse struct {
	ID         OptWebhookSettingPropertiesID `json:"id"`
	DeleteFlag OptDeleteFlag                 `json:"delete_flag"`
}

// GetID returns the value of ID.
func (s *WebhookSettingDeletingResponse) GetID() OptWebhookSettingPropertiesID {
	return s.ID
}

// GetDeleteFlag returns the value of DeleteFlag.
func (s *WebhookSettingDeletingResponse) GetDeleteFlag() OptDeleteFlag {
	return s.DeleteFlag
}

// SetID sets the value of ID.
func (s *WebhookSettingDeletingResponse) SetID(val OptWebhookSettingPropertiesID) {
	s.ID = val
}

// SetDeleteFlag sets the value of DeleteFlag.
func (s *WebhookSettingDeletingResponse) SetDeleteFlag(val OptDeleteFlag) {
	s.DeleteFlag = val
}

func (*WebhookSettingDeletingResponse) deleteWebhookSettingRes() {}

type WebhookSettingIdSchema string

// Ref: #/components/schemas/WebhookSetting.list
type WebhookSettingList struct {
	List []WebhookSetting `json:"list"`
}

// GetList returns the value of List.
func (s *WebhookSettingList) GetList() []WebhookSetting {
	return s.List
}

// SetList sets the value of List.
func (s *WebhookSettingList) SetList(val []WebhookSetting) {
	s.List = val
}

func (*WebhookSettingList) retrieveWebhookSettingListRes() {}

type WebhookSettingPropertiesID string

// Ref: #/components/schemas/WebhookSetting.Updating.Request
type WebhookSettingUpdatingRequest struct {
	URL       OptPropertiesURL `json:"url"`
	Event     OptFincodeEvent  `json:"event"`
	Signature OptSignature     `json:"signature"`
}

// GetURL returns the value of URL.
func (s *WebhookSettingUpdatingRequest) GetURL() OptPropertiesURL {
	return s.URL
}

// GetEvent returns the value of Event.
func (s *WebhookSettingUpdatingRequest) GetEvent() OptFincodeEvent {
	return s.Event
}

// GetSignature returns the value of Signature.
func (s *WebhookSettingUpdatingRequest) GetSignature() OptSignature {
	return s.Signature
}

// SetURL sets the value of URL.
func (s *WebhookSettingUpdatingRequest) SetURL(val OptPropertiesURL) {
	s.URL = val
}

// SetEvent sets the value of Event.
func (s *WebhookSettingUpdatingRequest) SetEvent(val OptFincodeEvent) {
	s.Event = val
}

// SetSignature sets the value of Signature.
func (s *WebhookSettingUpdatingRequest) SetSignature(val OptSignature) {
	s.Signature = val
}

type WinHeight string

// 画面サイズ種別\
// バーコード表示を行うデバイスのピクセルの種類を指定します。
// - `1`: 物理ピクセル（Androidのときはこちらを指定）
// - `2`: CSSピクセル（iPhoneのときはこちらを指定）.
// Ref: #/components/schemas/win_size_type
type WinSizeType string

const (
	WinSizeType1 WinSizeType = "1"
	WinSizeType2 WinSizeType = "2"
)

// AllValues returns all WinSizeType values.
func (WinSizeType) AllValues() []WinSizeType {
	return []WinSizeType{
		WinSizeType1,
		WinSizeType2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s WinSizeType) MarshalText() ([]byte, error) {
	switch s {
	case WinSizeType1:
		return []byte(s), nil
	case WinSizeType2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *WinSizeType) UnmarshalText(data []byte) error {
	switch WinSizeType(data) {
	case WinSizeType1:
		*s = WinSizeType1
		return nil
	case WinSizeType2:
		*s = WinSizeType2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type WinWidth string

type WithdrawalDate string

type XReqPropertiesAmount string

type XReqPropertiesEmail string

type XReqPropertiesName string

type XReqPropertiesPassword string

type XReqPropertiesTax string

type XReqPropertiesToken string

type YearlySales float64
